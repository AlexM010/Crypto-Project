[
    {
        "scan_id": 1,
        "date": "2024-12-09 19:00:33",
        "directory": "C:/Users/alexa/Desktop/crypto_project/scripts",
        "files_scanned": {
            "Python": 6,
            "C": 0,
            "Java": 0
        },
        "vulnerable_files": {
            "Python": 1,
            "C": 0,
            "Java": 0
        },
        "vulnerabilities": [
            {
                "language": "Python",
                "filename": "a.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/scripts\\a.py",
                "lines": [
                    {
                        "line_number": 1,
                        "content": "from Crypto.Cipher import DES"
                    }
                ],
                "severity": "Very High",
                "explanation": "DES is insecure due to its 56-bit key size, making it vulnerable to brute-force attacks."
            },
            {
                "language": "Python",
                "filename": "a.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/scripts\\a.py",
                "lines": [
                    {
                        "line_number": 10,
                        "content": "cipher = DES.new(key, DES.MODE_ECB)"
                    }
                ],
                "severity": "Very High",
                "explanation": "DES is insecure due to its 56-bit key size, making it vulnerable to brute-force attacks."
            }
        ]
    },
    {
        "scan_id": 2,
        "date": "2024-12-09 19:05:52",
        "directory": "C:/Users/alexa/Desktop/crypto_project",
        "files_scanned": {
            "Python": 8,
            "C": 0,
            "Java": 0
        },
        "vulnerable_files": {
            "Python": 1,
            "C": 0,
            "Java": 0
        },
        "vulnerabilities": [
            {
                "language": "Python",
                "filename": "a.py",
                "path": "C:/Users/alexa/Desktop/crypto_project\\scripts\\a.py",
                "lines": [
                    {
                        "line_number": 1,
                        "content": "from Crypto.Cipher import DES"
                    },
                    {
                        "line_number": 10,
                        "content": "cipher = DES.new(key, DES.MODE_ECB)"
                    }
                ],
                "severity": "Very High",
                "explanation": "DES is insecure due to its 56-bit key size, making it vulnerable to brute-force attacks."
            }
        ]
    },
    {
        "scan_id": 3,
        "date": "2024-12-09 19:07:53",
        "directory": "C:/Users/alexa/Desktop",
        "files_scanned": {
            "Python": 792,
            "C": 191,
            "Java": 310
        },
        "vulnerable_files": {
            "Python": 1,
            "C": 0,
            "Java": 0
        },
        "vulnerabilities": [
            {
                "language": "Python",
                "filename": "a.py",
                "path": "C:/Users/alexa/Desktop\\crypto_project\\scripts\\a.py",
                "lines": [
                    {
                        "line_number": 1,
                        "content": "from Crypto.Cipher import DES"
                    },
                    {
                        "line_number": 10,
                        "content": "cipher = DES.new(key, DES.MODE_ECB)"
                    }
                ],
                "severity": "Very High",
                "explanation": "DES is insecure due to its 56-bit key size, making it vulnerable to brute-force attacks."
            }
        ]
    },
    {
        "scan_id": 4,
        "date": "2024-12-09 20:00:11",
        "directory": "C:/",
        "files_scanned": {
            "Python": 60133,
            "C": 1124,
            "Java": 13136
        },
        "vulnerable_files": {
            "Python": 2,
            "C": 0,
            "Java": 0
        },
        "vulnerabilities": [
            {
                "language": "Python",
                "filename": "calls.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\bandit\\blacklists\\calls.py",
                "lines": [
                    {
                        "line_number": 86,
                        "content": "|      |                     | - Crypto.Cipher.DES.new            |           |"
                    },
                    {
                        "line_number": 91,
                        "content": "|      |                     | - Cryptodome.Cipher.DES.new        |           |"
                    },
                    {
                        "line_number": 432,
                        "content": "\"Crypto.Cipher.DES.new\","
                    },
                    {
                        "line_number": 437,
                        "content": "\"Cryptodome.Cipher.DES.new\","
                    }
                ],
                "severity": "Very High",
                "explanation": "DES is insecure due to its 56-bit key size, making it vulnerable to brute-force attacks."
            },
            {
                "language": "Python",
                "filename": "a.py",
                "path": "C:/Users\\alexa\\Desktop\\crypto_project\\scripts\\a.py",
                "lines": [
                    {
                        "line_number": 1,
                        "content": "from Crypto.Cipher import DES"
                    },
                    {
                        "line_number": 10,
                        "content": "cipher = DES.new(key, DES.MODE_ECB)"
                    }
                ],
                "severity": "Very High",
                "explanation": "DES is insecure due to its 56-bit key size, making it vulnerable to brute-force attacks."
            }
        ]
    },
    {
        "scan_id": 5,
        "date": "2024-12-11 14:54:26",
        "directory": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts",
        "files_scanned": {
            "Python": 12,
            "C": 6,
            "Java": 6
        },
        "vulnerable_files": {
            "Python": 20,
            "C": 5,
            "Java": 5
        },
        "vulnerabilities": [
            {
                "language": "Python",
                "filename": "a.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\a.py",
                "lines": [
                    {
                        "line_number": 1,
                        "content": "from Crypto.Cipher import DES"
                    },
                    {
                        "line_number": 10,
                        "content": "cipher = DES.new(key, DES.MODE_ECB)"
                    }
                ],
                "severity": "Very High",
                "explanation": "DES is insecure due to its 56-bit key size, making it vulnerable to brute-force attacks."
            },
            {
                "language": "Python",
                "filename": "a.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\a.py",
                "lines": [
                    {
                        "line_number": 6,
                        "content": "key = b'8bytekey'  # DES requires an 8-byte key"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe (vulnerable to Grover's algorithm)."
            },
            {
                "language": "Python",
                "filename": "a.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\a.py",
                "lines": [
                    {
                        "line_number": 6,
                        "content": "key = b'8bytekey'  # DES requires an 8-byte key"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 offers slightly better security than AES-128 but is still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "b.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\b.py",
                "lines": [
                    {
                        "line_number": 1,
                        "content": "from arc4 import ARC4"
                    },
                    {
                        "line_number": 3,
                        "content": "# Demonstrates RC4's predictable keystream"
                    },
                    {
                        "line_number": 7,
                        "content": "rc4 = ARC4(key)"
                    },
                    {
                        "line_number": 14,
                        "content": "rc4 = ARC4(key)  # Reset RC4 with the same key"
                    },
                    {
                        "line_number": 19,
                        "content": "# Vulnerability: RC4 keystream bias makes it insecure for cryptographic use."
                    }
                ],
                "severity": "Very High",
                "explanation": "RC4 is insecure due to biases in its keystream, vulnerabilities in its key scheduling algorithm, and susceptibility to attacks like plaintext recovery and state inference."
            },
            {
                "language": "Python",
                "filename": "d.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\d.py",
                "lines": [
                    {
                        "line_number": 7,
                        "content": "key = RSA.generate(512)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe (vulnerable to Grover's algorithm)."
            },
            {
                "language": "Python",
                "filename": "f.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\f.py",
                "lines": [
                    {
                        "line_number": 6,
                        "content": "key = b\"16bytekey1234567\""
                    },
                    {
                        "line_number": 10,
                        "content": "cipher = AES.new(key, AES.MODE_ECB)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe (vulnerable to Grover's algorithm)."
            },
            {
                "language": "Python",
                "filename": "f.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\f.py",
                "lines": [
                    {
                        "line_number": 10,
                        "content": "cipher = AES.new(key, AES.MODE_ECB)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 offers slightly better security than AES-128 but is still vulnerable to quantum attacks."
            },
            {
                "language": "C",
                "filename": "3des.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\3des\\3des.c",
                "lines": [
                    {
                        "line_number": 18,
                        "content": "DES_ecb_encrypt(&input, &output, &key_schedule1, DES_ENCRYPT);"
                    },
                    {
                        "line_number": 22,
                        "content": "DES_ecb_encrypt(&input, &output, &key_schedule1, DES_ENCRYPT);"
                    },
                    {
                        "line_number": 23,
                        "content": "DES_ecb_encrypt(&output, &output, &key_schedule2, DES_DECRYPT);"
                    },
                    {
                        "line_number": 27,
                        "content": "DES_ecb_encrypt(&input, &output, &key_schedule1, DES_ENCRYPT);"
                    },
                    {
                        "line_number": 28,
                        "content": "DES_ecb_encrypt(&output, &output, &key_schedule2, DES_DECRYPT);"
                    },
                    {
                        "line_number": 29,
                        "content": "DES_ecb_encrypt(&output, &output, &key_schedule3, DES_ENCRYPT);"
                    }
                ],
                "severity": "Very High",
                "explanation": "DES is insecure due to its 56-bit key size, making it vulnerable to brute-force attacks."
            },
            {
                "language": "Java",
                "filename": "3des.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\3des\\3des.java",
                "lines": [
                    {
                        "line_number": 13,
                        "content": "SecretKeySpec desKey = new SecretKeySpec(key1, \"DES\");"
                    },
                    {
                        "line_number": 14,
                        "content": "Cipher cipher1 = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    },
                    {
                        "line_number": 19,
                        "content": "SecretKeySpec desKey2 = new SecretKeySpec(key1, \"DES\");"
                    },
                    {
                        "line_number": 20,
                        "content": "Cipher cipher2 = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    },
                    {
                        "line_number": 25,
                        "content": "SecretKeySpec desKey3 = new SecretKeySpec(key3, \"DES\");"
                    },
                    {
                        "line_number": 26,
                        "content": "Cipher cipher3 = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    }
                ],
                "severity": "Very High",
                "explanation": "DES is insecure due to its 56-bit key size, making it vulnerable to brute-force attacks."
            },
            {
                "language": "Python",
                "filename": "3des.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\3des\\3des.py",
                "lines": [
                    {
                        "line_number": 1,
                        "content": "from Crypto.Cipher import DES3"
                    }
                ],
                "severity": "Very High",
                "explanation": "DES is insecure due to its 56-bit key size, making it vulnerable to brute-force attacks."
            },
            {
                "language": "Python",
                "filename": "3des.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\3des\\3des.py",
                "lines": [
                    {
                        "line_number": 4,
                        "content": "key = get_random_bytes(8)  # 56-bit key"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe (vulnerable to Grover's algorithm)."
            },
            {
                "language": "Python",
                "filename": "3des.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\3des\\3des.py",
                "lines": [
                    {
                        "line_number": 4,
                        "content": "key = get_random_bytes(8)  # 56-bit key"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 offers slightly better security than AES-128 but is still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "aes128.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\aes128\\aes128.py",
                "lines": [
                    {
                        "line_number": 5,
                        "content": "key = get_random_bytes(16)  # AES-128: 128-bit (16 bytes)"
                    },
                    {
                        "line_number": 6,
                        "content": "cipher = AES.new(key, AES.MODE_ECB)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe (vulnerable to Grover's algorithm)."
            },
            {
                "language": "Python",
                "filename": "aes128.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\aes128\\aes128.py",
                "lines": [
                    {
                        "line_number": 5,
                        "content": "key = get_random_bytes(16)  # AES-128: 128-bit (16 bytes)"
                    },
                    {
                        "line_number": 6,
                        "content": "cipher = AES.new(key, AES.MODE_ECB)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 offers slightly better security than AES-128 but is still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "aes192.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\aes192\\aes192.py",
                "lines": [
                    {
                        "line_number": 5,
                        "content": "key = get_random_bytes(24)  # AES-192: 192-bit (24 bytes)"
                    },
                    {
                        "line_number": 6,
                        "content": "cipher = AES.new(key, AES.MODE_ECB)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe (vulnerable to Grover's algorithm)."
            },
            {
                "language": "Python",
                "filename": "aes192.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\aes192\\aes192.py",
                "lines": [
                    {
                        "line_number": 5,
                        "content": "key = get_random_bytes(24)  # AES-192: 192-bit (24 bytes)"
                    },
                    {
                        "line_number": 6,
                        "content": "cipher = AES.new(key, AES.MODE_ECB)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 offers slightly better security than AES-128 but is still vulnerable to quantum attacks."
            },
            {
                "language": "C",
                "filename": "des.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\des\\des.c",
                "lines": [
                    {
                        "line_number": 12,
                        "content": "DES_ecb_encrypt(&input, &output, &key_schedule, DES_ENCRYPT);"
                    }
                ],
                "severity": "Very High",
                "explanation": "DES is insecure due to its 56-bit key size, making it vulnerable to brute-force attacks."
            },
            {
                "language": "C",
                "filename": "des.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\des\\des.c",
                "lines": [
                    {
                        "line_number": 11,
                        "content": "DES_set_key_unchecked(&key, &key_schedule);"
                    }
                ],
                "severity": "Very High",
                "explanation": "3DES with 1 key offers no additional security over DES and is insecure."
            },
            {
                "language": "C",
                "filename": "des.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\des\\des.c",
                "lines": [
                    {
                        "line_number": 11,
                        "content": "DES_set_key_unchecked(&key, &key_schedule);"
                    }
                ],
                "severity": "High",
                "explanation": "3DES with 2 keys provides ~80 bits of security, which is inadequate by modern standards."
            },
            {
                "language": "C",
                "filename": "des.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\des\\des.c",
                "lines": [
                    {
                        "line_number": 11,
                        "content": "DES_set_key_unchecked(&key, &key_schedule);"
                    }
                ],
                "severity": "High",
                "explanation": "3DES with 3 keys provides ~112 bits of security, which is insufficient against quantum attacks."
            },
            {
                "language": "Java",
                "filename": "des.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\des\\des.java",
                "lines": [
                    {
                        "line_number": 9,
                        "content": "SecretKey key = new SecretKeySpec(keyBytes, \"DES\");"
                    },
                    {
                        "line_number": 10,
                        "content": "Cipher cipher = Cipher.getInstance(\"DES/ECB/PKCS5Padding\");"
                    }
                ],
                "severity": "Very High",
                "explanation": "DES is insecure due to its 56-bit key size, making it vulnerable to brute-force attacks."
            },
            {
                "language": "Python",
                "filename": "des.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\des\\des.py",
                "lines": [
                    {
                        "line_number": 1,
                        "content": "from Crypto.Cipher import DES"
                    },
                    {
                        "line_number": 5,
                        "content": "cipher = DES.new(key, DES.MODE_ECB)"
                    }
                ],
                "severity": "Very High",
                "explanation": "DES is insecure due to its 56-bit key size, making it vulnerable to brute-force attacks."
            },
            {
                "language": "Python",
                "filename": "des.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\des\\des.py",
                "lines": [
                    {
                        "line_number": 4,
                        "content": "key = get_random_bytes(8)  # 56 bits key for DES"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe (vulnerable to Grover's algorithm)."
            },
            {
                "language": "Python",
                "filename": "des.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\des\\des.py",
                "lines": [
                    {
                        "line_number": 4,
                        "content": "key = get_random_bytes(8)  # 56 bits key for DES"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 offers slightly better security than AES-128 but is still vulnerable to quantum attacks."
            },
            {
                "language": "Java",
                "filename": "rc4.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\rc4\\rc4.java",
                "lines": [
                    {
                        "line_number": 11,
                        "content": "Cipher cipher = Cipher.getInstance(\"RC4\");"
                    }
                ],
                "severity": "Very High",
                "explanation": "RC4 is insecure due to biases in its keystream, vulnerabilities in its key scheduling algorithm, and susceptibility to attacks like plaintext recovery and state inference."
            },
            {
                "language": "Python",
                "filename": "rc4.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\rc4\\rc4.py",
                "lines": [
                    {
                        "line_number": 2,
                        "content": "key = b\"12345678\"  # Key for RC4"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe (vulnerable to Grover's algorithm)."
            },
            {
                "language": "Python",
                "filename": "rc4.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\rc4\\rc4.py",
                "lines": [
                    {
                        "line_number": 2,
                        "content": "key = b\"12345678\"  # Key for RC4"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 offers slightly better security than AES-128 but is still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "rc4.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\rc4\\rc4.py",
                "lines": [
                    {
                        "line_number": 1,
                        "content": "from Crypto.Cipher import ARC4"
                    },
                    {
                        "line_number": 2,
                        "content": "key = b\"12345678\"  # Key for RC4"
                    },
                    {
                        "line_number": 3,
                        "content": "cipher = ARC4.new(key)"
                    },
                    {
                        "line_number": 6,
                        "content": "print(\"Ciphertext (RC4):\", ciphertext)"
                    }
                ],
                "severity": "Very High",
                "explanation": "RC4 is insecure due to biases in its keystream, vulnerabilities in its key scheduling algorithm, and susceptibility to attacks like plaintext recovery and state inference."
            },
            {
                "language": "Java",
                "filename": "rsa.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\rsa\\rsa.java",
                "lines": [
                    {
                        "line_number": 5,
                        "content": "KeyPairGenerator keyPairGen = KeyPairGenerator.getInstance(\"RSA\");"
                    }
                ],
                "severity": "High",
                "explanation": "RSA with short keys (512, 1024 bits) is easily breakable with classical attacks and completely broken with quantum computing (Shor's algorithm)."
            },
            {
                "language": "Java",
                "filename": "rsa.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\rsa\\rsa.java",
                "lines": [
                    {
                        "line_number": 5,
                        "content": "KeyPairGenerator keyPairGen = KeyPairGenerator.getInstance(\"RSA\");"
                    }
                ],
                "severity": "Very Low",
                "explanation": "RSA with 2048, 3072+ bits is secure against classical attacks but vulnerable to quantum computing."
            }
        ]
    },
    {
        "scan_id": 6,
        "date": "2024-12-11 14:57:55",
        "directory": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts",
        "files_scanned": {
            "Python": 12,
            "C": 6,
            "Java": 6
        },
        "vulnerable_files": {
            "Python": 20,
            "C": 5,
            "Java": 5
        },
        "vulnerabilities": [
            {
                "language": "Python",
                "filename": "a.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\a.py",
                "lines": [
                    {
                        "line_number": 1,
                        "content": "from Crypto.Cipher import DES"
                    },
                    {
                        "line_number": 10,
                        "content": "cipher = DES.new(key, DES.MODE_ECB)"
                    }
                ],
                "severity": "Very High",
                "explanation": "DES is insecure due to its 56-bit key size, making it vulnerable to brute-force attacks."
            },
            {
                "language": "Python",
                "filename": "a.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\a.py",
                "lines": [
                    {
                        "line_number": 6,
                        "content": "key = b'8bytekey'  # DES requires an 8-byte key"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe (vulnerable to Grover's algorithm)."
            },
            {
                "language": "Python",
                "filename": "a.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\a.py",
                "lines": [
                    {
                        "line_number": 6,
                        "content": "key = b'8bytekey'  # DES requires an 8-byte key"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 offers slightly better security than AES-128 but is still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "b.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\b.py",
                "lines": [
                    {
                        "line_number": 1,
                        "content": "from arc4 import ARC4"
                    },
                    {
                        "line_number": 3,
                        "content": "# Demonstrates RC4's predictable keystream"
                    },
                    {
                        "line_number": 7,
                        "content": "rc4 = ARC4(key)"
                    },
                    {
                        "line_number": 14,
                        "content": "rc4 = ARC4(key)  # Reset RC4 with the same key"
                    },
                    {
                        "line_number": 19,
                        "content": "# Vulnerability: RC4 keystream bias makes it insecure for cryptographic use."
                    }
                ],
                "severity": "Very High",
                "explanation": "RC4 is insecure due to biases in its keystream, vulnerabilities in its key scheduling algorithm, and susceptibility to attacks like plaintext recovery and state inference."
            },
            {
                "language": "Python",
                "filename": "d.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\d.py",
                "lines": [
                    {
                        "line_number": 7,
                        "content": "key = RSA.generate(512)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe (vulnerable to Grover's algorithm)."
            },
            {
                "language": "Python",
                "filename": "f.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\f.py",
                "lines": [
                    {
                        "line_number": 6,
                        "content": "key = b\"16bytekey1234567\""
                    },
                    {
                        "line_number": 10,
                        "content": "cipher = AES.new(key, AES.MODE_ECB)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe (vulnerable to Grover's algorithm)."
            },
            {
                "language": "Python",
                "filename": "f.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\f.py",
                "lines": [
                    {
                        "line_number": 10,
                        "content": "cipher = AES.new(key, AES.MODE_ECB)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 offers slightly better security than AES-128 but is still vulnerable to quantum attacks."
            },
            {
                "language": "C",
                "filename": "3des.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\3des\\3des.c",
                "lines": [
                    {
                        "line_number": 18,
                        "content": "DES_ecb_encrypt(&input, &output, &key_schedule1, DES_ENCRYPT);"
                    },
                    {
                        "line_number": 22,
                        "content": "DES_ecb_encrypt(&input, &output, &key_schedule1, DES_ENCRYPT);"
                    },
                    {
                        "line_number": 23,
                        "content": "DES_ecb_encrypt(&output, &output, &key_schedule2, DES_DECRYPT);"
                    },
                    {
                        "line_number": 27,
                        "content": "DES_ecb_encrypt(&input, &output, &key_schedule1, DES_ENCRYPT);"
                    },
                    {
                        "line_number": 28,
                        "content": "DES_ecb_encrypt(&output, &output, &key_schedule2, DES_DECRYPT);"
                    },
                    {
                        "line_number": 29,
                        "content": "DES_ecb_encrypt(&output, &output, &key_schedule3, DES_ENCRYPT);"
                    }
                ],
                "severity": "Very High",
                "explanation": "DES is insecure due to its 56-bit key size, making it vulnerable to brute-force attacks."
            },
            {
                "language": "Java",
                "filename": "3des.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\3des\\3des.java",
                "lines": [
                    {
                        "line_number": 13,
                        "content": "SecretKeySpec desKey = new SecretKeySpec(key1, \"DES\");"
                    },
                    {
                        "line_number": 14,
                        "content": "Cipher cipher1 = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    },
                    {
                        "line_number": 19,
                        "content": "SecretKeySpec desKey2 = new SecretKeySpec(key1, \"DES\");"
                    },
                    {
                        "line_number": 20,
                        "content": "Cipher cipher2 = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    },
                    {
                        "line_number": 25,
                        "content": "SecretKeySpec desKey3 = new SecretKeySpec(key3, \"DES\");"
                    },
                    {
                        "line_number": 26,
                        "content": "Cipher cipher3 = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    }
                ],
                "severity": "Very High",
                "explanation": "DES is insecure due to its 56-bit key size, making it vulnerable to brute-force attacks."
            },
            {
                "language": "Python",
                "filename": "3des.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\3des\\3des.py",
                "lines": [
                    {
                        "line_number": 1,
                        "content": "from Crypto.Cipher import DES3"
                    }
                ],
                "severity": "Very High",
                "explanation": "DES is insecure due to its 56-bit key size, making it vulnerable to brute-force attacks."
            },
            {
                "language": "Python",
                "filename": "3des.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\3des\\3des.py",
                "lines": [
                    {
                        "line_number": 4,
                        "content": "key = get_random_bytes(8)  # 56-bit key"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe (vulnerable to Grover's algorithm)."
            },
            {
                "language": "Python",
                "filename": "3des.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\3des\\3des.py",
                "lines": [
                    {
                        "line_number": 4,
                        "content": "key = get_random_bytes(8)  # 56-bit key"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 offers slightly better security than AES-128 but is still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "aes128.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\aes128\\aes128.py",
                "lines": [
                    {
                        "line_number": 5,
                        "content": "key = get_random_bytes(16)  # AES-128: 128-bit (16 bytes)"
                    },
                    {
                        "line_number": 6,
                        "content": "cipher = AES.new(key, AES.MODE_ECB)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe (vulnerable to Grover's algorithm)."
            },
            {
                "language": "Python",
                "filename": "aes128.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\aes128\\aes128.py",
                "lines": [
                    {
                        "line_number": 5,
                        "content": "key = get_random_bytes(16)  # AES-128: 128-bit (16 bytes)"
                    },
                    {
                        "line_number": 6,
                        "content": "cipher = AES.new(key, AES.MODE_ECB)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 offers slightly better security than AES-128 but is still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "aes192.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\aes192\\aes192.py",
                "lines": [
                    {
                        "line_number": 5,
                        "content": "key = get_random_bytes(24)  # AES-192: 192-bit (24 bytes)"
                    },
                    {
                        "line_number": 6,
                        "content": "cipher = AES.new(key, AES.MODE_ECB)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe (vulnerable to Grover's algorithm)."
            },
            {
                "language": "Python",
                "filename": "aes192.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\aes192\\aes192.py",
                "lines": [
                    {
                        "line_number": 5,
                        "content": "key = get_random_bytes(24)  # AES-192: 192-bit (24 bytes)"
                    },
                    {
                        "line_number": 6,
                        "content": "cipher = AES.new(key, AES.MODE_ECB)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 offers slightly better security than AES-128 but is still vulnerable to quantum attacks."
            },
            {
                "language": "C",
                "filename": "des.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\des\\des.c",
                "lines": [
                    {
                        "line_number": 12,
                        "content": "DES_ecb_encrypt(&input, &output, &key_schedule, DES_ENCRYPT);"
                    }
                ],
                "severity": "Very High",
                "explanation": "DES is insecure due to its 56-bit key size, making it vulnerable to brute-force attacks."
            },
            {
                "language": "C",
                "filename": "des.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\des\\des.c",
                "lines": [
                    {
                        "line_number": 11,
                        "content": "DES_set_key_unchecked(&key, &key_schedule);"
                    }
                ],
                "severity": "Very High",
                "explanation": "3DES with 1 key offers no additional security over DES and is insecure."
            },
            {
                "language": "C",
                "filename": "des.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\des\\des.c",
                "lines": [
                    {
                        "line_number": 11,
                        "content": "DES_set_key_unchecked(&key, &key_schedule);"
                    }
                ],
                "severity": "High",
                "explanation": "3DES with 2 keys provides ~80 bits of security, which is inadequate by modern standards."
            },
            {
                "language": "C",
                "filename": "des.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\des\\des.c",
                "lines": [
                    {
                        "line_number": 11,
                        "content": "DES_set_key_unchecked(&key, &key_schedule);"
                    }
                ],
                "severity": "High",
                "explanation": "3DES with 3 keys provides ~112 bits of security, which is insufficient against quantum attacks."
            },
            {
                "language": "Java",
                "filename": "des.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\des\\des.java",
                "lines": [
                    {
                        "line_number": 9,
                        "content": "SecretKey key = new SecretKeySpec(keyBytes, \"DES\");"
                    },
                    {
                        "line_number": 10,
                        "content": "Cipher cipher = Cipher.getInstance(\"DES/ECB/PKCS5Padding\");"
                    }
                ],
                "severity": "Very High",
                "explanation": "DES is insecure due to its 56-bit key size, making it vulnerable to brute-force attacks."
            },
            {
                "language": "Python",
                "filename": "des.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\des\\des.py",
                "lines": [
                    {
                        "line_number": 1,
                        "content": "from Crypto.Cipher import DES"
                    },
                    {
                        "line_number": 5,
                        "content": "cipher = DES.new(key, DES.MODE_ECB)"
                    }
                ],
                "severity": "Very High",
                "explanation": "DES is insecure due to its 56-bit key size, making it vulnerable to brute-force attacks."
            },
            {
                "language": "Python",
                "filename": "des.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\des\\des.py",
                "lines": [
                    {
                        "line_number": 4,
                        "content": "key = get_random_bytes(8)  # 56 bits key for DES"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe (vulnerable to Grover's algorithm)."
            },
            {
                "language": "Python",
                "filename": "des.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\des\\des.py",
                "lines": [
                    {
                        "line_number": 4,
                        "content": "key = get_random_bytes(8)  # 56 bits key for DES"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 offers slightly better security than AES-128 but is still vulnerable to quantum attacks."
            },
            {
                "language": "Java",
                "filename": "rc4.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\rc4\\rc4.java",
                "lines": [
                    {
                        "line_number": 11,
                        "content": "Cipher cipher = Cipher.getInstance(\"RC4\");"
                    }
                ],
                "severity": "Very High",
                "explanation": "RC4 is insecure due to biases in its keystream, vulnerabilities in its key scheduling algorithm, and susceptibility to attacks like plaintext recovery and state inference."
            },
            {
                "language": "Python",
                "filename": "rc4.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\rc4\\rc4.py",
                "lines": [
                    {
                        "line_number": 2,
                        "content": "key = b\"12345678\"  # Key for RC4"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe (vulnerable to Grover's algorithm)."
            },
            {
                "language": "Python",
                "filename": "rc4.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\rc4\\rc4.py",
                "lines": [
                    {
                        "line_number": 2,
                        "content": "key = b\"12345678\"  # Key for RC4"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 offers slightly better security than AES-128 but is still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "rc4.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\rc4\\rc4.py",
                "lines": [
                    {
                        "line_number": 1,
                        "content": "from Crypto.Cipher import ARC4"
                    },
                    {
                        "line_number": 2,
                        "content": "key = b\"12345678\"  # Key for RC4"
                    },
                    {
                        "line_number": 3,
                        "content": "cipher = ARC4.new(key)"
                    },
                    {
                        "line_number": 6,
                        "content": "print(\"Ciphertext (RC4):\", ciphertext)"
                    }
                ],
                "severity": "Very High",
                "explanation": "RC4 is insecure due to biases in its keystream, vulnerabilities in its key scheduling algorithm, and susceptibility to attacks like plaintext recovery and state inference."
            },
            {
                "language": "Java",
                "filename": "rsa.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\rsa\\rsa.java",
                "lines": [
                    {
                        "line_number": 5,
                        "content": "KeyPairGenerator keyPairGen = KeyPairGenerator.getInstance(\"RSA\");"
                    }
                ],
                "severity": "High",
                "explanation": "RSA with short keys (512, 1024 bits) is easily breakable with classical attacks and completely broken with quantum computing (Shor's algorithm)."
            },
            {
                "language": "Java",
                "filename": "rsa.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\rsa\\rsa.java",
                "lines": [
                    {
                        "line_number": 5,
                        "content": "KeyPairGenerator keyPairGen = KeyPairGenerator.getInstance(\"RSA\");"
                    }
                ],
                "severity": "Very Low",
                "explanation": "RSA with 2048, 3072+ bits is secure against classical attacks but vulnerable to quantum computing."
            }
        ]
    },
    {
        "scan_id": 7,
        "date": "2024-12-11 15:43:45",
        "directory": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts",
        "files_scanned": {
            "Python": 12,
            "C": 6,
            "Java": 6
        },
        "vulnerable_files": {
            "Python": 20,
            "C": 3,
            "Java": 4
        },
        "vulnerabilities": [
            {
                "language": "Python",
                "filename": "a.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\a.py",
                "lines": [
                    {
                        "line_number": 1,
                        "content": "from Crypto.Cipher import DES"
                    },
                    {
                        "line_number": 10,
                        "content": "cipher = DES.new(key, DES.MODE_ECB)"
                    }
                ],
                "severity": "Very High",
                "explanation": "DES is insecure due to its 56-bit key size, making it vulnerable to brute-force attacks."
            },
            {
                "language": "Python",
                "filename": "a.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\a.py",
                "lines": [
                    {
                        "line_number": 6,
                        "content": "key = b'8bytekey'  # DES requires an 8-byte key"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe (vulnerable to Grover's algorithm)."
            },
            {
                "language": "Python",
                "filename": "a.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\a.py",
                "lines": [
                    {
                        "line_number": 6,
                        "content": "key = b'8bytekey'  # DES requires an 8-byte key"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 offers slightly better security than AES-128 but is still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "b.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\b.py",
                "lines": [
                    {
                        "line_number": 1,
                        "content": "from arc4 import ARC4"
                    },
                    {
                        "line_number": 3,
                        "content": "# Demonstrates RC4's predictable keystream"
                    },
                    {
                        "line_number": 7,
                        "content": "rc4 = ARC4(key)"
                    },
                    {
                        "line_number": 14,
                        "content": "rc4 = ARC4(key)  # Reset RC4 with the same key"
                    },
                    {
                        "line_number": 19,
                        "content": "# Vulnerability: RC4 keystream bias makes it insecure for cryptographic use."
                    }
                ],
                "severity": "Very High",
                "explanation": "RC4 is insecure due to biases in its keystream, vulnerabilities in its key scheduling algorithm, and susceptibility to attacks like plaintext recovery and state inference."
            },
            {
                "language": "Python",
                "filename": "d.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\d.py",
                "lines": [
                    {
                        "line_number": 7,
                        "content": "key = RSA.generate(512)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe (vulnerable to Grover's algorithm)."
            },
            {
                "language": "Python",
                "filename": "f.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\f.py",
                "lines": [
                    {
                        "line_number": 6,
                        "content": "key = b\"16bytekey1234567\""
                    },
                    {
                        "line_number": 10,
                        "content": "cipher = AES.new(key, AES.MODE_ECB)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe (vulnerable to Grover's algorithm)."
            },
            {
                "language": "Python",
                "filename": "f.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\f.py",
                "lines": [
                    {
                        "line_number": 10,
                        "content": "cipher = AES.new(key, AES.MODE_ECB)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 offers slightly better security than AES-128 but is still vulnerable to quantum attacks."
            },
            {
                "language": "C",
                "filename": "3des.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\3des\\3des.c",
                "lines": [
                    {
                        "line_number": 18,
                        "content": "DES_ecb_encrypt(&input, &output, &key_schedule1, DES_ENCRYPT);"
                    },
                    {
                        "line_number": 22,
                        "content": "DES_ecb_encrypt(&input, &output, &key_schedule1, DES_ENCRYPT);"
                    },
                    {
                        "line_number": 23,
                        "content": "DES_ecb_encrypt(&output, &output, &key_schedule2, DES_DECRYPT);"
                    },
                    {
                        "line_number": 27,
                        "content": "DES_ecb_encrypt(&input, &output, &key_schedule1, DES_ENCRYPT);"
                    },
                    {
                        "line_number": 28,
                        "content": "DES_ecb_encrypt(&output, &output, &key_schedule2, DES_DECRYPT);"
                    },
                    {
                        "line_number": 29,
                        "content": "DES_ecb_encrypt(&output, &output, &key_schedule3, DES_ENCRYPT);"
                    }
                ],
                "severity": "Very High",
                "explanation": "DES is insecure due to its 56-bit key size, making it vulnerable to brute-force attacks."
            },
            {
                "language": "Java",
                "filename": "3des.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\3des\\3des.java",
                "lines": [
                    {
                        "line_number": 13,
                        "content": "SecretKeySpec desKey = new SecretKeySpec(key1, \"DES\");"
                    },
                    {
                        "line_number": 14,
                        "content": "Cipher cipher1 = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    },
                    {
                        "line_number": 19,
                        "content": "SecretKeySpec desKey2 = new SecretKeySpec(key1, \"DES\");"
                    },
                    {
                        "line_number": 20,
                        "content": "Cipher cipher2 = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    },
                    {
                        "line_number": 25,
                        "content": "SecretKeySpec desKey3 = new SecretKeySpec(key3, \"DES\");"
                    },
                    {
                        "line_number": 26,
                        "content": "Cipher cipher3 = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    }
                ],
                "severity": "Very High",
                "explanation": "DES is insecure due to its 56-bit key size, making it vulnerable to brute-force attacks."
            },
            {
                "language": "Python",
                "filename": "3des.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\3des\\3des.py",
                "lines": [
                    {
                        "line_number": 1,
                        "content": "from Crypto.Cipher import DES3"
                    }
                ],
                "severity": "Very High",
                "explanation": "DES is insecure due to its 56-bit key size, making it vulnerable to brute-force attacks."
            },
            {
                "language": "Python",
                "filename": "3des.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\3des\\3des.py",
                "lines": [
                    {
                        "line_number": 4,
                        "content": "key = get_random_bytes(8)  # 56-bit key"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe (vulnerable to Grover's algorithm)."
            },
            {
                "language": "Python",
                "filename": "3des.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\3des\\3des.py",
                "lines": [
                    {
                        "line_number": 4,
                        "content": "key = get_random_bytes(8)  # 56-bit key"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 offers slightly better security than AES-128 but is still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "aes128.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\aes128\\aes128.py",
                "lines": [
                    {
                        "line_number": 5,
                        "content": "key = get_random_bytes(16)  # AES-128: 128-bit (16 bytes)"
                    },
                    {
                        "line_number": 6,
                        "content": "cipher = AES.new(key, AES.MODE_ECB)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe (vulnerable to Grover's algorithm)."
            },
            {
                "language": "Python",
                "filename": "aes128.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\aes128\\aes128.py",
                "lines": [
                    {
                        "line_number": 5,
                        "content": "key = get_random_bytes(16)  # AES-128: 128-bit (16 bytes)"
                    },
                    {
                        "line_number": 6,
                        "content": "cipher = AES.new(key, AES.MODE_ECB)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 offers slightly better security than AES-128 but is still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "aes192.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\aes192\\aes192.py",
                "lines": [
                    {
                        "line_number": 5,
                        "content": "key = get_random_bytes(24)  # AES-192: 192-bit (24 bytes)"
                    },
                    {
                        "line_number": 6,
                        "content": "cipher = AES.new(key, AES.MODE_ECB)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe (vulnerable to Grover's algorithm)."
            },
            {
                "language": "Python",
                "filename": "aes192.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\aes192\\aes192.py",
                "lines": [
                    {
                        "line_number": 5,
                        "content": "key = get_random_bytes(24)  # AES-192: 192-bit (24 bytes)"
                    },
                    {
                        "line_number": 6,
                        "content": "cipher = AES.new(key, AES.MODE_ECB)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 offers slightly better security than AES-128 but is still vulnerable to quantum attacks."
            },
            {
                "language": "C",
                "filename": "des.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\des\\des.c",
                "lines": [
                    {
                        "line_number": 12,
                        "content": "DES_ecb_encrypt(&input, &output, &key_schedule, DES_ENCRYPT);"
                    }
                ],
                "severity": "Very High",
                "explanation": "DES is insecure due to its 56-bit key size, making it vulnerable to brute-force attacks."
            },
            {
                "language": "C",
                "filename": "des.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\des\\des.c",
                "lines": [
                    {
                        "line_number": 11,
                        "content": "DES_set_key_unchecked(&key, &key_schedule);"
                    }
                ],
                "severity": "Very High",
                "explanation": "3DES with 1 key offers no additional security over DES and is insecure."
            },
            {
                "language": "Java",
                "filename": "des.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\des\\des.java",
                "lines": [
                    {
                        "line_number": 9,
                        "content": "SecretKey key = new SecretKeySpec(keyBytes, \"DES\");"
                    },
                    {
                        "line_number": 10,
                        "content": "Cipher cipher = Cipher.getInstance(\"DES/ECB/PKCS5Padding\");"
                    }
                ],
                "severity": "Very High",
                "explanation": "DES is insecure due to its 56-bit key size, making it vulnerable to brute-force attacks."
            },
            {
                "language": "Python",
                "filename": "des.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\des\\des.py",
                "lines": [
                    {
                        "line_number": 1,
                        "content": "from Crypto.Cipher import DES"
                    },
                    {
                        "line_number": 5,
                        "content": "cipher = DES.new(key, DES.MODE_ECB)"
                    }
                ],
                "severity": "Very High",
                "explanation": "DES is insecure due to its 56-bit key size, making it vulnerable to brute-force attacks."
            },
            {
                "language": "Python",
                "filename": "des.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\des\\des.py",
                "lines": [
                    {
                        "line_number": 4,
                        "content": "key = get_random_bytes(8)  # 56 bits key for DES"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe (vulnerable to Grover's algorithm)."
            },
            {
                "language": "Python",
                "filename": "des.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\des\\des.py",
                "lines": [
                    {
                        "line_number": 4,
                        "content": "key = get_random_bytes(8)  # 56 bits key for DES"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 offers slightly better security than AES-128 but is still vulnerable to quantum attacks."
            },
            {
                "language": "Java",
                "filename": "rc4.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\rc4\\rc4.java",
                "lines": [
                    {
                        "line_number": 11,
                        "content": "Cipher cipher = Cipher.getInstance(\"RC4\");"
                    }
                ],
                "severity": "Very High",
                "explanation": "RC4 is insecure due to biases in its keystream, vulnerabilities in its key scheduling algorithm, and susceptibility to attacks like plaintext recovery and state inference."
            },
            {
                "language": "Python",
                "filename": "rc4.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\rc4\\rc4.py",
                "lines": [
                    {
                        "line_number": 2,
                        "content": "key = b\"12345678\"  # Key for RC4"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe (vulnerable to Grover's algorithm)."
            },
            {
                "language": "Python",
                "filename": "rc4.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\rc4\\rc4.py",
                "lines": [
                    {
                        "line_number": 2,
                        "content": "key = b\"12345678\"  # Key for RC4"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 offers slightly better security than AES-128 but is still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "rc4.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\rc4\\rc4.py",
                "lines": [
                    {
                        "line_number": 1,
                        "content": "from Crypto.Cipher import ARC4"
                    },
                    {
                        "line_number": 2,
                        "content": "key = b\"12345678\"  # Key for RC4"
                    },
                    {
                        "line_number": 3,
                        "content": "cipher = ARC4.new(key)"
                    },
                    {
                        "line_number": 6,
                        "content": "print(\"Ciphertext (RC4):\", ciphertext)"
                    }
                ],
                "severity": "Very High",
                "explanation": "RC4 is insecure due to biases in its keystream, vulnerabilities in its key scheduling algorithm, and susceptibility to attacks like plaintext recovery and state inference."
            },
            {
                "language": "Java",
                "filename": "rsa.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\rsa\\rsa.java",
                "lines": [
                    {
                        "line_number": 5,
                        "content": "KeyPairGenerator keyPairGen = KeyPairGenerator.getInstance(\"RSA\");"
                    }
                ],
                "severity": "High",
                "explanation": "RSA with short keys (512, 1024 bits) is easily breakable with classical attacks and completely broken with quantum computing (Shor's algorithm)."
            }
        ]
    },
    {
        "scan_id": 8,
        "date": "2024-12-11 15:54:49",
        "directory": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts",
        "files_scanned": {
            "Python": 12,
            "C": 6,
            "Java": 6
        },
        "vulnerable_files": {
            "Python": 20,
            "C": 5,
            "Java": 5
        },
        "vulnerabilities": [
            {
                "language": "Python",
                "filename": "a.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\a.py",
                "lines": [
                    {
                        "line_number": 1,
                        "content": "from Crypto.Cipher import DES"
                    },
                    {
                        "line_number": 10,
                        "content": "cipher = DES.new(key, DES.MODE_ECB)"
                    }
                ],
                "severity": "Very High",
                "explanation": "DES is insecure due to its 56-bit key size, making it vulnerable to brute-force attacks."
            },
            {
                "language": "Python",
                "filename": "a.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\a.py",
                "lines": [
                    {
                        "line_number": 6,
                        "content": "key = b'8bytekey'  # DES requires an 8-byte key"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe (vulnerable to Grover's algorithm)."
            },
            {
                "language": "Python",
                "filename": "a.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\a.py",
                "lines": [
                    {
                        "line_number": 6,
                        "content": "key = b'8bytekey'  # DES requires an 8-byte key"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 offers slightly better security than AES-128 but is still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "b.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\b.py",
                "lines": [
                    {
                        "line_number": 1,
                        "content": "from arc4 import ARC4"
                    },
                    {
                        "line_number": 3,
                        "content": "# Demonstrates RC4's predictable keystream"
                    },
                    {
                        "line_number": 7,
                        "content": "rc4 = ARC4(key)"
                    },
                    {
                        "line_number": 14,
                        "content": "rc4 = ARC4(key)  # Reset RC4 with the same key"
                    },
                    {
                        "line_number": 19,
                        "content": "# Vulnerability: RC4 keystream bias makes it insecure for cryptographic use."
                    }
                ],
                "severity": "Very High",
                "explanation": "RC4 is insecure due to biases in its keystream, vulnerabilities in its key scheduling algorithm, and susceptibility to attacks like plaintext recovery and state inference."
            },
            {
                "language": "Python",
                "filename": "d.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\d.py",
                "lines": [
                    {
                        "line_number": 7,
                        "content": "key = RSA.generate(512)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe (vulnerable to Grover's algorithm)."
            },
            {
                "language": "Python",
                "filename": "f.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\f.py",
                "lines": [
                    {
                        "line_number": 6,
                        "content": "key = b\"16bytekey1234567\""
                    },
                    {
                        "line_number": 10,
                        "content": "cipher = AES.new(key, AES.MODE_ECB)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe (vulnerable to Grover's algorithm)."
            },
            {
                "language": "Python",
                "filename": "f.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\f.py",
                "lines": [
                    {
                        "line_number": 10,
                        "content": "cipher = AES.new(key, AES.MODE_ECB)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 offers slightly better security than AES-128 but is still vulnerable to quantum attacks."
            },
            {
                "language": "C",
                "filename": "3des.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\3des\\3des.c",
                "lines": [
                    {
                        "line_number": 18,
                        "content": "DES_ecb_encrypt(&input, &output, &key_schedule1, DES_ENCRYPT);"
                    },
                    {
                        "line_number": 22,
                        "content": "DES_ecb_encrypt(&input, &output, &key_schedule1, DES_ENCRYPT);"
                    },
                    {
                        "line_number": 23,
                        "content": "DES_ecb_encrypt(&output, &output, &key_schedule2, DES_DECRYPT);"
                    },
                    {
                        "line_number": 27,
                        "content": "DES_ecb_encrypt(&input, &output, &key_schedule1, DES_ENCRYPT);"
                    },
                    {
                        "line_number": 28,
                        "content": "DES_ecb_encrypt(&output, &output, &key_schedule2, DES_DECRYPT);"
                    },
                    {
                        "line_number": 29,
                        "content": "DES_ecb_encrypt(&output, &output, &key_schedule3, DES_ENCRYPT);"
                    }
                ],
                "severity": "Very High",
                "explanation": "DES is insecure due to its 56-bit key size, making it vulnerable to brute-force attacks."
            },
            {
                "language": "Java",
                "filename": "3des.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\3des\\3des.java",
                "lines": [
                    {
                        "line_number": 13,
                        "content": "SecretKeySpec desKey = new SecretKeySpec(key1, \"DES\");"
                    },
                    {
                        "line_number": 14,
                        "content": "Cipher cipher1 = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    },
                    {
                        "line_number": 19,
                        "content": "SecretKeySpec desKey2 = new SecretKeySpec(key1, \"DES\");"
                    },
                    {
                        "line_number": 20,
                        "content": "Cipher cipher2 = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    },
                    {
                        "line_number": 25,
                        "content": "SecretKeySpec desKey3 = new SecretKeySpec(key3, \"DES\");"
                    },
                    {
                        "line_number": 26,
                        "content": "Cipher cipher3 = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    }
                ],
                "severity": "Very High",
                "explanation": "DES is insecure due to its 56-bit key size, making it vulnerable to brute-force attacks."
            },
            {
                "language": "Python",
                "filename": "3des.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\3des\\3des.py",
                "lines": [
                    {
                        "line_number": 1,
                        "content": "from Crypto.Cipher import DES3"
                    }
                ],
                "severity": "Very High",
                "explanation": "DES is insecure due to its 56-bit key size, making it vulnerable to brute-force attacks."
            },
            {
                "language": "Python",
                "filename": "3des.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\3des\\3des.py",
                "lines": [
                    {
                        "line_number": 4,
                        "content": "key = get_random_bytes(8)  # 56-bit key"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe (vulnerable to Grover's algorithm)."
            },
            {
                "language": "Python",
                "filename": "3des.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\3des\\3des.py",
                "lines": [
                    {
                        "line_number": 4,
                        "content": "key = get_random_bytes(8)  # 56-bit key"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 offers slightly better security than AES-128 but is still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "aes128.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\aes128\\aes128.py",
                "lines": [
                    {
                        "line_number": 5,
                        "content": "key = get_random_bytes(16)  # AES-128: 128-bit (16 bytes)"
                    },
                    {
                        "line_number": 6,
                        "content": "cipher = AES.new(key, AES.MODE_ECB)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe (vulnerable to Grover's algorithm)."
            },
            {
                "language": "Python",
                "filename": "aes128.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\aes128\\aes128.py",
                "lines": [
                    {
                        "line_number": 5,
                        "content": "key = get_random_bytes(16)  # AES-128: 128-bit (16 bytes)"
                    },
                    {
                        "line_number": 6,
                        "content": "cipher = AES.new(key, AES.MODE_ECB)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 offers slightly better security than AES-128 but is still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "aes192.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\aes192\\aes192.py",
                "lines": [
                    {
                        "line_number": 5,
                        "content": "key = get_random_bytes(24)  # AES-192: 192-bit (24 bytes)"
                    },
                    {
                        "line_number": 6,
                        "content": "cipher = AES.new(key, AES.MODE_ECB)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe (vulnerable to Grover's algorithm)."
            },
            {
                "language": "Python",
                "filename": "aes192.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\aes192\\aes192.py",
                "lines": [
                    {
                        "line_number": 5,
                        "content": "key = get_random_bytes(24)  # AES-192: 192-bit (24 bytes)"
                    },
                    {
                        "line_number": 6,
                        "content": "cipher = AES.new(key, AES.MODE_ECB)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 offers slightly better security than AES-128 but is still vulnerable to quantum attacks."
            },
            {
                "language": "C",
                "filename": "des.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\des\\des.c",
                "lines": [
                    {
                        "line_number": 12,
                        "content": "DES_ecb_encrypt(&input, &output, &key_schedule, DES_ENCRYPT);"
                    }
                ],
                "severity": "Very High",
                "explanation": "DES is insecure due to its 56-bit key size, making it vulnerable to brute-force attacks."
            },
            {
                "language": "C",
                "filename": "des.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\des\\des.c",
                "lines": [
                    {
                        "line_number": 11,
                        "content": "DES_set_key_unchecked(&key, &key_schedule);"
                    }
                ],
                "severity": "Very High",
                "explanation": "3DES with 1 key offers no additional security over DES and is insecure."
            },
            {
                "language": "C",
                "filename": "des.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\des\\des.c",
                "lines": [
                    {
                        "line_number": 11,
                        "content": "DES_set_key_unchecked(&key, &key_schedule);"
                    }
                ],
                "severity": "High",
                "explanation": "3DES with 2 keys provides ~80 bits of security, which is inadequate by modern standards."
            },
            {
                "language": "C",
                "filename": "des.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\des\\des.c",
                "lines": [
                    {
                        "line_number": 11,
                        "content": "DES_set_key_unchecked(&key, &key_schedule);"
                    }
                ],
                "severity": "High",
                "explanation": "3DES with 3 keys provides ~112 bits of security, which is insufficient against quantum attacks."
            },
            {
                "language": "Java",
                "filename": "des.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\des\\des.java",
                "lines": [
                    {
                        "line_number": 9,
                        "content": "SecretKey key = new SecretKeySpec(keyBytes, \"DES\");"
                    },
                    {
                        "line_number": 10,
                        "content": "Cipher cipher = Cipher.getInstance(\"DES/ECB/PKCS5Padding\");"
                    }
                ],
                "severity": "Very High",
                "explanation": "DES is insecure due to its 56-bit key size, making it vulnerable to brute-force attacks."
            },
            {
                "language": "Python",
                "filename": "des.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\des\\des.py",
                "lines": [
                    {
                        "line_number": 1,
                        "content": "from Crypto.Cipher import DES"
                    },
                    {
                        "line_number": 5,
                        "content": "cipher = DES.new(key, DES.MODE_ECB)"
                    }
                ],
                "severity": "Very High",
                "explanation": "DES is insecure due to its 56-bit key size, making it vulnerable to brute-force attacks."
            },
            {
                "language": "Python",
                "filename": "des.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\des\\des.py",
                "lines": [
                    {
                        "line_number": 4,
                        "content": "key = get_random_bytes(8)  # 56 bits key for DES"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe (vulnerable to Grover's algorithm)."
            },
            {
                "language": "Python",
                "filename": "des.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\des\\des.py",
                "lines": [
                    {
                        "line_number": 4,
                        "content": "key = get_random_bytes(8)  # 56 bits key for DES"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 offers slightly better security than AES-128 but is still vulnerable to quantum attacks."
            },
            {
                "language": "Java",
                "filename": "rc4.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\rc4\\rc4.java",
                "lines": [
                    {
                        "line_number": 11,
                        "content": "Cipher cipher = Cipher.getInstance(\"RC4\");"
                    }
                ],
                "severity": "Very High",
                "explanation": "RC4 is insecure due to biases in its keystream, vulnerabilities in its key scheduling algorithm, and susceptibility to attacks like plaintext recovery and state inference."
            },
            {
                "language": "Python",
                "filename": "rc4.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\rc4\\rc4.py",
                "lines": [
                    {
                        "line_number": 2,
                        "content": "key = b\"12345678\"  # Key for RC4"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe (vulnerable to Grover's algorithm)."
            },
            {
                "language": "Python",
                "filename": "rc4.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\rc4\\rc4.py",
                "lines": [
                    {
                        "line_number": 2,
                        "content": "key = b\"12345678\"  # Key for RC4"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 offers slightly better security than AES-128 but is still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "rc4.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\rc4\\rc4.py",
                "lines": [
                    {
                        "line_number": 1,
                        "content": "from Crypto.Cipher import ARC4"
                    },
                    {
                        "line_number": 2,
                        "content": "key = b\"12345678\"  # Key for RC4"
                    },
                    {
                        "line_number": 3,
                        "content": "cipher = ARC4.new(key)"
                    },
                    {
                        "line_number": 6,
                        "content": "print(\"Ciphertext (RC4):\", ciphertext)"
                    }
                ],
                "severity": "Very High",
                "explanation": "RC4 is insecure due to biases in its keystream, vulnerabilities in its key scheduling algorithm, and susceptibility to attacks like plaintext recovery and state inference."
            },
            {
                "language": "Java",
                "filename": "rsa.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\rsa\\rsa.java",
                "lines": [
                    {
                        "line_number": 5,
                        "content": "KeyPairGenerator keyPairGen = KeyPairGenerator.getInstance(\"RSA\");"
                    }
                ],
                "severity": "High",
                "explanation": "RSA with short keys (512, 1024 bits) is easily breakable with classical attacks and completely broken with quantum computing (Shor's algorithm)."
            },
            {
                "language": "Java",
                "filename": "rsa.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\rsa\\rsa.java",
                "lines": [
                    {
                        "line_number": 5,
                        "content": "KeyPairGenerator keyPairGen = KeyPairGenerator.getInstance(\"RSA\");"
                    }
                ],
                "severity": "Very Low",
                "explanation": "RSA with 2048, 3072+ bits is secure against classical attacks but vulnerable to quantum computing."
            }
        ]
    },
    {
        "scan_id": 9,
        "date": "2024-12-11 16:04:11",
        "directory": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts",
        "files_scanned": {
            "Python": 12,
            "C": 6,
            "Java": 6
        },
        "vulnerable_files": {
            "Python": 20,
            "C": 5,
            "Java": 5
        },
        "vulnerabilities": [
            {
                "language": "Python",
                "filename": "a.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\a.py",
                "lines": [
                    {
                        "line_number": 1,
                        "content": "from Crypto.Cipher import DES"
                    },
                    {
                        "line_number": 10,
                        "content": "cipher = DES.new(key, DES.MODE_ECB)"
                    }
                ],
                "severity": "Very High",
                "explanation": "DES is insecure due to its 56-bit key size, making it vulnerable to brute-force attacks."
            },
            {
                "language": "Python",
                "filename": "a.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\a.py",
                "lines": [
                    {
                        "line_number": 6,
                        "content": "key = b'8bytekey'  # DES requires an 8-byte key"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe (vulnerable to Grover's algorithm)."
            },
            {
                "language": "Python",
                "filename": "a.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\a.py",
                "lines": [
                    {
                        "line_number": 6,
                        "content": "key = b'8bytekey'  # DES requires an 8-byte key"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 offers slightly better security than AES-128 but is still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "b.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\b.py",
                "lines": [
                    {
                        "line_number": 1,
                        "content": "from arc4 import ARC4"
                    },
                    {
                        "line_number": 3,
                        "content": "# Demonstrates RC4's predictable keystream"
                    },
                    {
                        "line_number": 7,
                        "content": "rc4 = ARC4(key)"
                    },
                    {
                        "line_number": 14,
                        "content": "rc4 = ARC4(key)  # Reset RC4 with the same key"
                    },
                    {
                        "line_number": 19,
                        "content": "# Vulnerability: RC4 keystream bias makes it insecure for cryptographic use."
                    }
                ],
                "severity": "Very High",
                "explanation": "RC4 is insecure due to biases in its keystream, vulnerabilities in its key scheduling algorithm, and susceptibility to attacks like plaintext recovery and state inference."
            },
            {
                "language": "Python",
                "filename": "d.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\d.py",
                "lines": [
                    {
                        "line_number": 7,
                        "content": "key = RSA.generate(512)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe (vulnerable to Grover's algorithm)."
            },
            {
                "language": "Python",
                "filename": "f.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\f.py",
                "lines": [
                    {
                        "line_number": 6,
                        "content": "key = b\"16bytekey1234567\""
                    },
                    {
                        "line_number": 10,
                        "content": "cipher = AES.new(key, AES.MODE_ECB)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe (vulnerable to Grover's algorithm)."
            },
            {
                "language": "Python",
                "filename": "f.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\f.py",
                "lines": [
                    {
                        "line_number": 10,
                        "content": "cipher = AES.new(key, AES.MODE_ECB)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 offers slightly better security than AES-128 but is still vulnerable to quantum attacks."
            },
            {
                "language": "C",
                "filename": "3des.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\3des\\3des.c",
                "lines": [
                    {
                        "line_number": 18,
                        "content": "DES_ecb_encrypt(&input, &output, &key_schedule1, DES_ENCRYPT);"
                    },
                    {
                        "line_number": 22,
                        "content": "DES_ecb_encrypt(&input, &output, &key_schedule1, DES_ENCRYPT);"
                    },
                    {
                        "line_number": 23,
                        "content": "DES_ecb_encrypt(&output, &output, &key_schedule2, DES_DECRYPT);"
                    },
                    {
                        "line_number": 27,
                        "content": "DES_ecb_encrypt(&input, &output, &key_schedule1, DES_ENCRYPT);"
                    },
                    {
                        "line_number": 28,
                        "content": "DES_ecb_encrypt(&output, &output, &key_schedule2, DES_DECRYPT);"
                    },
                    {
                        "line_number": 29,
                        "content": "DES_ecb_encrypt(&output, &output, &key_schedule3, DES_ENCRYPT);"
                    }
                ],
                "severity": "Very High",
                "explanation": "DES is insecure due to its 56-bit key size, making it vulnerable to brute-force attacks."
            },
            {
                "language": "Java",
                "filename": "3des.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\3des\\3des.java",
                "lines": [
                    {
                        "line_number": 13,
                        "content": "SecretKeySpec desKey = new SecretKeySpec(key1, \"DES\");"
                    },
                    {
                        "line_number": 14,
                        "content": "Cipher cipher1 = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    },
                    {
                        "line_number": 19,
                        "content": "SecretKeySpec desKey2 = new SecretKeySpec(key1, \"DES\");"
                    },
                    {
                        "line_number": 20,
                        "content": "Cipher cipher2 = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    },
                    {
                        "line_number": 25,
                        "content": "SecretKeySpec desKey3 = new SecretKeySpec(key3, \"DES\");"
                    },
                    {
                        "line_number": 26,
                        "content": "Cipher cipher3 = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    }
                ],
                "severity": "Very High",
                "explanation": "DES is insecure due to its 56-bit key size, making it vulnerable to brute-force attacks."
            },
            {
                "language": "Python",
                "filename": "3des.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\3des\\3des.py",
                "lines": [
                    {
                        "line_number": 1,
                        "content": "from Crypto.Cipher import DES3"
                    }
                ],
                "severity": "Very High",
                "explanation": "DES is insecure due to its 56-bit key size, making it vulnerable to brute-force attacks."
            },
            {
                "language": "Python",
                "filename": "3des.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\3des\\3des.py",
                "lines": [
                    {
                        "line_number": 4,
                        "content": "key = get_random_bytes(8)  # 56-bit key"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe (vulnerable to Grover's algorithm)."
            },
            {
                "language": "Python",
                "filename": "3des.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\3des\\3des.py",
                "lines": [
                    {
                        "line_number": 4,
                        "content": "key = get_random_bytes(8)  # 56-bit key"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 offers slightly better security than AES-128 but is still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "aes128.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\aes128\\aes128.py",
                "lines": [
                    {
                        "line_number": 5,
                        "content": "key = get_random_bytes(16)  # AES-128: 128-bit (16 bytes)"
                    },
                    {
                        "line_number": 6,
                        "content": "cipher = AES.new(key, AES.MODE_ECB)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe (vulnerable to Grover's algorithm)."
            },
            {
                "language": "Python",
                "filename": "aes128.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\aes128\\aes128.py",
                "lines": [
                    {
                        "line_number": 5,
                        "content": "key = get_random_bytes(16)  # AES-128: 128-bit (16 bytes)"
                    },
                    {
                        "line_number": 6,
                        "content": "cipher = AES.new(key, AES.MODE_ECB)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 offers slightly better security than AES-128 but is still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "aes192.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\aes192\\aes192.py",
                "lines": [
                    {
                        "line_number": 5,
                        "content": "key = get_random_bytes(24)  # AES-192: 192-bit (24 bytes)"
                    },
                    {
                        "line_number": 6,
                        "content": "cipher = AES.new(key, AES.MODE_ECB)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe (vulnerable to Grover's algorithm)."
            },
            {
                "language": "Python",
                "filename": "aes192.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\aes192\\aes192.py",
                "lines": [
                    {
                        "line_number": 5,
                        "content": "key = get_random_bytes(24)  # AES-192: 192-bit (24 bytes)"
                    },
                    {
                        "line_number": 6,
                        "content": "cipher = AES.new(key, AES.MODE_ECB)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 offers slightly better security than AES-128 but is still vulnerable to quantum attacks."
            },
            {
                "language": "C",
                "filename": "des.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\des\\des.c",
                "lines": [
                    {
                        "line_number": 12,
                        "content": "DES_ecb_encrypt(&input, &output, &key_schedule, DES_ENCRYPT);"
                    }
                ],
                "severity": "Very High",
                "explanation": "DES is insecure due to its 56-bit key size, making it vulnerable to brute-force attacks."
            },
            {
                "language": "C",
                "filename": "des.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\des\\des.c",
                "lines": [
                    {
                        "line_number": 11,
                        "content": "DES_set_key_unchecked(&key, &key_schedule);"
                    }
                ],
                "severity": "Very High",
                "explanation": "3DES with 1 key offers no additional security over DES and is insecure."
            },
            {
                "language": "C",
                "filename": "des.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\des\\des.c",
                "lines": [
                    {
                        "line_number": 11,
                        "content": "DES_set_key_unchecked(&key, &key_schedule);"
                    }
                ],
                "severity": "High",
                "explanation": "3DES with 2 keys provides ~80 bits of security, which is inadequate by modern standards."
            },
            {
                "language": "C",
                "filename": "des.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\des\\des.c",
                "lines": [
                    {
                        "line_number": 11,
                        "content": "DES_set_key_unchecked(&key, &key_schedule);"
                    }
                ],
                "severity": "High",
                "explanation": "3DES with 3 keys provides ~112 bits of security, which is insufficient against quantum attacks."
            },
            {
                "language": "Java",
                "filename": "des.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\des\\des.java",
                "lines": [
                    {
                        "line_number": 9,
                        "content": "SecretKey key = new SecretKeySpec(keyBytes, \"DES\");"
                    },
                    {
                        "line_number": 10,
                        "content": "Cipher cipher = Cipher.getInstance(\"DES/ECB/PKCS5Padding\");"
                    }
                ],
                "severity": "Very High",
                "explanation": "DES is insecure due to its 56-bit key size, making it vulnerable to brute-force attacks."
            },
            {
                "language": "Python",
                "filename": "des.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\des\\des.py",
                "lines": [
                    {
                        "line_number": 1,
                        "content": "from Crypto.Cipher import DES"
                    },
                    {
                        "line_number": 5,
                        "content": "cipher = DES.new(key, DES.MODE_ECB)"
                    }
                ],
                "severity": "Very High",
                "explanation": "DES is insecure due to its 56-bit key size, making it vulnerable to brute-force attacks."
            },
            {
                "language": "Python",
                "filename": "des.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\des\\des.py",
                "lines": [
                    {
                        "line_number": 4,
                        "content": "key = get_random_bytes(8)  # 56 bits key for DES"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe (vulnerable to Grover's algorithm)."
            },
            {
                "language": "Python",
                "filename": "des.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\des\\des.py",
                "lines": [
                    {
                        "line_number": 4,
                        "content": "key = get_random_bytes(8)  # 56 bits key for DES"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 offers slightly better security than AES-128 but is still vulnerable to quantum attacks."
            },
            {
                "language": "Java",
                "filename": "rc4.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\rc4\\rc4.java",
                "lines": [
                    {
                        "line_number": 11,
                        "content": "Cipher cipher = Cipher.getInstance(\"RC4\");"
                    }
                ],
                "severity": "Very High",
                "explanation": "RC4 is insecure due to biases in its keystream, vulnerabilities in its key scheduling algorithm, and susceptibility to attacks like plaintext recovery and state inference."
            },
            {
                "language": "Python",
                "filename": "rc4.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\rc4\\rc4.py",
                "lines": [
                    {
                        "line_number": 2,
                        "content": "key = b\"12345678\"  # Key for RC4"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe (vulnerable to Grover's algorithm)."
            },
            {
                "language": "Python",
                "filename": "rc4.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\rc4\\rc4.py",
                "lines": [
                    {
                        "line_number": 2,
                        "content": "key = b\"12345678\"  # Key for RC4"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 offers slightly better security than AES-128 but is still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "rc4.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\rc4\\rc4.py",
                "lines": [
                    {
                        "line_number": 1,
                        "content": "from Crypto.Cipher import ARC4"
                    },
                    {
                        "line_number": 2,
                        "content": "key = b\"12345678\"  # Key for RC4"
                    },
                    {
                        "line_number": 3,
                        "content": "cipher = ARC4.new(key)"
                    },
                    {
                        "line_number": 6,
                        "content": "print(\"Ciphertext (RC4):\", ciphertext)"
                    }
                ],
                "severity": "Very High",
                "explanation": "RC4 is insecure due to biases in its keystream, vulnerabilities in its key scheduling algorithm, and susceptibility to attacks like plaintext recovery and state inference."
            },
            {
                "language": "Java",
                "filename": "rsa.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\rsa\\rsa.java",
                "lines": [
                    {
                        "line_number": 5,
                        "content": "KeyPairGenerator keyPairGen = KeyPairGenerator.getInstance(\"RSA\");"
                    }
                ],
                "severity": "High",
                "explanation": "RSA with short keys (512, 1024 bits) is easily breakable with classical attacks and completely broken with quantum computing (Shor's algorithm)."
            },
            {
                "language": "Java",
                "filename": "rsa.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\rsa\\rsa.java",
                "lines": [
                    {
                        "line_number": 5,
                        "content": "KeyPairGenerator keyPairGen = KeyPairGenerator.getInstance(\"RSA\");"
                    }
                ],
                "severity": "Very Low",
                "explanation": "RSA with 2048, 3072+ bits is secure against classical attacks but vulnerable to quantum computing."
            }
        ]
    },
    {
        "scan_id": 10,
        "date": "2024-12-13 13:13:44",
        "directory": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts",
        "files_scanned": {
            "Python": 17,
            "C": 11,
            "Java": 11
        },
        "vulnerable_files": {
            "Python": 31,
            "C": 11,
            "Java": 14
        },
        "vulnerabilities": [
            {
                "language": "Python",
                "filename": "a.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\a.py",
                "lines": [
                    {
                        "line_number": 1,
                        "content": "from Crypto.Cipher import DES"
                    },
                    {
                        "line_number": 10,
                        "content": "cipher = DES.new(key, DES.MODE_ECB)"
                    }
                ],
                "severity": "Very High",
                "explanation": "DES is insecure due to its 56-bit key size, making it vulnerable to brute-force attacks."
            },
            {
                "language": "Python",
                "filename": "a.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\a.py",
                "lines": [
                    {
                        "line_number": 6,
                        "content": "key = b'8bytekey'  # DES requires an 8-byte key"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe (vulnerable to Grover's algorithm)."
            },
            {
                "language": "Python",
                "filename": "a.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\a.py",
                "lines": [
                    {
                        "line_number": 6,
                        "content": "key = b'8bytekey'  # DES requires an 8-byte key"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 offers slightly better security than AES-128 but is still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "b.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\b.py",
                "lines": [
                    {
                        "line_number": 1,
                        "content": "from arc4 import ARC4"
                    },
                    {
                        "line_number": 3,
                        "content": "# Demonstrates RC4's predictable keystream"
                    },
                    {
                        "line_number": 7,
                        "content": "rc4 = ARC4(key)"
                    },
                    {
                        "line_number": 14,
                        "content": "rc4 = ARC4(key)  # Reset RC4 with the same key"
                    },
                    {
                        "line_number": 19,
                        "content": "# Vulnerability: RC4 keystream bias makes it insecure for cryptographic use."
                    }
                ],
                "severity": "Very High",
                "explanation": "RC4 is insecure due to biases in its keystream, vulnerabilities in its key scheduling algorithm, and susceptibility to attacks like plaintext recovery and state inference."
            },
            {
                "language": "Python",
                "filename": "c.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\c.py",
                "lines": [
                    {
                        "line_number": 8,
                        "content": "hash1 = hashlib.md5(data1).hexdigest()"
                    },
                    {
                        "line_number": 9,
                        "content": "hash2 = hashlib.md5(data2).hexdigest()"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities and is insecure under both classical and quantum attacks."
            },
            {
                "language": "Python",
                "filename": "d.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\d.py",
                "lines": [
                    {
                        "line_number": 7,
                        "content": "key = RSA.generate(512)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe (vulnerable to Grover's algorithm)."
            },
            {
                "language": "Python",
                "filename": "e.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\e.py",
                "lines": [
                    {
                        "line_number": 8,
                        "content": "hash1 = hashlib.sha1(data1).hexdigest()"
                    },
                    {
                        "line_number": 9,
                        "content": "hash2 = hashlib.sha1(data2).hexdigest()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collision attacks under classical and quantum contexts."
            },
            {
                "language": "Python",
                "filename": "f.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\f.py",
                "lines": [
                    {
                        "line_number": 6,
                        "content": "key = b\"16bytekey1234567\""
                    },
                    {
                        "line_number": 10,
                        "content": "cipher = AES.new(key, AES.MODE_ECB)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe (vulnerable to Grover's algorithm)."
            },
            {
                "language": "Python",
                "filename": "f.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\f.py",
                "lines": [
                    {
                        "line_number": 10,
                        "content": "cipher = AES.new(key, AES.MODE_ECB)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 offers slightly better security than AES-128 but is still vulnerable to quantum attacks."
            },
            {
                "language": "C",
                "filename": "3des.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\3des\\3des.c",
                "lines": [
                    {
                        "line_number": 18,
                        "content": "DES_ecb_encrypt(&input, &output, &key_schedule1, DES_ENCRYPT);"
                    },
                    {
                        "line_number": 22,
                        "content": "DES_ecb_encrypt(&input, &output, &key_schedule1, DES_ENCRYPT);"
                    },
                    {
                        "line_number": 23,
                        "content": "DES_ecb_encrypt(&output, &output, &key_schedule2, DES_DECRYPT);"
                    },
                    {
                        "line_number": 27,
                        "content": "DES_ecb_encrypt(&input, &output, &key_schedule1, DES_ENCRYPT);"
                    },
                    {
                        "line_number": 28,
                        "content": "DES_ecb_encrypt(&output, &output, &key_schedule2, DES_DECRYPT);"
                    },
                    {
                        "line_number": 29,
                        "content": "DES_ecb_encrypt(&output, &output, &key_schedule3, DES_ENCRYPT);"
                    }
                ],
                "severity": "Very High",
                "explanation": "DES is insecure due to its 56-bit key size, making it vulnerable to brute-force attacks."
            },
            {
                "language": "Java",
                "filename": "3des.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\3des\\3des.java",
                "lines": [
                    {
                        "line_number": 13,
                        "content": "SecretKeySpec desKey = new SecretKeySpec(key1, \"DES\");"
                    },
                    {
                        "line_number": 14,
                        "content": "Cipher cipher1 = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    },
                    {
                        "line_number": 19,
                        "content": "SecretKeySpec desKey2 = new SecretKeySpec(key1, \"DES\");"
                    },
                    {
                        "line_number": 20,
                        "content": "Cipher cipher2 = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    },
                    {
                        "line_number": 25,
                        "content": "SecretKeySpec desKey3 = new SecretKeySpec(key3, \"DES\");"
                    },
                    {
                        "line_number": 26,
                        "content": "Cipher cipher3 = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    }
                ],
                "severity": "Very High",
                "explanation": "DES is insecure due to its 56-bit key size, making it vulnerable to brute-force attacks."
            },
            {
                "language": "Python",
                "filename": "3des.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\3des\\3des.py",
                "lines": [
                    {
                        "line_number": 1,
                        "content": "from Crypto.Cipher import DES3"
                    }
                ],
                "severity": "Very High",
                "explanation": "DES is insecure due to its 56-bit key size, making it vulnerable to brute-force attacks."
            },
            {
                "language": "Python",
                "filename": "3des.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\3des\\3des.py",
                "lines": [
                    {
                        "line_number": 4,
                        "content": "key = get_random_bytes(8)  # 56-bit key"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe (vulnerable to Grover's algorithm)."
            },
            {
                "language": "Python",
                "filename": "3des.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\3des\\3des.py",
                "lines": [
                    {
                        "line_number": 4,
                        "content": "key = get_random_bytes(8)  # 56-bit key"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 offers slightly better security than AES-128 but is still vulnerable to quantum attacks."
            },
            {
                "language": "Java",
                "filename": "aes128.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\aes128\\aes128.java",
                "lines": [
                    {
                        "line_number": 10,
                        "content": "Cipher cipher = Cipher.getInstance(\"AES/ECB/PKCS5Padding\");"
                    }
                ],
                "severity": "High",
                "explanation": "Insecure mode; leaks patterns in plaintext due to lack of diffusion."
            },
            {
                "language": "Python",
                "filename": "aes128.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\aes128\\aes128.py",
                "lines": [
                    {
                        "line_number": 5,
                        "content": "key = get_random_bytes(16)  # AES-128: 128-bit (16 bytes)"
                    },
                    {
                        "line_number": 6,
                        "content": "cipher = AES.new(key, AES.MODE_ECB)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe (vulnerable to Grover's algorithm)."
            },
            {
                "language": "Python",
                "filename": "aes128.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\aes128\\aes128.py",
                "lines": [
                    {
                        "line_number": 5,
                        "content": "key = get_random_bytes(16)  # AES-128: 128-bit (16 bytes)"
                    },
                    {
                        "line_number": 6,
                        "content": "cipher = AES.new(key, AES.MODE_ECB)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 offers slightly better security than AES-128 but is still vulnerable to quantum attacks."
            },
            {
                "language": "Java",
                "filename": "aes192.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\aes192\\aes192.java",
                "lines": [
                    {
                        "line_number": 10,
                        "content": "Cipher cipher = Cipher.getInstance(\"AES/ECB/PKCS5Padding\");"
                    }
                ],
                "severity": "High",
                "explanation": "Insecure mode; leaks patterns in plaintext due to lack of diffusion."
            },
            {
                "language": "Python",
                "filename": "aes192.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\aes192\\aes192.py",
                "lines": [
                    {
                        "line_number": 5,
                        "content": "key = get_random_bytes(24)  # AES-192: 192-bit (24 bytes)"
                    },
                    {
                        "line_number": 6,
                        "content": "cipher = AES.new(key, AES.MODE_ECB)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe (vulnerable to Grover's algorithm)."
            },
            {
                "language": "Python",
                "filename": "aes192.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\aes192\\aes192.py",
                "lines": [
                    {
                        "line_number": 5,
                        "content": "key = get_random_bytes(24)  # AES-192: 192-bit (24 bytes)"
                    },
                    {
                        "line_number": 6,
                        "content": "cipher = AES.new(key, AES.MODE_ECB)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 offers slightly better security than AES-128 but is still vulnerable to quantum attacks."
            },
            {
                "language": "C",
                "filename": "des.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\des\\des.c",
                "lines": [
                    {
                        "line_number": 12,
                        "content": "DES_ecb_encrypt(&input, &output, &key_schedule, DES_ENCRYPT);"
                    }
                ],
                "severity": "Very High",
                "explanation": "DES is insecure due to its 56-bit key size, making it vulnerable to brute-force attacks."
            },
            {
                "language": "C",
                "filename": "des.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\des\\des.c",
                "lines": [
                    {
                        "line_number": 11,
                        "content": "DES_set_key_unchecked(&key, &key_schedule);"
                    }
                ],
                "severity": "Very High",
                "explanation": "3DES with 1 key offers no additional security over DES and is insecure."
            },
            {
                "language": "C",
                "filename": "des.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\des\\des.c",
                "lines": [
                    {
                        "line_number": 11,
                        "content": "DES_set_key_unchecked(&key, &key_schedule);"
                    }
                ],
                "severity": "High",
                "explanation": "3DES with 2 keys provides ~80 bits of security, which is inadequate by modern standards."
            },
            {
                "language": "C",
                "filename": "des.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\des\\des.c",
                "lines": [
                    {
                        "line_number": 11,
                        "content": "DES_set_key_unchecked(&key, &key_schedule);"
                    }
                ],
                "severity": "High",
                "explanation": "3DES with 3 keys provides ~112 bits of security, which is insufficient against quantum attacks."
            },
            {
                "language": "Java",
                "filename": "des.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\des\\des.java",
                "lines": [
                    {
                        "line_number": 9,
                        "content": "SecretKey key = new SecretKeySpec(keyBytes, \"DES\");"
                    },
                    {
                        "line_number": 10,
                        "content": "Cipher cipher = Cipher.getInstance(\"DES/ECB/PKCS5Padding\");"
                    }
                ],
                "severity": "Very High",
                "explanation": "DES is insecure due to its 56-bit key size, making it vulnerable to brute-force attacks."
            },
            {
                "language": "Java",
                "filename": "des.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\des\\des.java",
                "lines": [
                    {
                        "line_number": 10,
                        "content": "Cipher cipher = Cipher.getInstance(\"DES/ECB/PKCS5Padding\");"
                    }
                ],
                "severity": "High",
                "explanation": "Insecure mode; leaks patterns in plaintext due to lack of diffusion."
            },
            {
                "language": "Python",
                "filename": "des.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\des\\des.py",
                "lines": [
                    {
                        "line_number": 1,
                        "content": "from Crypto.Cipher import DES"
                    },
                    {
                        "line_number": 5,
                        "content": "cipher = DES.new(key, DES.MODE_ECB)"
                    }
                ],
                "severity": "Very High",
                "explanation": "DES is insecure due to its 56-bit key size, making it vulnerable to brute-force attacks."
            },
            {
                "language": "Python",
                "filename": "des.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\des\\des.py",
                "lines": [
                    {
                        "line_number": 4,
                        "content": "key = get_random_bytes(8)  # 56 bits key for DES"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe (vulnerable to Grover's algorithm)."
            },
            {
                "language": "Python",
                "filename": "des.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\des\\des.py",
                "lines": [
                    {
                        "line_number": 4,
                        "content": "key = get_random_bytes(8)  # 56 bits key for DES"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 offers slightly better security than AES-128 but is still vulnerable to quantum attacks."
            },
            {
                "language": "C",
                "filename": "ecb.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\ecb_mode\\ecb.c",
                "lines": [
                    {
                        "line_number": 11,
                        "content": "EVP_EncryptInit_ex(ctx, EVP_aes_128_ecb(), NULL, key, NULL);"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe (vulnerable to Grover's algorithm)."
            },
            {
                "language": "C",
                "filename": "ecb.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\ecb_mode\\ecb.c",
                "lines": [
                    {
                        "line_number": 11,
                        "content": "EVP_EncryptInit_ex(ctx, EVP_aes_128_ecb(), NULL, key, NULL);"
                    },
                    {
                        "line_number": 26,
                        "content": "EVP_EncryptInit_ex(ctx, EVP_des_ecb(), NULL, key, NULL);"
                    }
                ],
                "severity": "High",
                "explanation": "Insecure mode; leaks patterns in plaintext due to lack of diffusion."
            },
            {
                "language": "Java",
                "filename": "ecb.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\ecb_mode\\ecb.java",
                "lines": [
                    {
                        "line_number": 18,
                        "content": "SecretKey desKey = new SecretKeySpec(\"8bytekey\".getBytes(), \"DES\");"
                    },
                    {
                        "line_number": 19,
                        "content": "Cipher desCipher = Cipher.getInstance(\"DES/ECB/PKCS5Padding\");"
                    }
                ],
                "severity": "Very High",
                "explanation": "DES is insecure due to its 56-bit key size, making it vulnerable to brute-force attacks."
            },
            {
                "language": "Java",
                "filename": "ecb.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\ecb_mode\\ecb.java",
                "lines": [
                    {
                        "line_number": 12,
                        "content": "Cipher aesCipher = Cipher.getInstance(\"AES/ECB/PKCS5Padding\");"
                    },
                    {
                        "line_number": 19,
                        "content": "Cipher desCipher = Cipher.getInstance(\"DES/ECB/PKCS5Padding\");"
                    }
                ],
                "severity": "High",
                "explanation": "Insecure mode; leaks patterns in plaintext due to lack of diffusion."
            },
            {
                "language": "Python",
                "filename": "ecb.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\ecb_mode\\ecb.py",
                "lines": [
                    {
                        "line_number": 9,
                        "content": "des_ecb = DES.new(b\"8bytekey\", DES.MODE_ECB)"
                    }
                ],
                "severity": "Very High",
                "explanation": "DES is insecure due to its 56-bit key size, making it vulnerable to brute-force attacks."
            },
            {
                "language": "Python",
                "filename": "ecb.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\ecb_mode\\ecb.py",
                "lines": [
                    {
                        "line_number": 4,
                        "content": "aes_ecb = AES.new(b\"Sixteen byte key\", AES.MODE_ECB)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe (vulnerable to Grover's algorithm)."
            },
            {
                "language": "Python",
                "filename": "ecb.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\ecb_mode\\ecb.py",
                "lines": [
                    {
                        "line_number": 4,
                        "content": "aes_ecb = AES.new(b\"Sixteen byte key\", AES.MODE_ECB)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 offers slightly better security than AES-128 but is still vulnerable to quantum attacks."
            },
            {
                "language": "C",
                "filename": "ecdh.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\ecdh\\ecdh.c",
                "lines": [
                    {
                        "line_number": 7,
                        "content": "EC_KEY *key1 = EC_KEY_new_by_curve_name(NID_X9_62_prime256v1);"
                    },
                    {
                        "line_number": 8,
                        "content": "EC_KEY *key2 = EC_KEY_new_by_curve_name(NID_X9_62_prime256v1);"
                    }
                ],
                "severity": "Low",
                "explanation": "ECDH is not quantum-safe as quantum computers can break its security using Shor's algorithm."
            },
            {
                "language": "Java",
                "filename": "ecdh.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\ecdh\\ecdh.java",
                "lines": [
                    {
                        "line_number": 15,
                        "content": "KeyAgreement ka = KeyAgreement.getInstance(\"ECDH\");"
                    }
                ],
                "severity": "Low",
                "explanation": "ECDH is not quantum-safe as quantum computers can break its security using Shor's algorithm."
            },
            {
                "language": "Python",
                "filename": "ecdh.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\ecdh\\ecdh.py",
                "lines": [
                    {
                        "line_number": 5,
                        "content": "private_key = ECC.generate(curve=\"P-256\")"
                    },
                    {
                        "line_number": 6,
                        "content": "peer_key = ECC.generate(curve=\"P-256\").public_key()"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe (vulnerable to Grover's algorithm)."
            },
            {
                "language": "Python",
                "filename": "ecdh.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\ecdh\\ecdh.py",
                "lines": [
                    {
                        "line_number": 5,
                        "content": "private_key = ECC.generate(curve=\"P-256\")"
                    },
                    {
                        "line_number": 6,
                        "content": "peer_key = ECC.generate(curve=\"P-256\").public_key()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 offers slightly better security than AES-128 but is still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "ecdh.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\ecdh\\ecdh.py",
                "lines": [
                    {
                        "line_number": 1,
                        "content": "from Crypto.Protocol.KDF import ECDH"
                    },
                    {
                        "line_number": 7,
                        "content": "ecdh = ECDH()"
                    }
                ],
                "severity": "Low",
                "explanation": "ECDH is not quantum-safe as quantum computers can break its security using Shor's algorithm."
            },
            {
                "language": "C",
                "filename": "md5.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\md5\\md5.c",
                "lines": [
                    {
                        "line_number": 9,
                        "content": "MD5_Init(&ctx);                       // Initialize MD5"
                    },
                    {
                        "line_number": 10,
                        "content": "MD5_Update(&ctx, input, strlen(input)); // Update with data"
                    },
                    {
                        "line_number": 11,
                        "content": "MD5_Final(digest, &ctx);              // Finalize hash"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities and is insecure under both classical and quantum attacks."
            },
            {
                "language": "Java",
                "filename": "md5.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\md5\\md5.java",
                "lines": [
                    {
                        "line_number": 8,
                        "content": "MessageDigest md5 = MessageDigest.getInstance(\"MD5\");"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities and is insecure under both classical and quantum attacks."
            },
            {
                "language": "Python",
                "filename": "md5.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\md5\\md5.py",
                "lines": [
                    {
                        "line_number": 4,
                        "content": "md5_hash = hashlib.md5(b\"test\").hexdigest()"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities and is insecure under both classical and quantum attacks."
            },
            {
                "language": "Java",
                "filename": "rc4.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\rc4\\rc4.java",
                "lines": [
                    {
                        "line_number": 11,
                        "content": "Cipher cipher = Cipher.getInstance(\"RC4\");"
                    }
                ],
                "severity": "Very High",
                "explanation": "RC4 is insecure due to biases in its keystream, vulnerabilities in its key scheduling algorithm, and susceptibility to attacks like plaintext recovery and state inference."
            },
            {
                "language": "Python",
                "filename": "rc4.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\rc4\\rc4.py",
                "lines": [
                    {
                        "line_number": 2,
                        "content": "key = b\"12345678\"  # Key for RC4"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe (vulnerable to Grover's algorithm)."
            },
            {
                "language": "Python",
                "filename": "rc4.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\rc4\\rc4.py",
                "lines": [
                    {
                        "line_number": 2,
                        "content": "key = b\"12345678\"  # Key for RC4"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 offers slightly better security than AES-128 but is still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "rc4.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\rc4\\rc4.py",
                "lines": [
                    {
                        "line_number": 1,
                        "content": "from Crypto.Cipher import ARC4"
                    },
                    {
                        "line_number": 2,
                        "content": "key = b\"12345678\"  # Key for RC4"
                    },
                    {
                        "line_number": 3,
                        "content": "cipher = ARC4.new(key)"
                    },
                    {
                        "line_number": 6,
                        "content": "print(\"Ciphertext (RC4):\", ciphertext)"
                    }
                ],
                "severity": "Very High",
                "explanation": "RC4 is insecure due to biases in its keystream, vulnerabilities in its key scheduling algorithm, and susceptibility to attacks like plaintext recovery and state inference."
            },
            {
                "language": "Java",
                "filename": "rsa.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\rsa\\rsa.java",
                "lines": [
                    {
                        "line_number": 5,
                        "content": "KeyPairGenerator keyPairGen = KeyPairGenerator.getInstance(\"RSA\");"
                    }
                ],
                "severity": "High",
                "explanation": "RSA with short keys (512, 1024 bits) is easily breakable with classical attacks and completely broken with quantum computing (Shor's algorithm)."
            },
            {
                "language": "Java",
                "filename": "rsa.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\rsa\\rsa.java",
                "lines": [
                    {
                        "line_number": 5,
                        "content": "KeyPairGenerator keyPairGen = KeyPairGenerator.getInstance(\"RSA\");"
                    }
                ],
                "severity": "Very Low",
                "explanation": "RSA with 2048, 3072+ bits is secure against classical attacks but vulnerable to quantum computing."
            },
            {
                "language": "C",
                "filename": "sha-1.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\sha-1\\sha-1.c",
                "lines": [
                    {
                        "line_number": 9,
                        "content": "SHA1_Init(&ctx);                      // Initialize SHA-1"
                    },
                    {
                        "line_number": 10,
                        "content": "SHA1_Update(&ctx, input, strlen(input)); // Update with data"
                    },
                    {
                        "line_number": 11,
                        "content": "SHA1_Final(digest, &ctx);             // Finalize hash"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collision attacks under classical and quantum contexts."
            },
            {
                "language": "Java",
                "filename": "sha-1.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\sha-1\\sha-1.java",
                "lines": [
                    {
                        "line_number": 8,
                        "content": "MessageDigest sha1 = MessageDigest.getInstance(\"SHA-1\");"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collision attacks under classical and quantum contexts."
            },
            {
                "language": "Python",
                "filename": "sha-1.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\sha-1\\sha-1.py",
                "lines": [
                    {
                        "line_number": 4,
                        "content": "sha1_hash = hashlib.sha1(b\"test\").hexdigest()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collision attacks under classical and quantum contexts."
            },
            {
                "language": "C",
                "filename": "sha-256.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\sha-256\\sha-256.c",
                "lines": [
                    {
                        "line_number": 9,
                        "content": "SHA256_Init(&ctx);                    // Initialize SHA-256"
                    },
                    {
                        "line_number": 10,
                        "content": "SHA256_Update(&ctx, input, strlen(input)); // Update with data"
                    },
                    {
                        "line_number": 11,
                        "content": "SHA256_Final(digest, &ctx);           // Finalize hash"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure under classical conditions, but Grover\u2019s algorithm reduces its effective security to ~128 bits."
            },
            {
                "language": "Java",
                "filename": "sha-256.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\sha-256\\sha-256.java",
                "lines": [
                    {
                        "line_number": 8,
                        "content": "MessageDigest sha256 = MessageDigest.getInstance(\"SHA-256\");"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure under classical conditions, but Grover\u2019s algorithm reduces its effective security to ~128 bits."
            },
            {
                "language": "Python",
                "filename": "sha-256.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\sha-256\\sha-256.py",
                "lines": [
                    {
                        "line_number": 4,
                        "content": "sha256_hash = hashlib.sha256(b\"test\").hexdigest()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure under classical conditions, but Grover\u2019s algorithm reduces its effective security to ~128 bits."
            }
        ]
    },
    {
        "scan_id": 11,
        "date": "2024-12-13 13:56:55",
        "directory": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts",
        "files_scanned": {
            "Python": 20,
            "C": 14,
            "Java": 14
        },
        "vulnerable_files": {
            "Python": 39,
            "C": 14,
            "Java": 19
        },
        "vulnerabilities": [
            {
                "language": "Python",
                "filename": "a.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\a.py",
                "lines": [
                    {
                        "line_number": 1,
                        "content": "from Crypto.Cipher import DES"
                    },
                    {
                        "line_number": 10,
                        "content": "cipher = DES.new(key, DES.MODE_ECB)"
                    }
                ],
                "severity": "Very High",
                "explanation": "DES is insecure due to its 56-bit key size, making it vulnerable to brute-force attacks."
            },
            {
                "language": "Python",
                "filename": "a.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\a.py",
                "lines": [
                    {
                        "line_number": 6,
                        "content": "key = b'8bytekey'  # DES requires an 8-byte key"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe (vulnerable to Grover's algorithm)."
            },
            {
                "language": "Python",
                "filename": "a.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\a.py",
                "lines": [
                    {
                        "line_number": 6,
                        "content": "key = b'8bytekey'  # DES requires an 8-byte key"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 offers slightly better security than AES-128 but is still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "b.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\b.py",
                "lines": [
                    {
                        "line_number": 1,
                        "content": "from arc4 import ARC4"
                    },
                    {
                        "line_number": 3,
                        "content": "# Demonstrates RC4's predictable keystream"
                    },
                    {
                        "line_number": 7,
                        "content": "rc4 = ARC4(key)"
                    },
                    {
                        "line_number": 14,
                        "content": "rc4 = ARC4(key)  # Reset RC4 with the same key"
                    },
                    {
                        "line_number": 19,
                        "content": "# Vulnerability: RC4 keystream bias makes it insecure for cryptographic use."
                    }
                ],
                "severity": "Very High",
                "explanation": "RC4 is insecure due to biases in its keystream, vulnerabilities in its key scheduling algorithm, and susceptibility to attacks like plaintext recovery and state inference."
            },
            {
                "language": "Python",
                "filename": "c.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\c.py",
                "lines": [
                    {
                        "line_number": 8,
                        "content": "hash1 = hashlib.md5(data1).hexdigest()"
                    },
                    {
                        "line_number": 9,
                        "content": "hash2 = hashlib.md5(data2).hexdigest()"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities and is insecure under both classical and quantum attacks."
            },
            {
                "language": "Python",
                "filename": "d.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\d.py",
                "lines": [
                    {
                        "line_number": 7,
                        "content": "key = RSA.generate(512)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe (vulnerable to Grover's algorithm)."
            },
            {
                "language": "Python",
                "filename": "e.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\e.py",
                "lines": [
                    {
                        "line_number": 8,
                        "content": "hash1 = hashlib.sha1(data1).hexdigest()"
                    },
                    {
                        "line_number": 9,
                        "content": "hash2 = hashlib.sha1(data2).hexdigest()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collision attacks under classical and quantum contexts."
            },
            {
                "language": "Python",
                "filename": "f.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\f.py",
                "lines": [
                    {
                        "line_number": 6,
                        "content": "key = b\"16bytekey1234567\""
                    },
                    {
                        "line_number": 10,
                        "content": "cipher = AES.new(key, AES.MODE_ECB)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe (vulnerable to Grover's algorithm)."
            },
            {
                "language": "Python",
                "filename": "f.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\f.py",
                "lines": [
                    {
                        "line_number": 10,
                        "content": "cipher = AES.new(key, AES.MODE_ECB)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 offers slightly better security than AES-128 but is still vulnerable to quantum attacks."
            },
            {
                "language": "C",
                "filename": "3des.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\3des\\3des.c",
                "lines": [
                    {
                        "line_number": 18,
                        "content": "DES_ecb_encrypt(&input, &output, &key_schedule1, DES_ENCRYPT);"
                    },
                    {
                        "line_number": 22,
                        "content": "DES_ecb_encrypt(&input, &output, &key_schedule1, DES_ENCRYPT);"
                    },
                    {
                        "line_number": 23,
                        "content": "DES_ecb_encrypt(&output, &output, &key_schedule2, DES_DECRYPT);"
                    },
                    {
                        "line_number": 27,
                        "content": "DES_ecb_encrypt(&input, &output, &key_schedule1, DES_ENCRYPT);"
                    },
                    {
                        "line_number": 28,
                        "content": "DES_ecb_encrypt(&output, &output, &key_schedule2, DES_DECRYPT);"
                    },
                    {
                        "line_number": 29,
                        "content": "DES_ecb_encrypt(&output, &output, &key_schedule3, DES_ENCRYPT);"
                    }
                ],
                "severity": "Very High",
                "explanation": "DES is insecure due to its 56-bit key size, making it vulnerable to brute-force attacks."
            },
            {
                "language": "Python",
                "filename": "3des.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\3des\\3des.py",
                "lines": [
                    {
                        "line_number": 1,
                        "content": "from Crypto.Cipher import DES3"
                    }
                ],
                "severity": "Very High",
                "explanation": "DES is insecure due to its 56-bit key size, making it vulnerable to brute-force attacks."
            },
            {
                "language": "Python",
                "filename": "3des.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\3des\\3des.py",
                "lines": [
                    {
                        "line_number": 4,
                        "content": "key = get_random_bytes(8)  # 56-bit key"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe (vulnerable to Grover's algorithm)."
            },
            {
                "language": "Python",
                "filename": "3des.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\3des\\3des.py",
                "lines": [
                    {
                        "line_number": 4,
                        "content": "key = get_random_bytes(8)  # 56-bit key"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 offers slightly better security than AES-128 but is still vulnerable to quantum attacks."
            },
            {
                "language": "Java",
                "filename": "TripleDESExample.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\3des\\TripleDESExample.java",
                "lines": [
                    {
                        "line_number": 13,
                        "content": "SecretKeySpec desKey = new SecretKeySpec(key1, \"DES\");"
                    },
                    {
                        "line_number": 14,
                        "content": "Cipher cipher1 = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    },
                    {
                        "line_number": 19,
                        "content": "SecretKeySpec desKey2 = new SecretKeySpec(key1, \"DES\");"
                    },
                    {
                        "line_number": 20,
                        "content": "Cipher cipher2 = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    },
                    {
                        "line_number": 25,
                        "content": "SecretKeySpec desKey3 = new SecretKeySpec(key3, \"DES\");"
                    },
                    {
                        "line_number": 26,
                        "content": "Cipher cipher3 = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    }
                ],
                "severity": "Very High",
                "explanation": "DES is insecure due to its 56-bit key size, making it vulnerable to brute-force attacks."
            },
            {
                "language": "Python",
                "filename": "aes128.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\aes128\\aes128.py",
                "lines": [
                    {
                        "line_number": 5,
                        "content": "key = get_random_bytes(16)  # AES-128: 128-bit (16 bytes)"
                    },
                    {
                        "line_number": 6,
                        "content": "cipher = AES.new(key, AES.MODE_ECB)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe (vulnerable to Grover's algorithm)."
            },
            {
                "language": "Python",
                "filename": "aes128.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\aes128\\aes128.py",
                "lines": [
                    {
                        "line_number": 5,
                        "content": "key = get_random_bytes(16)  # AES-128: 128-bit (16 bytes)"
                    },
                    {
                        "line_number": 6,
                        "content": "cipher = AES.new(key, AES.MODE_ECB)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 offers slightly better security than AES-128 but is still vulnerable to quantum attacks."
            },
            {
                "language": "Java",
                "filename": "AES128Example.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\aes128\\AES128Example.java",
                "lines": [
                    {
                        "line_number": 10,
                        "content": "Cipher cipher = Cipher.getInstance(\"AES/ECB/PKCS5Padding\");"
                    }
                ],
                "severity": "High",
                "explanation": "Insecure mode; leaks patterns in plaintext due to lack of diffusion."
            },
            {
                "language": "Python",
                "filename": "aes192.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\aes192\\aes192.py",
                "lines": [
                    {
                        "line_number": 5,
                        "content": "key = get_random_bytes(24)  # AES-192: 192-bit (24 bytes)"
                    },
                    {
                        "line_number": 6,
                        "content": "cipher = AES.new(key, AES.MODE_ECB)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe (vulnerable to Grover's algorithm)."
            },
            {
                "language": "Python",
                "filename": "aes192.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\aes192\\aes192.py",
                "lines": [
                    {
                        "line_number": 5,
                        "content": "key = get_random_bytes(24)  # AES-192: 192-bit (24 bytes)"
                    },
                    {
                        "line_number": 6,
                        "content": "cipher = AES.new(key, AES.MODE_ECB)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 offers slightly better security than AES-128 but is still vulnerable to quantum attacks."
            },
            {
                "language": "Java",
                "filename": "AES192Example.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\aes192\\AES192Example.java",
                "lines": [
                    {
                        "line_number": 10,
                        "content": "Cipher cipher = Cipher.getInstance(\"AES/ECB/PKCS5Padding\");"
                    }
                ],
                "severity": "High",
                "explanation": "Insecure mode; leaks patterns in plaintext due to lack of diffusion."
            },
            {
                "language": "C",
                "filename": "blowfish.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\blowfish\\blowfish.c",
                "lines": [
                    {
                        "line_number": 11,
                        "content": "BF_set_key(&bf_key, 8, key);  // Setting a short key"
                    }
                ],
                "severity": "High",
                "explanation": "Short key sizes are inadequate for modern security standards."
            },
            {
                "language": "Python",
                "filename": "blowfish.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\blowfish\\blowfish.py",
                "lines": [
                    {
                        "line_number": 4,
                        "content": "key = b\"shortkey\"  # 8 bytes (64 bits)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe (vulnerable to Grover's algorithm)."
            },
            {
                "language": "Python",
                "filename": "blowfish.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\blowfish\\blowfish.py",
                "lines": [
                    {
                        "line_number": 4,
                        "content": "key = b\"shortkey\"  # 8 bytes (64 bits)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 offers slightly better security than AES-128 but is still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "blowfish.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\blowfish\\blowfish.py",
                "lines": [
                    {
                        "line_number": 1,
                        "content": "from Crypto.Cipher import Blowfish"
                    }
                ],
                "severity": "High",
                "explanation": "Short key sizes are inadequate for modern security standards."
            },
            {
                "language": "Java",
                "filename": "BlowfishShortKeyTest.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\blowfish\\BlowfishShortKeyTest.java",
                "lines": [
                    {
                        "line_number": 9,
                        "content": "SecretKey blowfishKey = new SecretKeySpec(keyBytes, \"Blowfish\");"
                    },
                    {
                        "line_number": 10,
                        "content": "Cipher cipher = Cipher.getInstance(\"Blowfish/ECB/PKCS5Padding\");"
                    }
                ],
                "severity": "High",
                "explanation": "Short key sizes are inadequate for modern security standards."
            },
            {
                "language": "Java",
                "filename": "CBCStaticIVTest.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\cbc_mode\\CBCStaticIVTest.java",
                "lines": [
                    {
                        "line_number": 22,
                        "content": "SecretKey desKey = new javax.crypto.spec.SecretKeySpec(\"8bytekey\".getBytes(), \"DES\");"
                    },
                    {
                        "line_number": 25,
                        "content": "Cipher desCipher = Cipher.getInstance(\"DES/CBC/PKCS5Padding\");"
                    }
                ],
                "severity": "Very High",
                "explanation": "DES is insecure due to its 56-bit key size, making it vulnerable to brute-force attacks."
            },
            {
                "language": "Java",
                "filename": "CBCStaticIVTest.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\cbc_mode\\CBCStaticIVTest.java",
                "lines": [
                    {
                        "line_number": 16,
                        "content": "Cipher aesCipher = Cipher.getInstance(\"AES/CBC/PKCS5Padding\");"
                    },
                    {
                        "line_number": 25,
                        "content": "Cipher desCipher = Cipher.getInstance(\"DES/CBC/PKCS5Padding\");"
                    }
                ],
                "severity": "High",
                "explanation": "Predictable IVs make ciphertext vulnerable to chosen-plaintext attacks."
            },
            {
                "language": "C",
                "filename": "cbc_static_iv.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\cbc_mode\\cbc_static_iv.c",
                "lines": [
                    {
                        "line_number": 12,
                        "content": "EVP_EncryptInit_ex(ctx, EVP_aes_128_cbc(), NULL, key, iv);  // Static IV used here"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe (vulnerable to Grover's algorithm)."
            },
            {
                "language": "Python",
                "filename": "cbc_static_iv.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\cbc_mode\\cbc_static_iv.py",
                "lines": [
                    {
                        "line_number": 14,
                        "content": "cipher = DES.new(key, DES.MODE_CBC, iv)"
                    }
                ],
                "severity": "Very High",
                "explanation": "DES is insecure due to its 56-bit key size, making it vulnerable to brute-force attacks."
            },
            {
                "language": "Python",
                "filename": "cbc_static_iv.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\cbc_mode\\cbc_static_iv.py",
                "lines": [
                    {
                        "line_number": 5,
                        "content": "key = b\"Sixteen byte key\""
                    },
                    {
                        "line_number": 7,
                        "content": "cipher = AES.new(key, AES.MODE_CBC, iv)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe (vulnerable to Grover's algorithm)."
            },
            {
                "language": "Python",
                "filename": "cbc_static_iv.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\cbc_mode\\cbc_static_iv.py",
                "lines": [
                    {
                        "line_number": 7,
                        "content": "cipher = AES.new(key, AES.MODE_CBC, iv)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 offers slightly better security than AES-128 but is still vulnerable to quantum attacks."
            },
            {
                "language": "C",
                "filename": "des.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\des\\des.c",
                "lines": [
                    {
                        "line_number": 12,
                        "content": "DES_ecb_encrypt(&input, &output, &key_schedule, DES_ENCRYPT);"
                    }
                ],
                "severity": "Very High",
                "explanation": "DES is insecure due to its 56-bit key size, making it vulnerable to brute-force attacks."
            },
            {
                "language": "C",
                "filename": "des.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\des\\des.c",
                "lines": [
                    {
                        "line_number": 11,
                        "content": "DES_set_key_unchecked(&key, &key_schedule);"
                    }
                ],
                "severity": "Very High",
                "explanation": "3DES with 1 key offers no additional security over DES and is insecure."
            },
            {
                "language": "C",
                "filename": "des.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\des\\des.c",
                "lines": [
                    {
                        "line_number": 11,
                        "content": "DES_set_key_unchecked(&key, &key_schedule);"
                    }
                ],
                "severity": "High",
                "explanation": "3DES with 2 keys provides ~80 bits of security, which is inadequate by modern standards."
            },
            {
                "language": "C",
                "filename": "des.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\des\\des.c",
                "lines": [
                    {
                        "line_number": 11,
                        "content": "DES_set_key_unchecked(&key, &key_schedule);"
                    }
                ],
                "severity": "High",
                "explanation": "3DES with 3 keys provides ~112 bits of security, which is insufficient against quantum attacks."
            },
            {
                "language": "Python",
                "filename": "des.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\des\\des.py",
                "lines": [
                    {
                        "line_number": 1,
                        "content": "from Crypto.Cipher import DES"
                    },
                    {
                        "line_number": 5,
                        "content": "cipher = DES.new(key, DES.MODE_ECB)"
                    }
                ],
                "severity": "Very High",
                "explanation": "DES is insecure due to its 56-bit key size, making it vulnerable to brute-force attacks."
            },
            {
                "language": "Python",
                "filename": "des.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\des\\des.py",
                "lines": [
                    {
                        "line_number": 4,
                        "content": "key = get_random_bytes(8)  # 56 bits key for DES"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe (vulnerable to Grover's algorithm)."
            },
            {
                "language": "Python",
                "filename": "des.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\des\\des.py",
                "lines": [
                    {
                        "line_number": 4,
                        "content": "key = get_random_bytes(8)  # 56 bits key for DES"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 offers slightly better security than AES-128 but is still vulnerable to quantum attacks."
            },
            {
                "language": "Java",
                "filename": "DESExample.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\des\\DESExample.java",
                "lines": [
                    {
                        "line_number": 9,
                        "content": "SecretKey key = new SecretKeySpec(keyBytes, \"DES\");"
                    },
                    {
                        "line_number": 10,
                        "content": "Cipher cipher = Cipher.getInstance(\"DES/ECB/PKCS5Padding\");"
                    }
                ],
                "severity": "Very High",
                "explanation": "DES is insecure due to its 56-bit key size, making it vulnerable to brute-force attacks."
            },
            {
                "language": "Java",
                "filename": "DESExample.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\des\\DESExample.java",
                "lines": [
                    {
                        "line_number": 10,
                        "content": "Cipher cipher = Cipher.getInstance(\"DES/ECB/PKCS5Padding\");"
                    }
                ],
                "severity": "High",
                "explanation": "Insecure mode; leaks patterns in plaintext due to lack of diffusion."
            },
            {
                "language": "Java",
                "filename": "DHKETest.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\dh_ke\\DHKETest.java",
                "lines": [
                    {
                        "line_number": 6,
                        "content": "KeyPairGenerator keyPairGenWeak = KeyPairGenerator.getInstance(\"DH\");"
                    },
                    {
                        "line_number": 12,
                        "content": "KeyPairGenerator keyPairGenQuantum = KeyPairGenerator.getInstance(\"DH\");"
                    }
                ],
                "severity": "High",
                "explanation": "Small modulus sizes (e.g., < 2048 bits) or insecure generator values (e.g., 1, or p\u22121) make the system susceptible to attacks."
            },
            {
                "language": "Java",
                "filename": "DHKETest.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\dh_ke\\DHKETest.java",
                "lines": [
                    {
                        "line_number": 6,
                        "content": "KeyPairGenerator keyPairGenWeak = KeyPairGenerator.getInstance(\"DH\");"
                    },
                    {
                        "line_number": 12,
                        "content": "KeyPairGenerator keyPairGenQuantum = KeyPairGenerator.getInstance(\"DH\");"
                    }
                ],
                "severity": "Very High",
                "explanation": "Diffie-Hellman is completely insecure against quantum computers; a transition to post-quantum cryptographic alternatives is necessary."
            },
            {
                "language": "C",
                "filename": "dh_ke.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\dh_ke\\dh_ke.c",
                "lines": [
                    {
                        "line_number": 7,
                        "content": "DH_generate_parameters_ex(dh, prime_length, DH_GENERATOR_2, NULL);"
                    },
                    {
                        "line_number": 15,
                        "content": "DH_generate_parameters_ex(dh, prime_length, DH_GENERATOR_2, NULL);"
                    }
                ],
                "severity": "Very High",
                "explanation": "Diffie-Hellman is completely insecure against quantum computers; a transition to post-quantum cryptographic alternatives is necessary."
            },
            {
                "language": "Python",
                "filename": "dh_ke.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\dh_ke\\dh_ke.py",
                "lines": [
                    {
                        "line_number": 5,
                        "content": "private_key = parameters.generate_private_key()"
                    },
                    {
                        "line_number": 10,
                        "content": "private_key = parameters.generate_private_key()"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe (vulnerable to Grover's algorithm)."
            },
            {
                "language": "Python",
                "filename": "dh_ke.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\dh_ke\\dh_ke.py",
                "lines": [
                    {
                        "line_number": 5,
                        "content": "private_key = parameters.generate_private_key()"
                    },
                    {
                        "line_number": 10,
                        "content": "private_key = parameters.generate_private_key()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 offers slightly better security than AES-128 but is still vulnerable to quantum attacks."
            },
            {
                "language": "C",
                "filename": "ecb.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\ecb_mode\\ecb.c",
                "lines": [
                    {
                        "line_number": 11,
                        "content": "EVP_EncryptInit_ex(ctx, EVP_aes_128_ecb(), NULL, key, NULL);"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe (vulnerable to Grover's algorithm)."
            },
            {
                "language": "C",
                "filename": "ecb.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\ecb_mode\\ecb.c",
                "lines": [
                    {
                        "line_number": 11,
                        "content": "EVP_EncryptInit_ex(ctx, EVP_aes_128_ecb(), NULL, key, NULL);"
                    },
                    {
                        "line_number": 26,
                        "content": "EVP_EncryptInit_ex(ctx, EVP_des_ecb(), NULL, key, NULL);"
                    }
                ],
                "severity": "High",
                "explanation": "Insecure mode; leaks patterns in plaintext due to lack of diffusion."
            },
            {
                "language": "Python",
                "filename": "ecb.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\ecb_mode\\ecb.py",
                "lines": [
                    {
                        "line_number": 9,
                        "content": "des_ecb = DES.new(b\"8bytekey\", DES.MODE_ECB)"
                    }
                ],
                "severity": "Very High",
                "explanation": "DES is insecure due to its 56-bit key size, making it vulnerable to brute-force attacks."
            },
            {
                "language": "Python",
                "filename": "ecb.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\ecb_mode\\ecb.py",
                "lines": [
                    {
                        "line_number": 4,
                        "content": "aes_ecb = AES.new(b\"Sixteen byte key\", AES.MODE_ECB)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe (vulnerable to Grover's algorithm)."
            },
            {
                "language": "Python",
                "filename": "ecb.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\ecb_mode\\ecb.py",
                "lines": [
                    {
                        "line_number": 4,
                        "content": "aes_ecb = AES.new(b\"Sixteen byte key\", AES.MODE_ECB)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 offers slightly better security than AES-128 but is still vulnerable to quantum attacks."
            },
            {
                "language": "Java",
                "filename": "ECBModeTest.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\ecb_mode\\ECBModeTest.java",
                "lines": [
                    {
                        "line_number": 18,
                        "content": "SecretKey desKey = new SecretKeySpec(\"8bytekey\".getBytes(), \"DES\");"
                    },
                    {
                        "line_number": 19,
                        "content": "Cipher desCipher = Cipher.getInstance(\"DES/ECB/PKCS5Padding\");"
                    }
                ],
                "severity": "Very High",
                "explanation": "DES is insecure due to its 56-bit key size, making it vulnerable to brute-force attacks."
            },
            {
                "language": "Java",
                "filename": "ECBModeTest.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\ecb_mode\\ECBModeTest.java",
                "lines": [
                    {
                        "line_number": 12,
                        "content": "Cipher aesCipher = Cipher.getInstance(\"AES/ECB/PKCS5Padding\");"
                    },
                    {
                        "line_number": 19,
                        "content": "Cipher desCipher = Cipher.getInstance(\"DES/ECB/PKCS5Padding\");"
                    }
                ],
                "severity": "High",
                "explanation": "Insecure mode; leaks patterns in plaintext due to lack of diffusion."
            },
            {
                "language": "C",
                "filename": "ecdh.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\ecdh\\ecdh.c",
                "lines": [
                    {
                        "line_number": 7,
                        "content": "EC_KEY *key1 = EC_KEY_new_by_curve_name(NID_X9_62_prime256v1);"
                    },
                    {
                        "line_number": 8,
                        "content": "EC_KEY *key2 = EC_KEY_new_by_curve_name(NID_X9_62_prime256v1);"
                    }
                ],
                "severity": "Low",
                "explanation": "ECDH is not quantum-safe as quantum computers can break its security using Shor's algorithm."
            },
            {
                "language": "Java",
                "filename": "ecdh.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\ecdh\\ecdh.java",
                "lines": [
                    {
                        "line_number": 15,
                        "content": "KeyAgreement ka = KeyAgreement.getInstance(\"ECDH\");"
                    }
                ],
                "severity": "Low",
                "explanation": "ECDH is not quantum-safe as quantum computers can break its security using Shor's algorithm."
            },
            {
                "language": "Python",
                "filename": "ecdh.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\ecdh\\ecdh.py",
                "lines": [
                    {
                        "line_number": 5,
                        "content": "private_key = ECC.generate(curve=\"P-256\")"
                    },
                    {
                        "line_number": 6,
                        "content": "peer_key = ECC.generate(curve=\"P-256\").public_key()"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe (vulnerable to Grover's algorithm)."
            },
            {
                "language": "Python",
                "filename": "ecdh.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\ecdh\\ecdh.py",
                "lines": [
                    {
                        "line_number": 5,
                        "content": "private_key = ECC.generate(curve=\"P-256\")"
                    },
                    {
                        "line_number": 6,
                        "content": "peer_key = ECC.generate(curve=\"P-256\").public_key()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 offers slightly better security than AES-128 but is still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "ecdh.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\ecdh\\ecdh.py",
                "lines": [
                    {
                        "line_number": 1,
                        "content": "from Crypto.Protocol.KDF import ECDH"
                    },
                    {
                        "line_number": 7,
                        "content": "ecdh = ECDH()"
                    }
                ],
                "severity": "Low",
                "explanation": "ECDH is not quantum-safe as quantum computers can break its security using Shor's algorithm."
            },
            {
                "language": "C",
                "filename": "md5.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\md5\\md5.c",
                "lines": [
                    {
                        "line_number": 9,
                        "content": "MD5_Init(&ctx);                       // Initialize MD5"
                    },
                    {
                        "line_number": 10,
                        "content": "MD5_Update(&ctx, input, strlen(input)); // Update with data"
                    },
                    {
                        "line_number": 11,
                        "content": "MD5_Final(digest, &ctx);              // Finalize hash"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities and is insecure under both classical and quantum attacks."
            },
            {
                "language": "Java",
                "filename": "md5.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\md5\\md5.java",
                "lines": [
                    {
                        "line_number": 8,
                        "content": "MessageDigest md5 = MessageDigest.getInstance(\"MD5\");"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities and is insecure under both classical and quantum attacks."
            },
            {
                "language": "Python",
                "filename": "md5.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\md5\\md5.py",
                "lines": [
                    {
                        "line_number": 4,
                        "content": "md5_hash = hashlib.md5(b\"test\").hexdigest()"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities and is insecure under both classical and quantum attacks."
            },
            {
                "language": "Python",
                "filename": "rc4.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\rc4\\rc4.py",
                "lines": [
                    {
                        "line_number": 2,
                        "content": "key = b\"12345678\"  # Key for RC4"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe (vulnerable to Grover's algorithm)."
            },
            {
                "language": "Python",
                "filename": "rc4.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\rc4\\rc4.py",
                "lines": [
                    {
                        "line_number": 2,
                        "content": "key = b\"12345678\"  # Key for RC4"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 offers slightly better security than AES-128 but is still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "rc4.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\rc4\\rc4.py",
                "lines": [
                    {
                        "line_number": 1,
                        "content": "from Crypto.Cipher import ARC4"
                    },
                    {
                        "line_number": 2,
                        "content": "key = b\"12345678\"  # Key for RC4"
                    },
                    {
                        "line_number": 3,
                        "content": "cipher = ARC4.new(key)"
                    },
                    {
                        "line_number": 6,
                        "content": "print(\"Ciphertext (RC4):\", ciphertext)"
                    }
                ],
                "severity": "Very High",
                "explanation": "RC4 is insecure due to biases in its keystream, vulnerabilities in its key scheduling algorithm, and susceptibility to attacks like plaintext recovery and state inference."
            },
            {
                "language": "Java",
                "filename": "RC4Example.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\rc4\\RC4Example.java",
                "lines": [
                    {
                        "line_number": 11,
                        "content": "Cipher cipher = Cipher.getInstance(\"RC4\");"
                    }
                ],
                "severity": "Very High",
                "explanation": "RC4 is insecure due to biases in its keystream, vulnerabilities in its key scheduling algorithm, and susceptibility to attacks like plaintext recovery and state inference."
            },
            {
                "language": "Java",
                "filename": "RSAExample.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\rsa\\RSAExample.java",
                "lines": [
                    {
                        "line_number": 5,
                        "content": "KeyPairGenerator keyPairGen = KeyPairGenerator.getInstance(\"RSA\");"
                    }
                ],
                "severity": "High",
                "explanation": "RSA with short keys (512, 1024 bits) is easily breakable with classical attacks and completely broken with quantum computing (Shor's algorithm)."
            },
            {
                "language": "Java",
                "filename": "RSAExample.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\rsa\\RSAExample.java",
                "lines": [
                    {
                        "line_number": 5,
                        "content": "KeyPairGenerator keyPairGen = KeyPairGenerator.getInstance(\"RSA\");"
                    }
                ],
                "severity": "Very Low",
                "explanation": "RSA with 2048, 3072+ bits is secure against classical attacks but vulnerable to quantum computing."
            },
            {
                "language": "C",
                "filename": "sha-1.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\sha-1\\sha-1.c",
                "lines": [
                    {
                        "line_number": 9,
                        "content": "SHA1_Init(&ctx);                      // Initialize SHA-1"
                    },
                    {
                        "line_number": 10,
                        "content": "SHA1_Update(&ctx, input, strlen(input)); // Update with data"
                    },
                    {
                        "line_number": 11,
                        "content": "SHA1_Final(digest, &ctx);             // Finalize hash"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collision attacks under classical and quantum contexts."
            },
            {
                "language": "Python",
                "filename": "sha-1.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\sha-1\\sha-1.py",
                "lines": [
                    {
                        "line_number": 4,
                        "content": "sha1_hash = hashlib.sha1(b\"test\").hexdigest()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collision attacks under classical and quantum contexts."
            },
            {
                "language": "Java",
                "filename": "SHA1Test.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\sha-1\\SHA1Test.java",
                "lines": [
                    {
                        "line_number": 8,
                        "content": "MessageDigest sha1 = MessageDigest.getInstance(\"SHA-1\");"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collision attacks under classical and quantum contexts."
            },
            {
                "language": "C",
                "filename": "sha-256.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\sha-256\\sha-256.c",
                "lines": [
                    {
                        "line_number": 9,
                        "content": "SHA256_Init(&ctx);                    // Initialize SHA-256"
                    },
                    {
                        "line_number": 10,
                        "content": "SHA256_Update(&ctx, input, strlen(input)); // Update with data"
                    },
                    {
                        "line_number": 11,
                        "content": "SHA256_Final(digest, &ctx);           // Finalize hash"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure under classical conditions, but Grover\u2019s algorithm reduces its effective security to ~128 bits."
            },
            {
                "language": "Python",
                "filename": "sha-256.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\sha-256\\sha-256.py",
                "lines": [
                    {
                        "line_number": 4,
                        "content": "sha256_hash = hashlib.sha256(b\"test\").hexdigest()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure under classical conditions, but Grover\u2019s algorithm reduces its effective security to ~128 bits."
            },
            {
                "language": "Java",
                "filename": "SHA256Test.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\sha-256\\SHA256Test.java",
                "lines": [
                    {
                        "line_number": 8,
                        "content": "MessageDigest sha256 = MessageDigest.getInstance(\"SHA-256\");"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure under classical conditions, but Grover\u2019s algorithm reduces its effective security to ~128 bits."
            }
        ]
    },
    {
        "scan_id": 12,
        "date": "2024-12-13 15:21:12",
        "directory": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts",
        "files_scanned": {
            "Python": 20,
            "C": 14,
            "Java": 14
        },
        "vulnerable_files": {
            "Python": 39,
            "C": 11,
            "Java": 19
        },
        "vulnerabilities": [
            {
                "language": "Python",
                "filename": "a.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\a.py",
                "lines": [
                    {
                        "line_number": 1,
                        "content": "from Crypto.Cipher import DES"
                    },
                    {
                        "line_number": 10,
                        "content": "cipher = DES.new(key, DES.MODE_ECB)"
                    }
                ],
                "severity": "Very High",
                "explanation": "DES is insecure due to its 56-bit key size, making it vulnerable to brute-force attacks."
            },
            {
                "language": "Python",
                "filename": "a.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\a.py",
                "lines": [
                    {
                        "line_number": 6,
                        "content": "key = b'8bytekey'  # DES requires an 8-byte key"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe (vulnerable to Grover's algorithm)."
            },
            {
                "language": "Python",
                "filename": "a.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\a.py",
                "lines": [
                    {
                        "line_number": 6,
                        "content": "key = b'8bytekey'  # DES requires an 8-byte key"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 offers slightly better security than AES-128 but is still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "b.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\b.py",
                "lines": [
                    {
                        "line_number": 1,
                        "content": "from arc4 import ARC4"
                    },
                    {
                        "line_number": 3,
                        "content": "# Demonstrates RC4's predictable keystream"
                    },
                    {
                        "line_number": 7,
                        "content": "rc4 = ARC4(key)"
                    },
                    {
                        "line_number": 14,
                        "content": "rc4 = ARC4(key)  # Reset RC4 with the same key"
                    },
                    {
                        "line_number": 19,
                        "content": "# Vulnerability: RC4 keystream bias makes it insecure for cryptographic use."
                    }
                ],
                "severity": "Very High",
                "explanation": "RC4 is insecure due to biases in its keystream, vulnerabilities in its key scheduling algorithm, and susceptibility to attacks like plaintext recovery and state inference."
            },
            {
                "language": "Python",
                "filename": "c.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\c.py",
                "lines": [
                    {
                        "line_number": 8,
                        "content": "hash1 = hashlib.md5(data1).hexdigest()"
                    },
                    {
                        "line_number": 9,
                        "content": "hash2 = hashlib.md5(data2).hexdigest()"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities and is insecure under both classical and quantum attacks."
            },
            {
                "language": "Python",
                "filename": "d.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\d.py",
                "lines": [
                    {
                        "line_number": 7,
                        "content": "key = RSA.generate(512)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe (vulnerable to Grover's algorithm)."
            },
            {
                "language": "Python",
                "filename": "e.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\e.py",
                "lines": [
                    {
                        "line_number": 8,
                        "content": "hash1 = hashlib.sha1(data1).hexdigest()"
                    },
                    {
                        "line_number": 9,
                        "content": "hash2 = hashlib.sha1(data2).hexdigest()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collision attacks under classical and quantum contexts."
            },
            {
                "language": "Python",
                "filename": "f.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\f.py",
                "lines": [
                    {
                        "line_number": 6,
                        "content": "key = b\"16bytekey1234567\""
                    },
                    {
                        "line_number": 10,
                        "content": "cipher = AES.new(key, AES.MODE_ECB)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe (vulnerable to Grover's algorithm)."
            },
            {
                "language": "Python",
                "filename": "f.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\f.py",
                "lines": [
                    {
                        "line_number": 10,
                        "content": "cipher = AES.new(key, AES.MODE_ECB)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 offers slightly better security than AES-128 but is still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "3des.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\3des\\3des.py",
                "lines": [
                    {
                        "line_number": 1,
                        "content": "from Crypto.Cipher import DES3"
                    }
                ],
                "severity": "Very High",
                "explanation": "DES is insecure due to its 56-bit key size, making it vulnerable to brute-force attacks."
            },
            {
                "language": "Python",
                "filename": "3des.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\3des\\3des.py",
                "lines": [
                    {
                        "line_number": 4,
                        "content": "key = get_random_bytes(8)  # 56-bit key"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe (vulnerable to Grover's algorithm)."
            },
            {
                "language": "Python",
                "filename": "3des.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\3des\\3des.py",
                "lines": [
                    {
                        "line_number": 4,
                        "content": "key = get_random_bytes(8)  # 56-bit key"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 offers slightly better security than AES-128 but is still vulnerable to quantum attacks."
            },
            {
                "language": "Java",
                "filename": "TripleDESExample.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\3des\\TripleDESExample.java",
                "lines": [
                    {
                        "line_number": 13,
                        "content": "SecretKeySpec desKey = new SecretKeySpec(key1, \"DES\");"
                    },
                    {
                        "line_number": 14,
                        "content": "Cipher cipher1 = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    },
                    {
                        "line_number": 19,
                        "content": "SecretKeySpec desKey2 = new SecretKeySpec(key1, \"DES\");"
                    },
                    {
                        "line_number": 20,
                        "content": "Cipher cipher2 = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    },
                    {
                        "line_number": 25,
                        "content": "SecretKeySpec desKey3 = new SecretKeySpec(key3, \"DES\");"
                    },
                    {
                        "line_number": 26,
                        "content": "Cipher cipher3 = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    }
                ],
                "severity": "Very High",
                "explanation": "DES is insecure due to its 56-bit key size, making it vulnerable to brute-force attacks."
            },
            {
                "language": "Python",
                "filename": "aes128.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\aes128\\aes128.py",
                "lines": [
                    {
                        "line_number": 5,
                        "content": "key = get_random_bytes(16)  # AES-128: 128-bit (16 bytes)"
                    },
                    {
                        "line_number": 6,
                        "content": "cipher = AES.new(key, AES.MODE_ECB)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe (vulnerable to Grover's algorithm)."
            },
            {
                "language": "Python",
                "filename": "aes128.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\aes128\\aes128.py",
                "lines": [
                    {
                        "line_number": 5,
                        "content": "key = get_random_bytes(16)  # AES-128: 128-bit (16 bytes)"
                    },
                    {
                        "line_number": 6,
                        "content": "cipher = AES.new(key, AES.MODE_ECB)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 offers slightly better security than AES-128 but is still vulnerable to quantum attacks."
            },
            {
                "language": "Java",
                "filename": "AES128Example.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\aes128\\AES128Example.java",
                "lines": [
                    {
                        "line_number": 10,
                        "content": "Cipher cipher = Cipher.getInstance(\"AES/ECB/PKCS5Padding\");"
                    }
                ],
                "severity": "High",
                "explanation": "Insecure mode; leaks patterns in plaintext due to lack of diffusion."
            },
            {
                "language": "Python",
                "filename": "aes192.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\aes192\\aes192.py",
                "lines": [
                    {
                        "line_number": 5,
                        "content": "key = get_random_bytes(24)  # AES-192: 192-bit (24 bytes)"
                    },
                    {
                        "line_number": 6,
                        "content": "cipher = AES.new(key, AES.MODE_ECB)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe (vulnerable to Grover's algorithm)."
            },
            {
                "language": "Python",
                "filename": "aes192.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\aes192\\aes192.py",
                "lines": [
                    {
                        "line_number": 5,
                        "content": "key = get_random_bytes(24)  # AES-192: 192-bit (24 bytes)"
                    },
                    {
                        "line_number": 6,
                        "content": "cipher = AES.new(key, AES.MODE_ECB)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 offers slightly better security than AES-128 but is still vulnerable to quantum attacks."
            },
            {
                "language": "Java",
                "filename": "AES192Example.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\aes192\\AES192Example.java",
                "lines": [
                    {
                        "line_number": 10,
                        "content": "Cipher cipher = Cipher.getInstance(\"AES/ECB/PKCS5Padding\");"
                    }
                ],
                "severity": "High",
                "explanation": "Insecure mode; leaks patterns in plaintext due to lack of diffusion."
            },
            {
                "language": "C",
                "filename": "blowfish.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\blowfish\\blowfish.c",
                "lines": [
                    {
                        "line_number": 11,
                        "content": "BF_set_key(&bf_key, 8, key);  // Setting a short key"
                    }
                ],
                "severity": "High",
                "explanation": "Short key sizes are inadequate for modern security standards."
            },
            {
                "language": "Python",
                "filename": "blowfish.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\blowfish\\blowfish.py",
                "lines": [
                    {
                        "line_number": 4,
                        "content": "key = b\"shortkey\"  # 8 bytes (64 bits)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe (vulnerable to Grover's algorithm)."
            },
            {
                "language": "Python",
                "filename": "blowfish.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\blowfish\\blowfish.py",
                "lines": [
                    {
                        "line_number": 4,
                        "content": "key = b\"shortkey\"  # 8 bytes (64 bits)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 offers slightly better security than AES-128 but is still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "blowfish.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\blowfish\\blowfish.py",
                "lines": [
                    {
                        "line_number": 1,
                        "content": "from Crypto.Cipher import Blowfish"
                    }
                ],
                "severity": "High",
                "explanation": "Short key sizes are inadequate for modern security standards."
            },
            {
                "language": "Java",
                "filename": "BlowfishShortKeyTest.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\blowfish\\BlowfishShortKeyTest.java",
                "lines": [
                    {
                        "line_number": 9,
                        "content": "SecretKey blowfishKey = new SecretKeySpec(keyBytes, \"Blowfish\");"
                    },
                    {
                        "line_number": 10,
                        "content": "Cipher cipher = Cipher.getInstance(\"Blowfish/ECB/PKCS5Padding\");"
                    }
                ],
                "severity": "High",
                "explanation": "Short key sizes are inadequate for modern security standards."
            },
            {
                "language": "Java",
                "filename": "CBCStaticIVTest.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\cbc_mode\\CBCStaticIVTest.java",
                "lines": [
                    {
                        "line_number": 22,
                        "content": "SecretKey desKey = new javax.crypto.spec.SecretKeySpec(\"8bytekey\".getBytes(), \"DES\");"
                    },
                    {
                        "line_number": 25,
                        "content": "Cipher desCipher = Cipher.getInstance(\"DES/CBC/PKCS5Padding\");"
                    }
                ],
                "severity": "Very High",
                "explanation": "DES is insecure due to its 56-bit key size, making it vulnerable to brute-force attacks."
            },
            {
                "language": "Java",
                "filename": "CBCStaticIVTest.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\cbc_mode\\CBCStaticIVTest.java",
                "lines": [
                    {
                        "line_number": 16,
                        "content": "Cipher aesCipher = Cipher.getInstance(\"AES/CBC/PKCS5Padding\");"
                    },
                    {
                        "line_number": 25,
                        "content": "Cipher desCipher = Cipher.getInstance(\"DES/CBC/PKCS5Padding\");"
                    }
                ],
                "severity": "High",
                "explanation": "Predictable IVs make ciphertext vulnerable to chosen-plaintext attacks."
            },
            {
                "language": "C",
                "filename": "cbc_static_iv.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\cbc_mode\\cbc_static_iv.c",
                "lines": [
                    {
                        "line_number": 12,
                        "content": "EVP_EncryptInit_ex(ctx, EVP_aes_128_cbc(), NULL, key, iv);  // Static IV used here"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe (vulnerable to Grover's algorithm)."
            },
            {
                "language": "Python",
                "filename": "cbc_static_iv.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\cbc_mode\\cbc_static_iv.py",
                "lines": [
                    {
                        "line_number": 14,
                        "content": "cipher = DES.new(key, DES.MODE_CBC, iv)"
                    }
                ],
                "severity": "Very High",
                "explanation": "DES is insecure due to its 56-bit key size, making it vulnerable to brute-force attacks."
            },
            {
                "language": "Python",
                "filename": "cbc_static_iv.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\cbc_mode\\cbc_static_iv.py",
                "lines": [
                    {
                        "line_number": 5,
                        "content": "key = b\"Sixteen byte key\""
                    },
                    {
                        "line_number": 7,
                        "content": "cipher = AES.new(key, AES.MODE_CBC, iv)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe (vulnerable to Grover's algorithm)."
            },
            {
                "language": "Python",
                "filename": "cbc_static_iv.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\cbc_mode\\cbc_static_iv.py",
                "lines": [
                    {
                        "line_number": 7,
                        "content": "cipher = AES.new(key, AES.MODE_CBC, iv)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 offers slightly better security than AES-128 but is still vulnerable to quantum attacks."
            },
            {
                "language": "C",
                "filename": "des.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\des\\des.c",
                "lines": [
                    {
                        "line_number": 11,
                        "content": "DES_set_key_unchecked(&key, &key_schedule);"
                    }
                ],
                "severity": "Very High",
                "explanation": "3DES with 1 key offers no additional security over DES and is insecure."
            },
            {
                "language": "Python",
                "filename": "des.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\des\\des.py",
                "lines": [
                    {
                        "line_number": 1,
                        "content": "from Crypto.Cipher import DES"
                    },
                    {
                        "line_number": 5,
                        "content": "cipher = DES.new(key, DES.MODE_ECB)"
                    }
                ],
                "severity": "Very High",
                "explanation": "DES is insecure due to its 56-bit key size, making it vulnerable to brute-force attacks."
            },
            {
                "language": "Python",
                "filename": "des.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\des\\des.py",
                "lines": [
                    {
                        "line_number": 4,
                        "content": "key = get_random_bytes(8)  # 56 bits key for DES"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe (vulnerable to Grover's algorithm)."
            },
            {
                "language": "Python",
                "filename": "des.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\des\\des.py",
                "lines": [
                    {
                        "line_number": 4,
                        "content": "key = get_random_bytes(8)  # 56 bits key for DES"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 offers slightly better security than AES-128 but is still vulnerable to quantum attacks."
            },
            {
                "language": "Java",
                "filename": "DESExample.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\des\\DESExample.java",
                "lines": [
                    {
                        "line_number": 9,
                        "content": "SecretKey key = new SecretKeySpec(keyBytes, \"DES\");"
                    },
                    {
                        "line_number": 10,
                        "content": "Cipher cipher = Cipher.getInstance(\"DES/ECB/PKCS5Padding\");"
                    }
                ],
                "severity": "Very High",
                "explanation": "DES is insecure due to its 56-bit key size, making it vulnerable to brute-force attacks."
            },
            {
                "language": "Java",
                "filename": "DESExample.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\des\\DESExample.java",
                "lines": [
                    {
                        "line_number": 10,
                        "content": "Cipher cipher = Cipher.getInstance(\"DES/ECB/PKCS5Padding\");"
                    }
                ],
                "severity": "High",
                "explanation": "Insecure mode; leaks patterns in plaintext due to lack of diffusion."
            },
            {
                "language": "Java",
                "filename": "DHKETest.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\dh_ke\\DHKETest.java",
                "lines": [
                    {
                        "line_number": 6,
                        "content": "KeyPairGenerator keyPairGenWeak = KeyPairGenerator.getInstance(\"DH\");"
                    },
                    {
                        "line_number": 12,
                        "content": "KeyPairGenerator keyPairGenQuantum = KeyPairGenerator.getInstance(\"DH\");"
                    }
                ],
                "severity": "High",
                "explanation": "Small modulus sizes (e.g., < 2048 bits) or insecure generator values make the system susceptible to attacks."
            },
            {
                "language": "Java",
                "filename": "DHKETest.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\dh_ke\\DHKETest.java",
                "lines": [
                    {
                        "line_number": 6,
                        "content": "KeyPairGenerator keyPairGenWeak = KeyPairGenerator.getInstance(\"DH\");"
                    },
                    {
                        "line_number": 12,
                        "content": "KeyPairGenerator keyPairGenQuantum = KeyPairGenerator.getInstance(\"DH\");"
                    }
                ],
                "severity": "Very High",
                "explanation": "Diffie-Hellman is completely insecure against quantum computers; a transition to post-quantum cryptographic alternatives is necessary."
            },
            {
                "language": "C",
                "filename": "dh_ke.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\dh_ke\\dh_ke.c",
                "lines": [
                    {
                        "line_number": 7,
                        "content": "DH_generate_parameters_ex(dh, prime_length, DH_GENERATOR_2, NULL);"
                    },
                    {
                        "line_number": 15,
                        "content": "DH_generate_parameters_ex(dh, prime_length, DH_GENERATOR_2, NULL);"
                    }
                ],
                "severity": "Very High",
                "explanation": "Diffie-Hellman is completely insecure against quantum computers; a transition to post-quantum cryptographic alternatives is necessary."
            },
            {
                "language": "Python",
                "filename": "dh_ke.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\dh_ke\\dh_ke.py",
                "lines": [
                    {
                        "line_number": 5,
                        "content": "private_key = parameters.generate_private_key()"
                    },
                    {
                        "line_number": 10,
                        "content": "private_key = parameters.generate_private_key()"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe (vulnerable to Grover's algorithm)."
            },
            {
                "language": "Python",
                "filename": "dh_ke.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\dh_ke\\dh_ke.py",
                "lines": [
                    {
                        "line_number": 5,
                        "content": "private_key = parameters.generate_private_key()"
                    },
                    {
                        "line_number": 10,
                        "content": "private_key = parameters.generate_private_key()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 offers slightly better security than AES-128 but is still vulnerable to quantum attacks."
            },
            {
                "language": "C",
                "filename": "ecb.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\ecb_mode\\ecb.c",
                "lines": [
                    {
                        "line_number": 26,
                        "content": "EVP_EncryptInit_ex(ctx, EVP_des_ecb(), NULL, key, NULL);"
                    }
                ],
                "severity": "Very High",
                "explanation": "DES is insecure due to its 56-bit key size, making it vulnerable to brute-force attacks."
            },
            {
                "language": "C",
                "filename": "ecb.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\ecb_mode\\ecb.c",
                "lines": [
                    {
                        "line_number": 11,
                        "content": "EVP_EncryptInit_ex(ctx, EVP_aes_128_ecb(), NULL, key, NULL);"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe (vulnerable to Grover's algorithm)."
            },
            {
                "language": "C",
                "filename": "ecb.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\ecb_mode\\ecb.c",
                "lines": [
                    {
                        "line_number": 11,
                        "content": "EVP_EncryptInit_ex(ctx, EVP_aes_128_ecb(), NULL, key, NULL);"
                    },
                    {
                        "line_number": 26,
                        "content": "EVP_EncryptInit_ex(ctx, EVP_des_ecb(), NULL, key, NULL);"
                    }
                ],
                "severity": "High",
                "explanation": "Insecure mode; leaks patterns in plaintext due to lack of diffusion."
            },
            {
                "language": "Python",
                "filename": "ecb.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\ecb_mode\\ecb.py",
                "lines": [
                    {
                        "line_number": 9,
                        "content": "des_ecb = DES.new(b\"8bytekey\", DES.MODE_ECB)"
                    }
                ],
                "severity": "Very High",
                "explanation": "DES is insecure due to its 56-bit key size, making it vulnerable to brute-force attacks."
            },
            {
                "language": "Python",
                "filename": "ecb.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\ecb_mode\\ecb.py",
                "lines": [
                    {
                        "line_number": 4,
                        "content": "aes_ecb = AES.new(b\"Sixteen byte key\", AES.MODE_ECB)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe (vulnerable to Grover's algorithm)."
            },
            {
                "language": "Python",
                "filename": "ecb.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\ecb_mode\\ecb.py",
                "lines": [
                    {
                        "line_number": 4,
                        "content": "aes_ecb = AES.new(b\"Sixteen byte key\", AES.MODE_ECB)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 offers slightly better security than AES-128 but is still vulnerable to quantum attacks."
            },
            {
                "language": "Java",
                "filename": "ECBModeTest.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\ecb_mode\\ECBModeTest.java",
                "lines": [
                    {
                        "line_number": 18,
                        "content": "SecretKey desKey = new SecretKeySpec(\"8bytekey\".getBytes(), \"DES\");"
                    },
                    {
                        "line_number": 19,
                        "content": "Cipher desCipher = Cipher.getInstance(\"DES/ECB/PKCS5Padding\");"
                    }
                ],
                "severity": "Very High",
                "explanation": "DES is insecure due to its 56-bit key size, making it vulnerable to brute-force attacks."
            },
            {
                "language": "Java",
                "filename": "ECBModeTest.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\ecb_mode\\ECBModeTest.java",
                "lines": [
                    {
                        "line_number": 12,
                        "content": "Cipher aesCipher = Cipher.getInstance(\"AES/ECB/PKCS5Padding\");"
                    },
                    {
                        "line_number": 19,
                        "content": "Cipher desCipher = Cipher.getInstance(\"DES/ECB/PKCS5Padding\");"
                    }
                ],
                "severity": "High",
                "explanation": "Insecure mode; leaks patterns in plaintext due to lack of diffusion."
            },
            {
                "language": "C",
                "filename": "ecdh.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\ecdh\\ecdh.c",
                "lines": [
                    {
                        "line_number": 7,
                        "content": "EC_KEY *key1 = EC_KEY_new_by_curve_name(NID_X9_62_prime256v1);"
                    },
                    {
                        "line_number": 8,
                        "content": "EC_KEY *key2 = EC_KEY_new_by_curve_name(NID_X9_62_prime256v1);"
                    }
                ],
                "severity": "Low",
                "explanation": "ECDH is not quantum-safe as quantum computers can break its security using Shor's algorithm."
            },
            {
                "language": "Java",
                "filename": "ecdh.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\ecdh\\ecdh.java",
                "lines": [
                    {
                        "line_number": 15,
                        "content": "KeyAgreement ka = KeyAgreement.getInstance(\"ECDH\");"
                    }
                ],
                "severity": "Low",
                "explanation": "ECDH is not quantum-safe as quantum computers can break its security using Shor's algorithm."
            },
            {
                "language": "Python",
                "filename": "ecdh.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\ecdh\\ecdh.py",
                "lines": [
                    {
                        "line_number": 5,
                        "content": "private_key = ECC.generate(curve=\"P-256\")"
                    },
                    {
                        "line_number": 6,
                        "content": "peer_key = ECC.generate(curve=\"P-256\").public_key()"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe (vulnerable to Grover's algorithm)."
            },
            {
                "language": "Python",
                "filename": "ecdh.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\ecdh\\ecdh.py",
                "lines": [
                    {
                        "line_number": 5,
                        "content": "private_key = ECC.generate(curve=\"P-256\")"
                    },
                    {
                        "line_number": 6,
                        "content": "peer_key = ECC.generate(curve=\"P-256\").public_key()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 offers slightly better security than AES-128 but is still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "ecdh.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\ecdh\\ecdh.py",
                "lines": [
                    {
                        "line_number": 1,
                        "content": "from Crypto.Protocol.KDF import ECDH"
                    },
                    {
                        "line_number": 7,
                        "content": "ecdh = ECDH()"
                    }
                ],
                "severity": "Low",
                "explanation": "ECDH is not quantum-safe as quantum computers can break its security using Shor's algorithm."
            },
            {
                "language": "C",
                "filename": "md5.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\md5\\md5.c",
                "lines": [
                    {
                        "line_number": 9,
                        "content": "MD5_Init(&ctx);                       // Initialize MD5"
                    },
                    {
                        "line_number": 10,
                        "content": "MD5_Update(&ctx, input, strlen(input)); // Update with data"
                    },
                    {
                        "line_number": 11,
                        "content": "MD5_Final(digest, &ctx);              // Finalize hash"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities and is insecure under both classical and quantum attacks."
            },
            {
                "language": "Java",
                "filename": "md5.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\md5\\md5.java",
                "lines": [
                    {
                        "line_number": 8,
                        "content": "MessageDigest md5 = MessageDigest.getInstance(\"MD5\");"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities and is insecure under both classical and quantum attacks."
            },
            {
                "language": "Python",
                "filename": "md5.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\md5\\md5.py",
                "lines": [
                    {
                        "line_number": 4,
                        "content": "md5_hash = hashlib.md5(b\"test\").hexdigest()"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities and is insecure under both classical and quantum attacks."
            },
            {
                "language": "Python",
                "filename": "rc4.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\rc4\\rc4.py",
                "lines": [
                    {
                        "line_number": 2,
                        "content": "key = b\"12345678\"  # Key for RC4"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe (vulnerable to Grover's algorithm)."
            },
            {
                "language": "Python",
                "filename": "rc4.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\rc4\\rc4.py",
                "lines": [
                    {
                        "line_number": 2,
                        "content": "key = b\"12345678\"  # Key for RC4"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 offers slightly better security than AES-128 but is still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "rc4.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\rc4\\rc4.py",
                "lines": [
                    {
                        "line_number": 1,
                        "content": "from Crypto.Cipher import ARC4"
                    },
                    {
                        "line_number": 2,
                        "content": "key = b\"12345678\"  # Key for RC4"
                    },
                    {
                        "line_number": 3,
                        "content": "cipher = ARC4.new(key)"
                    },
                    {
                        "line_number": 6,
                        "content": "print(\"Ciphertext (RC4):\", ciphertext)"
                    }
                ],
                "severity": "Very High",
                "explanation": "RC4 is insecure due to biases in its keystream, vulnerabilities in its key scheduling algorithm, and susceptibility to attacks like plaintext recovery and state inference."
            },
            {
                "language": "Java",
                "filename": "RC4Example.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\rc4\\RC4Example.java",
                "lines": [
                    {
                        "line_number": 11,
                        "content": "Cipher cipher = Cipher.getInstance(\"RC4\");"
                    }
                ],
                "severity": "Very High",
                "explanation": "RC4 is insecure due to biases in its keystream, vulnerabilities in its key scheduling algorithm, and susceptibility to attacks like plaintext recovery and state inference."
            },
            {
                "language": "Java",
                "filename": "RSAExample.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\rsa\\RSAExample.java",
                "lines": [
                    {
                        "line_number": 5,
                        "content": "KeyPairGenerator keyPairGen = KeyPairGenerator.getInstance(\"RSA\");"
                    }
                ],
                "severity": "High",
                "explanation": "RSA with short keys (512, 1024 bits) is easily breakable with classical attacks and completely broken with quantum computing (Shor's algorithm)."
            },
            {
                "language": "Java",
                "filename": "RSAExample.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\rsa\\RSAExample.java",
                "lines": [
                    {
                        "line_number": 5,
                        "content": "KeyPairGenerator keyPairGen = KeyPairGenerator.getInstance(\"RSA\");"
                    }
                ],
                "severity": "Very Low",
                "explanation": "RSA with 2048, 3072+ bits is secure against classical attacks but vulnerable to quantum computing."
            },
            {
                "language": "C",
                "filename": "sha-1.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\sha-1\\sha-1.c",
                "lines": [
                    {
                        "line_number": 9,
                        "content": "SHA1_Init(&ctx);                      // Initialize SHA-1"
                    },
                    {
                        "line_number": 10,
                        "content": "SHA1_Update(&ctx, input, strlen(input)); // Update with data"
                    },
                    {
                        "line_number": 11,
                        "content": "SHA1_Final(digest, &ctx);             // Finalize hash"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collision attacks under classical and quantum contexts."
            },
            {
                "language": "Python",
                "filename": "sha-1.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\sha-1\\sha-1.py",
                "lines": [
                    {
                        "line_number": 4,
                        "content": "sha1_hash = hashlib.sha1(b\"test\").hexdigest()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collision attacks under classical and quantum contexts."
            },
            {
                "language": "Java",
                "filename": "SHA1Test.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\sha-1\\SHA1Test.java",
                "lines": [
                    {
                        "line_number": 8,
                        "content": "MessageDigest sha1 = MessageDigest.getInstance(\"SHA-1\");"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collision attacks under classical and quantum contexts."
            },
            {
                "language": "C",
                "filename": "sha-256.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\sha-256\\sha-256.c",
                "lines": [
                    {
                        "line_number": 9,
                        "content": "SHA256_Init(&ctx);                    // Initialize SHA-256"
                    },
                    {
                        "line_number": 10,
                        "content": "SHA256_Update(&ctx, input, strlen(input)); // Update with data"
                    },
                    {
                        "line_number": 11,
                        "content": "SHA256_Final(digest, &ctx);           // Finalize hash"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure under classical conditions, but Grover\u2019s algorithm reduces its effective security to ~128 bits."
            },
            {
                "language": "Python",
                "filename": "sha-256.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\sha-256\\sha-256.py",
                "lines": [
                    {
                        "line_number": 4,
                        "content": "sha256_hash = hashlib.sha256(b\"test\").hexdigest()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure under classical conditions, but Grover\u2019s algorithm reduces its effective security to ~128 bits."
            },
            {
                "language": "Java",
                "filename": "SHA256Test.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\sha-256\\SHA256Test.java",
                "lines": [
                    {
                        "line_number": 8,
                        "content": "MessageDigest sha256 = MessageDigest.getInstance(\"SHA-256\");"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure under classical conditions, but Grover\u2019s algorithm reduces its effective security to ~128 bits."
            }
        ]
    },
    {
        "scan_id": 13,
        "date": "2024-12-16 16:08:20",
        "directory": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts",
        "files_scanned": {
            "Python": 20,
            "C": 14,
            "Java": 14
        },
        "vulnerable_files": {
            "Python": 31,
            "C": 11,
            "Java": 19
        },
        "vulnerabilities": [
            {
                "language": "Python",
                "filename": "a.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\a.py",
                "lines": [
                    {
                        "line_number": 1,
                        "content": "from Crypto.Cipher import DES"
                    },
                    {
                        "line_number": 10,
                        "content": "cipher = DES.new(key, DES.MODE_ECB)"
                    }
                ],
                "severity": "Very High",
                "explanation": "DES is insecure due to its 56-bit key size, making it vulnerable to brute-force attacks."
            },
            {
                "language": "Python",
                "filename": "a.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\a.py",
                "lines": [
                    {
                        "line_number": 6,
                        "content": "key = b'8bytekey'  # DES requires an 8-byte key"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "c.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\c.py",
                "lines": [
                    {
                        "line_number": 8,
                        "content": "hash1 = hashlib.md5(data1).hexdigest()"
                    },
                    {
                        "line_number": 9,
                        "content": "hash2 = hashlib.md5(data2).hexdigest()"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "d.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\d.py",
                "lines": [
                    {
                        "line_number": 7,
                        "content": "key = RSA.generate(512)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "e.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\e.py",
                "lines": [
                    {
                        "line_number": 8,
                        "content": "hash1 = hashlib.sha1(data1).hexdigest()"
                    },
                    {
                        "line_number": 9,
                        "content": "hash2 = hashlib.sha1(data2).hexdigest()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collisions."
            },
            {
                "language": "Python",
                "filename": "f.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\f.py",
                "lines": [
                    {
                        "line_number": 10,
                        "content": "cipher = AES.new(key, AES.MODE_ECB)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "f.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\f.py",
                "lines": [
                    {
                        "line_number": 10,
                        "content": "cipher = AES.new(key, AES.MODE_ECB)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "3des.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\3des\\3des.py",
                "lines": [
                    {
                        "line_number": 4,
                        "content": "key = get_random_bytes(8)  # 56-bit key"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "3des.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\3des\\3des.py",
                "lines": [
                    {
                        "line_number": 4,
                        "content": "key = get_random_bytes(8)  # 56-bit key"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Java",
                "filename": "TripleDESExample.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\3des\\TripleDESExample.java",
                "lines": [
                    {
                        "line_number": 13,
                        "content": "SecretKeySpec desKey = new SecretKeySpec(key1, \"DES\");"
                    },
                    {
                        "line_number": 14,
                        "content": "Cipher cipher1 = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    },
                    {
                        "line_number": 19,
                        "content": "SecretKeySpec desKey2 = new SecretKeySpec(key1, \"DES\");"
                    },
                    {
                        "line_number": 20,
                        "content": "Cipher cipher2 = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    },
                    {
                        "line_number": 25,
                        "content": "SecretKeySpec desKey3 = new SecretKeySpec(key3, \"DES\");"
                    },
                    {
                        "line_number": 26,
                        "content": "Cipher cipher3 = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    }
                ],
                "severity": "Very High",
                "explanation": "DES is insecure due to its 56-bit key size, making it vulnerable to brute-force attacks."
            },
            {
                "language": "Python",
                "filename": "aes128.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\aes128\\aes128.py",
                "lines": [
                    {
                        "line_number": 5,
                        "content": "key = get_random_bytes(16)  # AES-128: 128-bit (16 bytes)"
                    },
                    {
                        "line_number": 6,
                        "content": "cipher = AES.new(key, AES.MODE_ECB)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "aes128.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\aes128\\aes128.py",
                "lines": [
                    {
                        "line_number": 5,
                        "content": "key = get_random_bytes(16)  # AES-128: 128-bit (16 bytes)"
                    },
                    {
                        "line_number": 6,
                        "content": "cipher = AES.new(key, AES.MODE_ECB)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Java",
                "filename": "AES128Example.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\aes128\\AES128Example.java",
                "lines": [
                    {
                        "line_number": 10,
                        "content": "Cipher cipher = Cipher.getInstance(\"AES/ECB/PKCS5Padding\");"
                    }
                ],
                "severity": "High",
                "explanation": "ECB mode leaks plaintext patterns."
            },
            {
                "language": "Python",
                "filename": "aes192.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\aes192\\aes192.py",
                "lines": [
                    {
                        "line_number": 5,
                        "content": "key = get_random_bytes(24)  # AES-192: 192-bit (24 bytes)"
                    },
                    {
                        "line_number": 6,
                        "content": "cipher = AES.new(key, AES.MODE_ECB)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "aes192.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\aes192\\aes192.py",
                "lines": [
                    {
                        "line_number": 5,
                        "content": "key = get_random_bytes(24)  # AES-192: 192-bit (24 bytes)"
                    },
                    {
                        "line_number": 6,
                        "content": "cipher = AES.new(key, AES.MODE_ECB)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Java",
                "filename": "AES192Example.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\aes192\\AES192Example.java",
                "lines": [
                    {
                        "line_number": 10,
                        "content": "Cipher cipher = Cipher.getInstance(\"AES/ECB/PKCS5Padding\");"
                    }
                ],
                "severity": "High",
                "explanation": "ECB mode leaks plaintext patterns."
            },
            {
                "language": "C",
                "filename": "blowfish.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\blowfish\\blowfish.c",
                "lines": [
                    {
                        "line_number": 11,
                        "content": "BF_set_key(&bf_key, 8, key);  // Setting a short key"
                    }
                ],
                "severity": "High",
                "explanation": "Short key sizes are inadequate for modern security standards."
            },
            {
                "language": "Python",
                "filename": "blowfish.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\blowfish\\blowfish.py",
                "lines": [
                    {
                        "line_number": 4,
                        "content": "key = b\"shortkey\"  # 8 bytes (64 bits)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "blowfish.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\blowfish\\blowfish.py",
                "lines": [
                    {
                        "line_number": 4,
                        "content": "key = b\"shortkey\"  # 8 bytes (64 bits)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "blowfish.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\blowfish\\blowfish.py",
                "lines": [
                    {
                        "line_number": 1,
                        "content": "from Crypto.Cipher import Blowfish"
                    }
                ],
                "severity": "High",
                "explanation": "Short key sizes are inadequate for modern security standards."
            },
            {
                "language": "Java",
                "filename": "BlowfishShortKeyTest.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\blowfish\\BlowfishShortKeyTest.java",
                "lines": [
                    {
                        "line_number": 9,
                        "content": "SecretKey blowfishKey = new SecretKeySpec(keyBytes, \"Blowfish\");"
                    },
                    {
                        "line_number": 10,
                        "content": "Cipher cipher = Cipher.getInstance(\"Blowfish/ECB/PKCS5Padding\");"
                    }
                ],
                "severity": "High",
                "explanation": "Short key sizes are inadequate for modern security standards."
            },
            {
                "language": "Java",
                "filename": "CBCStaticIVTest.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\cbc_mode\\CBCStaticIVTest.java",
                "lines": [
                    {
                        "line_number": 22,
                        "content": "SecretKey desKey = new javax.crypto.spec.SecretKeySpec(\"8bytekey\".getBytes(), \"DES\");"
                    },
                    {
                        "line_number": 25,
                        "content": "Cipher desCipher = Cipher.getInstance(\"DES/CBC/PKCS5Padding\");"
                    }
                ],
                "severity": "Very High",
                "explanation": "DES is insecure due to its 56-bit key size, making it vulnerable to brute-force attacks."
            },
            {
                "language": "Java",
                "filename": "CBCStaticIVTest.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\cbc_mode\\CBCStaticIVTest.java",
                "lines": [
                    {
                        "line_number": 16,
                        "content": "Cipher aesCipher = Cipher.getInstance(\"AES/CBC/PKCS5Padding\");"
                    },
                    {
                        "line_number": 25,
                        "content": "Cipher desCipher = Cipher.getInstance(\"DES/CBC/PKCS5Padding\");"
                    }
                ],
                "severity": "High",
                "explanation": "Static IVs in CBC mode weaken security and allow chosen-plaintext attacks."
            },
            {
                "language": "C",
                "filename": "cbc_static_iv.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\cbc_mode\\cbc_static_iv.c",
                "lines": [
                    {
                        "line_number": 12,
                        "content": "EVP_EncryptInit_ex(ctx, EVP_aes_128_cbc(), NULL, key, iv);  // Static IV used here"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "cbc_static_iv.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\cbc_mode\\cbc_static_iv.py",
                "lines": [
                    {
                        "line_number": 14,
                        "content": "cipher = DES.new(key, DES.MODE_CBC, iv)"
                    }
                ],
                "severity": "Very High",
                "explanation": "DES is insecure due to its 56-bit key size, making it vulnerable to brute-force attacks."
            },
            {
                "language": "Python",
                "filename": "cbc_static_iv.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\cbc_mode\\cbc_static_iv.py",
                "lines": [
                    {
                        "line_number": 5,
                        "content": "key = b\"Sixteen byte key\""
                    },
                    {
                        "line_number": 7,
                        "content": "cipher = AES.new(key, AES.MODE_CBC, iv)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "cbc_static_iv.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\cbc_mode\\cbc_static_iv.py",
                "lines": [
                    {
                        "line_number": 7,
                        "content": "cipher = AES.new(key, AES.MODE_CBC, iv)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "C",
                "filename": "des.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\des\\des.c",
                "lines": [
                    {
                        "line_number": 11,
                        "content": "DES_set_key_unchecked(&key, &key_schedule);"
                    }
                ],
                "severity": "Very High",
                "explanation": "3DES with 1 key offers no additional security over DES and is insecure."
            },
            {
                "language": "Python",
                "filename": "des.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\des\\des.py",
                "lines": [
                    {
                        "line_number": 1,
                        "content": "from Crypto.Cipher import DES"
                    },
                    {
                        "line_number": 5,
                        "content": "cipher = DES.new(key, DES.MODE_ECB)"
                    }
                ],
                "severity": "Very High",
                "explanation": "DES is insecure due to its 56-bit key size, making it vulnerable to brute-force attacks."
            },
            {
                "language": "Python",
                "filename": "des.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\des\\des.py",
                "lines": [
                    {
                        "line_number": 4,
                        "content": "key = get_random_bytes(8)  # 56 bits key for DES"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "des.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\des\\des.py",
                "lines": [
                    {
                        "line_number": 4,
                        "content": "key = get_random_bytes(8)  # 56 bits key for DES"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Java",
                "filename": "DESExample.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\des\\DESExample.java",
                "lines": [
                    {
                        "line_number": 9,
                        "content": "SecretKey key = new SecretKeySpec(keyBytes, \"DES\");"
                    },
                    {
                        "line_number": 10,
                        "content": "Cipher cipher = Cipher.getInstance(\"DES/ECB/PKCS5Padding\");"
                    }
                ],
                "severity": "Very High",
                "explanation": "DES is insecure due to its 56-bit key size, making it vulnerable to brute-force attacks."
            },
            {
                "language": "Java",
                "filename": "DESExample.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\des\\DESExample.java",
                "lines": [
                    {
                        "line_number": 10,
                        "content": "Cipher cipher = Cipher.getInstance(\"DES/ECB/PKCS5Padding\");"
                    }
                ],
                "severity": "High",
                "explanation": "ECB mode leaks plaintext patterns."
            },
            {
                "language": "Java",
                "filename": "DHKETest.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\dh_ke\\DHKETest.java",
                "lines": [
                    {
                        "line_number": 6,
                        "content": "KeyPairGenerator keyPairGenWeak = KeyPairGenerator.getInstance(\"DH\");"
                    },
                    {
                        "line_number": 12,
                        "content": "KeyPairGenerator keyPairGenQuantum = KeyPairGenerator.getInstance(\"DH\");"
                    }
                ],
                "severity": "High",
                "explanation": "Small modulus sizes (<2048 bits) in DH are easily attacked."
            },
            {
                "language": "Java",
                "filename": "DHKETest.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\dh_ke\\DHKETest.java",
                "lines": [
                    {
                        "line_number": 6,
                        "content": "KeyPairGenerator keyPairGenWeak = KeyPairGenerator.getInstance(\"DH\");"
                    },
                    {
                        "line_number": 12,
                        "content": "KeyPairGenerator keyPairGenQuantum = KeyPairGenerator.getInstance(\"DH\");"
                    }
                ],
                "severity": "Very High",
                "explanation": "DH is not secure against quantum computers."
            },
            {
                "language": "C",
                "filename": "dh_ke.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\dh_ke\\dh_ke.c",
                "lines": [
                    {
                        "line_number": 7,
                        "content": "DH_generate_parameters_ex(dh, prime_length, DH_GENERATOR_2, NULL);"
                    },
                    {
                        "line_number": 15,
                        "content": "DH_generate_parameters_ex(dh, prime_length, DH_GENERATOR_2, NULL);"
                    }
                ],
                "severity": "Very High",
                "explanation": "DH is not secure against quantum computers."
            },
            {
                "language": "C",
                "filename": "ecb.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\ecb_mode\\ecb.c",
                "lines": [
                    {
                        "line_number": 26,
                        "content": "EVP_EncryptInit_ex(ctx, EVP_des_ecb(), NULL, key, NULL);"
                    }
                ],
                "severity": "Very High",
                "explanation": "DES is insecure due to its 56-bit key size, making it vulnerable to brute-force attacks."
            },
            {
                "language": "C",
                "filename": "ecb.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\ecb_mode\\ecb.c",
                "lines": [
                    {
                        "line_number": 11,
                        "content": "EVP_EncryptInit_ex(ctx, EVP_aes_128_ecb(), NULL, key, NULL);"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "C",
                "filename": "ecb.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\ecb_mode\\ecb.c",
                "lines": [
                    {
                        "line_number": 11,
                        "content": "EVP_EncryptInit_ex(ctx, EVP_aes_128_ecb(), NULL, key, NULL);"
                    },
                    {
                        "line_number": 26,
                        "content": "EVP_EncryptInit_ex(ctx, EVP_des_ecb(), NULL, key, NULL);"
                    }
                ],
                "severity": "High",
                "explanation": "ECB mode leaks plaintext patterns."
            },
            {
                "language": "Python",
                "filename": "ecb.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\ecb_mode\\ecb.py",
                "lines": [
                    {
                        "line_number": 9,
                        "content": "des_ecb = DES.new(b\"8bytekey\", DES.MODE_ECB)"
                    }
                ],
                "severity": "Very High",
                "explanation": "DES is insecure due to its 56-bit key size, making it vulnerable to brute-force attacks."
            },
            {
                "language": "Python",
                "filename": "ecb.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\ecb_mode\\ecb.py",
                "lines": [
                    {
                        "line_number": 4,
                        "content": "aes_ecb = AES.new(b\"Sixteen byte key\", AES.MODE_ECB)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "ecb.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\ecb_mode\\ecb.py",
                "lines": [
                    {
                        "line_number": 4,
                        "content": "aes_ecb = AES.new(b\"Sixteen byte key\", AES.MODE_ECB)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Java",
                "filename": "ECBModeTest.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\ecb_mode\\ECBModeTest.java",
                "lines": [
                    {
                        "line_number": 18,
                        "content": "SecretKey desKey = new SecretKeySpec(\"8bytekey\".getBytes(), \"DES\");"
                    },
                    {
                        "line_number": 19,
                        "content": "Cipher desCipher = Cipher.getInstance(\"DES/ECB/PKCS5Padding\");"
                    }
                ],
                "severity": "Very High",
                "explanation": "DES is insecure due to its 56-bit key size, making it vulnerable to brute-force attacks."
            },
            {
                "language": "Java",
                "filename": "ECBModeTest.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\ecb_mode\\ECBModeTest.java",
                "lines": [
                    {
                        "line_number": 12,
                        "content": "Cipher aesCipher = Cipher.getInstance(\"AES/ECB/PKCS5Padding\");"
                    },
                    {
                        "line_number": 19,
                        "content": "Cipher desCipher = Cipher.getInstance(\"DES/ECB/PKCS5Padding\");"
                    }
                ],
                "severity": "High",
                "explanation": "ECB mode leaks plaintext patterns."
            },
            {
                "language": "C",
                "filename": "ecdh.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\ecdh\\ecdh.c",
                "lines": [
                    {
                        "line_number": 7,
                        "content": "EC_KEY *key1 = EC_KEY_new_by_curve_name(NID_X9_62_prime256v1);"
                    },
                    {
                        "line_number": 8,
                        "content": "EC_KEY *key2 = EC_KEY_new_by_curve_name(NID_X9_62_prime256v1);"
                    }
                ],
                "severity": "Low",
                "explanation": "ECDH is not quantum-safe; quantum computers can break its security."
            },
            {
                "language": "Java",
                "filename": "ecdh.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\ecdh\\ecdh.java",
                "lines": [
                    {
                        "line_number": 15,
                        "content": "KeyAgreement ka = KeyAgreement.getInstance(\"ECDH\");"
                    }
                ],
                "severity": "Low",
                "explanation": "ECDH is not quantum-safe; quantum computers can break its security."
            },
            {
                "language": "Python",
                "filename": "ecdh.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\ecdh\\ecdh.py",
                "lines": [
                    {
                        "line_number": 1,
                        "content": "from Crypto.Protocol.KDF import ECDH"
                    },
                    {
                        "line_number": 7,
                        "content": "ecdh = ECDH()"
                    }
                ],
                "severity": "Low",
                "explanation": "ECDH is not quantum-safe; quantum computers can break its security."
            },
            {
                "language": "C",
                "filename": "md5.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\md5\\md5.c",
                "lines": [
                    {
                        "line_number": 9,
                        "content": "MD5_Init(&ctx);                       // Initialize MD5"
                    },
                    {
                        "line_number": 10,
                        "content": "MD5_Update(&ctx, input, strlen(input)); // Update with data"
                    },
                    {
                        "line_number": 11,
                        "content": "MD5_Final(digest, &ctx);              // Finalize hash"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Java",
                "filename": "md5.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\md5\\md5.java",
                "lines": [
                    {
                        "line_number": 8,
                        "content": "MessageDigest md5 = MessageDigest.getInstance(\"MD5\");"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "md5.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\md5\\md5.py",
                "lines": [
                    {
                        "line_number": 4,
                        "content": "md5_hash = hashlib.md5(b\"test\").hexdigest()"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "rc4.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\rc4\\rc4.py",
                "lines": [
                    {
                        "line_number": 2,
                        "content": "key = b\"12345678\"  # Key for RC4"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "rc4.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\rc4\\rc4.py",
                "lines": [
                    {
                        "line_number": 2,
                        "content": "key = b\"12345678\"  # Key for RC4"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Java",
                "filename": "RC4Example.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\rc4\\RC4Example.java",
                "lines": [
                    {
                        "line_number": 11,
                        "content": "Cipher cipher = Cipher.getInstance(\"RC4\");"
                    }
                ],
                "severity": "Very High",
                "explanation": "RC4 is insecure due to biases in its keystream and vulnerable to multiple attacks."
            },
            {
                "language": "Java",
                "filename": "RSAExample.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\rsa\\RSAExample.java",
                "lines": [
                    {
                        "line_number": 5,
                        "content": "KeyPairGenerator keyPairGen = KeyPairGenerator.getInstance(\"RSA\");"
                    }
                ],
                "severity": "High",
                "explanation": "RSA with short keys (512, 1024 bits) is easily breakable."
            },
            {
                "language": "Java",
                "filename": "RSAExample.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\rsa\\RSAExample.java",
                "lines": [
                    {
                        "line_number": 5,
                        "content": "KeyPairGenerator keyPairGen = KeyPairGenerator.getInstance(\"RSA\");"
                    }
                ],
                "severity": "Very Low",
                "explanation": "RSA with 2048 or 3072 bits is secure against classical attacks but not quantum-resistant."
            },
            {
                "language": "C",
                "filename": "sha-1.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\sha-1\\sha-1.c",
                "lines": [
                    {
                        "line_number": 9,
                        "content": "SHA1_Init(&ctx);                      // Initialize SHA-1"
                    },
                    {
                        "line_number": 10,
                        "content": "SHA1_Update(&ctx, input, strlen(input)); // Update with data"
                    },
                    {
                        "line_number": 11,
                        "content": "SHA1_Final(digest, &ctx);             // Finalize hash"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collisions."
            },
            {
                "language": "Python",
                "filename": "sha-1.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\sha-1\\sha-1.py",
                "lines": [
                    {
                        "line_number": 4,
                        "content": "sha1_hash = hashlib.sha1(b\"test\").hexdigest()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collisions."
            },
            {
                "language": "Java",
                "filename": "SHA1Test.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\sha-1\\SHA1Test.java",
                "lines": [
                    {
                        "line_number": 8,
                        "content": "MessageDigest sha1 = MessageDigest.getInstance(\"SHA-1\");"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collisions."
            },
            {
                "language": "C",
                "filename": "sha-256.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\sha-256\\sha-256.c",
                "lines": [
                    {
                        "line_number": 9,
                        "content": "SHA256_Init(&ctx);                    // Initialize SHA-256"
                    },
                    {
                        "line_number": 10,
                        "content": "SHA256_Update(&ctx, input, strlen(input)); // Update with data"
                    },
                    {
                        "line_number": 11,
                        "content": "SHA256_Final(digest, &ctx);           // Finalize hash"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Python",
                "filename": "sha-256.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\sha-256\\sha-256.py",
                "lines": [
                    {
                        "line_number": 4,
                        "content": "sha256_hash = hashlib.sha256(b\"test\").hexdigest()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Java",
                "filename": "SHA256Test.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\sha-256\\SHA256Test.java",
                "lines": [
                    {
                        "line_number": 8,
                        "content": "MessageDigest sha256 = MessageDigest.getInstance(\"SHA-256\");"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            }
        ]
    },
    {
        "scan_id": 14,
        "date": "2024-12-16 16:18:19",
        "directory": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts",
        "files_scanned": {
            "Python": 20,
            "C": 14,
            "Java": 14
        },
        "vulnerable_files": {
            "Python": 31,
            "C": 11,
            "Java": 19
        },
        "vulnerabilities": [
            {
                "language": "Python",
                "filename": "a.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\a.py",
                "lines": [
                    {
                        "line_number": 1,
                        "content": "from Crypto.Cipher import DES"
                    },
                    {
                        "line_number": 10,
                        "content": "cipher = DES.new(key, DES.MODE_ECB)"
                    }
                ],
                "severity": "Very High",
                "explanation": "DES is insecure due to its 56-bit key size, making it vulnerable to brute-force attacks."
            },
            {
                "language": "Python",
                "filename": "a.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\a.py",
                "lines": [
                    {
                        "line_number": 6,
                        "content": "key = b'8bytekey'  # DES requires an 8-byte key"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "c.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\c.py",
                "lines": [
                    {
                        "line_number": 8,
                        "content": "hash1 = hashlib.md5(data1).hexdigest()"
                    },
                    {
                        "line_number": 9,
                        "content": "hash2 = hashlib.md5(data2).hexdigest()"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "d.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\d.py",
                "lines": [
                    {
                        "line_number": 7,
                        "content": "key = RSA.generate(512)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "e.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\e.py",
                "lines": [
                    {
                        "line_number": 8,
                        "content": "hash1 = hashlib.sha1(data1).hexdigest()"
                    },
                    {
                        "line_number": 9,
                        "content": "hash2 = hashlib.sha1(data2).hexdigest()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collisions."
            },
            {
                "language": "Python",
                "filename": "f.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\f.py",
                "lines": [
                    {
                        "line_number": 10,
                        "content": "cipher = AES.new(key, AES.MODE_ECB)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "f.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\f.py",
                "lines": [
                    {
                        "line_number": 10,
                        "content": "cipher = AES.new(key, AES.MODE_ECB)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "3des.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\3des\\3des.py",
                "lines": [
                    {
                        "line_number": 4,
                        "content": "key = get_random_bytes(8)  # 56-bit key"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "3des.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\3des\\3des.py",
                "lines": [
                    {
                        "line_number": 4,
                        "content": "key = get_random_bytes(8)  # 56-bit key"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Java",
                "filename": "TripleDESExample.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\3des\\TripleDESExample.java",
                "lines": [
                    {
                        "line_number": 13,
                        "content": "SecretKeySpec desKey = new SecretKeySpec(key1, \"DES\");"
                    },
                    {
                        "line_number": 14,
                        "content": "Cipher cipher1 = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    },
                    {
                        "line_number": 19,
                        "content": "SecretKeySpec desKey2 = new SecretKeySpec(key1, \"DES\");"
                    },
                    {
                        "line_number": 20,
                        "content": "Cipher cipher2 = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    },
                    {
                        "line_number": 25,
                        "content": "SecretKeySpec desKey3 = new SecretKeySpec(key3, \"DES\");"
                    },
                    {
                        "line_number": 26,
                        "content": "Cipher cipher3 = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    }
                ],
                "severity": "Very High",
                "explanation": "DES is insecure due to its 56-bit key size, making it vulnerable to brute-force attacks."
            },
            {
                "language": "Python",
                "filename": "aes128.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\aes128\\aes128.py",
                "lines": [
                    {
                        "line_number": 5,
                        "content": "key = get_random_bytes(16)  # AES-128: 128-bit (16 bytes)"
                    },
                    {
                        "line_number": 6,
                        "content": "cipher = AES.new(key, AES.MODE_ECB)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "aes128.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\aes128\\aes128.py",
                "lines": [
                    {
                        "line_number": 5,
                        "content": "key = get_random_bytes(16)  # AES-128: 128-bit (16 bytes)"
                    },
                    {
                        "line_number": 6,
                        "content": "cipher = AES.new(key, AES.MODE_ECB)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Java",
                "filename": "AES128Example.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\aes128\\AES128Example.java",
                "lines": [
                    {
                        "line_number": 10,
                        "content": "Cipher cipher = Cipher.getInstance(\"AES/ECB/PKCS5Padding\");"
                    }
                ],
                "severity": "High",
                "explanation": "ECB mode leaks plaintext patterns."
            },
            {
                "language": "Python",
                "filename": "aes192.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\aes192\\aes192.py",
                "lines": [
                    {
                        "line_number": 5,
                        "content": "key = get_random_bytes(24)  # AES-192: 192-bit (24 bytes)"
                    },
                    {
                        "line_number": 6,
                        "content": "cipher = AES.new(key, AES.MODE_ECB)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "aes192.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\aes192\\aes192.py",
                "lines": [
                    {
                        "line_number": 5,
                        "content": "key = get_random_bytes(24)  # AES-192: 192-bit (24 bytes)"
                    },
                    {
                        "line_number": 6,
                        "content": "cipher = AES.new(key, AES.MODE_ECB)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Java",
                "filename": "AES192Example.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\aes192\\AES192Example.java",
                "lines": [
                    {
                        "line_number": 10,
                        "content": "Cipher cipher = Cipher.getInstance(\"AES/ECB/PKCS5Padding\");"
                    }
                ],
                "severity": "High",
                "explanation": "ECB mode leaks plaintext patterns."
            },
            {
                "language": "C",
                "filename": "blowfish.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\blowfish\\blowfish.c",
                "lines": [
                    {
                        "line_number": 11,
                        "content": "BF_set_key(&bf_key, 8, key);  // Setting a short key"
                    }
                ],
                "severity": "High",
                "explanation": "Short key sizes are inadequate for modern security standards."
            },
            {
                "language": "Python",
                "filename": "blowfish.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\blowfish\\blowfish.py",
                "lines": [
                    {
                        "line_number": 4,
                        "content": "key = b\"shortkey\"  # 8 bytes (64 bits)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "blowfish.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\blowfish\\blowfish.py",
                "lines": [
                    {
                        "line_number": 4,
                        "content": "key = b\"shortkey\"  # 8 bytes (64 bits)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "blowfish.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\blowfish\\blowfish.py",
                "lines": [
                    {
                        "line_number": 1,
                        "content": "from Crypto.Cipher import Blowfish"
                    }
                ],
                "severity": "High",
                "explanation": "Short key sizes are inadequate for modern security standards."
            },
            {
                "language": "Java",
                "filename": "BlowfishShortKeyTest.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\blowfish\\BlowfishShortKeyTest.java",
                "lines": [
                    {
                        "line_number": 9,
                        "content": "SecretKey blowfishKey = new SecretKeySpec(keyBytes, \"Blowfish\");"
                    },
                    {
                        "line_number": 10,
                        "content": "Cipher cipher = Cipher.getInstance(\"Blowfish/ECB/PKCS5Padding\");"
                    }
                ],
                "severity": "High",
                "explanation": "Short key sizes are inadequate for modern security standards."
            },
            {
                "language": "Java",
                "filename": "CBCStaticIVTest.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\cbc_mode\\CBCStaticIVTest.java",
                "lines": [
                    {
                        "line_number": 22,
                        "content": "SecretKey desKey = new javax.crypto.spec.SecretKeySpec(\"8bytekey\".getBytes(), \"DES\");"
                    },
                    {
                        "line_number": 25,
                        "content": "Cipher desCipher = Cipher.getInstance(\"DES/CBC/PKCS5Padding\");"
                    }
                ],
                "severity": "Very High",
                "explanation": "DES is insecure due to its 56-bit key size, making it vulnerable to brute-force attacks."
            },
            {
                "language": "Java",
                "filename": "CBCStaticIVTest.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\cbc_mode\\CBCStaticIVTest.java",
                "lines": [
                    {
                        "line_number": 16,
                        "content": "Cipher aesCipher = Cipher.getInstance(\"AES/CBC/PKCS5Padding\");"
                    },
                    {
                        "line_number": 25,
                        "content": "Cipher desCipher = Cipher.getInstance(\"DES/CBC/PKCS5Padding\");"
                    }
                ],
                "severity": "High",
                "explanation": "Static IVs in CBC mode weaken security and allow chosen-plaintext attacks."
            },
            {
                "language": "C",
                "filename": "cbc_static_iv.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\cbc_mode\\cbc_static_iv.c",
                "lines": [
                    {
                        "line_number": 12,
                        "content": "EVP_EncryptInit_ex(ctx, EVP_aes_128_cbc(), NULL, key, iv);  // Static IV used here"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "cbc_static_iv.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\cbc_mode\\cbc_static_iv.py",
                "lines": [
                    {
                        "line_number": 14,
                        "content": "cipher = DES.new(key, DES.MODE_CBC, iv)"
                    }
                ],
                "severity": "Very High",
                "explanation": "DES is insecure due to its 56-bit key size, making it vulnerable to brute-force attacks."
            },
            {
                "language": "Python",
                "filename": "cbc_static_iv.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\cbc_mode\\cbc_static_iv.py",
                "lines": [
                    {
                        "line_number": 5,
                        "content": "key = b\"Sixteen byte key\""
                    },
                    {
                        "line_number": 7,
                        "content": "cipher = AES.new(key, AES.MODE_CBC, iv)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "cbc_static_iv.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\cbc_mode\\cbc_static_iv.py",
                "lines": [
                    {
                        "line_number": 7,
                        "content": "cipher = AES.new(key, AES.MODE_CBC, iv)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "C",
                "filename": "des.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\des\\des.c",
                "lines": [
                    {
                        "line_number": 11,
                        "content": "DES_set_key_unchecked(&key, &key_schedule);"
                    }
                ],
                "severity": "Very High",
                "explanation": "3DES with 1 key offers no additional security over DES and is insecure."
            },
            {
                "language": "Python",
                "filename": "des.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\des\\des.py",
                "lines": [
                    {
                        "line_number": 1,
                        "content": "from Crypto.Cipher import DES"
                    },
                    {
                        "line_number": 5,
                        "content": "cipher = DES.new(key, DES.MODE_ECB)"
                    }
                ],
                "severity": "Very High",
                "explanation": "DES is insecure due to its 56-bit key size, making it vulnerable to brute-force attacks."
            },
            {
                "language": "Python",
                "filename": "des.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\des\\des.py",
                "lines": [
                    {
                        "line_number": 4,
                        "content": "key = get_random_bytes(8)  # 56 bits key for DES"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "des.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\des\\des.py",
                "lines": [
                    {
                        "line_number": 4,
                        "content": "key = get_random_bytes(8)  # 56 bits key for DES"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Java",
                "filename": "DESExample.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\des\\DESExample.java",
                "lines": [
                    {
                        "line_number": 9,
                        "content": "SecretKey key = new SecretKeySpec(keyBytes, \"DES\");"
                    },
                    {
                        "line_number": 10,
                        "content": "Cipher cipher = Cipher.getInstance(\"DES/ECB/PKCS5Padding\");"
                    }
                ],
                "severity": "Very High",
                "explanation": "DES is insecure due to its 56-bit key size, making it vulnerable to brute-force attacks."
            },
            {
                "language": "Java",
                "filename": "DESExample.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\des\\DESExample.java",
                "lines": [
                    {
                        "line_number": 10,
                        "content": "Cipher cipher = Cipher.getInstance(\"DES/ECB/PKCS5Padding\");"
                    }
                ],
                "severity": "High",
                "explanation": "ECB mode leaks plaintext patterns."
            },
            {
                "language": "Java",
                "filename": "DHKETest.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\dh_ke\\DHKETest.java",
                "lines": [
                    {
                        "line_number": 6,
                        "content": "KeyPairGenerator keyPairGenWeak = KeyPairGenerator.getInstance(\"DH\");"
                    },
                    {
                        "line_number": 12,
                        "content": "KeyPairGenerator keyPairGenQuantum = KeyPairGenerator.getInstance(\"DH\");"
                    }
                ],
                "severity": "High",
                "explanation": "Small modulus sizes (<2048 bits) in DH are easily attacked."
            },
            {
                "language": "Java",
                "filename": "DHKETest.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\dh_ke\\DHKETest.java",
                "lines": [
                    {
                        "line_number": 6,
                        "content": "KeyPairGenerator keyPairGenWeak = KeyPairGenerator.getInstance(\"DH\");"
                    },
                    {
                        "line_number": 12,
                        "content": "KeyPairGenerator keyPairGenQuantum = KeyPairGenerator.getInstance(\"DH\");"
                    }
                ],
                "severity": "Very High",
                "explanation": "DH is not secure against quantum computers."
            },
            {
                "language": "C",
                "filename": "dh_ke.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\dh_ke\\dh_ke.c",
                "lines": [
                    {
                        "line_number": 7,
                        "content": "DH_generate_parameters_ex(dh, prime_length, DH_GENERATOR_2, NULL);"
                    },
                    {
                        "line_number": 15,
                        "content": "DH_generate_parameters_ex(dh, prime_length, DH_GENERATOR_2, NULL);"
                    }
                ],
                "severity": "Very High",
                "explanation": "DH is not secure against quantum computers."
            },
            {
                "language": "C",
                "filename": "ecb.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\ecb_mode\\ecb.c",
                "lines": [
                    {
                        "line_number": 26,
                        "content": "EVP_EncryptInit_ex(ctx, EVP_des_ecb(), NULL, key, NULL);"
                    }
                ],
                "severity": "Very High",
                "explanation": "DES is insecure due to its 56-bit key size, making it vulnerable to brute-force attacks."
            },
            {
                "language": "C",
                "filename": "ecb.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\ecb_mode\\ecb.c",
                "lines": [
                    {
                        "line_number": 11,
                        "content": "EVP_EncryptInit_ex(ctx, EVP_aes_128_ecb(), NULL, key, NULL);"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "C",
                "filename": "ecb.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\ecb_mode\\ecb.c",
                "lines": [
                    {
                        "line_number": 11,
                        "content": "EVP_EncryptInit_ex(ctx, EVP_aes_128_ecb(), NULL, key, NULL);"
                    },
                    {
                        "line_number": 26,
                        "content": "EVP_EncryptInit_ex(ctx, EVP_des_ecb(), NULL, key, NULL);"
                    }
                ],
                "severity": "High",
                "explanation": "ECB mode leaks plaintext patterns."
            },
            {
                "language": "Python",
                "filename": "ecb.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\ecb_mode\\ecb.py",
                "lines": [
                    {
                        "line_number": 9,
                        "content": "des_ecb = DES.new(b\"8bytekey\", DES.MODE_ECB)"
                    }
                ],
                "severity": "Very High",
                "explanation": "DES is insecure due to its 56-bit key size, making it vulnerable to brute-force attacks."
            },
            {
                "language": "Python",
                "filename": "ecb.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\ecb_mode\\ecb.py",
                "lines": [
                    {
                        "line_number": 4,
                        "content": "aes_ecb = AES.new(b\"Sixteen byte key\", AES.MODE_ECB)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "ecb.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\ecb_mode\\ecb.py",
                "lines": [
                    {
                        "line_number": 4,
                        "content": "aes_ecb = AES.new(b\"Sixteen byte key\", AES.MODE_ECB)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Java",
                "filename": "ECBModeTest.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\ecb_mode\\ECBModeTest.java",
                "lines": [
                    {
                        "line_number": 18,
                        "content": "SecretKey desKey = new SecretKeySpec(\"8bytekey\".getBytes(), \"DES\");"
                    },
                    {
                        "line_number": 19,
                        "content": "Cipher desCipher = Cipher.getInstance(\"DES/ECB/PKCS5Padding\");"
                    }
                ],
                "severity": "Very High",
                "explanation": "DES is insecure due to its 56-bit key size, making it vulnerable to brute-force attacks."
            },
            {
                "language": "Java",
                "filename": "ECBModeTest.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\ecb_mode\\ECBModeTest.java",
                "lines": [
                    {
                        "line_number": 12,
                        "content": "Cipher aesCipher = Cipher.getInstance(\"AES/ECB/PKCS5Padding\");"
                    },
                    {
                        "line_number": 19,
                        "content": "Cipher desCipher = Cipher.getInstance(\"DES/ECB/PKCS5Padding\");"
                    }
                ],
                "severity": "High",
                "explanation": "ECB mode leaks plaintext patterns."
            },
            {
                "language": "C",
                "filename": "ecdh.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\ecdh\\ecdh.c",
                "lines": [
                    {
                        "line_number": 7,
                        "content": "EC_KEY *key1 = EC_KEY_new_by_curve_name(NID_X9_62_prime256v1);"
                    },
                    {
                        "line_number": 8,
                        "content": "EC_KEY *key2 = EC_KEY_new_by_curve_name(NID_X9_62_prime256v1);"
                    }
                ],
                "severity": "Low",
                "explanation": "ECDH is not quantum-safe; quantum computers can break its security."
            },
            {
                "language": "Java",
                "filename": "ecdh.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\ecdh\\ecdh.java",
                "lines": [
                    {
                        "line_number": 15,
                        "content": "KeyAgreement ka = KeyAgreement.getInstance(\"ECDH\");"
                    }
                ],
                "severity": "Low",
                "explanation": "ECDH is not quantum-safe; quantum computers can break its security."
            },
            {
                "language": "Python",
                "filename": "ecdh.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\ecdh\\ecdh.py",
                "lines": [
                    {
                        "line_number": 1,
                        "content": "from Crypto.Protocol.KDF import ECDH"
                    },
                    {
                        "line_number": 7,
                        "content": "ecdh = ECDH()"
                    }
                ],
                "severity": "Low",
                "explanation": "ECDH is not quantum-safe; quantum computers can break its security."
            },
            {
                "language": "C",
                "filename": "md5.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\md5\\md5.c",
                "lines": [
                    {
                        "line_number": 9,
                        "content": "MD5_Init(&ctx);                       // Initialize MD5"
                    },
                    {
                        "line_number": 10,
                        "content": "MD5_Update(&ctx, input, strlen(input)); // Update with data"
                    },
                    {
                        "line_number": 11,
                        "content": "MD5_Final(digest, &ctx);              // Finalize hash"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Java",
                "filename": "md5.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\md5\\md5.java",
                "lines": [
                    {
                        "line_number": 8,
                        "content": "MessageDigest md5 = MessageDigest.getInstance(\"MD5\");"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "md5.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\md5\\md5.py",
                "lines": [
                    {
                        "line_number": 4,
                        "content": "md5_hash = hashlib.md5(b\"test\").hexdigest()"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "rc4.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\rc4\\rc4.py",
                "lines": [
                    {
                        "line_number": 2,
                        "content": "key = b\"12345678\"  # Key for RC4"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "rc4.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\rc4\\rc4.py",
                "lines": [
                    {
                        "line_number": 2,
                        "content": "key = b\"12345678\"  # Key for RC4"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Java",
                "filename": "RC4Example.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\rc4\\RC4Example.java",
                "lines": [
                    {
                        "line_number": 11,
                        "content": "Cipher cipher = Cipher.getInstance(\"RC4\");"
                    }
                ],
                "severity": "Very High",
                "explanation": "RC4 is insecure due to biases in its keystream and vulnerable to multiple attacks."
            },
            {
                "language": "Java",
                "filename": "RSAExample.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\rsa\\RSAExample.java",
                "lines": [
                    {
                        "line_number": 5,
                        "content": "KeyPairGenerator keyPairGen = KeyPairGenerator.getInstance(\"RSA\");"
                    }
                ],
                "severity": "High",
                "explanation": "RSA with short keys (512, 1024 bits) is easily breakable."
            },
            {
                "language": "Java",
                "filename": "RSAExample.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\rsa\\RSAExample.java",
                "lines": [
                    {
                        "line_number": 5,
                        "content": "KeyPairGenerator keyPairGen = KeyPairGenerator.getInstance(\"RSA\");"
                    }
                ],
                "severity": "Very Low",
                "explanation": "RSA with 2048 or 3072 bits is secure against classical attacks but not quantum-resistant."
            },
            {
                "language": "C",
                "filename": "sha-1.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\sha-1\\sha-1.c",
                "lines": [
                    {
                        "line_number": 9,
                        "content": "SHA1_Init(&ctx);                      // Initialize SHA-1"
                    },
                    {
                        "line_number": 10,
                        "content": "SHA1_Update(&ctx, input, strlen(input)); // Update with data"
                    },
                    {
                        "line_number": 11,
                        "content": "SHA1_Final(digest, &ctx);             // Finalize hash"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collisions."
            },
            {
                "language": "Python",
                "filename": "sha-1.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\sha-1\\sha-1.py",
                "lines": [
                    {
                        "line_number": 4,
                        "content": "sha1_hash = hashlib.sha1(b\"test\").hexdigest()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collisions."
            },
            {
                "language": "Java",
                "filename": "SHA1Test.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\sha-1\\SHA1Test.java",
                "lines": [
                    {
                        "line_number": 8,
                        "content": "MessageDigest sha1 = MessageDigest.getInstance(\"SHA-1\");"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collisions."
            },
            {
                "language": "C",
                "filename": "sha-256.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\sha-256\\sha-256.c",
                "lines": [
                    {
                        "line_number": 9,
                        "content": "SHA256_Init(&ctx);                    // Initialize SHA-256"
                    },
                    {
                        "line_number": 10,
                        "content": "SHA256_Update(&ctx, input, strlen(input)); // Update with data"
                    },
                    {
                        "line_number": 11,
                        "content": "SHA256_Final(digest, &ctx);           // Finalize hash"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Python",
                "filename": "sha-256.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\sha-256\\sha-256.py",
                "lines": [
                    {
                        "line_number": 4,
                        "content": "sha256_hash = hashlib.sha256(b\"test\").hexdigest()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Java",
                "filename": "SHA256Test.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\sha-256\\SHA256Test.java",
                "lines": [
                    {
                        "line_number": 8,
                        "content": "MessageDigest sha256 = MessageDigest.getInstance(\"SHA-256\");"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            }
        ]
    },
    {
        "scan_id": 15,
        "date": "2024-12-16 16:19:41",
        "directory": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts",
        "files_scanned": {
            "Python": 20,
            "C": 14,
            "Java": 14
        },
        "vulnerable_files": {
            "Python": 31,
            "C": 11,
            "Java": 19
        },
        "vulnerabilities": [
            {
                "language": "Python",
                "filename": "a.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\a.py",
                "vulnerability": "DES",
                "lines": [
                    {
                        "line_number": 1,
                        "content": "from Crypto.Cipher import DES"
                    },
                    {
                        "line_number": 10,
                        "content": "cipher = DES.new(key, DES.MODE_ECB)"
                    }
                ],
                "severity": "Very High",
                "explanation": "DES is insecure due to its 56-bit key size, making it vulnerable to brute-force attacks."
            },
            {
                "language": "Python",
                "filename": "a.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\a.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 6,
                        "content": "key = b'8bytekey'  # DES requires an 8-byte key"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "c.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\c.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 8,
                        "content": "hash1 = hashlib.md5(data1).hexdigest()"
                    },
                    {
                        "line_number": 9,
                        "content": "hash2 = hashlib.md5(data2).hexdigest()"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "d.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\d.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 7,
                        "content": "key = RSA.generate(512)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "e.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\e.py",
                "vulnerability": "SHA-1",
                "lines": [
                    {
                        "line_number": 8,
                        "content": "hash1 = hashlib.sha1(data1).hexdigest()"
                    },
                    {
                        "line_number": 9,
                        "content": "hash2 = hashlib.sha1(data2).hexdigest()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collisions."
            },
            {
                "language": "Python",
                "filename": "f.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\f.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 10,
                        "content": "cipher = AES.new(key, AES.MODE_ECB)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "f.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\f.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 10,
                        "content": "cipher = AES.new(key, AES.MODE_ECB)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "3des.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\3des\\3des.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 4,
                        "content": "key = get_random_bytes(8)  # 56-bit key"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "3des.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\3des\\3des.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 4,
                        "content": "key = get_random_bytes(8)  # 56-bit key"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Java",
                "filename": "TripleDESExample.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\3des\\TripleDESExample.java",
                "vulnerability": "DES",
                "lines": [
                    {
                        "line_number": 13,
                        "content": "SecretKeySpec desKey = new SecretKeySpec(key1, \"DES\");"
                    },
                    {
                        "line_number": 14,
                        "content": "Cipher cipher1 = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    },
                    {
                        "line_number": 19,
                        "content": "SecretKeySpec desKey2 = new SecretKeySpec(key1, \"DES\");"
                    },
                    {
                        "line_number": 20,
                        "content": "Cipher cipher2 = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    },
                    {
                        "line_number": 25,
                        "content": "SecretKeySpec desKey3 = new SecretKeySpec(key3, \"DES\");"
                    },
                    {
                        "line_number": 26,
                        "content": "Cipher cipher3 = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    }
                ],
                "severity": "Very High",
                "explanation": "DES is insecure due to its 56-bit key size, making it vulnerable to brute-force attacks."
            },
            {
                "language": "Python",
                "filename": "aes128.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\aes128\\aes128.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 5,
                        "content": "key = get_random_bytes(16)  # AES-128: 128-bit (16 bytes)"
                    },
                    {
                        "line_number": 6,
                        "content": "cipher = AES.new(key, AES.MODE_ECB)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "aes128.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\aes128\\aes128.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 5,
                        "content": "key = get_random_bytes(16)  # AES-128: 128-bit (16 bytes)"
                    },
                    {
                        "line_number": 6,
                        "content": "cipher = AES.new(key, AES.MODE_ECB)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Java",
                "filename": "AES128Example.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\aes128\\AES128Example.java",
                "vulnerability": "ECB_Mode",
                "lines": [
                    {
                        "line_number": 10,
                        "content": "Cipher cipher = Cipher.getInstance(\"AES/ECB/PKCS5Padding\");"
                    }
                ],
                "severity": "High",
                "explanation": "ECB mode leaks plaintext patterns."
            },
            {
                "language": "Python",
                "filename": "aes192.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\aes192\\aes192.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 5,
                        "content": "key = get_random_bytes(24)  # AES-192: 192-bit (24 bytes)"
                    },
                    {
                        "line_number": 6,
                        "content": "cipher = AES.new(key, AES.MODE_ECB)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "aes192.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\aes192\\aes192.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 5,
                        "content": "key = get_random_bytes(24)  # AES-192: 192-bit (24 bytes)"
                    },
                    {
                        "line_number": 6,
                        "content": "cipher = AES.new(key, AES.MODE_ECB)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Java",
                "filename": "AES192Example.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\aes192\\AES192Example.java",
                "vulnerability": "ECB_Mode",
                "lines": [
                    {
                        "line_number": 10,
                        "content": "Cipher cipher = Cipher.getInstance(\"AES/ECB/PKCS5Padding\");"
                    }
                ],
                "severity": "High",
                "explanation": "ECB mode leaks plaintext patterns."
            },
            {
                "language": "C",
                "filename": "blowfish.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\blowfish\\blowfish.c",
                "vulnerability": "Blowfish_Short_Key",
                "lines": [
                    {
                        "line_number": 11,
                        "content": "BF_set_key(&bf_key, 8, key);  // Setting a short key"
                    }
                ],
                "severity": "High",
                "explanation": "Short key sizes are inadequate for modern security standards."
            },
            {
                "language": "Python",
                "filename": "blowfish.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\blowfish\\blowfish.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 4,
                        "content": "key = b\"shortkey\"  # 8 bytes (64 bits)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "blowfish.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\blowfish\\blowfish.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 4,
                        "content": "key = b\"shortkey\"  # 8 bytes (64 bits)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "blowfish.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\blowfish\\blowfish.py",
                "vulnerability": "Blowfish_Short_Key",
                "lines": [
                    {
                        "line_number": 1,
                        "content": "from Crypto.Cipher import Blowfish"
                    }
                ],
                "severity": "High",
                "explanation": "Short key sizes are inadequate for modern security standards."
            },
            {
                "language": "Java",
                "filename": "BlowfishShortKeyTest.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\blowfish\\BlowfishShortKeyTest.java",
                "vulnerability": "Blowfish_Short_Key",
                "lines": [
                    {
                        "line_number": 9,
                        "content": "SecretKey blowfishKey = new SecretKeySpec(keyBytes, \"Blowfish\");"
                    },
                    {
                        "line_number": 10,
                        "content": "Cipher cipher = Cipher.getInstance(\"Blowfish/ECB/PKCS5Padding\");"
                    }
                ],
                "severity": "High",
                "explanation": "Short key sizes are inadequate for modern security standards."
            },
            {
                "language": "Java",
                "filename": "CBCStaticIVTest.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\cbc_mode\\CBCStaticIVTest.java",
                "vulnerability": "DES",
                "lines": [
                    {
                        "line_number": 22,
                        "content": "SecretKey desKey = new javax.crypto.spec.SecretKeySpec(\"8bytekey\".getBytes(), \"DES\");"
                    },
                    {
                        "line_number": 25,
                        "content": "Cipher desCipher = Cipher.getInstance(\"DES/CBC/PKCS5Padding\");"
                    }
                ],
                "severity": "Very High",
                "explanation": "DES is insecure due to its 56-bit key size, making it vulnerable to brute-force attacks."
            },
            {
                "language": "Java",
                "filename": "CBCStaticIVTest.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\cbc_mode\\CBCStaticIVTest.java",
                "vulnerability": "CBC_Static_IV",
                "lines": [
                    {
                        "line_number": 16,
                        "content": "Cipher aesCipher = Cipher.getInstance(\"AES/CBC/PKCS5Padding\");"
                    },
                    {
                        "line_number": 25,
                        "content": "Cipher desCipher = Cipher.getInstance(\"DES/CBC/PKCS5Padding\");"
                    }
                ],
                "severity": "High",
                "explanation": "Static IVs in CBC mode weaken security and allow chosen-plaintext attacks."
            },
            {
                "language": "C",
                "filename": "cbc_static_iv.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\cbc_mode\\cbc_static_iv.c",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 12,
                        "content": "EVP_EncryptInit_ex(ctx, EVP_aes_128_cbc(), NULL, key, iv);  // Static IV used here"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "cbc_static_iv.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\cbc_mode\\cbc_static_iv.py",
                "vulnerability": "DES",
                "lines": [
                    {
                        "line_number": 14,
                        "content": "cipher = DES.new(key, DES.MODE_CBC, iv)"
                    }
                ],
                "severity": "Very High",
                "explanation": "DES is insecure due to its 56-bit key size, making it vulnerable to brute-force attacks."
            },
            {
                "language": "Python",
                "filename": "cbc_static_iv.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\cbc_mode\\cbc_static_iv.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 5,
                        "content": "key = b\"Sixteen byte key\""
                    },
                    {
                        "line_number": 7,
                        "content": "cipher = AES.new(key, AES.MODE_CBC, iv)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "cbc_static_iv.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\cbc_mode\\cbc_static_iv.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 7,
                        "content": "cipher = AES.new(key, AES.MODE_CBC, iv)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "C",
                "filename": "des.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\des\\des.c",
                "vulnerability": "3DES_1KEY",
                "lines": [
                    {
                        "line_number": 11,
                        "content": "DES_set_key_unchecked(&key, &key_schedule);"
                    }
                ],
                "severity": "Very High",
                "explanation": "3DES with 1 key offers no additional security over DES and is insecure."
            },
            {
                "language": "Python",
                "filename": "des.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\des\\des.py",
                "vulnerability": "DES",
                "lines": [
                    {
                        "line_number": 1,
                        "content": "from Crypto.Cipher import DES"
                    },
                    {
                        "line_number": 5,
                        "content": "cipher = DES.new(key, DES.MODE_ECB)"
                    }
                ],
                "severity": "Very High",
                "explanation": "DES is insecure due to its 56-bit key size, making it vulnerable to brute-force attacks."
            },
            {
                "language": "Python",
                "filename": "des.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\des\\des.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 4,
                        "content": "key = get_random_bytes(8)  # 56 bits key for DES"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "des.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\des\\des.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 4,
                        "content": "key = get_random_bytes(8)  # 56 bits key for DES"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Java",
                "filename": "DESExample.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\des\\DESExample.java",
                "vulnerability": "DES",
                "lines": [
                    {
                        "line_number": 9,
                        "content": "SecretKey key = new SecretKeySpec(keyBytes, \"DES\");"
                    },
                    {
                        "line_number": 10,
                        "content": "Cipher cipher = Cipher.getInstance(\"DES/ECB/PKCS5Padding\");"
                    }
                ],
                "severity": "Very High",
                "explanation": "DES is insecure due to its 56-bit key size, making it vulnerable to brute-force attacks."
            },
            {
                "language": "Java",
                "filename": "DESExample.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\des\\DESExample.java",
                "vulnerability": "ECB_Mode",
                "lines": [
                    {
                        "line_number": 10,
                        "content": "Cipher cipher = Cipher.getInstance(\"DES/ECB/PKCS5Padding\");"
                    }
                ],
                "severity": "High",
                "explanation": "ECB mode leaks plaintext patterns."
            },
            {
                "language": "Java",
                "filename": "DHKETest.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\dh_ke\\DHKETest.java",
                "vulnerability": "DH_KE_Weak_Parameters",
                "lines": [
                    {
                        "line_number": 6,
                        "content": "KeyPairGenerator keyPairGenWeak = KeyPairGenerator.getInstance(\"DH\");"
                    },
                    {
                        "line_number": 12,
                        "content": "KeyPairGenerator keyPairGenQuantum = KeyPairGenerator.getInstance(\"DH\");"
                    }
                ],
                "severity": "High",
                "explanation": "Small modulus sizes (<2048 bits) in DH are easily attacked."
            },
            {
                "language": "Java",
                "filename": "DHKETest.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\dh_ke\\DHKETest.java",
                "vulnerability": "DH_KE_Quantum_Threat",
                "lines": [
                    {
                        "line_number": 6,
                        "content": "KeyPairGenerator keyPairGenWeak = KeyPairGenerator.getInstance(\"DH\");"
                    },
                    {
                        "line_number": 12,
                        "content": "KeyPairGenerator keyPairGenQuantum = KeyPairGenerator.getInstance(\"DH\");"
                    }
                ],
                "severity": "Very High",
                "explanation": "DH is not secure against quantum computers."
            },
            {
                "language": "C",
                "filename": "dh_ke.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\dh_ke\\dh_ke.c",
                "vulnerability": "DH_KE_Quantum_Threat",
                "lines": [
                    {
                        "line_number": 7,
                        "content": "DH_generate_parameters_ex(dh, prime_length, DH_GENERATOR_2, NULL);"
                    },
                    {
                        "line_number": 15,
                        "content": "DH_generate_parameters_ex(dh, prime_length, DH_GENERATOR_2, NULL);"
                    }
                ],
                "severity": "Very High",
                "explanation": "DH is not secure against quantum computers."
            },
            {
                "language": "C",
                "filename": "ecb.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\ecb_mode\\ecb.c",
                "vulnerability": "DES",
                "lines": [
                    {
                        "line_number": 26,
                        "content": "EVP_EncryptInit_ex(ctx, EVP_des_ecb(), NULL, key, NULL);"
                    }
                ],
                "severity": "Very High",
                "explanation": "DES is insecure due to its 56-bit key size, making it vulnerable to brute-force attacks."
            },
            {
                "language": "C",
                "filename": "ecb.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\ecb_mode\\ecb.c",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 11,
                        "content": "EVP_EncryptInit_ex(ctx, EVP_aes_128_ecb(), NULL, key, NULL);"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "C",
                "filename": "ecb.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\ecb_mode\\ecb.c",
                "vulnerability": "ECB_Mode",
                "lines": [
                    {
                        "line_number": 11,
                        "content": "EVP_EncryptInit_ex(ctx, EVP_aes_128_ecb(), NULL, key, NULL);"
                    },
                    {
                        "line_number": 26,
                        "content": "EVP_EncryptInit_ex(ctx, EVP_des_ecb(), NULL, key, NULL);"
                    }
                ],
                "severity": "High",
                "explanation": "ECB mode leaks plaintext patterns."
            },
            {
                "language": "Python",
                "filename": "ecb.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\ecb_mode\\ecb.py",
                "vulnerability": "DES",
                "lines": [
                    {
                        "line_number": 9,
                        "content": "des_ecb = DES.new(b\"8bytekey\", DES.MODE_ECB)"
                    }
                ],
                "severity": "Very High",
                "explanation": "DES is insecure due to its 56-bit key size, making it vulnerable to brute-force attacks."
            },
            {
                "language": "Python",
                "filename": "ecb.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\ecb_mode\\ecb.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 4,
                        "content": "aes_ecb = AES.new(b\"Sixteen byte key\", AES.MODE_ECB)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "ecb.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\ecb_mode\\ecb.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 4,
                        "content": "aes_ecb = AES.new(b\"Sixteen byte key\", AES.MODE_ECB)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Java",
                "filename": "ECBModeTest.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\ecb_mode\\ECBModeTest.java",
                "vulnerability": "DES",
                "lines": [
                    {
                        "line_number": 18,
                        "content": "SecretKey desKey = new SecretKeySpec(\"8bytekey\".getBytes(), \"DES\");"
                    },
                    {
                        "line_number": 19,
                        "content": "Cipher desCipher = Cipher.getInstance(\"DES/ECB/PKCS5Padding\");"
                    }
                ],
                "severity": "Very High",
                "explanation": "DES is insecure due to its 56-bit key size, making it vulnerable to brute-force attacks."
            },
            {
                "language": "Java",
                "filename": "ECBModeTest.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\ecb_mode\\ECBModeTest.java",
                "vulnerability": "ECB_Mode",
                "lines": [
                    {
                        "line_number": 12,
                        "content": "Cipher aesCipher = Cipher.getInstance(\"AES/ECB/PKCS5Padding\");"
                    },
                    {
                        "line_number": 19,
                        "content": "Cipher desCipher = Cipher.getInstance(\"DES/ECB/PKCS5Padding\");"
                    }
                ],
                "severity": "High",
                "explanation": "ECB mode leaks plaintext patterns."
            },
            {
                "language": "C",
                "filename": "ecdh.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\ecdh\\ecdh.c",
                "vulnerability": "ECDH",
                "lines": [
                    {
                        "line_number": 7,
                        "content": "EC_KEY *key1 = EC_KEY_new_by_curve_name(NID_X9_62_prime256v1);"
                    },
                    {
                        "line_number": 8,
                        "content": "EC_KEY *key2 = EC_KEY_new_by_curve_name(NID_X9_62_prime256v1);"
                    }
                ],
                "severity": "Low",
                "explanation": "ECDH is not quantum-safe; quantum computers can break its security."
            },
            {
                "language": "Java",
                "filename": "ecdh.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\ecdh\\ecdh.java",
                "vulnerability": "ECDH",
                "lines": [
                    {
                        "line_number": 15,
                        "content": "KeyAgreement ka = KeyAgreement.getInstance(\"ECDH\");"
                    }
                ],
                "severity": "Low",
                "explanation": "ECDH is not quantum-safe; quantum computers can break its security."
            },
            {
                "language": "Python",
                "filename": "ecdh.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\ecdh\\ecdh.py",
                "vulnerability": "ECDH",
                "lines": [
                    {
                        "line_number": 1,
                        "content": "from Crypto.Protocol.KDF import ECDH"
                    },
                    {
                        "line_number": 7,
                        "content": "ecdh = ECDH()"
                    }
                ],
                "severity": "Low",
                "explanation": "ECDH is not quantum-safe; quantum computers can break its security."
            },
            {
                "language": "C",
                "filename": "md5.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\md5\\md5.c",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 9,
                        "content": "MD5_Init(&ctx);                       // Initialize MD5"
                    },
                    {
                        "line_number": 10,
                        "content": "MD5_Update(&ctx, input, strlen(input)); // Update with data"
                    },
                    {
                        "line_number": 11,
                        "content": "MD5_Final(digest, &ctx);              // Finalize hash"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Java",
                "filename": "md5.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\md5\\md5.java",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 8,
                        "content": "MessageDigest md5 = MessageDigest.getInstance(\"MD5\");"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "md5.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\md5\\md5.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 4,
                        "content": "md5_hash = hashlib.md5(b\"test\").hexdigest()"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "rc4.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\rc4\\rc4.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 2,
                        "content": "key = b\"12345678\"  # Key for RC4"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "rc4.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\rc4\\rc4.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 2,
                        "content": "key = b\"12345678\"  # Key for RC4"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Java",
                "filename": "RC4Example.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\rc4\\RC4Example.java",
                "vulnerability": "RC4",
                "lines": [
                    {
                        "line_number": 11,
                        "content": "Cipher cipher = Cipher.getInstance(\"RC4\");"
                    }
                ],
                "severity": "Very High",
                "explanation": "RC4 is insecure due to biases in its keystream and vulnerable to multiple attacks."
            },
            {
                "language": "Java",
                "filename": "RSAExample.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\rsa\\RSAExample.java",
                "vulnerability": "RSA_512_1024",
                "lines": [
                    {
                        "line_number": 5,
                        "content": "KeyPairGenerator keyPairGen = KeyPairGenerator.getInstance(\"RSA\");"
                    }
                ],
                "severity": "High",
                "explanation": "RSA with short keys (512, 1024 bits) is easily breakable."
            },
            {
                "language": "Java",
                "filename": "RSAExample.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\rsa\\RSAExample.java",
                "vulnerability": "RSA_2048_3072",
                "lines": [
                    {
                        "line_number": 5,
                        "content": "KeyPairGenerator keyPairGen = KeyPairGenerator.getInstance(\"RSA\");"
                    }
                ],
                "severity": "Very Low",
                "explanation": "RSA with 2048 or 3072 bits is secure against classical attacks but not quantum-resistant."
            },
            {
                "language": "C",
                "filename": "sha-1.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\sha-1\\sha-1.c",
                "vulnerability": "SHA-1",
                "lines": [
                    {
                        "line_number": 9,
                        "content": "SHA1_Init(&ctx);                      // Initialize SHA-1"
                    },
                    {
                        "line_number": 10,
                        "content": "SHA1_Update(&ctx, input, strlen(input)); // Update with data"
                    },
                    {
                        "line_number": 11,
                        "content": "SHA1_Final(digest, &ctx);             // Finalize hash"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collisions."
            },
            {
                "language": "Python",
                "filename": "sha-1.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\sha-1\\sha-1.py",
                "vulnerability": "SHA-1",
                "lines": [
                    {
                        "line_number": 4,
                        "content": "sha1_hash = hashlib.sha1(b\"test\").hexdigest()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collisions."
            },
            {
                "language": "Java",
                "filename": "SHA1Test.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\sha-1\\SHA1Test.java",
                "vulnerability": "SHA-1",
                "lines": [
                    {
                        "line_number": 8,
                        "content": "MessageDigest sha1 = MessageDigest.getInstance(\"SHA-1\");"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collisions."
            },
            {
                "language": "C",
                "filename": "sha-256.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\sha-256\\sha-256.c",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 9,
                        "content": "SHA256_Init(&ctx);                    // Initialize SHA-256"
                    },
                    {
                        "line_number": 10,
                        "content": "SHA256_Update(&ctx, input, strlen(input)); // Update with data"
                    },
                    {
                        "line_number": 11,
                        "content": "SHA256_Final(digest, &ctx);           // Finalize hash"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Python",
                "filename": "sha-256.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\sha-256\\sha-256.py",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 4,
                        "content": "sha256_hash = hashlib.sha256(b\"test\").hexdigest()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Java",
                "filename": "SHA256Test.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\sha-256\\SHA256Test.java",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 8,
                        "content": "MessageDigest sha256 = MessageDigest.getInstance(\"SHA-256\");"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            }
        ]
    },
    {
        "scan_id": 16,
        "date": "2024-12-16 16:37:25",
        "directory": "C:/",
        "files_scanned": {
            "Python": 62963,
            "C": 1149,
            "Java": 13169
        },
        "vulnerable_files": {
            "Python": 4180,
            "C": 22,
            "Java": 86
        },
        "vulnerabilities": [
            {
                "language": "Python",
                "filename": "a.py",
                "path": "C:/$Recycle.Bin\\S-1-5-21-528429782-674571044-183289670-1001\\$R1331LB\\a.py",
                "vulnerability": "DES",
                "lines": [
                    {
                        "line_number": 1,
                        "content": "from Crypto.Cipher import DES"
                    },
                    {
                        "line_number": 10,
                        "content": "cipher = DES.new(key, DES.MODE_ECB)"
                    }
                ],
                "severity": "Very High",
                "explanation": "DES is insecure due to its 56-bit key size, making it vulnerable to brute-force attacks."
            },
            {
                "language": "Python",
                "filename": "a.py",
                "path": "C:/$Recycle.Bin\\S-1-5-21-528429782-674571044-183289670-1001\\$R1331LB\\a.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 6,
                        "content": "key = b'8bytekey'  # DES requires an 8-byte key"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "c.py",
                "path": "C:/$Recycle.Bin\\S-1-5-21-528429782-674571044-183289670-1001\\$R1331LB\\c.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 8,
                        "content": "hash1 = hashlib.md5(data1).hexdigest()"
                    },
                    {
                        "line_number": 9,
                        "content": "hash2 = hashlib.md5(data2).hexdigest()"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "d.py",
                "path": "C:/$Recycle.Bin\\S-1-5-21-528429782-674571044-183289670-1001\\$R1331LB\\d.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 7,
                        "content": "key = RSA.generate(512)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "e.py",
                "path": "C:/$Recycle.Bin\\S-1-5-21-528429782-674571044-183289670-1001\\$R1331LB\\e.py",
                "vulnerability": "SHA-1",
                "lines": [
                    {
                        "line_number": 8,
                        "content": "hash1 = hashlib.sha1(data1).hexdigest()"
                    },
                    {
                        "line_number": 9,
                        "content": "hash2 = hashlib.sha1(data2).hexdigest()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collisions."
            },
            {
                "language": "Python",
                "filename": "f.py",
                "path": "C:/$Recycle.Bin\\S-1-5-21-528429782-674571044-183289670-1001\\$R1331LB\\f.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 10,
                        "content": "cipher = AES.new(key, AES.MODE_ECB)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "f.py",
                "path": "C:/$Recycle.Bin\\S-1-5-21-528429782-674571044-183289670-1001\\$R1331LB\\f.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 10,
                        "content": "cipher = AES.new(key, AES.MODE_ECB)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "a.py",
                "path": "C:/$Recycle.Bin\\S-1-5-21-528429782-674571044-183289670-1001\\$RY0JM2A\\scripts\\a.py",
                "vulnerability": "DES",
                "lines": [
                    {
                        "line_number": 1,
                        "content": "from Crypto.Cipher import DES"
                    },
                    {
                        "line_number": 10,
                        "content": "cipher = DES.new(key, DES.MODE_ECB)"
                    }
                ],
                "severity": "Very High",
                "explanation": "DES is insecure due to its 56-bit key size, making it vulnerable to brute-force attacks."
            },
            {
                "language": "Python",
                "filename": "a.py",
                "path": "C:/$Recycle.Bin\\S-1-5-21-528429782-674571044-183289670-1001\\$RY0JM2A\\scripts\\a.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 6,
                        "content": "key = b'8bytekey'  # DES requires an 8-byte key"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "c.py",
                "path": "C:/$Recycle.Bin\\S-1-5-21-528429782-674571044-183289670-1001\\$RY0JM2A\\scripts\\c.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 8,
                        "content": "hash1 = hashlib.md5(data1).hexdigest()"
                    },
                    {
                        "line_number": 9,
                        "content": "hash2 = hashlib.md5(data2).hexdigest()"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "d.py",
                "path": "C:/$Recycle.Bin\\S-1-5-21-528429782-674571044-183289670-1001\\$RY0JM2A\\scripts\\d.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 7,
                        "content": "key = RSA.generate(512)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "e.py",
                "path": "C:/$Recycle.Bin\\S-1-5-21-528429782-674571044-183289670-1001\\$RY0JM2A\\scripts\\e.py",
                "vulnerability": "SHA-1",
                "lines": [
                    {
                        "line_number": 8,
                        "content": "hash1 = hashlib.sha1(data1).hexdigest()"
                    },
                    {
                        "line_number": 9,
                        "content": "hash2 = hashlib.sha1(data2).hexdigest()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collisions."
            },
            {
                "language": "Python",
                "filename": "f.py",
                "path": "C:/$Recycle.Bin\\S-1-5-21-528429782-674571044-183289670-1001\\$RY0JM2A\\scripts\\f.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 10,
                        "content": "cipher = AES.new(key, AES.MODE_ECB)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "f.py",
                "path": "C:/$Recycle.Bin\\S-1-5-21-528429782-674571044-183289670-1001\\$RY0JM2A\\scripts\\f.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 10,
                        "content": "cipher = AES.new(key, AES.MODE_ECB)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "type_printers.py",
                "path": "C:/MinGW\\share\\gdb\\python\\gdb\\command\\type_printers.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 37,
                        "content": "key = lambda x: x.name)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "codegen.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\mingw64\\share\\glib-2.0\\codegen\\codegen.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1180,
                        "content": "key = (a.since, \"%s__%s_annotation\" % (array_name_lower, a.key_lower))"
                    },
                    {
                        "line_number": 1215,
                        "content": "key = (a.since, \"%s__%s_arg\" % (array_name_lower, a.name))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "codegen.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\mingw64\\share\\glib-2.0\\codegen\\codegen.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 192,
                        "content": "key = (p.since, \"_prop_get_%s\" % p.name_lower)"
                    },
                    {
                        "line_number": 2105,
                        "content": "key = (p.since, \"_prop_get_%s\" % p.name_lower)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "codegen_docbook.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\mingw64\\share\\glib-2.0\\codegen\\codegen_docbook.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 361,
                        "content": "key = \"#%s\" % (i.name)"
                    },
                    {
                        "line_number": 368,
                        "content": "key = \"%s.%s()\" % (i.name, m.name)"
                    },
                    {
                        "line_number": 376,
                        "content": "key = \"#%s::%s\" % (i.name, s.name)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "codegen_docbook.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\mingw64\\share\\glib-2.0\\codegen\\codegen_docbook.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 368,
                        "content": "key = \"%s.%s()\" % (i.name, m.name)"
                    },
                    {
                        "line_number": 376,
                        "content": "key = \"#%s::%s\" % (i.name, s.name)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "codegen_md.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\mingw64\\share\\glib-2.0\\codegen\\codegen_md.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 61,
                        "content": "key = \"%s.%s()\" % (i.name, m.name)"
                    },
                    {
                        "line_number": 66,
                        "content": "key = \"#%s::%s\" % (i.name, s.name)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "codegen_md.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\mingw64\\share\\glib-2.0\\codegen\\codegen_md.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 61,
                        "content": "key = \"%s.%s()\" % (i.name, m.name)"
                    },
                    {
                        "line_number": 66,
                        "content": "key = \"#%s::%s\" % (i.name, s.name)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "codegen_rst.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\mingw64\\share\\glib-2.0\\codegen\\codegen_rst.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 60,
                        "content": "key = \"%s.%s()\" % (i.name, m.name)"
                    },
                    {
                        "line_number": 65,
                        "content": "key = \"#%s::%s\" % (i.name, s.name)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "codegen_rst.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\mingw64\\share\\glib-2.0\\codegen\\codegen_rst.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 60,
                        "content": "key = \"%s.%s()\" % (i.name, m.name)"
                    },
                    {
                        "line_number": 65,
                        "content": "key = \"#%s::%s\" % (i.name, s.name)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "glib_gdb.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\mingw64\\share\\glib-2.0\\gdb\\glib_gdb.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 151,
                        "content": "key = self.keys[self.pos]"
                    },
                    {
                        "line_number": 161,
                        "content": "key = (\"[%dk]\" % (self.pos), key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "glib_gdb.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\mingw64\\share\\glib-2.0\\gdb\\glib_gdb.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 155,
                        "content": "key = key.cast(gdb.lookup_type(\"char\").pointer())"
                    },
                    {
                        "line_number": 161,
                        "content": "key = (\"[%dk]\" % (self.pos), key)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "mkfuncdocs.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\mingw64\\share\\octave\\packages\\dicom-0.6.0\\doc\\mkfuncdocs.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 300,
                        "content": "elif key == \"--func-prefix\":"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "mkfuncdocs.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\mingw64\\share\\octave\\packages\\instrument-control-0.9.3\\doc\\mkfuncdocs.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 300,
                        "content": "elif key == \"--func-prefix\":"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "mkfuncdocs.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\mingw64\\share\\octave\\packages\\mqtt-0.0.5\\doc\\mkfuncdocs.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 352,
                        "content": "elif key == \"--func-prefix\":"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "opt-viewer.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\mingw64\\share\\opt-viewer\\opt-viewer.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 281,
                        "content": "sorted_remarks = sorted(optrecord.itervalues(all_remarks), key=lambda r: (r.Hotness, r.File, r.Line, r.Column, r.PassWithDiffPrefix, r.yaml_tag, r.Function), reverse=True)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "optrecord.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\mingw64\\share\\opt-viewer\\optrecord.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 187,
                        "content": "key = arg[1 - dbgidx][0]"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "antigravity.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\antigravity.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 15,
                        "content": "h = hashlib.md5(datedow, usedforsecurity=False).hexdigest()"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "configparser.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\configparser.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 764,
                        "content": "key = self.optionxform(str(key))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "configparser.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\configparser.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 764,
                        "content": "key = self.optionxform(str(key))"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "enum.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\enum.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 395,
                        "content": "if key == '_generate_next_value_':"
                    },
                    {
                        "line_number": 1372,
                        "content": "key=lambda m: m._sort_order_,"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "functools.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\functools.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 554,
                        "content": "key = make_key(args, kwds, typed)"
                    },
                    {
                        "line_number": 569,
                        "content": "key = make_key(args, kwds, typed)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "gettext.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\gettext.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 534,
                        "content": "key = (class_, os.path.abspath(mofile))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "gettext.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\gettext.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 534,
                        "content": "key = (class_, os.path.abspath(mofile))"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "hashlib.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\hashlib.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 43,
                        "content": ">>> m = hashlib.md5()"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "hashlib.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\hashlib.py",
                "vulnerability": "SHA-224",
                "lines": [
                    {
                        "line_number": 51,
                        "content": ">>> hashlib.sha224(b\"Nobody inspects the spammish repetition\").hexdigest()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-224 provides reduced security compared to larger variants."
            },
            {
                "language": "Python",
                "filename": "hmac.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\hmac.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 98,
                        "content": "key = digest_cons(key).digest()"
                    },
                    {
                        "line_number": 213,
                        "content": "key = digest_cons(key).digest()"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "hmac.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\hmac.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 98,
                        "content": "key = digest_cons(key).digest()"
                    },
                    {
                        "line_number": 104,
                        "content": "key = key.ljust(blocksize, b'\\0')"
                    },
                    {
                        "line_number": 213,
                        "content": "key = digest_cons(key).digest()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "mailbox.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\mailbox.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 1253,
                        "content": "key = _singlefileMailbox.add(self, message)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "mailcap.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\mailcap.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 116,
                        "content": "key = '/'.join(types).lower()"
                    },
                    {
                        "line_number": 171,
                        "content": "def findmatch(caps, MIMEtype, key='view', filename=\"/dev/null\", plist=[]):"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "os.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\os.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 683,
                        "content": "key = self.encodekey(key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "pickle.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\pickle.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 1562,
                        "content": "key = _inverted_registry.get(code)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "poplib.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\poplib.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 335,
                        "content": "digest = hashlib.md5(digest).hexdigest()"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "pyclbr.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\pyclbr.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 291,
                        "content": "objs = sorted(tree.values(), key=lineno_key, reverse=True)"
                    },
                    {
                        "line_number": 303,
                        "content": "key=lineno_key, reverse=True)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "pydoc.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\pydoc.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 2226,
                        "content": "def run(self, callback, key=None, completer=None, onerror=None):"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "pydoc.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\pydoc.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 2557,
                        "content": "'key = %s' % key, 'index', '<br>'.join(results))"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "selectors.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\selectors.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 249,
                        "content": "key = self._fd_to_key.pop(self._fileobj_lookup(fileobj))"
                    },
                    {
                        "line_number": 256,
                        "content": "key = self._fd_to_key[self._fileobj_lookup(fileobj)]"
                    },
                    {
                        "line_number": 299,
                        "content": "key = super().register(fileobj, events, data)"
                    },
                    {
                        "line_number": 352,
                        "content": "key = super().register(fileobj, events, data)"
                    },
                    {
                        "line_number": 377,
                        "content": "key = self._fd_to_key[self._fileobj_lookup(fileobj)]"
                    },
                    {
                        "line_number": 518,
                        "content": "key = super().register(fileobj, events, data)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "selectors.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\selectors.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 249,
                        "content": "key = self._fd_to_key.pop(self._fileobj_lookup(fileobj))"
                    },
                    {
                        "line_number": 261,
                        "content": "key = self.register(fileobj, events, data)"
                    },
                    {
                        "line_number": 299,
                        "content": "key = super().register(fileobj, events, data)"
                    },
                    {
                        "line_number": 352,
                        "content": "key = super().register(fileobj, events, data)"
                    },
                    {
                        "line_number": 518,
                        "content": "key = super().register(fileobj, events, data)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "symtable.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\symtable.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 33,
                        "content": "key = table, filename"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "tarfile.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\tarfile.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 2268,
                        "content": "directories.sort(key=lambda a: a.name, reverse=True)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "trace.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\trace.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 557,
                        "content": "key = filename, lineno"
                    },
                    {
                        "line_number": 584,
                        "content": "key = filename, lineno"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "warnings.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\warnings.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 346,
                        "content": "key = (text, category, lineno)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "warnings.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\warnings.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 346,
                        "content": "key = (text, category, lineno)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "weakref.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\weakref.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 638,
                        "content": "L.sort(key=lambda item:item[1].index)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "selector_events.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\asyncio\\selector_events.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 36,
                        "content": "key = selector.get_key(fd)"
                    },
                    {
                        "line_number": 265,
                        "content": "key = self._selector.get_key(fd)"
                    },
                    {
                        "line_number": 281,
                        "content": "key = self._selector.get_key(fd)"
                    },
                    {
                        "line_number": 302,
                        "content": "key = self._selector.get_key(fd)"
                    },
                    {
                        "line_number": 319,
                        "content": "key = self._selector.get_key(fd)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "selector_events.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\asyncio\\selector_events.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 265,
                        "content": "key = self._selector.get_key(fd)"
                    },
                    {
                        "line_number": 281,
                        "content": "key = self._selector.get_key(fd)"
                    },
                    {
                        "line_number": 302,
                        "content": "key = self._selector.get_key(fd)"
                    },
                    {
                        "line_number": 319,
                        "content": "key = self._selector.get_key(fd)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "__init__.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\collections\\__init__.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 117,
                        "content": "link.prev, link.next, link.key = last, root, key"
                    },
                    {
                        "line_number": 620,
                        "content": "return sorted(self.items(), key=_itemgetter(1), reverse=True)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "__init__.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\collections\\__init__.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 620,
                        "content": "return sorted(self.items(), key=_itemgetter(1), reverse=True)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "dumb.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\dbm\\dumb.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 146,
                        "content": "key = key.encode('utf-8')"
                    },
                    {
                        "line_number": 191,
                        "content": "key = key.encode('utf-8')"
                    },
                    {
                        "line_number": 228,
                        "content": "key = key.encode('utf-8')"
                    },
                    {
                        "line_number": 251,
                        "content": "key = key.encode('utf-8')"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "msvc9compiler.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\distutils\\msvc9compiler.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 158,
                        "content": "key = RegEnumKey(h, 0)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "msvccompiler.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\distutils\\msvccompiler.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 137,
                        "content": "key = RegEnumKey(h, 0)"
                    },
                    {
                        "line_number": 597,
                        "content": "key = (r\"%s\\%0.1f\\VC\\VC_OBJECTS_PLATFORM_INFO\\Win32\\Directories\""
                    },
                    {
                        "line_number": 600,
                        "content": "key = (r\"%s\\6.0\\Build System\\Components\\Platforms\""
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "msvccompiler.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\distutils\\msvccompiler.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 600,
                        "content": "key = (r\"%s\\6.0\\Build System\\Components\\Platforms\""
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "_msvccompiler.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\distutils\\_msvccompiler.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 30,
                        "content": "key = winreg.OpenKeyEx("
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "install.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\distutils\\command\\install.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 45,
                        "content": "if key == \"headers\" and key not in sys_scheme:"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "install.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\distutils\\command\\install.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 45,
                        "content": "if key == \"headers\" and key not in sys_scheme:"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "cookiejar.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\http\\cookiejar.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1307,
                        "content": "cookies.sort(key=lambda a: len(a.path), reverse=True)"
                    },
                    {
                        "line_number": 1645,
                        "content": "key = ns_cookie.domain, ns_cookie.path, ns_cookie.name"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "cookies.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\http\\cookies.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 408,
                        "content": "if key == \"expires\" and isinstance(value, int):"
                    },
                    {
                        "line_number": 410,
                        "content": "elif key == \"max-age\" and isinstance(value, int):"
                    },
                    {
                        "line_number": 412,
                        "content": "elif key == \"comment\" and isinstance(value, str):"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "configdialog.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\idlelib\\configdialog.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1478,
                        "content": "key = ' '.join(keyset[bind_name])"
                    },
                    {
                        "line_number": 1483,
                        "content": "key = changes['keys'][keyset_name][bind_name]"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "config_key.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\idlelib\\config_key.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 38,
                        "content": "key = mapping.get(key, key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "debugobj.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\idlelib\\debugobj.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 54,
                        "content": "lambda value, key=key, object=self.object:"
                    },
                    {
                        "line_number": 88,
                        "content": "def setfunction(value, key=key, object=self.object):"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "filelist.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\idlelib\\filelist.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 28,
                        "content": "key = os.path.normcase(filename)"
                    },
                    {
                        "line_number": 61,
                        "content": "key = self.inversedict[edit]"
                    },
                    {
                        "line_number": 74,
                        "content": "key = self.inversedict[edit]"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "stackviewer.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\idlelib\\stackviewer.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 109,
                        "content": "def setfunction(value, key=key, object=self.object):"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "tree.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\idlelib\\tree.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 429,
                        "content": "names.sort(key = os.path.normcase)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_config.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\idlelib\\idle_test\\test_config.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 458,
                        "content": "##        key = ['<Option-Key-2>'] if sys.platform == 'darwin' else ['<Alt-Key-2>']"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_sidebar.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\idlelib\\idle_test\\test_sidebar.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 486,
                        "content": "texts.sort(key=lambda text: canvas.bbox(text)[1])"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "topics.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\pydoc_data\\topics.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 15107,
                        "content": "'      \"key=str.lower\"). The key corresponding to each item in '"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "ctx_base.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\site-packages\\mpmath\\ctx_base.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 481,
                        "content": "key = args, tuple(kwargs.items())"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "ctx_mp.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\site-packages\\mpmath\\ctx_mp.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 668,
                        "content": "key = p, q, flags, 'R'"
                    },
                    {
                        "line_number": 671,
                        "content": "key = p, q, flags, 'C'"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "polynomials.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\site-packages\\mpmath\\calculus\\polynomials.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 207,
                        "content": "roots.sort(key=lambda x: (abs(ctx._im(x)), ctx._re(x)))"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "quadrature.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\site-packages\\mpmath\\calculus\\quadrature.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 54,
                        "content": "key = (a, b, degree, prec)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "baseclasses.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\site-packages\\sympy\\categories\\baseclasses.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 608,
                        "content": ">>> premises_keys = sorted(d.premises.keys(), key=default_sort_key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "diagram_drawing.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\site-packages\\sympy\\categories\\diagram_drawing.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 684,
                        "content": "DiagramGrid._triangle_objects(tri), key=default_sort_key)"
                    },
                    {
                        "line_number": 693,
                        "content": "candidates = [sorted(e, key=default_sort_key)"
                    },
                    {
                        "line_number": 695,
                        "content": "sorted_candidates = sorted(candidates, key=default_sort_key)"
                    },
                    {
                        "line_number": 698,
                        "content": "return tuple(sorted(sorted_candidates[0], key=default_sort_key))"
                    },
                    {
                        "line_number": 947,
                        "content": "objects = sorted(all_objects, key=default_sort_key)"
                    },
                    {
                        "line_number": 1042,
                        "content": "adjlists[obj].sort(key=default_sort_key)"
                    },
                    {
                        "line_number": 1055,
                        "content": "sorted_objects = sorted(objects, key=default_sort_key)"
                    },
                    {
                        "line_number": 1204,
                        "content": "components = sorted(components, key=default_sort_key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "diagram_drawing.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\site-packages\\sympy\\categories\\diagram_drawing.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 755,
                        "content": "key=lambda e: FiniteSet(*e).sort_key())"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "numpy_nodes.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\site-packages\\sympy\\codegen\\numpy_nodes.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 42,
                        "content": "return Function.__new__(cls, *sorted(args, key=default_sort_key))"
                    },
                    {
                        "line_number": 84,
                        "content": "return Function.__new__(cls, *sorted(args, key=default_sort_key))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "rewriting.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\site-packages\\sympy\\codegen\\rewriting.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 134,
                        "content": "for optim in sorted(optimizations, key=lambda opt: opt.priority, reverse=True):"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "rewriting.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\site-packages\\sympy\\codegen\\rewriting.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 134,
                        "content": "for optim in sorted(optimizations, key=lambda opt: opt.priority, reverse=True):"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "partitions.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\site-packages\\sympy\\combinatorics\\partitions.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 110,
                        "content": ">>> l.sort(key=default_sort_key); l"
                    },
                    {
                        "line_number": 132,
                        "content": "self._partition = sorted([sorted(p, key=default_sort_key)"
                    },
                    {
                        "line_number": 267,
                        "content": "[i for p in partition for i in p], key=default_sort_key)])"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "pc_groups.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\site-packages\\sympy\\combinatorics\\pc_groups.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 264,
                        "content": "key = ((s2, -1), (s1, 1), (s2, 1))"
                    },
                    {
                        "line_number": 265,
                        "content": "key = self.free_group.dtype(key)"
                    },
                    {
                        "line_number": 351,
                        "content": "key = free_group.dtype(key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "pc_groups.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\site-packages\\sympy\\combinatorics\\pc_groups.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 264,
                        "content": "key = ((s2, -1), (s1, 1), (s2, 1))"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "permutations.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\site-packages\\sympy\\combinatorics\\permutations.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1579,
                        "content": "ic.sort(key=lambda x: key(x[0]))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "perm_groups.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\site-packages\\sympy\\combinatorics\\perm_groups.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1024,
                        "content": "orbits.sort(key=lambda x: -len(x))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "perm_groups.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\site-packages\\sympy\\combinatorics\\perm_groups.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 819,
                        "content": "key = lambda x: base_ordering[base[l]^x])"
                    },
                    {
                        "line_number": 874,
                        "content": "gamma = sorted(orbits[l], key = lambda y: base_ordering[y^x])[0]"
                    },
                    {
                        "line_number": 3994,
                        "content": "return [min(orbit, key = lambda x: base_ordering[x]) \\"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "polyhedron.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\site-packages\\sympy\\combinatorics\\polyhedron.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 388,
                        "content": "faces = [minlex(f, directed=False, key=default_sort_key) for f in faces]"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "polyhedron.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\site-packages\\sympy\\combinatorics\\polyhedron.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 388,
                        "content": "faces = [minlex(f, directed=False, key=default_sort_key) for f in faces]"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "testutil.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\site-packages\\sympy\\combinatorics\\testutil.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 318,
                        "content": "items.sort(key=lambda x: len(x[1]), reverse=True)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_partitions.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\site-packages\\sympy\\combinatorics\\tests\\test_partitions.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 32,
                        "content": "l.sort(key=default_sort_key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "delta.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\site-packages\\sympy\\concrete\\delta.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 190,
                        "content": "for arg in sorted(f.args, key=default_sort_key):"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "add.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\site-packages\\sympy\\core\\add.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1251,
                        "content": "return tuple(sorted(self.args, key=default_sort_key))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "containers.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\site-packages\\sympy\\core\\containers.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 295,
                        "content": "return tuple(sorted(self.args, key=default_sort_key))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "expr.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\site-packages\\sympy\\core\\expr.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1216,
                        "content": "gens = sorted(gens, key=default_sort_key)"
                    },
                    {
                        "line_number": 3212,
                        "content": "terms = sorted(Add.make_args(s.removeO()), key=lambda i: int(i.as_coeff_exponent(k)[1]))"
                    },
                    {
                        "line_number": 3620,
                        "content": "for hint in sorted(hints.keys(), key=_expand_hint_key):"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "expr.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\site-packages\\sympy\\core\\expr.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 1147,
                        "content": "key = lambda x:not isinstance(x, (Number, NumberSymbol))"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "exprtools.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\site-packages\\sympy\\core\\exprtools.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1392,
                        "content": "nc_obj = sorted(nc_obj, key=default_sort_key)"
                    },
                    {
                        "line_number": 1400,
                        "content": "nc_syms.sort(key=default_sort_key)"
                    },
                    {
                        "line_number": 1536,
                        "content": "rep1 = [(n, Dummy()) for n in sorted(nc_symbols, key=default_sort_key)]"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "function.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\site-packages\\sympy\\core\\function.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 2206,
                        "content": "pts = sorted(set(point), key=default_sort_key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "kind.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\site-packages\\sympy\\core\\kind.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 361,
                        "content": "key = self._dispatcher.funcs[sigs]"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "kind.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\site-packages\\sympy\\core\\kind.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 361,
                        "content": "key = self._dispatcher.funcs[sigs]"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "operations.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\site-packages\\sympy\\core\\operations.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 697,
                        "content": "key = self._dispatcher.funcs[sigs]"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "operations.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\site-packages\\sympy\\core\\operations.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 697,
                        "content": "key = self._dispatcher.funcs[sigs]"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "sorting.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\site-packages\\sympy\\core\\sorting.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 61,
                        "content": ">>> sorted(a, key=default_sort_key)"
                    },
                    {
                        "line_number": 67,
                        "content": ">>> a.sort(key=default_sort_key); a[0]"
                    },
                    {
                        "line_number": 69,
                        "content": ">>> min(a, key=default_sort_key)"
                    },
                    {
                        "line_number": 101,
                        "content": ">>> sorted(eq.args, key=default_sort_key)"
                    },
                    {
                        "line_number": 113,
                        "content": ">>> sorted([sin(x)*cos(x), sin(x)], key=default_sort_key)"
                    },
                    {
                        "line_number": 115,
                        "content": ">>> sorted([x, x**2, sqrt(x), x**3], key=default_sort_key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "symbol.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\site-packages\\sympy\\core\\symbol.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 896,
                        "content": "key = lambda x:tuple(sorted(x.assumptions0.items()))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "symbol.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\site-packages\\sympy\\core\\symbol.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 896,
                        "content": "key = lambda x:tuple(sorted(x.assumptions0.items()))"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "traversal.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\site-packages\\sympy\\core\\traversal.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 107,
                        "content": "is given; simply passing key=True will guarantee that the traversal is"
                    },
                    {
                        "line_number": 289,
                        "content": "is given; simply passing key=True will guarantee that the traversal is"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_expr.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\site-packages\\sympy\\core\\tests\\test_expr.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1671,
                        "content": "assert sorted(exprs, key=default_sort_key) == exprs"
                    },
                    {
                        "line_number": 1675,
                        "content": "assert sorted(exprs, key=default_sort_key) == exprs"
                    },
                    {
                        "line_number": 1678,
                        "content": "assert sorted(exprs, key=default_sort_key) == exprs"
                    },
                    {
                        "line_number": 1681,
                        "content": "assert sorted(exprs, key=default_sort_key) == exprs"
                    },
                    {
                        "line_number": 1684,
                        "content": "assert sorted(exprs, key=default_sort_key) == exprs"
                    },
                    {
                        "line_number": 1687,
                        "content": "assert sorted(exprs, key=default_sort_key) == exprs"
                    },
                    {
                        "line_number": 1690,
                        "content": "assert sorted(exprs, key=default_sort_key) == exprs"
                    },
                    {
                        "line_number": 1693,
                        "content": "assert sorted(exprs, key=default_sort_key) == exprs"
                    },
                    {
                        "line_number": 1696,
                        "content": "assert sorted(exprs, key=default_sort_key) == exprs"
                    },
                    {
                        "line_number": 1699,
                        "content": "assert sorted(exprs, key=default_sort_key) == exprs"
                    },
                    {
                        "line_number": 1702,
                        "content": "assert sorted(exprs, key=default_sort_key) == exprs"
                    },
                    {
                        "line_number": 1705,
                        "content": "assert sorted(exprs, key=default_sort_key) == exprs"
                    },
                    {
                        "line_number": 1708,
                        "content": "assert sorted([b, a], key=default_sort_key) == exprs"
                    },
                    {
                        "line_number": 1764,
                        "content": "assert sorted([-m, s], key=lambda arg: arg.sort_key()) == [-m, s]"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_expr.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\site-packages\\sympy\\core\\tests\\test_expr.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 1764,
                        "content": "assert sorted([-m, s], key=lambda arg: arg.sort_key()) == [-m, s]"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_sorting.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\site-packages\\sympy\\core\\tests\\test_sorting.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 9,
                        "content": "assert sorted([func, x, func], key=default_sort_key) == [func, func, x]"
                    },
                    {
                        "line_number": 15,
                        "content": "assert sorted([x, func], key=default_sort_key) == [func, x]"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "crypto.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\site-packages\\sympy\\crypto\\crypto.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 168,
                        "content": "key = check_and_join(key, alp, filter=True)"
                    },
                    {
                        "line_number": 266,
                        "content": "key = A[shift:] + A[:shift]"
                    },
                    {
                        "line_number": 723,
                        "content": ">>> key = AZ('gold bug'); n1 = len(key); n2 = len(m)"
                    },
                    {
                        "line_number": 749,
                        "content": "key = [map[c] for c in key]"
                    },
                    {
                        "line_number": 906,
                        "content": ">>> key = Matrix([[1, 1, 1, 2], [0, 1, 1, 0],"
                    },
                    {
                        "line_number": 1259,
                        "content": "key = padded_key(key, bifid5)"
                    },
                    {
                        "line_number": 1306,
                        "content": "key = padded_key(key, bifid5)"
                    },
                    {
                        "line_number": 1333,
                        "content": "key = padded_key(key, bifid5)"
                    },
                    {
                        "line_number": 1370,
                        "content": "key = padded_key(key, bifid6)"
                    },
                    {
                        "line_number": 1413,
                        "content": "key = padded_key(key, bifid6)"
                    },
                    {
                        "line_number": 1443,
                        "content": "key = padded_key(key, bifid6)"
                    },
                    {
                        "line_number": 2360,
                        "content": ">>> key = [F(1), F(0), F(0), F(1)]"
                    },
                    {
                        "line_number": 2421,
                        "content": ">>> key = [F(1), F(0), F(0), F(1)]"
                    },
                    {
                        "line_number": 2468,
                        "content": ">>> key = [F(1), F(0), F(0), F(1)]"
                    },
                    {
                        "line_number": 2473,
                        "content": ">>> key = [F(1), F(1), F(0), F(1)]"
                    },
                    {
                        "line_number": 2478,
                        "content": ">>> key = [F(1), F(1), F(0)]"
                    },
                    {
                        "line_number": 2483,
                        "content": ">>> key = [F(1), F(0), F(1)]"
                    },
                    {
                        "line_number": 3129,
                        "content": "return ''.join(sorted(message, key=lambda i: next(p)))"
                    },
                    {
                        "line_number": 3158,
                        "content": "idx = sorted(range(len(ciphertext)), key=lambda i: next(p))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "crypto.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\site-packages\\sympy\\crypto\\crypto.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 168,
                        "content": "key = check_and_join(key, alp, filter=True)"
                    },
                    {
                        "line_number": 723,
                        "content": ">>> key = AZ('gold bug'); n1 = len(key); n2 = len(m)"
                    },
                    {
                        "line_number": 906,
                        "content": ">>> key = Matrix([[1, 1, 1, 2], [0, 1, 1, 0],"
                    },
                    {
                        "line_number": 2138,
                        "content": ">>> key = kid_rsa_public_key(a, b, A, B)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "diffgeom.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\site-packages\\sympy\\diffgeom\\diffgeom.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 413,
                        "content": "key = Tuple(self.name, sys.name)"
                    },
                    {
                        "line_number": 503,
                        "content": "min_distance = max(path_dict.values(), key=lambda x:x[0])[0]"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "tensor_functions.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\site-packages\\sympy\\functions\\special\\tensor_functions.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 194,
                        "content": "if i != min(i, j, key=default_sort_key):"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "polygon.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\site-packages\\sympy\\geometry\\polygon.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 2127,
                        "content": "[nodup[i], nodup[i + 1], nodup[i + 2]], key=default_sort_key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "util.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\site-packages\\sympy\\geometry\\util.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 64,
                        "content": "return tuple(sorted(p, key=lambda x: x.args))"
                    },
                    {
                        "line_number": 319,
                        "content": "p.sort(key=lambda x: x.args)"
                    },
                    {
                        "line_number": 452,
                        "content": "p.sort(key=lambda x: x.args)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "deltafunctions.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\site-packages\\sympy\\integrals\\deltafunctions.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 54,
                        "content": "sorted_args = sorted(c, key=default_sort_key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "intpoly.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\site-packages\\sympy\\integrals\\intpoly.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 960,
                        "content": "power_gens = sorted(power_gens.items(), key=lambda k: str(k[0]))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "meijerint.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\site-packages\\sympy\\integrals\\meijerint.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1672,
                        "content": "for a in sorted(_find_splitting_points(f, x) | {S.Zero}, key=default_sort_key):"
                    },
                    {
                        "line_number": 1841,
                        "content": "for c in sorted(innermost, key=default_sort_key, reverse=True) + [S.Zero]:"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "risch.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\site-packages\\sympy\\integrals\\risch.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 431,
                        "content": "logs = sorted(set(logs), key=default_sort_key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "transforms.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\site-packages\\sympy\\integrals\\transforms.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 761,
                        "content": "an.sort(key=default_sort_key)"
                    },
                    {
                        "line_number": 762,
                        "content": "ap.sort(key=default_sort_key)"
                    },
                    {
                        "line_number": 763,
                        "content": "bm.sort(key=default_sort_key)"
                    },
                    {
                        "line_number": 764,
                        "content": "bq.sort(key=default_sort_key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "transforms.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\site-packages\\sympy\\integrals\\transforms.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 332,
                        "content": "conds.sort(key=lambda x: (x[0] - x[1], count_ops(x[2])))"
                    },
                    {
                        "line_number": 1152,
                        "content": "conds.sort(key=lambda x: (-x[0], cnt(x[1])))"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "utility_function.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\site-packages\\sympy\\integrals\\rubi\\utility_function.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 2772,
                        "content": "return sorted(u, key=lambda x: x.sort_key(), reverse=r)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_meijerint.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\site-packages\\sympy\\integrals\\tests\\test_meijerint.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 347,
                        "content": "for formula, terms, cond, hint in sorted(l, key=default_sort_key):"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "dpll.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\site-packages\\sympy\\logic\\algorithms\\dpll.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 37,
                        "content": "symbols = sorted(_find_predicates(expr), key=default_sort_key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "common.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\site-packages\\sympy\\matrices\\common.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 3098,
                        "content": "key = _coord_to_index(i, j)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "eigen.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\site-packages\\sympy\\matrices\\eigen.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 320,
                        "content": "eigenvals = sorted(eigenvals.items(), key=default_sort_key)"
                    },
                    {
                        "line_number": 723,
                        "content": "eigenvecs = sorted(eigenvecs, key=default_sort_key)"
                    },
                    {
                        "line_number": 1210,
                        "content": "blocks     = list(sorted(eigs.keys(), key=default_sort_key))"
                    },
                    {
                        "line_number": 1224,
                        "content": "for eig in sorted(eigs.keys(), key=default_sort_key):"
                    },
                    {
                        "line_number": 1267,
                        "content": "for eig in sorted(eigs.keys(), key=default_sort_key):"
                    },
                    {
                        "line_number": 1363,
                        "content": "vals.sort(reverse=True, key=default_sort_key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "matrices.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\site-packages\\sympy\\matrices\\matrices.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1195,
                        "content": "i, j = key = self.key2ij(key)"
                    },
                    {
                        "line_number": 1212,
                        "content": "key = (slice(*divmod(i, self.cols)),"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "matrices.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\site-packages\\sympy\\matrices\\matrices.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 1212,
                        "content": "key = (slice(*divmod(i, self.cols)),"
                    },
                    {
                        "line_number": 1215,
                        "content": "key = (slice(i, i + value.rows),"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "sparse.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\site-packages\\sympy\\matrices\\sparse.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 329,
                        "content": "return [tuple(k + (self[k],)) for k in sorted(list(self.todok().keys()), key=lambda k: list(reversed(k)))]"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "factor_.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\site-packages\\sympy\\ntheory\\factor_.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 186,
                        "content": "key=lambda x: (x[1][k], x[0])))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "secondquant.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\site-packages\\sympy\\physics\\secondquant.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 2519,
                        "content": "dummies = sorted(dummies, key=default_sort_key)"
                    },
                    {
                        "line_number": 2732,
                        "content": "result = sorted(all_dums, key=lambda x: dumkey[x])"
                    },
                    {
                        "line_number": 3012,
                        "content": "i, j = sorted(map(sympify, (i, j)), key=default_sort_key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "kane.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\site-packages\\sympy\\physics\\mechanics\\kane.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 498,
                        "content": "r.sort(key=default_sort_key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "lagrange.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\site-packages\\sympy\\physics\\mechanics\\lagrange.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 346,
                        "content": "r.sort(key=default_sort_key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "circuitutils.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\site-packages\\sympy\\physics\\quantum\\circuitutils.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 485,
                        "content": "key=default_sort_key)"
                    },
                    {
                        "line_number": 487,
                        "content": "ids.sort(key=default_sort_key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "trace.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\site-packages\\sympy\\physics\\quantum\\trace.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 43,
                        "content": "min_item = min(l, key=default_sort_key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "dimensions.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\site-packages\\sympy\\physics\\units\\dimensions.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 350,
                        "content": "base_dims.sort(key=default_sort_key)"
                    },
                    {
                        "line_number": 351,
                        "content": "derived_dims.sort(key=default_sort_key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "__init__.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\site-packages\\sympy\\physics\\units\\__init__.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 262,
                        "content": "return sorted(set(rv), key=lambda x: (len(x), x))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "distributedmodules.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\site-packages\\sympy\\polys\\distributedmodules.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 685,
                        "content": "P.sort(key=ourkey, reverse=True)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "factortools.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\site-packages\\sympy\\polys\\factortools.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 347,
                        "content": "p, fsqf = min(a, key=lambda x: len(x[1]))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "fglmtools.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\site-packages\\sympy\\polys\\fglmtools.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 33,
                        "content": "L.sort(key=lambda k_l: O_to(_incr_k(S[k_l[1]], k_l[0])), reverse=True)"
                    },
                    {
                        "line_number": 59,
                        "content": "L.sort(key=lambda k_l: O_to(_incr_k(S[k_l[1]], k_l[0])), reverse=True)"
                    },
                    {
                        "line_number": 65,
                        "content": "return sorted(G, key=lambda g: O_to(g.LM), reverse=True)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "fglmtools.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\site-packages\\sympy\\polys\\fglmtools.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 33,
                        "content": "L.sort(key=lambda k_l: O_to(_incr_k(S[k_l[1]], k_l[0])), reverse=True)"
                    },
                    {
                        "line_number": 59,
                        "content": "L.sort(key=lambda k_l: O_to(_incr_k(S[k_l[1]], k_l[0])), reverse=True)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "groebnertools.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\site-packages\\sympy\\polys\\groebnertools.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 223,
                        "content": "h = min([f[x] for x in F], key=lambda f: order(f.LM))"
                    },
                    {
                        "line_number": 237,
                        "content": "G1 = sorted(G, key=lambda g: order(f[g].LM))"
                    },
                    {
                        "line_number": 258,
                        "content": "Gr = sorted(Gr, key=lambda f: order(f.LM), reverse=True)"
                    },
                    {
                        "line_number": 625,
                        "content": "B.sort(key=lambda f: order(Polyn(f).LM), reverse=True)"
                    },
                    {
                        "line_number": 696,
                        "content": "return sorted(H, key=lambda f: order(f.LM), reverse=True)"
                    },
                    {
                        "line_number": 752,
                        "content": "G.sort(key=lambda g: order(g.LM))"
                    },
                    {
                        "line_number": 772,
                        "content": "G.sort(key=lambda g: order(g.LM))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "monomials.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\site-packages\\sympy\\polys\\monomials.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 52,
                        "content": ">>> sorted(itermonomials([x, y], 2), key=monomial_key('grlex', [y, x]))"
                    },
                    {
                        "line_number": 55,
                        "content": ">>> sorted(itermonomials([x, y], 3), key=monomial_key('grlex', [y, x]))"
                    },
                    {
                        "line_number": 62,
                        "content": ">>> sorted(itermonomials([x, y], 2, 1), key=monomial_key('grlex', [y, x]))"
                    },
                    {
                        "line_number": 84,
                        "content": ">>> sorted(itermonomials([x, y], [2, 4], [1, 2]), reverse=True, key=monomial_key('lex', [x, y]))"
                    },
                    {
                        "line_number": 177,
                        "content": ">>> sorted(M, key=monomial_key('grlex', [y, x]))"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "multivariate_resultants.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\site-packages\\sympy\\polys\\multivariate_resultants.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 181,
                        "content": "key=monomial_key('lex', self.variables))"
                    },
                    {
                        "line_number": 358,
                        "content": "key=monomial_key('lex', self.variables))"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "polyroots.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\site-packages\\sympy\\polys\\polyroots.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 486,
                        "content": "ks.sort(key=lambda x: (x, -1) if x <= h else (abs(x - n), 1))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "polytools.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\site-packages\\sympy\\polys\\polytools.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 3704,
                        "content": "sorted(roots, key=lambda r: (1 if r.imag else 0, r.real, abs(r.imag), sign(r.imag)))))"
                    },
                    {
                        "line_number": 3711,
                        "content": "sorted(roots, key=lambda r: (1 if r.imag else 0, r.real, abs(r.imag), sign(r.imag)))))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "polyutils.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\site-packages\\sympy\\polys\\polyutils.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 45,
                        "content": "key = [(1 if i else 0, r, i) for r, i in key]"
                    },
                    {
                        "line_number": 46,
                        "content": "key = sorted(zip(key, roots))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "polyutils.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\site-packages\\sympy\\polys\\polyutils.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 40,
                        "content": "key = [[i.n(2).as_real_imag()[0] for i in r.as_real_imag()] for r in roots]"
                    },
                    {
                        "line_number": 45,
                        "content": "key = [(1 if i else 0, r, i) for r, i in key]"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "rings.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\site-packages\\sympy\\polys\\rings.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 1796,
                        "content": "return sorted(seq, key=lambda monom: monom[0], reverse=True)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "ring_series.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\site-packages\\sympy\\polys\\ring_series.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1871,
                        "content": "return min(series, key=lambda t: t[i])[i]"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "rootoftools.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\site-packages\\sympy\\polys\\rootoftools.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 490,
                        "content": "reals = sorted(reals, key=lambda r: r[0].a)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "domain.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\site-packages\\sympy\\polys\\domains\\domain.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 815,
                        "content": "return K0.__class__(max(K0.mod, K1.mod, key=default_sort_key))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "modularinteger.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\site-packages\\sympy\\polys\\domains\\modularinteger.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 189,
                        "content": "key = _mod, _dom, _sym"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "dense.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\site-packages\\sympy\\polys\\matrices\\dense.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 112,
                        "content": "ip = max(range(i, m), key=lambda ip: abs(a[ip][j]))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_orderings.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\site-packages\\sympy\\polys\\tests\\test_orderings.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 112,
                        "content": "assert sorted(M, key=monomial_key('lex', [z, y, x])) == \\"
                    },
                    {
                        "line_number": 114,
                        "content": "assert sorted(M, key=monomial_key('grlex', [z, y, x])) == \\"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_polyroots.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\site-packages\\sympy\\polys\\tests\\test_polyroots.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 207,
                        "content": "assert sorted(lhs, key=hash) == sorted(rhs, key=hash)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_polyroots.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\site-packages\\sympy\\polys\\tests\\test_polyroots.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 207,
                        "content": "assert sorted(lhs, key=hash) == sorted(rhs, key=hash)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "aesaracode.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\site-packages\\sympy\\printing\\aesaracode.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 137,
                        "content": "key = self._get_key(s, name, dtype=dtype, broadcastable=broadcastable)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "aesaracode.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\site-packages\\sympy\\printing\\aesaracode.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 137,
                        "content": "key = self._get_key(s, name, dtype=dtype, broadcastable=broadcastable)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "codeprinter.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\site-packages\\sympy\\printing\\codeprinter.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 474,
                        "content": "for a in sorted(expr.args, key=default_sort_key))"
                    },
                    {
                        "line_number": 479,
                        "content": "for a in sorted(expr.args, key=default_sort_key))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "lambdarepr.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\site-packages\\sympy\\printing\\lambdarepr.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 30,
                        "content": "for arg in sorted(expr.args, key=default_sort_key):"
                    },
                    {
                        "line_number": 39,
                        "content": "for arg in sorted(expr.args, key=default_sort_key):"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "latex.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\site-packages\\sympy\\printing\\latex.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1017,
                        "content": "args = sorted(expr.args, key=default_sort_key)"
                    },
                    {
                        "line_number": 1107,
                        "content": "args = sorted(e.args, key=default_sort_key)"
                    },
                    {
                        "line_number": 1111,
                        "content": "args = sorted(e.args, key=default_sort_key)"
                    },
                    {
                        "line_number": 1115,
                        "content": "args = sorted(e.args, key=default_sort_key)"
                    },
                    {
                        "line_number": 1122,
                        "content": "args = sorted(e.args, key=default_sort_key)"
                    },
                    {
                        "line_number": 2004,
                        "content": "keys = sorted(d.keys(), key=default_sort_key)"
                    },
                    {
                        "line_number": 2074,
                        "content": "items = sorted(s.args, key=default_sort_key)"
                    },
                    {
                        "line_number": 2078,
                        "content": "items = sorted(s, key=default_sort_key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "latex.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\site-packages\\sympy\\printing\\latex.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 523,
                        "content": "args = sorted(args, key=lambda x: isinstance(x, Quantity) or"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "mathematica.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\site-packages\\sympy\\printing\\mathematica.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 242,
                        "content": "items = sorted(expr.todok().items(), key=default_sort_key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "mathml.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\site-packages\\sympy\\printing\\mathml.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1341,
                        "content": "items = sorted(s, key=default_sort_key)"
                    },
                    {
                        "line_number": 1414,
                        "content": "args = sorted(expr.args, key=default_sort_key)"
                    },
                    {
                        "line_number": 1418,
                        "content": "args = sorted(expr.args, key=default_sort_key)"
                    },
                    {
                        "line_number": 1422,
                        "content": "args = sorted(expr.args, key=default_sort_key)"
                    },
                    {
                        "line_number": 1429,
                        "content": "args = sorted(expr.args, key=default_sort_key)"
                    },
                    {
                        "line_number": 1491,
                        "content": "args = sorted(expr.args, key=default_sort_key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "printer.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\site-packages\\sympy\\printing\\printer.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 345,
                        "content": "return sorted(Add.make_args(expr), key=cmp_to_key(Basic._compare_pretty))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "repr.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\site-packages\\sympy\\printing\\repr.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 301,
                        "content": "numer_terms.sort(key=frac.field.order, reverse=True)"
                    },
                    {
                        "line_number": 303,
                        "content": "denom_terms.sort(key=frac.field.order, reverse=True)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "repr.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\site-packages\\sympy\\printing\\repr.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 296,
                        "content": "terms.sort(key=poly.ring.order, reverse=True)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "str.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\site-packages\\sympy\\printing\\str.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 128,
                        "content": "keys = sorted(d.keys(), key=default_sort_key)"
                    },
                    {
                        "line_number": 224,
                        "content": "args = sorted(expr.args, key=default_sort_key)"
                    },
                    {
                        "line_number": 813,
                        "content": "items = sorted(s, key=default_sort_key)"
                    },
                    {
                        "line_number": 821,
                        "content": "items = sorted(s, key=default_sort_key)"
                    },
                    {
                        "line_number": 829,
                        "content": "items = sorted(s, key=default_sort_key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "theanocode.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\site-packages\\sympy\\printing\\theanocode.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 143,
                        "content": "key = self._get_key(s, name, dtype=dtype, broadcastable=broadcastable)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "theanocode.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\site-packages\\sympy\\printing\\theanocode.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 143,
                        "content": "key = self._get_key(s, name, dtype=dtype, broadcastable=broadcastable)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "pretty.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\site-packages\\sympy\\printing\\pretty\\pretty.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 250,
                        "content": "args = sorted(e.args, key=default_sort_key)"
                    },
                    {
                        "line_number": 1111,
                        "content": "inneritems.sort(key = lambda x: x[0].__str__())"
                    },
                    {
                        "line_number": 1580,
                        "content": "args = sorted(args, key=default_sort_key)"
                    },
                    {
                        "line_number": 2115,
                        "content": "items = sorted(s.args, key=default_sort_key)"
                    },
                    {
                        "line_number": 2393,
                        "content": "keys = sorted(d.keys(), key=default_sort_key)"
                    },
                    {
                        "line_number": 2411,
                        "content": "items = sorted(s, key=default_sort_key)"
                    },
                    {
                        "line_number": 2419,
                        "content": "items = sorted(s, key=default_sort_key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "pretty.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\site-packages\\sympy\\printing\\pretty\\pretty.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 1975,
                        "content": "args = sorted(args, key=lambda x: isinstance(x, Quantity) or"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "pretty_symbology.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\site-packages\\sympy\\printing\\pretty\\pretty_symbology.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 531,
                        "content": "for key in sorted(modifier_dict.keys(), key=lambda k:len(k), reverse=True) :"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "gruntz.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\site-packages\\sympy\\series\\gruntz.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 623,
                        "content": "Omega.sort(key=lambda x: nodes[x[1]].ht(), reverse=True)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "gruntz.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\site-packages\\sympy\\series\\gruntz.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 623,
                        "content": "Omega.sort(key=lambda x: nodes[x[1]].ht(), reverse=True)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "order.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\site-packages\\sympy\\series\\order.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 302,
                        "content": "variables.sort(key=default_sort_key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "cse_main.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\site-packages\\sympy\\simplify\\cse_main.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 136,
                        "content": "key=lambda x: -sum([p[s.index(i)].count_ops()"
                    },
                    {
                        "line_number": 387,
                        "content": "funcs = sorted(funcs, key=lambda f: len(f.args))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "cse_opts.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\site-packages\\sympy\\simplify\\cse_opts.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 30,
                        "content": "for a in sorted(e.atoms(Add), key=default_sort_key):"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "fu.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\site-packages\\sympy\\simplify\\fu.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 1199,
                        "content": "key = cos(a*cc, evaluate=False)"
                    },
                    {
                        "line_number": 1205,
                        "content": "key = cos(a*cc, evaluate=False)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "gammasimp.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\site-packages\\sympy\\simplify\\gammasimp.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 331,
                        "content": "keys = sorted(rats, key=default_sort_key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "hyperexpand.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\site-packages\\sympy\\simplify\\hyperexpand.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 662,
                        "content": "items.sort(key=lambda x: x - x0, reverse=flip)"
                    },
                    {
                        "line_number": 1608,
                        "content": "for r in sorted(list(abuckets.keys()) + list(bbuckets.keys()), key=default_sort_key):"
                    },
                    {
                        "line_number": 1622,
                        "content": "al, nal, bk, nbk = [sorted(list(w), key=default_sort_key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "powsimp.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\site-packages\\sympy\\simplify\\powsimp.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 288,
                        "content": "bases.sort(key=default_sort_key)  # this makes tie-breaking canonical"
                    },
                    {
                        "line_number": 289,
                        "content": "bases.sort(key=measure, reverse=True)  # handle longest first"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "radsimp.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\site-packages\\sympy\\simplify\\radsimp.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1156,
                        "content": "args = sorted(expr.args, key=default_sort_key)"
                    },
                    {
                        "line_number": 1159,
                        "content": "surds.sort(key=default_sort_key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "ratsimp.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\site-packages\\sympy\\simplify\\ratsimp.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 212,
                        "content": "c, d = min(newsol, key=lambda x: len(x[0].terms()) + len(x[1].terms()))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "ratsimp.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\site-packages\\sympy\\simplify\\ratsimp.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 212,
                        "content": "c, d = min(newsol, key=lambda x: len(x[0].terms()) + len(x[1].terms()))"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "sqrtdenest.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\site-packages\\sympy\\simplify\\sqrtdenest.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 38,
                        "content": "return max([sqrt_depth(x) for x in p.args], key=default_sort_key)"
                    },
                    {
                        "line_number": 156,
                        "content": "pargs = sorted(p.args, key=default_sort_key)"
                    },
                    {
                        "line_number": 166,
                        "content": "nmax = max(v, key=default_sort_key)"
                    },
                    {
                        "line_number": 228,
                        "content": "args = sorted(n.base.args, key=default_sort_key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "polysys.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\site-packages\\sympy\\solvers\\polysys.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 133,
                        "content": "return sorted(solutions, key=default_sort_key)"
                    },
                    {
                        "line_number": 297,
                        "content": "return sorted(result, key=default_sort_key)"
                    },
                    {
                        "line_number": 401,
                        "content": "return sorted(solutions, key=default_sort_key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "recurr.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\site-packages\\sympy\\solvers\\recurr.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 652,
                        "content": "kernel.sort(key=default_sort_key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "solvers.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\site-packages\\sympy\\solvers\\solvers.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1000,
                        "content": "symbols = sorted(symbols, key=default_sort_key)"
                    },
                    {
                        "line_number": 1264,
                        "content": "solution.sort(key=default_sort_key)"
                    },
                    {
                        "line_number": 2152,
                        "content": "for xi in sorted(symbols, key=default_sort_key):  # canonical order"
                    },
                    {
                        "line_number": 2219,
                        "content": "key=lambda x: (len(x.free_symbols), default_sort_key(x)))"
                    },
                    {
                        "line_number": 2220,
                        "content": "x = max(k.free_symbols, key=default_sort_key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "solvers.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\site-packages\\sympy\\solvers\\solvers.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 1766,
                        "content": "subsyms = list(sorted(subsyms, key = lambda x: sym_indices[x]))"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "solveset.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\site-packages\\sympy\\solvers\\solveset.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 2994,
                        "content": "unsolved.sort(key=default_sort_key)"
                    },
                    {
                        "line_number": 3425,
                        "content": "_symbols.sort(key=default_sort_key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "diophantine.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\site-packages\\sympy\\solvers\\diophantine\\diophantine.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 170,
                        "content": "self.free_symbols.sort(key=default_sort_key)"
                    },
                    {
                        "line_number": 1353,
                        "content": "var.sort(key=default_sort_key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_diophantine.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\site-packages\\sympy\\solvers\\diophantine\\tests\\test_diophantine.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 746,
                        "content": "var.sort(key=default_sort_key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "nonhomogeneous.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\site-packages\\sympy\\solvers\\ode\\nonhomogeneous.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 264,
                        "content": "collectterms.sort(key=default_sort_key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "ode.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\site-packages\\sympy\\solvers\\ode\\ode.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 2383,
                        "content": "maxf = max(fargs, key = lambda x: x.args[0])"
                    },
                    {
                        "line_number": 2391,
                        "content": "maxf = max(fargs, key = lambda x: x.args[0])"
                    },
                    {
                        "line_number": 2392,
                        "content": "minf = min(fargs, key = lambda x: x.args[0])"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "systems.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\site-packages\\sympy\\solvers\\ode\\systems.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 653,
                        "content": "eigenchains_iter = sorted(eigenchains.items(), key=default_sort_key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "systems.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\site-packages\\sympy\\solvers\\ode\\systems.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 1681,
                        "content": "key=lambda x: Function(Dummy('{}{}0'.format(x.func.__name__, underscores)))(t))"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "joint_rv_types.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\site-packages\\sympy\\stats\\joint_rv_types.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 131,
                        "content": "syms = tuple(sorted(syms, key = lambda index: index.args[1]))"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "stochastic_process_types.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\site-packages\\sympy\\stats\\stochastic_process_types.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 2033,
                        "content": "args_list = sorted(args_list, key=lambda x: x.args[0].key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "symbolic_probability.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\site-packages\\sympy\\stats\\symbolic_probability.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 492,
                        "content": "arg1, arg2 = sorted([arg1, arg2], key=default_sort_key)"
                    },
                    {
                        "line_number": 515,
                        "content": "arg1, arg2 = sorted([arg1, arg2], key=default_sort_key)"
                    },
                    {
                        "line_number": 523,
                        "content": "addends = [a*b*Covariance(*sorted([r1, r2], key=default_sort_key), condition=condition)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "rl.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\site-packages\\sympy\\strategies\\rl.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 52,
                        "content": ">>> key     = lambda x: x.as_coeff_Mul()[1]"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_core.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\site-packages\\sympy\\strategies\\tests\\test_core.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 73,
                        "content": "key = lambda x: x % 3"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_rl.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\site-packages\\sympy\\strategies\\tests\\test_rl.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 15,
                        "content": "key     = lambda x: x.as_coeff_Mul()[1]"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "index_methods.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\site-packages\\sympy\\tensor\\index_methods.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 344,
                        "content": ">>> sorted(d.keys(), key=default_sort_key)"
                    },
                    {
                        "line_number": 354,
                        "content": ">>> sorted(d[x[i, i]*y[j, j]], key=default_sort_key)"
                    },
                    {
                        "line_number": 363,
                        "content": ">>> sorted(d.keys(), key=default_sort_key)"
                    },
                    {
                        "line_number": 401,
                        "content": "junk, key = _remove_repeated(expr.indices)"
                    },
                    {
                        "line_number": 406,
                        "content": "junk, junk, key = _get_indices_Mul(expr, return_dummies=True)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "index_methods.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\site-packages\\sympy\\tensor\\index_methods.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 406,
                        "content": "junk, junk, key = _get_indices_Mul(expr, return_dummies=True)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "tensor.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\site-packages\\sympy\\tensor\\tensor.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1621,
                        "content": "return sorted(set(self.index_types), key=lambda x: x.name)"
                    },
                    {
                        "line_number": 2424,
                        "content": "args.sort(key=default_sort_key)"
                    },
                    {
                        "line_number": 3654,
                        "content": "typ1 = sorted(set(cv[j-1].component.index_types), key=lambda x: x.name)"
                    },
                    {
                        "line_number": 3655,
                        "content": "typ2 = sorted(set(cv[j].component.index_types), key=lambda x: x.name)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "conv_indexed_to_array.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\site-packages\\sympy\\tensor\\array\\expressions\\conv_indexed_to_array.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 110,
                        "content": "summation_indices = sorted(set([subindicessets.get(i, i) for i in summation_indices]), key=default_sort_key)"
                    },
                    {
                        "line_number": 117,
                        "content": "arg_indices = sorted(set(arg.indices), key=default_sort_key)"
                    },
                    {
                        "line_number": 120,
                        "content": "kronecker_indices = sorted(kronecker_indices, key=default_sort_key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "rewrite.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\site-packages\\sympy\\unify\\rewrite.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 21,
                        "content": ">>> sorted(rl(z + 3), key=default_sort_key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "codegen.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\site-packages\\sympy\\utilities\\codegen.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 715,
                        "content": "output_args.sort(key=lambda x: str(x.name))"
                    },
                    {
                        "line_number": 1372,
                        "content": "output_args.sort(key=lambda x: str(x.name))"
                    },
                    {
                        "line_number": 1811,
                        "content": "output_args.sort(key=lambda x: str(x.name))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "iterables.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\site-packages\\sympy\\utilities\\iterables.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 2198,
                        "content": "key = dict(enumerate(ordered(uniq(s))))"
                    },
                    {
                        "line_number": 2357,
                        "content": "take = sorted(ms.items(), key=lambda x:(x[1], x[0]))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "iterables.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\site-packages\\sympy\\utilities\\iterables.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 2198,
                        "content": "key = dict(enumerate(ordered(uniq(s))))"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_iterables.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\site-packages\\sympy\\utilities\\tests\\test_iterables.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 37,
                        "content": "assert sorted([y, x], key=default_sort_key) == [x, y]"
                    },
                    {
                        "line_number": 659,
                        "content": "assert minlex(('bb', 'aaa', 'c', 'a'), key=len) == ('c', 'a', 'bb', 'aaa')"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_lambdify.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\site-packages\\sympy\\utilities\\tests\\test_lambdify.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 279,
                        "content": "a, b = sorted(expr.free_symbols, key=lambda s: s.name)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "integrals.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\site-packages\\sympy\\vector\\integrals.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 136,
                        "content": "return topological_sort((V, E), key=default_sort_key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "vector.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\site-packages\\sympy\\vector\\vector.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 518,
                        "content": "expr1, expr2 = sorted([expr1, expr2], key=default_sort_key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "numpydoc.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\site-packages\\sympy-1.10.1\\doc\\ext\\numpydoc.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 75,
                        "content": "references.sort(key=lambda x: -len(x))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "pythoninfo.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\test\\pythoninfo.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 706,
                        "content": "key = getattr(resource, name)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_builtin.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\test\\test_builtin.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 1184,
                        "content": "self.assertEqual(max((1,), key=neg), 1)     # one elem iterable"
                    },
                    {
                        "line_number": 1186,
                        "content": "self.assertEqual(max(1, 2, key=neg), 1)     # two elems"
                    },
                    {
                        "line_number": 1243,
                        "content": "self.assertEqual(min((1,), key=neg), 1)     # one elem iterable"
                    },
                    {
                        "line_number": 1245,
                        "content": "self.assertEqual(min(1, 2, key=neg), 2)     # two elems"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_context.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\test\\test_context.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 844,
                        "content": "key = HashKey(i, str(i))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_datetime.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\test\\test_datetime.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 36,
                        "content": "test_classes = sorted(set(test_classes), key=lambda cls: cls.__qualname__)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_dbm_gnu.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\test\\test_dbm_gnu.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 47,
                        "content": "key = self.g.firstkey()"
                    },
                    {
                        "line_number": 51,
                        "content": "key = self.g.nextkey(key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_dtrace.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\test\\test_dtrace.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 38,
                        "content": "result.sort(key=lambda row: int(row[0]))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_functools.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\test\\test_functools.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 864,
                        "content": "key = self.cmp_to_key(cmp1)"
                    },
                    {
                        "line_number": 871,
                        "content": "key = self.cmp_to_key(cmp2)"
                    },
                    {
                        "line_number": 880,
                        "content": "key = self.cmp_to_key(mycmp=cmp1)"
                    },
                    {
                        "line_number": 888,
                        "content": "key = self.cmp_to_key()             # too few args"
                    },
                    {
                        "line_number": 890,
                        "content": "key = self.cmp_to_key(cmp1, None)   # too many args"
                    },
                    {
                        "line_number": 891,
                        "content": "key = self.cmp_to_key(cmp1)"
                    },
                    {
                        "line_number": 900,
                        "content": "key = self.cmp_to_key(cmp1)"
                    },
                    {
                        "line_number": 915,
                        "content": "key = self.cmp_to_key(mycmp=cmp1)"
                    },
                    {
                        "line_number": 921,
                        "content": "self.assertEqual(sorted(range(5), key=self.cmp_to_key(mycmp)),"
                    },
                    {
                        "line_number": 929,
                        "content": "values = sorted(values, key=self.cmp_to_key(mycmp))"
                    },
                    {
                        "line_number": 936,
                        "content": "key = self.cmp_to_key(mycmp)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_grammar.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\test\\test_grammar.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1640,
                        "content": "L.sort(key=lambda x: (type(x).__name__, x))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_hashlib.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\test\\test_hashlib.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 661,
                        "content": "key = b'a' * (key_size + 1)"
                    },
                    {
                        "line_number": 734,
                        "content": "keyed = constructor(indata, key=key, digest_size=outlen)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_hashlib.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\test\\test_hashlib.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 239,
                        "content": "hashlib.md5(usedforsecurity=True)"
                    },
                    {
                        "line_number": 250,
                        "content": "hashlib.md5(usedforsecurity=False)"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "test_hashlib.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\test\\test_hashlib.py",
                "vulnerability": "SHA-1",
                "lines": [
                    {
                        "line_number": 926,
                        "content": "hasher = hashlib.sha1()"
                    },
                    {
                        "line_number": 930,
                        "content": "expected_hash = hashlib.sha1(data*num_threads).hexdigest()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collisions."
            },
            {
                "language": "Python",
                "filename": "test_hashlib.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\test\\test_hashlib.py",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 902,
                        "content": "m = hashlib.sha256()"
                    },
                    {
                        "line_number": 911,
                        "content": "m = hashlib.sha256(b'1' + b'#' * gil_minsize + b'1')"
                    },
                    {
                        "line_number": 1159,
                        "content": "d1 = hashlib.sha256()"
                    },
                    {
                        "line_number": 1167,
                        "content": "d2 = hashlib.file_digest(f, hashlib.sha256)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Python",
                "filename": "test_hmac.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\test\\test_hmac.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 271,
                        "content": "hmactest(key = bytes(x for x in range(0x01, 0x19+1)),"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_hmac.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\test\\test_hmac.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 271,
                        "content": "hmactest(key = bytes(x for x in range(0x01, 0x19+1)),"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_hmac.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\test\\test_hmac.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 132,
                        "content": "hashfunc=hashlib.md5,"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "test_hmac.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\test\\test_hmac.py",
                "vulnerability": "SHA-1",
                "lines": [
                    {
                        "line_number": 172,
                        "content": "hashfunc=hashlib.sha1,"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collisions."
            },
            {
                "language": "Python",
                "filename": "test_hmac.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\test\\test_hmac.py",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 225,
                        "content": "hashlib.sha256: 'b0344c61d8db38535ca8afceaf0bf12b'"
                    },
                    {
                        "line_number": 242,
                        "content": "hashlib.sha256: '5bdcc146bf60754e6a042426089575c7'"
                    },
                    {
                        "line_number": 259,
                        "content": "hashlib.sha256: '773ea91e36800e46854db8ebd09181a7'"
                    },
                    {
                        "line_number": 276,
                        "content": "hashlib.sha256: '82558a389a443c0ea4cc819899f2083a'"
                    },
                    {
                        "line_number": 294,
                        "content": "hashlib.sha256: '60e431591ee0b67f0d8a26aacbf5b77f'"
                    },
                    {
                        "line_number": 315,
                        "content": "hashlib.sha256: '9b09ffa71b942fcb27635fbcd5b0e944'"
                    },
                    {
                        "line_number": 332,
                        "content": "self._rfc4231_test_cases(hashlib.sha256, 'sha256', 32, 64)"
                    },
                    {
                        "line_number": 347,
                        "content": "self._x = hashlib.sha256(*args)"
                    },
                    {
                        "line_number": 379,
                        "content": "cache['foo'] = hashlib.sha256"
                    },
                    {
                        "line_number": 445,
                        "content": "h = hmac.HMAC(b\"key\", b\"\", hashlib.sha256)"
                    },
                    {
                        "line_number": 447,
                        "content": "self.fail(\"Constructor call with hashlib.sha256 raised exception.\")"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Python",
                "filename": "test_hmac.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\test\\test_hmac.py",
                "vulnerability": "SHA-224",
                "lines": [
                    {
                        "line_number": 223,
                        "content": "hashlib.sha224: '896fb1128abbdf196832107cd49df33f'"
                    },
                    {
                        "line_number": 240,
                        "content": "hashlib.sha224: 'a30e01098bc6dbbf45690f3a7e9e6d0f'"
                    },
                    {
                        "line_number": 257,
                        "content": "hashlib.sha224: '7fb3cb3588c6c1f6ffa9694d7d6ad264'"
                    },
                    {
                        "line_number": 274,
                        "content": "hashlib.sha224: '6c11506874013cac6a2abc1bb382627c'"
                    },
                    {
                        "line_number": 292,
                        "content": "hashlib.sha224: '95e9a0db962095adaebe9b2d6f0dbce2'"
                    },
                    {
                        "line_number": 313,
                        "content": "hashlib.sha224: '3a854166ac5d9f023f54d517d0b39dbd'"
                    },
                    {
                        "line_number": 328,
                        "content": "self._rfc4231_test_cases(hashlib.sha224, 'sha224', 28, 64)"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-224 provides reduced security compared to larger variants."
            },
            {
                "language": "Python",
                "filename": "test_http_cookies.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\test\\test_http_cookies.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 458,
                        "content": "'<Morsel: key=coded_val; Comment=foo; Domain=example.com; '"
                    },
                    {
                        "line_number": 461,
                        "content": "'Set-Cookie: key=coded_val; Comment=foo; Domain=example.com; '"
                    },
                    {
                        "line_number": 466,
                        "content": "'<Morsel: key=coded_val; Comment=foo; Domain=example.com; '"
                    },
                    {
                        "line_number": 469,
                        "content": "'Set-Cookie: key=coded_val; Comment=foo; Domain=example.com; '"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_mailbox.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\test\\test_mailbox.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 158,
                        "content": "key = self._box.add(f)"
                    },
                    {
                        "line_number": 166,
                        "content": "key = self._box.add(f)"
                    },
                    {
                        "line_number": 175,
                        "content": "key = self._box.add(f)"
                    },
                    {
                        "line_number": 181,
                        "content": "key = self._box.add(io.StringIO(self._template % \"0\"))"
                    },
                    {
                        "line_number": 1028,
                        "content": "key = self._box.add('From foo@bar blah\\nFrom: foo\\n\\n0\\n')"
                    },
                    {
                        "line_number": 1034,
                        "content": "key = self._box.add(b'From foo@bar blah\\nFrom: foo\\n\\n0\\n')"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_mailbox.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\test\\test_mailbox.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 1028,
                        "content": "key = self._box.add('From foo@bar blah\\nFrom: foo\\n\\n0\\n')"
                    },
                    {
                        "line_number": 1034,
                        "content": "key = self._box.add(b'From foo@bar blah\\nFrom: foo\\n\\n0\\n')"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_mailcap.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\test\\test_mailcap.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 196,
                        "content": "#   keyword args: key=\"view\", filename=\"/dev/null\", plist=[]"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_pathlib.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\test\\test_pathlib.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 1783,
                        "content": "entries.sort(key=lambda entry: entry.name)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_pydoc.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\test\\test_pydoc.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1434,
                        "content": "(\"get?key=\", \"Pydoc: Index of Modules\"),"
                    },
                    {
                        "line_number": 1439,
                        "content": "(\"get?key=pydoc\", \"Pydoc: module pydoc\"),"
                    },
                    {
                        "line_number": 1440,
                        "content": "(\"search?key=pydoc\", \"Pydoc: Search Results\"),"
                    },
                    {
                        "line_number": 1442,
                        "content": "(\"topic?key=STRINGS\", \"Pydoc: TOPIC STRINGS\"),"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_pydoc.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\test\\test_pydoc.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 1442,
                        "content": "(\"topic?key=STRINGS\", \"Pydoc: TOPIC STRINGS\"),"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_selectors.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\test\\test_selectors.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 70,
                        "content": "key = s.register(rd, selectors.EVENT_READ, \"data\")"
                    },
                    {
                        "line_number": 152,
                        "content": "key = s.register(rd, selectors.EVENT_READ)"
                    },
                    {
                        "line_number": 165,
                        "content": "key = s.register(rd, selectors.EVENT_READ, d1)"
                    },
                    {
                        "line_number": 233,
                        "content": "key = s.register(rd, selectors.EVENT_READ, \"data\")"
                    },
                    {
                        "line_number": 249,
                        "content": "key = s.register(rd, selectors.EVENT_READ, \"data\")"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_selectors.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\test\\test_selectors.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 70,
                        "content": "key = s.register(rd, selectors.EVENT_READ, \"data\")"
                    },
                    {
                        "line_number": 152,
                        "content": "key = s.register(rd, selectors.EVENT_READ)"
                    },
                    {
                        "line_number": 165,
                        "content": "key = s.register(rd, selectors.EVENT_READ, d1)"
                    },
                    {
                        "line_number": 233,
                        "content": "key = s.register(rd, selectors.EVENT_READ, \"data\")"
                    },
                    {
                        "line_number": 249,
                        "content": "key = s.register(rd, selectors.EVENT_READ, \"data\")"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_set.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\test\\test_set.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 441,
                        "content": "key = self.thetype([3, 4])"
                    },
                    {
                        "line_number": 1740,
                        "content": "self.assertEqual(sorted(cons(g(s)), key=repr), sorted(g(s), key=repr))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_set.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\test\\test_set.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 1740,
                        "content": "self.assertEqual(sorted(cons(g(s)), key=repr), sorted(g(s), key=repr))"
                    },
                    {
                        "line_number": 1755,
                        "content": "self.assertEqual(sorted(actual, key=repr), sorted(expected, key=repr))"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_smtplib.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\test\\test_smtplib.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 1198,
                        "content": "hashlib.md5()"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "test_socket.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\test\\test_socket.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 6344,
                        "content": "key = b\"Python loves AF_ALG\""
                    },
                    {
                        "line_number": 6358,
                        "content": "key = bytes.fromhex('06a9214036b8a15b512e03d534120006')"
                    },
                    {
                        "line_number": 6399,
                        "content": "key = bytes.fromhex('c939cc13397c1d37de6ae0e1cb7c423c')"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_sort.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\test\\test_sort.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 259,
                        "content": "copy2.sort(key=lambda x: x[0], reverse=True)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_sort.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\test\\test_sort.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 189,
                        "content": "data.sort(key=lambda t: t[0])   # sort on the random first field"
                    },
                    {
                        "line_number": 259,
                        "content": "copy2.sort(key=lambda x: x[0], reverse=True)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_stringprep.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\test\\test_stringprep.py",
                "vulnerability": "SHA-1",
                "lines": [
                    {
                        "line_number": 87,
                        "content": "#     h = hashlib.sha1()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collisions."
            },
            {
                "language": "Python",
                "filename": "test_thread.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\test\\test_thread.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 38,
                        "content": "key = threading_helper.threading_setup()"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_unicodedata.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\test\\test_unicodedata.py",
                "vulnerability": "SHA-1",
                "lines": [
                    {
                        "line_number": 26,
                        "content": "h = hashlib.sha1()"
                    },
                    {
                        "line_number": 80,
                        "content": "h = hashlib.sha1()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collisions."
            },
            {
                "language": "Python",
                "filename": "test_urllib2_localnet.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\test\\test_urllib2_localnet.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 107,
                        "content": "nonce = hashlib.md5(str(self._request_num).encode(\"ascii\")).hexdigest()"
                    },
                    {
                        "line_number": 135,
                        "content": "HA1 = hashlib.md5(HA1_str.encode(\"ascii\")).hexdigest()"
                    },
                    {
                        "line_number": 137,
                        "content": "HA2 = hashlib.md5(HA2_str.encode(\"ascii\")).hexdigest()"
                    },
                    {
                        "line_number": 142,
                        "content": "response = hashlib.md5(response_str.encode(\"ascii\")).hexdigest()"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "test_winreg.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\test\\test_winreg.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 122,
                        "content": "key = OpenKey(root_key, test_key_name)"
                    },
                    {
                        "line_number": 157,
                        "content": "key = OpenKey(root_key, test_key_name, 0, KEY_ALL_ACCESS)"
                    },
                    {
                        "line_number": 181,
                        "content": "key = OpenKey(root_key, test_key_name)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_xml_etree.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\test\\test_xml_etree.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 318,
                        "content": "self.serialize_check(element, '<tag key=\"value\" />') # 1"
                    },
                    {
                        "line_number": 328,
                        "content": "self.serialize_check(element, '<tag key=\"value\" />') # 5"
                    },
                    {
                        "line_number": 332,
                        "content": "self.serialize_check(element, '<tag key=\"value\" />') # 6"
                    },
                    {
                        "line_number": 742,
                        "content": "<a:element key='value'>text</a:element>"
                    },
                    {
                        "line_number": 1214,
                        "content": "'<ns0:tag xmlns:ns0=\"uri\" ns0:key=\"value\" />') # 2.1"
                    },
                    {
                        "line_number": 1219,
                        "content": "'<ns0:tag xmlns:ns0=\"uri\" ns0:key=\"value\" />') # 2.2"
                    },
                    {
                        "line_number": 3684,
                        "content": "\"<tag key=\\\"&lt;&amp;&quot;'&gt;\\\" />\" % enc).encode(enc))"
                    },
                    {
                        "line_number": 3700,
                        "content": "self.assertEqual(serialize(elem), '<tag key=\"\\xe5\\xf6\\xf6&lt;&gt;\" />')"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_xml_etree.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\test\\test_xml_etree.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 474,
                        "content": "'   <element key=\"value\">text</element>\\n'"
                    },
                    {
                        "line_number": 496,
                        "content": "'   <element key=\"value\">text</element>\\n'"
                    },
                    {
                        "line_number": 506,
                        "content": "'   <element key=\"value\">text</element>\\n'"
                    },
                    {
                        "line_number": 1427,
                        "content": "self._feed(parser, \"<root>\\n  <element key='value'>text</element>\\n\")"
                    },
                    {
                        "line_number": 1782,
                        "content": "'   <element key=\"value\">text</element>\\n'"
                    },
                    {
                        "line_number": 3704,
                        "content": "b'<tag key=\"&#229;&#246;&#246;&lt;&gt;\" />')"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "_test_embed_set_config.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\test\\_test_embed_set_config.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 147,
                        "content": "with self.subTest(key=key, value=value, exc_type=exc_type):"
                    },
                    {
                        "line_number": 162,
                        "content": "with self.subTest(sys=sys_attr, key=key, value=value):"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "make_ssl_certs.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\test\\certdata\\make_ssl_certs.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 228,
                        "content": "cert, key = make_cert_key('localhost', ext='req_x509_extensions_simple')"
                    },
                    {
                        "line_number": 246,
                        "content": "cert, key = make_cert_key('fakehostname', ext='req_x509_extensions_simple')"
                    },
                    {
                        "line_number": 251,
                        "content": "cert, key = make_cert_key('localhost', sign=True)"
                    },
                    {
                        "line_number": 256,
                        "content": "cert, key = make_cert_key('fakehostname', sign=True)"
                    },
                    {
                        "line_number": 262,
                        "content": "'localhost-ecc', sign=True, key='param:secp384r1.pem'"
                    },
                    {
                        "line_number": 282,
                        "content": "cert, key = make_cert_key('allsans', sign=True, extra_san='\\n'.join(extra_san))"
                    },
                    {
                        "line_number": 299,
                        "content": "cert, key = make_cert_key('idnsans', sign=True, extra_san='\\n'.join(extra_san))"
                    },
                    {
                        "line_number": 304,
                        "content": "cert, key = make_cert_key('nosan', sign=True, ext='req_x509_extensions_nosan')"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "make_ssl_certs.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\test\\certdata\\make_ssl_certs.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 228,
                        "content": "cert, key = make_cert_key('localhost', ext='req_x509_extensions_simple')"
                    },
                    {
                        "line_number": 251,
                        "content": "cert, key = make_cert_key('localhost', sign=True)"
                    },
                    {
                        "line_number": 304,
                        "content": "cert, key = make_cert_key('nosan', sign=True, ext='req_x509_extensions_nosan')"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "threading_helper.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\test\\support\\threading_helper.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 64,
                        "content": "key = threading_setup()"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_api.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\test\\test_importlib\\test_api.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 398,
                        "content": "key = os.path.abspath('gobledeegook')"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_path.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\test\\test_importlib\\import_\\test_path.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 205,
                        "content": "key = os.path.abspath('finder_to_invalidate')"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_misc.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\test\\test_tomllib\\test_misc.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 114,
                        "content": "recursive_table_toml = nest_count * \"key = {\" + nest_count * \"}\""
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_zoneinfo.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\test\\test_zoneinfo\\test_zoneinfo.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 170,
                        "content": "key = next(iter(self.zones()))"
                    },
                    {
                        "line_number": 192,
                        "content": "key = next(iter(self.zones()))"
                    },
                    {
                        "line_number": 254,
                        "content": "key = next(iter(self.zones()))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "_parser.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\tomllib\\_parser.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 287,
                        "content": "pos, key = parse_key(src, pos)"
                    },
                    {
                        "line_number": 305,
                        "content": "pos, key = parse_key(src, pos)"
                    },
                    {
                        "line_number": 360,
                        "content": "pos, key = parse_key(src, pos)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "request.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\urllib\\request.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1605,
                        "content": "key = user, host, port, '/'.join(dirs), timeout"
                    },
                    {
                        "line_number": 2065,
                        "content": "key = user, host, port, '/'.join(dirs)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "request.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\urllib\\request.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 1422,
                        "content": "\"\"\"Parse list of key=value strings where keys are not duplicated.\"\"\""
                    },
                    {
                        "line_number": 2335,
                        "content": "key = realm + '@' + host.lower()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "request.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\urllib\\request.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 1211,
                        "content": "H = lambda x: hashlib.md5(x.encode(\"ascii\")).hexdigest()"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "request.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\urllib\\request.py",
                "vulnerability": "SHA-1",
                "lines": [
                    {
                        "line_number": 1143,
                        "content": "dig = hashlib.sha1(b).hexdigest()"
                    },
                    {
                        "line_number": 1213,
                        "content": "H = lambda x: hashlib.sha1(x.encode(\"ascii\")).hexdigest()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collisions."
            },
            {
                "language": "Python",
                "filename": "minidom.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\xml\\dom\\minidom.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1586,
                        "content": "key = element.tagName"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "ElementTree.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\xml\\etree\\ElementTree.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 886,
                        "content": "key=lambda x: x[1]):  # sort on prefix"
                    },
                    {
                        "line_number": 938,
                        "content": "key=lambda x: x[1]):  # sort on prefix"
                    },
                    {
                        "line_number": 1945,
                        "content": "qnames, key=lambda n: n.split('}', 1))}"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "_tzpath.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\zoneinfo\\_tzpath.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 152,
                        "content": "key = os.path.relpath(fpath, start=tz_root)"
                    },
                    {
                        "line_number": 154,
                        "content": "key = key.replace(os.sep, \"/\")"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "_tzpath.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\lib\\python3.11\\zoneinfo\\_tzpath.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 152,
                        "content": "key = os.path.relpath(fpath, start=tz_root)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "glib_gdb.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\share\\glib-2.0\\gdb\\glib_gdb.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 140,
                        "content": "key = self.keys[self.pos]"
                    },
                    {
                        "line_number": 150,
                        "content": "key = (\"[%dk]\" % (self.pos), key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "glib_gdb.py",
                "path": "C:/Program Files\\GNU Octave\\Octave-9.2.0\\usr\\share\\glib-2.0\\gdb\\glib_gdb.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 144,
                        "content": "key = key.cast(gdb.lookup_type(\"char\").pointer())"
                    },
                    {
                        "line_number": 150,
                        "content": "key = (\"[%dk]\" % (self.pos), key)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "type_printers.py",
                "path": "C:/Program Files\\JetBrains\\CLion 2022.2.4\\bin\\gdb\\win\\share\\gdb\\python\\gdb\\command\\type_printers.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 35,
                        "content": "sorted_type_printers = sorted(copy.copy(type_printers), key=lambda x: x.name)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "natvis_parser.py",
                "path": "C:/Program Files\\JetBrains\\CLion 2022.2.4\\bin\\helpers\\jb_declarative_formatters\\parsers\\natvis\\natvis_parser.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 135,
                        "content": "intrinsics.sort(key=lambda x: len(x[0]), reverse=True)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "__init__.py",
                "path": "C:/Program Files\\JetBrains\\CLion 2022.2.4\\bin\\lldb\\win\\x64\\lib\\site-packages\\lldb\\__init__.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 3732,
                        "content": "key = key * self.item_size # SBData uses byte-based indexes, but we want to use itemsize-based indexes here"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "__init__.py",
                "path": "C:/Program Files\\JetBrains\\CLion 2022.2.4\\bin\\lldb\\win\\x86\\lib\\site-packages\\lldb\\__init__.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 3732,
                        "content": "key = key * self.item_size # SBData uses byte-based indexes, but we want to use itemsize-based indexes here"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "misc.py",
                "path": "C:/Program Files\\JetBrains\\CLion 2022.2.4\\plugins\\python-ce\\helpers\\coveragepy\\coverage\\misc.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 177,
                        "content": "self.md5 = hashlib.md5()"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "summary.py",
                "path": "C:/Program Files\\JetBrains\\CLion 2022.2.4\\plugins\\python-ce\\helpers\\coveragepy\\coverage\\summary.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 122,
                        "content": "lines.sort(key=lambda l: (l[1][position], l[0]))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "summary.py",
                "path": "C:/Program Files\\JetBrains\\CLion 2022.2.4\\plugins\\python-ce\\helpers\\coveragepy\\coverage\\summary.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 122,
                        "content": "lines.sort(key=lambda l: (l[1][position], l[0]))"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "apidoc.py",
                "path": "C:/Program Files\\JetBrains\\CLion 2022.2.4\\plugins\\python-ce\\helpers\\epydoc\\apidoc.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1724,
                        "content": "key=lambda d: (len(d.canonical_name), d.canonical_name))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "compat.py",
                "path": "C:/Program Files\\JetBrains\\CLion 2022.2.4\\plugins\\python-ce\\helpers\\epydoc\\compat.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 219,
                        "content": "#                 elif key == 'const': const = val"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "compat.py",
                "path": "C:/Program Files\\JetBrains\\CLion 2022.2.4\\plugins\\python-ce\\helpers\\epydoc\\compat.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 217,
                        "content": "#                 if key == 'action': action = val"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "html.py",
                "path": "C:/Program Files\\JetBrains\\CLion 2022.2.4\\plugins\\python-ce\\helpers\\epydoc\\docwriter\\html.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 3435,
                        "content": "key = self.htmlwriter._term_index_to_anchor(indexterm)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "constants.py",
                "path": "C:/Program Files\\JetBrains\\CLion 2022.2.4\\plugins\\python-ce\\helpers\\generator3\\constants.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 422,
                        "content": "(\"itertools\", None, \"groupby\"): (\"(iterable, key=None)\", LIST_LIT),"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "util_methods.py",
                "path": "C:/Program Files\\JetBrains\\CLion 2022.2.4\\plugins\\python-ce\\helpers\\generator3\\util_methods.py",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 816,
                        "content": "return hashlib.sha256(binary_or_file).hexdigest()"
                    },
                    {
                        "line_number": 818,
                        "content": "acc = hashlib.sha256()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Python",
                "filename": "collections.py",
                "path": "C:/Program Files\\JetBrains\\CLion 2022.2.4\\plugins\\python-ce\\helpers\\pockets\\collections.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 459,
                        "content": "def uniquify(x, key=lambda o: o, cls=None):"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "math2html.py",
                "path": "C:/Program Files\\JetBrains\\CLion 2022.2.4\\plugins\\python-ce\\helpers\\py2only\\docutils\\utils\\math\\math2html.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 924,
                        "content": "key = self.readequalskey(arg, args)"
                    },
                    {
                        "line_number": 3835,
                        "content": "key = self.getparameter('name')"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "__init__.py",
                "path": "C:/Program Files\\JetBrains\\CLion 2022.2.4\\plugins\\python-ce\\helpers\\py2only\\docutils\\writers\\html4css1\\__init__.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1352,
                        "content": "not (key == 'classes' and value in"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "__init__.py",
                "path": "C:/Program Files\\JetBrains\\CLion 2022.2.4\\plugins\\python-ce\\helpers\\py2only\\docutils\\writers\\html4css1\\__init__.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 1352,
                        "content": "not (key == 'classes' and value in"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "math2html.py",
                "path": "C:/Program Files\\JetBrains\\CLion 2022.2.4\\plugins\\python-ce\\helpers\\py3only\\docutils\\utils\\math\\math2html.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 921,
                        "content": "key = self.readequalskey(arg, args)"
                    },
                    {
                        "line_number": 3817,
                        "content": "key = self.getparameter('name')"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "__init__.py",
                "path": "C:/Program Files\\JetBrains\\CLion 2022.2.4\\plugins\\python-ce\\helpers\\py3only\\docutils\\writers\\html4css1\\__init__.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1354,
                        "content": "not (key == 'classes' and value in"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "__init__.py",
                "path": "C:/Program Files\\JetBrains\\CLion 2022.2.4\\plugins\\python-ce\\helpers\\py3only\\docutils\\writers\\html4css1\\__init__.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 1354,
                        "content": "not (key == 'classes' and value in"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "messages.py",
                "path": "C:/Program Files\\JetBrains\\CLion 2022.2.4\\plugins\\python-ce\\helpers\\pycharm\\teamcity\\messages.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 218,
                        "content": "self.message('buildStatisticValue', key='CodeCoverageAbsLCovered', value=str(linesCovered))"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "pylint_reporter.py",
                "path": "C:/Program Files\\JetBrains\\CLion 2022.2.4\\plugins\\python-ce\\helpers\\pycharm\\teamcity\\pylint_reporter.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 91,
                        "content": "self.tc.message('buildStatisticValue', key='PyLintScore', value=str(score))"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "breakpoint.py",
                "path": "C:/Program Files\\JetBrains\\CLion 2022.2.4\\plugins\\python-ce\\helpers\\pydev\\pydevd_attach_to_process\\winappdbg\\breakpoint.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 2268,
                        "content": "key = (dwProcessId, bp.get_address())"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "crash.py",
                "path": "C:/Program Files\\JetBrains\\CLion 2022.2.4\\plugins\\python-ce\\helpers\\pydev\\pydevd_attach_to_process\\winappdbg\\crash.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1265,
                        "content": "key = key.decode('hex')"
                    },
                    {
                        "line_number": 1267,
                        "content": "key = zlib.decompress(key)"
                    },
                    {
                        "line_number": 1268,
                        "content": "key = pickle.loads(key)"
                    },
                    {
                        "line_number": 1405,
                        "content": "key  = self.__keys_iter.next()"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "isort.py",
                "path": "C:/Program Files\\JetBrains\\CLion 2022.2.4\\plugins\\python-ce\\helpers\\pydev\\third_party\\isort_container\\isort\\isort.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 389,
                        "content": "from_imports = nsorted(from_imports, key=lambda key: self._module_key(key, self.config, True, ignore_case))"
                    },
                    {
                        "line_number": 523,
                        "content": "straight_modules = nsorted(straight_modules, key=lambda key: self._module_key(key, self.config))"
                    },
                    {
                        "line_number": 525,
                        "content": "from_modules = nsorted(from_modules, key=lambda key: self._module_key(key, self.config))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "pie_slice.py",
                "path": "C:/Program Files\\JetBrains\\CLion 2022.2.4\\plugins\\python-ce\\helpers\\pydev\\third_party\\isort_container\\isort\\pie_slice.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 387,
                        "content": "key = reversed(self).next()"
                    },
                    {
                        "line_number": 389,
                        "content": "key = iter(self).next()"
                    },
                    {
                        "line_number": 578,
                        "content": "key = self.end[1][0] if last else self.end[2][0]"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "pie_slice.py",
                "path": "C:/Program Files\\JetBrains\\CLion 2022.2.4\\plugins\\python-ce\\helpers\\pydev\\third_party\\isort_container\\isort\\pie_slice.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 578,
                        "content": "key = self.end[1][0] if last else self.end[2][0]"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "autopep8.py",
                "path": "C:/Program Files\\JetBrains\\CLion 2022.2.4\\plugins\\python-ce\\helpers\\pydev\\third_party\\pep8\\autopep8.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1484,
                        "content": "key = pep8_result['id'].lower()"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "autopep8.py",
                "path": "C:/Program Files\\JetBrains\\CLion 2022.2.4\\plugins\\python-ce\\helpers\\pydev\\third_party\\pep8\\autopep8.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 1484,
                        "content": "key = pep8_result['id'].lower()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "pydevd_comm.py",
                "path": "C:/Program Files\\JetBrains\\CLion 2022.2.4\\plugins\\python-ce\\helpers\\pydev\\_pydevd_bundle\\pydevd_comm.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 1253,
                        "content": "keys.sort(key=compare_object_attrs_key)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "pydev_runfiles_parallel.py",
                "path": "C:/Program Files\\JetBrains\\CLion 2022.2.4\\plugins\\python-ce\\helpers\\pydev\\_pydev_runfiles\\pydev_runfiles_parallel.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 69,
                        "content": "key = (test.__pydev_pyfile__, test.__pydev_module_name__)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "lex.py",
                "path": "C:/Program Files\\JetBrains\\CLion 2022.2.4\\plugins\\python-ce\\helpers\\third_party\\thriftpy\\_shaded_ply\\lex.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 726,
                        "content": "s.sort(key=lambda x: len(x[1]), reverse=True)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "lex.py",
                "path": "C:/Program Files\\JetBrains\\CLion 2022.2.4\\plugins\\python-ce\\helpers\\third_party\\thriftpy\\_shaded_ply\\lex.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 722,
                        "content": "f.sort(key=lambda x: x[1].__code__.co_firstlineno)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "misc.py",
                "path": "C:/Program Files\\JetBrains\\PyCharm 2023.3.3\\plugins\\python\\helpers\\coveragepy_new\\coverage\\misc.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 395,
                        "content": "return sorted(items, key=lambda pair: (human_key(pair[0]), pair[1]), reverse=reverse)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "summary.py",
                "path": "C:/Program Files\\JetBrains\\PyCharm 2023.3.3\\plugins\\python\\helpers\\coveragepy_new\\coverage\\summary.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 107,
                        "content": "lines.sort(key=lambda l: (l[1][position], l[0]), reverse=reverse)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "summary.py",
                "path": "C:/Program Files\\JetBrains\\PyCharm 2023.3.3\\plugins\\python\\helpers\\coveragepy_new\\coverage\\summary.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 107,
                        "content": "lines.sort(key=lambda l: (l[1][position], l[0]), reverse=reverse)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "files.py",
                "path": "C:/Program Files\\JetBrains\\PyCharm 2023.3.3\\plugins\\python\\helpers\\coveragepy_old\\coverage\\files.py",
                "vulnerability": "SHA-1",
                "lines": [
                    {
                        "line_number": 96,
                        "content": "h = hashlib.sha1(name.encode('UTF-8')).hexdigest()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collisions."
            },
            {
                "language": "Python",
                "filename": "misc.py",
                "path": "C:/Program Files\\JetBrains\\PyCharm 2023.3.3\\plugins\\python\\helpers\\coveragepy_old\\coverage\\misc.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 203,
                        "content": "self.md5 = hashlib.md5()"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "summary.py",
                "path": "C:/Program Files\\JetBrains\\PyCharm 2023.3.3\\plugins\\python\\helpers\\coveragepy_old\\coverage\\summary.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 107,
                        "content": "lines.sort(key=lambda l: (l[1][position], l[0]), reverse=reverse)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "summary.py",
                "path": "C:/Program Files\\JetBrains\\PyCharm 2023.3.3\\plugins\\python\\helpers\\coveragepy_old\\coverage\\summary.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 107,
                        "content": "lines.sort(key=lambda l: (l[1][position], l[0]), reverse=reverse)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "apidoc.py",
                "path": "C:/Program Files\\JetBrains\\PyCharm 2023.3.3\\plugins\\python\\helpers\\epydoc\\apidoc.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1724,
                        "content": "key=lambda d: (len(d.canonical_name), d.canonical_name))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "compat.py",
                "path": "C:/Program Files\\JetBrains\\PyCharm 2023.3.3\\plugins\\python\\helpers\\epydoc\\compat.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 219,
                        "content": "#                 elif key == 'const': const = val"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "compat.py",
                "path": "C:/Program Files\\JetBrains\\PyCharm 2023.3.3\\plugins\\python\\helpers\\epydoc\\compat.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 217,
                        "content": "#                 if key == 'action': action = val"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "html.py",
                "path": "C:/Program Files\\JetBrains\\PyCharm 2023.3.3\\plugins\\python\\helpers\\epydoc\\docwriter\\html.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 3435,
                        "content": "key = self.htmlwriter._term_index_to_anchor(indexterm)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "constants.py",
                "path": "C:/Program Files\\JetBrains\\PyCharm 2023.3.3\\plugins\\python\\helpers\\generator3\\constants.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 426,
                        "content": "(\"itertools\", None, \"groupby\"): (\"(iterable, key=None)\", LIST_LIT),"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "util_methods.py",
                "path": "C:/Program Files\\JetBrains\\PyCharm 2023.3.3\\plugins\\python\\helpers\\generator3\\util_methods.py",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 816,
                        "content": "return hashlib.sha256(binary_or_file).hexdigest()"
                    },
                    {
                        "line_number": 818,
                        "content": "acc = hashlib.sha256()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Python",
                "filename": "collections.py",
                "path": "C:/Program Files\\JetBrains\\PyCharm 2023.3.3\\plugins\\python\\helpers\\pockets\\collections.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 459,
                        "content": "def uniquify(x, key=lambda o: o, cls=None):"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "math2html.py",
                "path": "C:/Program Files\\JetBrains\\PyCharm 2023.3.3\\plugins\\python\\helpers\\py2only\\docutils\\utils\\math\\math2html.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 924,
                        "content": "key = self.readequalskey(arg, args)"
                    },
                    {
                        "line_number": 3835,
                        "content": "key = self.getparameter('name')"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "__init__.py",
                "path": "C:/Program Files\\JetBrains\\PyCharm 2023.3.3\\plugins\\python\\helpers\\py2only\\docutils\\writers\\html4css1\\__init__.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1352,
                        "content": "not (key == 'classes' and value in"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "__init__.py",
                "path": "C:/Program Files\\JetBrains\\PyCharm 2023.3.3\\plugins\\python\\helpers\\py2only\\docutils\\writers\\html4css1\\__init__.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 1352,
                        "content": "not (key == 'classes' and value in"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "math2html.py",
                "path": "C:/Program Files\\JetBrains\\PyCharm 2023.3.3\\plugins\\python\\helpers\\py3only\\docutils\\utils\\math\\math2html.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 921,
                        "content": "key = self.readequalskey(arg, args)"
                    },
                    {
                        "line_number": 3817,
                        "content": "key = self.getparameter('name')"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "__init__.py",
                "path": "C:/Program Files\\JetBrains\\PyCharm 2023.3.3\\plugins\\python\\helpers\\py3only\\docutils\\writers\\html4css1\\__init__.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1354,
                        "content": "not (key == 'classes' and value in"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "__init__.py",
                "path": "C:/Program Files\\JetBrains\\PyCharm 2023.3.3\\plugins\\python\\helpers\\py3only\\docutils\\writers\\html4css1\\__init__.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 1354,
                        "content": "not (key == 'classes' and value in"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "messages.py",
                "path": "C:/Program Files\\JetBrains\\PyCharm 2023.3.3\\plugins\\python\\helpers\\pycharm\\teamcity\\messages.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 218,
                        "content": "self.message('buildStatisticValue', key='CodeCoverageAbsLCovered', value=str(linesCovered))"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "pylint_reporter.py",
                "path": "C:/Program Files\\JetBrains\\PyCharm 2023.3.3\\plugins\\python\\helpers\\pycharm\\teamcity\\pylint_reporter.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 91,
                        "content": "self.tc.message('buildStatisticValue', key='PyLintScore', value=str(score))"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "breakpoint.py",
                "path": "C:/Program Files\\JetBrains\\PyCharm 2023.3.3\\plugins\\python\\helpers\\pydev\\pydevd_attach_to_process\\winappdbg\\breakpoint.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 2268,
                        "content": "key = (dwProcessId, bp.get_address())"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "crash.py",
                "path": "C:/Program Files\\JetBrains\\PyCharm 2023.3.3\\plugins\\python\\helpers\\pydev\\pydevd_attach_to_process\\winappdbg\\crash.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1265,
                        "content": "key = key.decode('hex')"
                    },
                    {
                        "line_number": 1267,
                        "content": "key = zlib.decompress(key)"
                    },
                    {
                        "line_number": 1268,
                        "content": "key = pickle.loads(key)"
                    },
                    {
                        "line_number": 1405,
                        "content": "key  = self.__keys_iter.next()"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "isort.py",
                "path": "C:/Program Files\\JetBrains\\PyCharm 2023.3.3\\plugins\\python\\helpers\\pydev\\third_party\\isort_container\\isort\\isort.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 389,
                        "content": "from_imports = nsorted(from_imports, key=lambda key: self._module_key(key, self.config, True, ignore_case))"
                    },
                    {
                        "line_number": 523,
                        "content": "straight_modules = nsorted(straight_modules, key=lambda key: self._module_key(key, self.config))"
                    },
                    {
                        "line_number": 525,
                        "content": "from_modules = nsorted(from_modules, key=lambda key: self._module_key(key, self.config))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "pie_slice.py",
                "path": "C:/Program Files\\JetBrains\\PyCharm 2023.3.3\\plugins\\python\\helpers\\pydev\\third_party\\isort_container\\isort\\pie_slice.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 387,
                        "content": "key = reversed(self).next()"
                    },
                    {
                        "line_number": 389,
                        "content": "key = iter(self).next()"
                    },
                    {
                        "line_number": 578,
                        "content": "key = self.end[1][0] if last else self.end[2][0]"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "pie_slice.py",
                "path": "C:/Program Files\\JetBrains\\PyCharm 2023.3.3\\plugins\\python\\helpers\\pydev\\third_party\\isort_container\\isort\\pie_slice.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 578,
                        "content": "key = self.end[1][0] if last else self.end[2][0]"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "autopep8.py",
                "path": "C:/Program Files\\JetBrains\\PyCharm 2023.3.3\\plugins\\python\\helpers\\pydev\\third_party\\pep8\\autopep8.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1484,
                        "content": "key = pep8_result['id'].lower()"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "autopep8.py",
                "path": "C:/Program Files\\JetBrains\\PyCharm 2023.3.3\\plugins\\python\\helpers\\pydev\\third_party\\pep8\\autopep8.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 1484,
                        "content": "key = pep8_result['id'].lower()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "pydevd_comm.py",
                "path": "C:/Program Files\\JetBrains\\PyCharm 2023.3.3\\plugins\\python\\helpers\\pydev\\_pydevd_bundle\\pydevd_comm.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 1255,
                        "content": "keys.sort(key=compare_object_attrs_key)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "pydev_runfiles_parallel.py",
                "path": "C:/Program Files\\JetBrains\\PyCharm 2023.3.3\\plugins\\python\\helpers\\pydev\\_pydev_runfiles\\pydev_runfiles_parallel.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 69,
                        "content": "key = (test.__pydev_pyfile__, test.__pydev_module_name__)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "lex.py",
                "path": "C:/Program Files\\JetBrains\\PyCharm 2023.3.3\\plugins\\python\\helpers\\third_party\\thriftpy\\_shaded_ply\\lex.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 726,
                        "content": "s.sort(key=lambda x: len(x[1]), reverse=True)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "lex.py",
                "path": "C:/Program Files\\JetBrains\\PyCharm 2023.3.3\\plugins\\python\\helpers\\third_party\\thriftpy\\_shaded_ply\\lex.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 722,
                        "content": "f.sort(key=lambda x: x[1].__code__.co_firstlineno)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "stubsabot.py",
                "path": "C:/Program Files\\JetBrains\\PyCharm 2023.3.3\\plugins\\python\\helpers\\typeshed\\scripts\\stubsabot.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 113,
                        "content": "release_info = sorted(self.releases[version], key=lambda x: bool(x[\"packagetype\"] == \"bdist_wheel\"))[-1]"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "misc.py",
                "path": "C:/Program Files\\JetBrains\\PyCharm Community Edition 2023.2.2\\plugins\\python-ce\\helpers\\coveragepy_new\\coverage\\misc.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 395,
                        "content": "return sorted(items, key=lambda pair: (human_key(pair[0]), pair[1]), reverse=reverse)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "summary.py",
                "path": "C:/Program Files\\JetBrains\\PyCharm Community Edition 2023.2.2\\plugins\\python-ce\\helpers\\coveragepy_new\\coverage\\summary.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 107,
                        "content": "lines.sort(key=lambda l: (l[1][position], l[0]), reverse=reverse)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "summary.py",
                "path": "C:/Program Files\\JetBrains\\PyCharm Community Edition 2023.2.2\\plugins\\python-ce\\helpers\\coveragepy_new\\coverage\\summary.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 107,
                        "content": "lines.sort(key=lambda l: (l[1][position], l[0]), reverse=reverse)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "files.py",
                "path": "C:/Program Files\\JetBrains\\PyCharm Community Edition 2023.2.2\\plugins\\python-ce\\helpers\\coveragepy_old\\coverage\\files.py",
                "vulnerability": "SHA-1",
                "lines": [
                    {
                        "line_number": 96,
                        "content": "h = hashlib.sha1(name.encode('UTF-8')).hexdigest()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collisions."
            },
            {
                "language": "Python",
                "filename": "misc.py",
                "path": "C:/Program Files\\JetBrains\\PyCharm Community Edition 2023.2.2\\plugins\\python-ce\\helpers\\coveragepy_old\\coverage\\misc.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 203,
                        "content": "self.md5 = hashlib.md5()"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "summary.py",
                "path": "C:/Program Files\\JetBrains\\PyCharm Community Edition 2023.2.2\\plugins\\python-ce\\helpers\\coveragepy_old\\coverage\\summary.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 107,
                        "content": "lines.sort(key=lambda l: (l[1][position], l[0]), reverse=reverse)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "summary.py",
                "path": "C:/Program Files\\JetBrains\\PyCharm Community Edition 2023.2.2\\plugins\\python-ce\\helpers\\coveragepy_old\\coverage\\summary.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 107,
                        "content": "lines.sort(key=lambda l: (l[1][position], l[0]), reverse=reverse)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "apidoc.py",
                "path": "C:/Program Files\\JetBrains\\PyCharm Community Edition 2023.2.2\\plugins\\python-ce\\helpers\\epydoc\\apidoc.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1724,
                        "content": "key=lambda d: (len(d.canonical_name), d.canonical_name))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "compat.py",
                "path": "C:/Program Files\\JetBrains\\PyCharm Community Edition 2023.2.2\\plugins\\python-ce\\helpers\\epydoc\\compat.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 219,
                        "content": "#                 elif key == 'const': const = val"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "compat.py",
                "path": "C:/Program Files\\JetBrains\\PyCharm Community Edition 2023.2.2\\plugins\\python-ce\\helpers\\epydoc\\compat.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 217,
                        "content": "#                 if key == 'action': action = val"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "html.py",
                "path": "C:/Program Files\\JetBrains\\PyCharm Community Edition 2023.2.2\\plugins\\python-ce\\helpers\\epydoc\\docwriter\\html.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 3435,
                        "content": "key = self.htmlwriter._term_index_to_anchor(indexterm)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "constants.py",
                "path": "C:/Program Files\\JetBrains\\PyCharm Community Edition 2023.2.2\\plugins\\python-ce\\helpers\\generator3\\constants.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 426,
                        "content": "(\"itertools\", None, \"groupby\"): (\"(iterable, key=None)\", LIST_LIT),"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "util_methods.py",
                "path": "C:/Program Files\\JetBrains\\PyCharm Community Edition 2023.2.2\\plugins\\python-ce\\helpers\\generator3\\util_methods.py",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 816,
                        "content": "return hashlib.sha256(binary_or_file).hexdigest()"
                    },
                    {
                        "line_number": 818,
                        "content": "acc = hashlib.sha256()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Python",
                "filename": "collections.py",
                "path": "C:/Program Files\\JetBrains\\PyCharm Community Edition 2023.2.2\\plugins\\python-ce\\helpers\\pockets\\collections.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 459,
                        "content": "def uniquify(x, key=lambda o: o, cls=None):"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "math2html.py",
                "path": "C:/Program Files\\JetBrains\\PyCharm Community Edition 2023.2.2\\plugins\\python-ce\\helpers\\py2only\\docutils\\utils\\math\\math2html.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 924,
                        "content": "key = self.readequalskey(arg, args)"
                    },
                    {
                        "line_number": 3835,
                        "content": "key = self.getparameter('name')"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "__init__.py",
                "path": "C:/Program Files\\JetBrains\\PyCharm Community Edition 2023.2.2\\plugins\\python-ce\\helpers\\py2only\\docutils\\writers\\html4css1\\__init__.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1352,
                        "content": "not (key == 'classes' and value in"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "__init__.py",
                "path": "C:/Program Files\\JetBrains\\PyCharm Community Edition 2023.2.2\\plugins\\python-ce\\helpers\\py2only\\docutils\\writers\\html4css1\\__init__.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 1352,
                        "content": "not (key == 'classes' and value in"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "math2html.py",
                "path": "C:/Program Files\\JetBrains\\PyCharm Community Edition 2023.2.2\\plugins\\python-ce\\helpers\\py3only\\docutils\\utils\\math\\math2html.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 921,
                        "content": "key = self.readequalskey(arg, args)"
                    },
                    {
                        "line_number": 3817,
                        "content": "key = self.getparameter('name')"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "__init__.py",
                "path": "C:/Program Files\\JetBrains\\PyCharm Community Edition 2023.2.2\\plugins\\python-ce\\helpers\\py3only\\docutils\\writers\\html4css1\\__init__.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1354,
                        "content": "not (key == 'classes' and value in"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "__init__.py",
                "path": "C:/Program Files\\JetBrains\\PyCharm Community Edition 2023.2.2\\plugins\\python-ce\\helpers\\py3only\\docutils\\writers\\html4css1\\__init__.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 1354,
                        "content": "not (key == 'classes' and value in"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "messages.py",
                "path": "C:/Program Files\\JetBrains\\PyCharm Community Edition 2023.2.2\\plugins\\python-ce\\helpers\\pycharm\\teamcity\\messages.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 218,
                        "content": "self.message('buildStatisticValue', key='CodeCoverageAbsLCovered', value=str(linesCovered))"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "pylint_reporter.py",
                "path": "C:/Program Files\\JetBrains\\PyCharm Community Edition 2023.2.2\\plugins\\python-ce\\helpers\\pycharm\\teamcity\\pylint_reporter.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 91,
                        "content": "self.tc.message('buildStatisticValue', key='PyLintScore', value=str(score))"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "breakpoint.py",
                "path": "C:/Program Files\\JetBrains\\PyCharm Community Edition 2023.2.2\\plugins\\python-ce\\helpers\\pydev\\pydevd_attach_to_process\\winappdbg\\breakpoint.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 2268,
                        "content": "key = (dwProcessId, bp.get_address())"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "crash.py",
                "path": "C:/Program Files\\JetBrains\\PyCharm Community Edition 2023.2.2\\plugins\\python-ce\\helpers\\pydev\\pydevd_attach_to_process\\winappdbg\\crash.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1265,
                        "content": "key = key.decode('hex')"
                    },
                    {
                        "line_number": 1267,
                        "content": "key = zlib.decompress(key)"
                    },
                    {
                        "line_number": 1268,
                        "content": "key = pickle.loads(key)"
                    },
                    {
                        "line_number": 1405,
                        "content": "key  = self.__keys_iter.next()"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "isort.py",
                "path": "C:/Program Files\\JetBrains\\PyCharm Community Edition 2023.2.2\\plugins\\python-ce\\helpers\\pydev\\third_party\\isort_container\\isort\\isort.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 389,
                        "content": "from_imports = nsorted(from_imports, key=lambda key: self._module_key(key, self.config, True, ignore_case))"
                    },
                    {
                        "line_number": 523,
                        "content": "straight_modules = nsorted(straight_modules, key=lambda key: self._module_key(key, self.config))"
                    },
                    {
                        "line_number": 525,
                        "content": "from_modules = nsorted(from_modules, key=lambda key: self._module_key(key, self.config))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "pie_slice.py",
                "path": "C:/Program Files\\JetBrains\\PyCharm Community Edition 2023.2.2\\plugins\\python-ce\\helpers\\pydev\\third_party\\isort_container\\isort\\pie_slice.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 387,
                        "content": "key = reversed(self).next()"
                    },
                    {
                        "line_number": 389,
                        "content": "key = iter(self).next()"
                    },
                    {
                        "line_number": 578,
                        "content": "key = self.end[1][0] if last else self.end[2][0]"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "pie_slice.py",
                "path": "C:/Program Files\\JetBrains\\PyCharm Community Edition 2023.2.2\\plugins\\python-ce\\helpers\\pydev\\third_party\\isort_container\\isort\\pie_slice.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 578,
                        "content": "key = self.end[1][0] if last else self.end[2][0]"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "autopep8.py",
                "path": "C:/Program Files\\JetBrains\\PyCharm Community Edition 2023.2.2\\plugins\\python-ce\\helpers\\pydev\\third_party\\pep8\\autopep8.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1484,
                        "content": "key = pep8_result['id'].lower()"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "autopep8.py",
                "path": "C:/Program Files\\JetBrains\\PyCharm Community Edition 2023.2.2\\plugins\\python-ce\\helpers\\pydev\\third_party\\pep8\\autopep8.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 1484,
                        "content": "key = pep8_result['id'].lower()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "pydevd_comm.py",
                "path": "C:/Program Files\\JetBrains\\PyCharm Community Edition 2023.2.2\\plugins\\python-ce\\helpers\\pydev\\_pydevd_bundle\\pydevd_comm.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 1253,
                        "content": "keys.sort(key=compare_object_attrs_key)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "pydev_runfiles_parallel.py",
                "path": "C:/Program Files\\JetBrains\\PyCharm Community Edition 2023.2.2\\plugins\\python-ce\\helpers\\pydev\\_pydev_runfiles\\pydev_runfiles_parallel.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 69,
                        "content": "key = (test.__pydev_pyfile__, test.__pydev_module_name__)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "lex.py",
                "path": "C:/Program Files\\JetBrains\\PyCharm Community Edition 2023.2.2\\plugins\\python-ce\\helpers\\third_party\\thriftpy\\_shaded_ply\\lex.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 726,
                        "content": "s.sort(key=lambda x: len(x[1]), reverse=True)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "lex.py",
                "path": "C:/Program Files\\JetBrains\\PyCharm Community Edition 2023.2.2\\plugins\\python-ce\\helpers\\third_party\\thriftpy\\_shaded_ply\\lex.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 722,
                        "content": "f.sort(key=lambda x: x[1].__code__.co_firstlineno)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "stubsabot.py",
                "path": "C:/Program Files\\JetBrains\\PyCharm Community Edition 2023.2.2\\plugins\\python-ce\\helpers\\typeshed\\scripts\\stubsabot.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 96,
                        "content": "release_info = sorted(self.releases[version], key=lambda x: bool(x[\"packagetype\"] == \"bdist_wheel\"))[-1]"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "unohelper.py",
                "path": "C:/Program Files\\LibreOffice\\program\\unohelper.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 141,
                        "content": "key = regKey.createKey( keyName )"
                    },
                    {
                        "line_number": 174,
                        "content": "key = regKey.createKey( keyName )"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "antigravity.py",
                "path": "C:/Program Files\\LibreOffice\\program\\python-core-3.7.7\\lib\\antigravity.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 15,
                        "content": "h = hashlib.md5(datedow).hexdigest()"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "configparser.py",
                "path": "C:/Program Files\\LibreOffice\\program\\python-core-3.7.7\\lib\\configparser.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 747,
                        "content": "key = self.optionxform(str(key))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "configparser.py",
                "path": "C:/Program Files\\LibreOffice\\program\\python-core-3.7.7\\lib\\configparser.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 747,
                        "content": "key = self.optionxform(str(key))"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "enum.py",
                "path": "C:/Program Files\\LibreOffice\\program\\python-core-3.7.7\\lib\\enum.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 85,
                        "content": "if key == '_generate_next_value_':"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "functools.py",
                "path": "C:/Program Files\\LibreOffice\\program\\python-core-3.7.7\\lib\\functools.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 527,
                        "content": "key = make_key(args, kwds, typed)"
                    },
                    {
                        "line_number": 542,
                        "content": "key = make_key(args, kwds, typed)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "gettext.py",
                "path": "C:/Program Files\\LibreOffice\\program\\python-core-3.7.7\\lib\\gettext.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 529,
                        "content": "key = (class_, os.path.abspath(mofile))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "gettext.py",
                "path": "C:/Program Files\\LibreOffice\\program\\python-core-3.7.7\\lib\\gettext.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 529,
                        "content": "key = (class_, os.path.abspath(mofile))"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "hashlib.py",
                "path": "C:/Program Files\\LibreOffice\\program\\python-core-3.7.7\\lib\\hashlib.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 43,
                        "content": ">>> m = hashlib.md5()"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "hashlib.py",
                "path": "C:/Program Files\\LibreOffice\\program\\python-core-3.7.7\\lib\\hashlib.py",
                "vulnerability": "SHA-224",
                "lines": [
                    {
                        "line_number": 51,
                        "content": ">>> hashlib.sha224(b\"Nobody inspects the spammish repetition\").hexdigest()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-224 provides reduced security compared to larger variants."
            },
            {
                "language": "Python",
                "filename": "hmac.py",
                "path": "C:/Program Files\\LibreOffice\\program\\python-core-3.7.7\\lib\\hmac.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 87,
                        "content": "key = self.digest_cons(key).digest()"
                    },
                    {
                        "line_number": 182,
                        "content": "key = digest_cons(key).digest()"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "hmac.py",
                "path": "C:/Program Files\\LibreOffice\\program\\python-core-3.7.7\\lib\\hmac.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 89,
                        "content": "key = key.ljust(blocksize, b'\\0')"
                    },
                    {
                        "line_number": 182,
                        "content": "key = digest_cons(key).digest()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "hmac.py",
                "path": "C:/Program Files\\LibreOffice\\program\\python-core-3.7.7\\lib\\hmac.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 41,
                        "content": "Defaults to hashlib.md5."
                    },
                    {
                        "line_number": 42,
                        "content": "Implicit default to hashlib.md5 is deprecated since Python"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "mailbox.py",
                "path": "C:/Program Files\\LibreOffice\\program\\python-core-3.7.7\\lib\\mailbox.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 1250,
                        "content": "key = _singlefileMailbox.add(self, message)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "mailcap.py",
                "path": "C:/Program Files\\LibreOffice\\program\\python-core-3.7.7\\lib\\mailcap.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 104,
                        "content": "key = '/'.join(types).lower()"
                    },
                    {
                        "line_number": 159,
                        "content": "def findmatch(caps, MIMEtype, key='view', filename=\"/dev/null\", plist=[]):"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "os.py",
                "path": "C:/Program Files\\LibreOffice\\program\\python-core-3.7.7\\lib\\os.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 685,
                        "content": "key = self.encodekey(key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "pickle.py",
                "path": "C:/Program Files\\LibreOffice\\program\\python-core-3.7.7\\lib\\pickle.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 1409,
                        "content": "key = _inverted_registry.get(code)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "poplib.py",
                "path": "C:/Program Files\\LibreOffice\\program\\python-core-3.7.7\\lib\\poplib.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 330,
                        "content": "digest = hashlib.md5(digest).hexdigest()"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "pyclbr.py",
                "path": "C:/Program Files\\LibreOffice\\program\\python-core-3.7.7\\lib\\pyclbr.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 378,
                        "content": "objs = sorted(tree.values(), key=lineno_key, reverse=True)"
                    },
                    {
                        "line_number": 390,
                        "content": "key=lineno_key, reverse=True)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "pydoc.py",
                "path": "C:/Program Files\\LibreOffice\\program\\python-core-3.7.7\\lib\\pydoc.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 2103,
                        "content": "def run(self, callback, key=None, completer=None, onerror=None):"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "pydoc.py",
                "path": "C:/Program Files\\LibreOffice\\program\\python-core-3.7.7\\lib\\pydoc.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 2352,
                        "content": "return '<a href=\"getfile?key=%s\">%s</a>' % (url, path)"
                    },
                    {
                        "line_number": 2436,
                        "content": "'key = %s' % key, '#ffffff', '#ee77aa', '<br>'.join(results))"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "selectors.py",
                "path": "C:/Program Files\\LibreOffice\\program\\python-core-3.7.7\\lib\\selectors.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 249,
                        "content": "key = self._fd_to_key.pop(self._fileobj_lookup(fileobj))"
                    },
                    {
                        "line_number": 256,
                        "content": "key = self._fd_to_key[self._fileobj_lookup(fileobj)]"
                    },
                    {
                        "line_number": 299,
                        "content": "key = super().register(fileobj, events, data)"
                    },
                    {
                        "line_number": 352,
                        "content": "key = super().register(fileobj, events, data)"
                    },
                    {
                        "line_number": 377,
                        "content": "key = self._fd_to_key[self._fileobj_lookup(fileobj)]"
                    },
                    {
                        "line_number": 517,
                        "content": "key = super().register(fileobj, events, data)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "selectors.py",
                "path": "C:/Program Files\\LibreOffice\\program\\python-core-3.7.7\\lib\\selectors.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 249,
                        "content": "key = self._fd_to_key.pop(self._fileobj_lookup(fileobj))"
                    },
                    {
                        "line_number": 261,
                        "content": "key = self.register(fileobj, events, data)"
                    },
                    {
                        "line_number": 299,
                        "content": "key = super().register(fileobj, events, data)"
                    },
                    {
                        "line_number": 352,
                        "content": "key = super().register(fileobj, events, data)"
                    },
                    {
                        "line_number": 517,
                        "content": "key = super().register(fileobj, events, data)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "symtable.py",
                "path": "C:/Program Files\\LibreOffice\\program\\python-core-3.7.7\\lib\\symtable.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 28,
                        "content": "key = table, filename"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "tarfile.py",
                "path": "C:/Program Files\\LibreOffice\\program\\python-core-3.7.7\\lib\\tarfile.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 2003,
                        "content": "directories.sort(key=lambda a: a.name)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "trace.py",
                "path": "C:/Program Files\\LibreOffice\\program\\python-core-3.7.7\\lib\\trace.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 568,
                        "content": "key = filename, lineno"
                    },
                    {
                        "line_number": 595,
                        "content": "key = filename, lineno"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "warnings.py",
                "path": "C:/Program Files\\LibreOffice\\program\\python-core-3.7.7\\lib\\warnings.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 358,
                        "content": "key = (text, category, lineno)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "warnings.py",
                "path": "C:/Program Files\\LibreOffice\\program\\python-core-3.7.7\\lib\\warnings.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 358,
                        "content": "key = (text, category, lineno)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "weakref.py",
                "path": "C:/Program Files\\LibreOffice\\program\\python-core-3.7.7\\lib\\weakref.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 620,
                        "content": "L.sort(key=lambda item:item[1].index)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "__init__.py",
                "path": "C:/Program Files\\LibreOffice\\program\\python-core-3.7.7\\lib\\collections\\__init__.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 124,
                        "content": "link.prev, link.next, link.key = last, root, key"
                    },
                    {
                        "line_number": 585,
                        "content": "return sorted(self.items(), key=_itemgetter(1), reverse=True)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "__init__.py",
                "path": "C:/Program Files\\LibreOffice\\program\\python-core-3.7.7\\lib\\collections\\__init__.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 585,
                        "content": "return sorted(self.items(), key=_itemgetter(1), reverse=True)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "msvc9compiler.py",
                "path": "C:/Program Files\\LibreOffice\\program\\python-core-3.7.7\\lib\\distutils\\msvc9compiler.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 159,
                        "content": "key = RegEnumKey(h, 0)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "msvccompiler.py",
                "path": "C:/Program Files\\LibreOffice\\program\\python-core-3.7.7\\lib\\distutils\\msvccompiler.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 138,
                        "content": "key = RegEnumKey(h, 0)"
                    },
                    {
                        "line_number": 598,
                        "content": "key = (r\"%s\\%0.1f\\VC\\VC_OBJECTS_PLATFORM_INFO\\Win32\\Directories\""
                    },
                    {
                        "line_number": 601,
                        "content": "key = (r\"%s\\6.0\\Build System\\Components\\Platforms\""
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "msvccompiler.py",
                "path": "C:/Program Files\\LibreOffice\\program\\python-core-3.7.7\\lib\\distutils\\msvccompiler.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 601,
                        "content": "key = (r\"%s\\6.0\\Build System\\Components\\Platforms\""
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "_msvccompiler.py",
                "path": "C:/Program Files\\LibreOffice\\program\\python-core-3.7.7\\lib\\distutils\\_msvccompiler.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 32,
                        "content": "key = winreg.OpenKeyEx("
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "upload.py",
                "path": "C:/Program Files\\LibreOffice\\program\\python-core-3.7.7\\lib\\distutils\\command\\upload.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 105,
                        "content": "'md5_digest': hashlib.md5(content).hexdigest(),"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "cookiejar.py",
                "path": "C:/Program Files\\LibreOffice\\program\\python-core-3.7.7\\lib\\http\\cookiejar.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1301,
                        "content": "cookies.sort(key=lambda a: len(a.path), reverse=True)"
                    },
                    {
                        "line_number": 1639,
                        "content": "key = ns_cookie.domain, ns_cookie.path, ns_cookie.name"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "cookies.py",
                "path": "C:/Program Files\\LibreOffice\\program\\python-core-3.7.7\\lib\\http\\cookies.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 407,
                        "content": "if key == \"expires\" and isinstance(value, int):"
                    },
                    {
                        "line_number": 409,
                        "content": "elif key == \"max-age\" and isinstance(value, int):"
                    },
                    {
                        "line_number": 411,
                        "content": "elif key == \"comment\" and isinstance(value, str):"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "topics.py",
                "path": "C:/Program Files\\LibreOffice\\program\\python-core-3.7.7\\lib\\pydoc_data\\topics.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 13010,
                        "content": "'      \"key=str.lower\"). The key corresponding to each item in '"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "request.py",
                "path": "C:/Program Files\\LibreOffice\\program\\python-core-3.7.7\\lib\\urllib\\request.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1576,
                        "content": "key = user, host, port, '/'.join(dirs), timeout"
                    },
                    {
                        "line_number": 2036,
                        "content": "key = user, host, port, '/'.join(dirs)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "request.py",
                "path": "C:/Program Files\\LibreOffice\\program\\python-core-3.7.7\\lib\\urllib\\request.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 1392,
                        "content": "\"\"\"Parse list of key=value strings where keys are not duplicated.\"\"\""
                    },
                    {
                        "line_number": 2299,
                        "content": "key = realm + '@' + host.lower()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "request.py",
                "path": "C:/Program Files\\LibreOffice\\program\\python-core-3.7.7\\lib\\urllib\\request.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 1181,
                        "content": "H = lambda x: hashlib.md5(x.encode(\"ascii\")).hexdigest()"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "request.py",
                "path": "C:/Program Files\\LibreOffice\\program\\python-core-3.7.7\\lib\\urllib\\request.py",
                "vulnerability": "SHA-1",
                "lines": [
                    {
                        "line_number": 1113,
                        "content": "dig = hashlib.sha1(b).hexdigest()"
                    },
                    {
                        "line_number": 1183,
                        "content": "H = lambda x: hashlib.sha1(x.encode(\"ascii\")).hexdigest()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collisions."
            },
            {
                "language": "Python",
                "filename": "minidom.py",
                "path": "C:/Program Files\\LibreOffice\\program\\python-core-3.7.7\\lib\\xml\\dom\\minidom.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1559,
                        "content": "key = element.tagName"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "ElementTree.py",
                "path": "C:/Program Files\\LibreOffice\\program\\python-core-3.7.7\\lib\\xml\\etree\\ElementTree.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 921,
                        "content": "key=lambda x: x[1]):  # sort on prefix"
                    },
                    {
                        "line_number": 977,
                        "content": "key=lambda x: x[1]):  # sort on prefix"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "lightproof_impl_en.py",
                "path": "C:/Program Files\\LibreOffice\\share\\extensions\\dict-en\\pythonpath\\lightproof_impl_en.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 331,
                        "content": "a.sort(key=lambda x: len(x)) # sort by string length"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "common.py",
                "path": "C:/Program Files\\nodejs\\node_modules\\npm\\node_modules\\node-gyp\\gyp\\pylib\\gyp\\common.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 547,
                        "content": "key = self.end[1][0] if last else self.end[2][0]"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "common.py",
                "path": "C:/Program Files\\nodejs\\node_modules\\npm\\node_modules\\node-gyp\\gyp\\pylib\\gyp\\common.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 547,
                        "content": "key = self.end[1][0] if last else self.end[2][0]"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "input.py",
                "path": "C:/Program Files\\nodejs\\node_modules\\npm\\node_modules\\node-gyp\\gyp\\pylib\\gyp\\input.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1287,
                        "content": "if key == 'variables' or type(value) is str:"
                    },
                    {
                        "line_number": 1916,
                        "content": "elif key == 'link_settings':"
                    },
                    {
                        "line_number": 2730,
                        "content": "key = subdir + ':' + name"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "MSVSNew.py",
                "path": "C:/Program Files\\nodejs\\node_modules\\npm\\node_modules\\node-gyp\\gyp\\pylib\\gyp\\MSVSNew.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 48,
                        "content": "d = hashlib.md5((str(seed) + str(name)).encode('utf-8')).hexdigest().upper()"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "xcodeproj_file.py",
                "path": "C:/Program Files\\nodejs\\node_modules\\npm\\node_modules\\node-gyp\\gyp\\pylib\\gyp\\xcodeproj_file.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 670,
                        "content": "if key == 'settings' and isinstance(self, PBXBuildFile):"
                    },
                    {
                        "line_number": 677,
                        "content": "if key == 'buildSettings' and isinstance(self, XCBuildConfiguration):"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "xcodeproj_file.py",
                "path": "C:/Program Files\\nodejs\\node_modules\\npm\\node_modules\\node-gyp\\gyp\\pylib\\gyp\\xcodeproj_file.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 1145,
                        "content": "key = (child_name, child_path)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "xcodeproj_file.py",
                "path": "C:/Program Files\\nodejs\\node_modules\\npm\\node_modules\\node-gyp\\gyp\\pylib\\gyp\\xcodeproj_file.py",
                "vulnerability": "SHA-1",
                "lines": [
                    {
                        "line_number": 421,
                        "content": "seed_hash = hashlib.sha1()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collisions."
            },
            {
                "language": "Python",
                "filename": "eclipse.py",
                "path": "C:/Program Files\\nodejs\\node_modules\\npm\\node_modules\\node-gyp\\gyp\\pylib\\gyp\\generator\\eclipse.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 248,
                        "content": "key = cpp_line_parts[1]"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "make.py",
                "path": "C:/Program Files\\nodejs\\node_modules\\npm\\node_modules\\node-gyp\\gyp\\pylib\\gyp\\generator\\make.py",
                "vulnerability": "SHA-1",
                "lines": [
                    {
                        "line_number": 1779,
                        "content": "cmddigest = hashlib.sha1((command or self.target).encode('utf-8')).hexdigest()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collisions."
            },
            {
                "language": "Python",
                "filename": "ninja.py",
                "path": "C:/Program Files\\nodejs\\node_modules\\npm\\node_modules\\node-gyp\\gyp\\pylib\\gyp\\generator\\ninja.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 735,
                        "content": "hashlib.md5(outputs[0]).hexdigest()))"
                    },
                    {
                        "line_number": 2317,
                        "content": "hash_for_rules = hashlib.md5(qualified_target_for_hash).hexdigest()"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "obspython.py",
                "path": "C:/Program Files\\obs-studio\\data\\obs-scripting\\32bit\\obspython.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 3417,
                        "content": "key = _swig_property(_obspython.obs_key_combination_key_get, _obspython.obs_key_combination_key_set)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "obspython.py",
                "path": "C:/Program Files\\obs-studio\\data\\obs-scripting\\64bit\\obspython.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 3417,
                        "content": "key = _swig_property(_obspython.obs_key_combination_key_get, _obspython.obs_key_combination_key_set)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "sublime.py",
                "path": "C:/Program Files\\Sublime Text 3\\Lib\\python33\\sublime.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 182,
                        "content": "hashlib.md5(open(executable_path(), 'rb').read()).hexdigest())"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "sublime.py",
                "path": "C:/Program Files\\Sublime Text 3\\Lib\\python38\\sublime.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 748,
                        "content": "hashlib.md5(open(executable_path(), 'rb').read()).hexdigest())"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "collections.py",
                "path": "C:/Program Files (x86)\\Dev-Cpp\\MinGW64\\bin\\lib\\collections.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 470,
                        "content": "return sorted(self.iteritems(), key=_itemgetter(1), reverse=True)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "collections.py",
                "path": "C:/Program Files (x86)\\Dev-Cpp\\MinGW64\\bin\\lib\\collections.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 160,
                        "content": "key = next(reversed(self) if last else iter(self))"
                    },
                    {
                        "line_number": 470,
                        "content": "return sorted(self.iteritems(), key=_itemgetter(1), reverse=True)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "ConfigParser.py",
                "path": "C:/Program Files (x86)\\Dev-Cpp\\MinGW64\\bin\\lib\\ConfigParser.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 412,
                        "content": "key = \" = \".join((key, str(value).replace('\\n', '\\n\\t')))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "cookielib.py",
                "path": "C:/Program Files (x86)\\Dev-Cpp\\MinGW64\\bin\\lib\\cookielib.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1263,
                        "content": "cookies.sort(key=lambda arg: len(arg.path), reverse=True)"
                    },
                    {
                        "line_number": 1600,
                        "content": "key = ns_cookie.domain, ns_cookie.path, ns_cookie.name"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "cookielib.py",
                "path": "C:/Program Files (x86)\\Dev-Cpp\\MinGW64\\bin\\lib\\cookielib.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 1263,
                        "content": "cookies.sort(key=lambda arg: len(arg.path), reverse=True)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "gettext.py",
                "path": "C:/Program Files (x86)\\Dev-Cpp\\MinGW64\\bin\\lib\\gettext.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 474,
                        "content": "key = (class_, os.path.abspath(mofile))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "gettext.py",
                "path": "C:/Program Files (x86)\\Dev-Cpp\\MinGW64\\bin\\lib\\gettext.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 474,
                        "content": "key = (class_, os.path.abspath(mofile))"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "hashlib.py",
                "path": "C:/Program Files (x86)\\Dev-Cpp\\MinGW64\\bin\\lib\\hashlib.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 44,
                        "content": ">>> m = hashlib.md5()"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "hashlib.py",
                "path": "C:/Program Files (x86)\\Dev-Cpp\\MinGW64\\bin\\lib\\hashlib.py",
                "vulnerability": "SHA-224",
                "lines": [
                    {
                        "line_number": 52,
                        "content": ">>> hashlib.sha224(\"Nobody inspects the spammish repetition\").hexdigest()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-224 provides reduced security compared to larger variants."
            },
            {
                "language": "Python",
                "filename": "hmac.py",
                "path": "C:/Program Files (x86)\\Dev-Cpp\\MinGW64\\bin\\lib\\hmac.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 72,
                        "content": "key = self.digest_cons(key).digest()"
                    },
                    {
                        "line_number": 74,
                        "content": "key = key + chr(0) * (blocksize - len(key))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "hmac.py",
                "path": "C:/Program Files (x86)\\Dev-Cpp\\MinGW64\\bin\\lib\\hmac.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 37,
                        "content": "Defaults to hashlib.md5."
                    },
                    {
                        "line_number": 45,
                        "content": "digestmod = hashlib.md5"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "mailbox.py",
                "path": "C:/Program Files (x86)\\Dev-Cpp\\MinGW64\\bin\\lib\\mailbox.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 1237,
                        "content": "key = _singlefileMailbox.add(self, message)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "mailcap.py",
                "path": "C:/Program Files (x86)\\Dev-Cpp\\MinGW64\\bin\\lib\\mailcap.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 83,
                        "content": "key = '/'.join(types).lower()"
                    },
                    {
                        "line_number": 138,
                        "content": "def findmatch(caps, MIMEtype, key='view', filename=\"/dev/null\", plist=[]):"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "mhlib.py",
                "path": "C:/Program Files (x86)\\Dev-Cpp\\MinGW64\\bin\\lib\\mhlib.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 312,
                        "content": "key = fields[0].strip()"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "pickle.py",
                "path": "C:/Program Files (x86)\\Dev-Cpp\\MinGW64\\bin\\lib\\pickle.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 1115,
                        "content": "key = _inverted_registry.get(code)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "poplib.py",
                "path": "C:/Program Files (x86)\\Dev-Cpp\\MinGW64\\bin\\lib\\poplib.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 286,
                        "content": "digest = hashlib.md5(m.group(1)+secret).digest()"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "pydoc.py",
                "path": "C:/Program Files (x86)\\Dev-Cpp\\MinGW64\\bin\\lib\\pydoc.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1983,
                        "content": "def run(self, callback, key=None, completer=None, onerror=None):"
                    },
                    {
                        "line_number": 2226,
                        "content": "key = self.search_ent.get()"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "site.py",
                "path": "C:/Program Files (x86)\\Dev-Cpp\\MinGW64\\bin\\lib\\site.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 420,
                        "content": "key = raw_input(prompt)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "symtable.py",
                "path": "C:/Program Files (x86)\\Dev-Cpp\\MinGW64\\bin\\lib\\symtable.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 28,
                        "content": "key = table, filename"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "trace.py",
                "path": "C:/Program Files (x86)\\Dev-Cpp\\MinGW64\\bin\\lib\\trace.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 618,
                        "content": "key = filename, lineno"
                    },
                    {
                        "line_number": 645,
                        "content": "key = filename, lineno"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "urllib.py",
                "path": "C:/Program Files (x86)\\Dev-Cpp\\MinGW64\\bin\\lib\\urllib.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 532,
                        "content": "key = user, host, port, '/'.join(dirs)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "urllib.py",
                "path": "C:/Program Files (x86)\\Dev-Cpp\\MinGW64\\bin\\lib\\urllib.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 783,
                        "content": "key = realm + '@' + host.lower()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "urllib2.py",
                "path": "C:/Program Files (x86)\\Dev-Cpp\\MinGW64\\bin\\lib\\urllib2.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1437,
                        "content": "key = user, host, port, '/'.join(dirs), timeout"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "urllib2.py",
                "path": "C:/Program Files (x86)\\Dev-Cpp\\MinGW64\\bin\\lib\\urllib2.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 1250,
                        "content": "\"\"\"Parse list of key=value strings where keys are not duplicated.\"\"\""
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "urllib2.py",
                "path": "C:/Program Files (x86)\\Dev-Cpp\\MinGW64\\bin\\lib\\urllib2.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 1060,
                        "content": "H = lambda x: hashlib.md5(x).hexdigest()"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "urllib2.py",
                "path": "C:/Program Files (x86)\\Dev-Cpp\\MinGW64\\bin\\lib\\urllib2.py",
                "vulnerability": "SHA-1",
                "lines": [
                    {
                        "line_number": 990,
                        "content": "dig = hashlib.sha1(\"%s:%s:%s:%s\" % (self.nonce_count, nonce, time.ctime(),"
                    },
                    {
                        "line_number": 1062,
                        "content": "H = lambda x: hashlib.sha1(x).hexdigest()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collisions."
            },
            {
                "language": "Python",
                "filename": "warnings.py",
                "path": "C:/Program Files (x86)\\Dev-Cpp\\MinGW64\\bin\\lib\\warnings.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 230,
                        "content": "key = (text, category, lineno)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "warnings.py",
                "path": "C:/Program Files (x86)\\Dev-Cpp\\MinGW64\\bin\\lib\\warnings.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 230,
                        "content": "key = (text, category, lineno)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "xmllib.py",
                "path": "C:/Program Files (x86)\\Dev-Cpp\\MinGW64\\bin\\lib\\xmllib.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 652,
                        "content": "key = ans + ' ' + key"
                    },
                    {
                        "line_number": 654,
                        "content": "key = aprefix + ':' + key"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "zipfile.py",
                "path": "C:/Program Files (x86)\\Dev-Cpp\\MinGW64\\bin\\lib\\zipfile.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 746,
                        "content": "self.mode = key = mode.replace('b', '')[0]"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "zipfile.py",
                "path": "C:/Program Files (x86)\\Dev-Cpp\\MinGW64\\bin\\lib\\zipfile.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 746,
                        "content": "self.mode = key = mode.replace('b', '')[0]"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "_threading_local.py",
                "path": "C:/Program Files (x86)\\Dev-Cpp\\MinGW64\\bin\\lib\\_threading_local.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 153,
                        "content": "key = '_local__key', 'thread.local.' + str(id(self))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "_threading_local.py",
                "path": "C:/Program Files (x86)\\Dev-Cpp\\MinGW64\\bin\\lib\\_threading_local.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 153,
                        "content": "key = '_local__key', 'thread.local.' + str(id(self))"
                    },
                    {
                        "line_number": 170,
                        "content": "key = object.__getattribute__(self, '_local__key')"
                    },
                    {
                        "line_number": 226,
                        "content": "key = object.__getattribute__(self, '_local__key')"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "__init__.py",
                "path": "C:/Program Files (x86)\\Dev-Cpp\\MinGW64\\bin\\lib\\bsddb\\__init__.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 119,
                        "content": "key = _DeadlockWrap(cur.first, 0,0,0)[0]"
                    },
                    {
                        "line_number": 125,
                        "content": "key = _DeadlockWrap(next, 0,0,0)[0]"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_all.py",
                "path": "C:/Program Files (x86)\\Dev-Cpp\\MinGW64\\bin\\lib\\bsddb\\test\\test_all.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 148,
                        "content": "v=self._dbcursor.pget(key=key, data=data, flags=flags)"
                    },
                    {
                        "line_number": 354,
                        "content": "key = self._callback(key, data)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_all.py",
                "path": "C:/Program Files (x86)\\Dev-Cpp\\MinGW64\\bin\\lib\\bsddb\\test\\test_all.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 135,
                        "content": "def pget(self, key=None, data=None, flags=0) :"
                    },
                    {
                        "line_number": 354,
                        "content": "key = self._callback(key, data)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_basics.py",
                "path": "C:/Program Files (x86)\\Dev-Cpp\\MinGW64\\bin\\lib\\bsddb\\test\\test_basics.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 109,
                        "content": "key = '%04d' % (self._numKeys - x)  # insert keys in reverse order"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_basics.py",
                "path": "C:/Program Files (x86)\\Dev-Cpp\\MinGW64\\bin\\lib\\bsddb\\test\\test_basics.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 109,
                        "content": "key = '%04d' % (self._numKeys - x)  # insert keys in reverse order"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_cursor_pget_bug.py",
                "path": "C:/Program Files (x86)\\Dev-Cpp\\MinGW64\\bin\\lib\\bsddb\\test\\test_cursor_pget_bug.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 40,
                        "content": "self.assertEqual(('eggs', 'salad', 'eggs'), cursor.pget(key='eggs', flags=db.DB_SET))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_dbenv.py",
                "path": "C:/Program Files (x86)\\Dev-Cpp\\MinGW64\\bin\\lib\\bsddb\\test\\test_dbenv.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 420,
                        "content": "self.db.put(key = i, data = i*int(i), txn=txn)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_dbenv.py",
                "path": "C:/Program Files (x86)\\Dev-Cpp\\MinGW64\\bin\\lib\\bsddb\\test\\test_dbenv.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 420,
                        "content": "self.db.put(key = i, data = i*int(i), txn=txn)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_dbshelve.py",
                "path": "C:/Program Files (x86)\\Dev-Cpp\\MinGW64\\bin\\lib\\bsddb\\test\\test_dbshelve.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 130,
                        "content": "values.sort(key=lambda x : str(x))"
                    },
                    {
                        "line_number": 131,
                        "content": "dbvalues.sort(key=lambda x : str(x))"
                    },
                    {
                        "line_number": 360,
                        "content": "key = self.intkey_map[intkey]"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_sequence.py",
                "path": "C:/Program Files (x86)\\Dev-Cpp\\MinGW64\\bin\\lib\\bsddb\\test\\test_sequence.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 36,
                        "content": "self.assertEqual(None, self.seq.open(key='id', txn=None, flags=db.DB_CREATE))"
                    },
                    {
                        "line_number": 95,
                        "content": "key='id', txn=None, flags=0)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_sequence.py",
                "path": "C:/Program Files (x86)\\Dev-Cpp\\MinGW64\\bin\\lib\\bsddb\\test\\test_sequence.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 36,
                        "content": "self.assertEqual(None, self.seq.open(key='id', txn=None, flags=db.DB_CREATE))"
                    },
                    {
                        "line_number": 49,
                        "content": "self.assertEqual(None, self.seq.open(key=key, txn=None, flags=db.DB_CREATE))"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "transformer.py",
                "path": "C:/Program Files (x86)\\Dev-Cpp\\MinGW64\\bin\\lib\\compiler\\transformer.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 1229,
                        "content": "key = self.com_node(nodelist[0])"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "msvc9compiler.py",
                "path": "C:/Program Files (x86)\\Dev-Cpp\\MinGW64\\bin\\lib\\distutils\\msvc9compiler.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 163,
                        "content": "key = RegEnumKey(h, 0)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "msvccompiler.py",
                "path": "C:/Program Files (x86)\\Dev-Cpp\\MinGW64\\bin\\lib\\distutils\\msvccompiler.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 144,
                        "content": "key = RegEnumKey(h, 0)"
                    },
                    {
                        "line_number": 614,
                        "content": "key = (r\"%s\\%0.1f\\VC\\VC_OBJECTS_PLATFORM_INFO\\Win32\\Directories\""
                    },
                    {
                        "line_number": 617,
                        "content": "key = (r\"%s\\6.0\\Build System\\Components\\Platforms\""
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "msvccompiler.py",
                "path": "C:/Program Files (x86)\\Dev-Cpp\\MinGW64\\bin\\lib\\distutils\\msvccompiler.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 617,
                        "content": "key = (r\"%s\\6.0\\Build System\\Components\\Platforms\""
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "mapping_tests.py",
                "path": "C:/Program Files (x86)\\Dev-Cpp\\MinGW64\\bin\\lib\\test\\mapping_tests.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 350,
                        "content": "k.sort(key=lambda k: (id(type(k)), k))"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_bsddb.py",
                "path": "C:/Program Files (x86)\\Dev-Cpp\\MinGW64\\bin\\lib\\test\\test_bsddb.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 177,
                        "content": "key = self.f.first()[0]"
                    },
                    {
                        "line_number": 185,
                        "content": "key = self.f.last()[0]"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_builtin.py",
                "path": "C:/Program Files (x86)\\Dev-Cpp\\MinGW64\\bin\\lib\\test\\test_builtin.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 822,
                        "content": "self.assertEqual(max((1,), key=neg), 1)     # one elem iterable"
                    },
                    {
                        "line_number": 824,
                        "content": "self.assertEqual(max(1, 2, key=neg), 1)     # two elems"
                    },
                    {
                        "line_number": 868,
                        "content": "self.assertEqual(min((1,), key=neg), 1)     # one elem iterable"
                    },
                    {
                        "line_number": 870,
                        "content": "self.assertEqual(min(1, 2, key=neg), 2)     # two elems"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_gdbm.py",
                "path": "C:/Program Files (x86)\\Dev-Cpp\\MinGW64\\bin\\lib\\test\\test_gdbm.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 27,
                        "content": "key = self.g.firstkey()"
                    },
                    {
                        "line_number": 31,
                        "content": "key = self.g.nextkey(key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_hashlib.py",
                "path": "C:/Program Files (x86)\\Dev-Cpp\\MinGW64\\bin\\lib\\test\\test_hashlib.py",
                "vulnerability": "SHA-1",
                "lines": [
                    {
                        "line_number": 359,
                        "content": "hasher = hashlib.sha1()"
                    },
                    {
                        "line_number": 363,
                        "content": "expected_hash = hashlib.sha1(data*num_threads).hexdigest()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collisions."
            },
            {
                "language": "Python",
                "filename": "test_hmac.py",
                "path": "C:/Program Files (x86)\\Dev-Cpp\\MinGW64\\bin\\lib\\test\\test_hmac.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 138,
                        "content": "hmactest(key = ''.join([chr(x) for x in xrange(0x01, 0x19+1)]),"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_hmac.py",
                "path": "C:/Program Files (x86)\\Dev-Cpp\\MinGW64\\bin\\lib\\test\\test_hmac.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 138,
                        "content": "hmactest(key = ''.join([chr(x) for x in xrange(0x01, 0x19+1)]),"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_hmac.py",
                "path": "C:/Program Files (x86)\\Dev-Cpp\\MinGW64\\bin\\lib\\test\\test_hmac.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 259,
                        "content": "self.assertTrue(h.digest_cons == hashlib.md5)"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "test_hmac.py",
                "path": "C:/Program Files (x86)\\Dev-Cpp\\MinGW64\\bin\\lib\\test\\test_hmac.py",
                "vulnerability": "SHA-1",
                "lines": [
                    {
                        "line_number": 49,
                        "content": "h = hmac.HMAC(key, data, digestmod=hashlib.sha1)"
                    },
                    {
                        "line_number": 209,
                        "content": "self._x = hashlib.sha1(*args)"
                    },
                    {
                        "line_number": 249,
                        "content": "h = hmac.HMAC(\"key\", \"\", hashlib.sha1)"
                    },
                    {
                        "line_number": 251,
                        "content": "self.fail(\"Constructor call with hashlib.sha1 raised exception.\")"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collisions."
            },
            {
                "language": "Python",
                "filename": "test_hmac.py",
                "path": "C:/Program Files (x86)\\Dev-Cpp\\MinGW64\\bin\\lib\\test\\test_hmac.py",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 92,
                        "content": "hashlib.sha256: 'b0344c61d8db38535ca8afceaf0bf12b'"
                    },
                    {
                        "line_number": 109,
                        "content": "hashlib.sha256: '5bdcc146bf60754e6a042426089575c7'"
                    },
                    {
                        "line_number": 126,
                        "content": "hashlib.sha256: '773ea91e36800e46854db8ebd09181a7'"
                    },
                    {
                        "line_number": 143,
                        "content": "hashlib.sha256: '82558a389a443c0ea4cc819899f2083a'"
                    },
                    {
                        "line_number": 161,
                        "content": "hashlib.sha256: '60e431591ee0b67f0d8a26aacbf5b77f'"
                    },
                    {
                        "line_number": 182,
                        "content": "hashlib.sha256: '9b09ffa71b942fcb27635fbcd5b0e944'"
                    },
                    {
                        "line_number": 197,
                        "content": "self._rfc4231_test_cases(hashlib.sha256)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Python",
                "filename": "test_hmac.py",
                "path": "C:/Program Files (x86)\\Dev-Cpp\\MinGW64\\bin\\lib\\test\\test_hmac.py",
                "vulnerability": "SHA-224",
                "lines": [
                    {
                        "line_number": 90,
                        "content": "hashlib.sha224: '896fb1128abbdf196832107cd49df33f'"
                    },
                    {
                        "line_number": 107,
                        "content": "hashlib.sha224: 'a30e01098bc6dbbf45690f3a7e9e6d0f'"
                    },
                    {
                        "line_number": 124,
                        "content": "hashlib.sha224: '7fb3cb3588c6c1f6ffa9694d7d6ad264'"
                    },
                    {
                        "line_number": 141,
                        "content": "hashlib.sha224: '6c11506874013cac6a2abc1bb382627c'"
                    },
                    {
                        "line_number": 159,
                        "content": "hashlib.sha224: '95e9a0db962095adaebe9b2d6f0dbce2'"
                    },
                    {
                        "line_number": 180,
                        "content": "hashlib.sha224: '3a854166ac5d9f023f54d517d0b39dbd'"
                    },
                    {
                        "line_number": 194,
                        "content": "self._rfc4231_test_cases(hashlib.sha224)"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-224 provides reduced security compared to larger variants."
            },
            {
                "language": "Python",
                "filename": "test_mailbox.py",
                "path": "C:/Program Files (x86)\\Dev-Cpp\\MinGW64\\bin\\lib\\test\\test_mailbox.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 83,
                        "content": "key = self._box.add(f)"
                    },
                    {
                        "line_number": 897,
                        "content": "key = self._box.add('From foo@bar blah\\nFrom: foo\\n\\n0\\n')"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_mailbox.py",
                "path": "C:/Program Files (x86)\\Dev-Cpp\\MinGW64\\bin\\lib\\test\\test_mailbox.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 88,
                        "content": "key = self._box.add(StringIO.StringIO(self._template % \"0\"))"
                    },
                    {
                        "line_number": 897,
                        "content": "key = self._box.add('From foo@bar blah\\nFrom: foo\\n\\n0\\n')"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_parser.py",
                "path": "C:/Program Files (x86)\\Dev-Cpp\\MinGW64\\bin\\lib\\test\\test_parser.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 99,
                        "content": "self.check_expr(\"foo(key=value, *args, **kw)\")"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_set.py",
                "path": "C:/Program Files (x86)\\Dev-Cpp\\MinGW64\\bin\\lib\\test\\test_set.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 404,
                        "content": "key = self.thetype([3, 4])"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_sort.py",
                "path": "C:/Program Files (x86)\\Dev-Cpp\\MinGW64\\bin\\lib\\test\\test_sort.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 265,
                        "content": "copy2.sort(key=lambda x: x[0], reverse=True)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_sort.py",
                "path": "C:/Program Files (x86)\\Dev-Cpp\\MinGW64\\bin\\lib\\test\\test_sort.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 188,
                        "content": "data.sort(key=lambda x: x[0])   # sort on the random first field"
                    },
                    {
                        "line_number": 265,
                        "content": "copy2.sort(key=lambda x: x[0], reverse=True)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_stringprep.py",
                "path": "C:/Program Files (x86)\\Dev-Cpp\\MinGW64\\bin\\lib\\test\\test_stringprep.py",
                "vulnerability": "SHA-1",
                "lines": [
                    {
                        "line_number": 88,
                        "content": "#     h = hashlib.sha1()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collisions."
            },
            {
                "language": "Python",
                "filename": "test_support.py",
                "path": "C:/Program Files (x86)\\Dev-Cpp\\MinGW64\\bin\\lib\\test\\test_support.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1422,
                        "content": "key = threading_setup()"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_unicodedata.py",
                "path": "C:/Program Files (x86)\\Dev-Cpp\\MinGW64\\bin\\lib\\test\\test_unicodedata.py",
                "vulnerability": "SHA-1",
                "lines": [
                    {
                        "line_number": 26,
                        "content": "h = hashlib.sha1()"
                    },
                    {
                        "line_number": 86,
                        "content": "h = hashlib.sha1()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collisions."
            },
            {
                "language": "Python",
                "filename": "test_urllib2_localnet.py",
                "path": "C:/Program Files (x86)\\Dev-Cpp\\MinGW64\\bin\\lib\\test\\test_urllib2_localnet.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 91,
                        "content": "nonce = hashlib.md5(str(self._request_num)).hexdigest()"
                    },
                    {
                        "line_number": 119,
                        "content": "HA1 = hashlib.md5(HA1_str).hexdigest()"
                    },
                    {
                        "line_number": 121,
                        "content": "HA2 = hashlib.md5(HA2_str).hexdigest()"
                    },
                    {
                        "line_number": 126,
                        "content": "response = hashlib.md5(response_str).hexdigest()"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "test_winreg.py",
                "path": "C:/Program Files (x86)\\Dev-Cpp\\MinGW64\\bin\\lib\\test\\test_winreg.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 127,
                        "content": "key = OpenKey(root_key, test_key_name)"
                    },
                    {
                        "line_number": 162,
                        "content": "key = OpenKey(root_key, test_key_name, 0, KEY_ALL_ACCESS)"
                    },
                    {
                        "line_number": 186,
                        "content": "key = OpenKey(root_key, test_key_name)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_xml_etree.py",
                "path": "C:/Program Files (x86)\\Dev-Cpp\\MinGW64\\bin\\lib\\test\\test_xml_etree.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 958,
                        "content": "'<?xml version=\\'1.0\\' encoding=\\'iso-8859-1\\'?>\\n<tag key=\"\\xe5\\xf6\\xf6&lt;&gt;\" />'"
                    },
                    {
                        "line_number": 1155,
                        "content": "'<ns0:tag xmlns:ns0=\"uri\" xmlns:ns1=\"uri1\" xmlns:ns2=\"uri2\"><tag ns1:key=\"ns2:value\" /><tag ns1:key=\"ns2:value\" /></ns0:tag>'"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_xml_etree.py",
                "path": "C:/Program Files (x86)\\Dev-Cpp\\MinGW64\\bin\\lib\\test\\test_xml_etree.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 952,
                        "content": "'<tag key=\"&#229;&#246;&#246;&lt;&gt;\" />'"
                    },
                    {
                        "line_number": 956,
                        "content": "'<tag key=\"&#229;&#246;&#246;&lt;&gt;\" />'"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "minidom.py",
                "path": "C:/Program Files (x86)\\Dev-Cpp\\MinGW64\\bin\\lib\\xml\\dom\\minidom.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1512,
                        "content": "key = element.tagName"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "ElementTree.py",
                "path": "C:/Program Files (x86)\\Dev-Cpp\\MinGW64\\bin\\lib\\xml\\etree\\ElementTree.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 919,
                        "content": "key=lambda x: x[1]):  # sort on prefix"
                    },
                    {
                        "line_number": 974,
                        "content": "key=lambda x: x[1]):  # sort on prefix"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "type_printers.py",
                "path": "C:/Program Files (x86)\\Dev-Cpp\\MinGW64\\share\\gdb\\python\\gdb\\command\\type_printers.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 37,
                        "content": "key = lambda x: x.name)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "common.py",
                "path": "C:/ProgramData\\alexa\\FACEIT\\app-1.35.1\\resources\\app\\node_modules\\node-gyp\\gyp\\pylib\\gyp\\common.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 565,
                        "content": "key = self.end[1][0] if last else self.end[2][0]"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "common.py",
                "path": "C:/ProgramData\\alexa\\FACEIT\\app-1.35.1\\resources\\app\\node_modules\\node-gyp\\gyp\\pylib\\gyp\\common.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 565,
                        "content": "key = self.end[1][0] if last else self.end[2][0]"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "input.py",
                "path": "C:/ProgramData\\alexa\\FACEIT\\app-1.35.1\\resources\\app\\node_modules\\node-gyp\\gyp\\pylib\\gyp\\input.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1391,
                        "content": "if key == \"variables\" or type(value) is str:"
                    },
                    {
                        "line_number": 2074,
                        "content": "elif key == \"link_settings\":"
                    },
                    {
                        "line_number": 2939,
                        "content": "key = subdir + \":\" + name"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "MSVSNew.py",
                "path": "C:/ProgramData\\alexa\\FACEIT\\app-1.35.1\\resources\\app\\node_modules\\node-gyp\\gyp\\pylib\\gyp\\MSVSNew.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 100,
                        "content": "self.entries = sorted(entries or [], key=attrgetter(\"path\"))"
                    },
                    {
                        "line_number": 252,
                        "content": "all_entries = sorted(all_entries, key=attrgetter(\"path\"))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "MSVSNew.py",
                "path": "C:/ProgramData\\alexa\\FACEIT\\app-1.35.1\\resources\\app\\node_modules\\node-gyp\\gyp\\pylib\\gyp\\MSVSNew.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 48,
                        "content": "d = hashlib.md5((str(seed) + str(name)).encode(\"utf-8\")).hexdigest().upper()"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "MSVSVersion.py",
                "path": "C:/ProgramData\\alexa\\FACEIT\\app-1.35.1\\resources\\app\\node_modules\\node-gyp\\gyp\\pylib\\gyp\\MSVSVersion.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 45,
                        "content": "compatible_sdks.sort(key=lambda v: float(v.replace(\"v\", \"\")), reverse=True)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "xcodeproj_file.py",
                "path": "C:/ProgramData\\alexa\\FACEIT\\app-1.35.1\\resources\\app\\node_modules\\node-gyp\\gyp\\pylib\\gyp\\xcodeproj_file.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 693,
                        "content": "if key == \"settings\" and isinstance(self, PBXBuildFile):"
                    },
                    {
                        "line_number": 700,
                        "content": "if key == \"buildSettings\" and isinstance(self, XCBuildConfiguration):"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "xcodeproj_file.py",
                "path": "C:/ProgramData\\alexa\\FACEIT\\app-1.35.1\\resources\\app\\node_modules\\node-gyp\\gyp\\pylib\\gyp\\xcodeproj_file.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 1216,
                        "content": "key = (child_name, child_path)"
                    },
                    {
                        "line_number": 1490,
                        "content": "self._properties[\"children\"], key=cmp_to_key(lambda x, y: x.Compare(y))"
                    },
                    {
                        "line_number": 2898,
                        "content": "key=cmp_to_key(lambda x, y: x.CompareRootGroup(y)),"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "xcodeproj_file.py",
                "path": "C:/ProgramData\\alexa\\FACEIT\\app-1.35.1\\resources\\app\\node_modules\\node-gyp\\gyp\\pylib\\gyp\\xcodeproj_file.py",
                "vulnerability": "SHA-1",
                "lines": [
                    {
                        "line_number": 433,
                        "content": "seed_hash = hashlib.sha1()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collisions."
            },
            {
                "language": "Python",
                "filename": "eclipse.py",
                "path": "C:/ProgramData\\alexa\\FACEIT\\app-1.35.1\\resources\\app\\node_modules\\node-gyp\\gyp\\pylib\\gyp\\generator\\eclipse.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 250,
                        "content": "key = cpp_line_parts[1]"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "make.py",
                "path": "C:/ProgramData\\alexa\\FACEIT\\app-1.35.1\\resources\\app\\node_modules\\node-gyp\\gyp\\pylib\\gyp\\generator\\make.py",
                "vulnerability": "SHA-1",
                "lines": [
                    {
                        "line_number": 2159,
                        "content": "cmddigest = hashlib.sha1("
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collisions."
            },
            {
                "language": "Python",
                "filename": "ninja.py",
                "path": "C:/ProgramData\\alexa\\FACEIT\\app-1.35.1\\resources\\app\\node_modules\\node-gyp\\gyp\\pylib\\gyp\\generator\\ninja.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 815,
                        "content": "(\"unique_name\", hashlib.md5(outputs[0]).hexdigest())"
                    },
                    {
                        "line_number": 2814,
                        "content": "hash_for_rules = hashlib.md5(qualified_target_for_hash).hexdigest()"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "collections.py",
                "path": "C:/Python27\\Lib\\collections.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 494,
                        "content": "return sorted(self.iteritems(), key=_itemgetter(1), reverse=True)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "collections.py",
                "path": "C:/Python27\\Lib\\collections.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 177,
                        "content": "key = next(reversed(self) if last else iter(self))"
                    },
                    {
                        "line_number": 494,
                        "content": "return sorted(self.iteritems(), key=_itemgetter(1), reverse=True)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "ConfigParser.py",
                "path": "C:/Python27\\Lib\\ConfigParser.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 412,
                        "content": "key = \" = \".join((key, str(value).replace('\\n', '\\n\\t')))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "cookielib.py",
                "path": "C:/Python27\\Lib\\cookielib.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1292,
                        "content": "cookies.sort(key=lambda arg: len(arg.path), reverse=True)"
                    },
                    {
                        "line_number": 1629,
                        "content": "key = ns_cookie.domain, ns_cookie.path, ns_cookie.name"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "cookielib.py",
                "path": "C:/Python27\\Lib\\cookielib.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 1292,
                        "content": "cookies.sort(key=lambda arg: len(arg.path), reverse=True)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "gettext.py",
                "path": "C:/Python27\\Lib\\gettext.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 550,
                        "content": "key = (class_, os.path.abspath(mofile))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "gettext.py",
                "path": "C:/Python27\\Lib\\gettext.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 550,
                        "content": "key = (class_, os.path.abspath(mofile))"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "hashlib.py",
                "path": "C:/Python27\\Lib\\hashlib.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 45,
                        "content": ">>> m = hashlib.md5()"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "hashlib.py",
                "path": "C:/Python27\\Lib\\hashlib.py",
                "vulnerability": "SHA-224",
                "lines": [
                    {
                        "line_number": 53,
                        "content": ">>> hashlib.sha224(\"Nobody inspects the spammish repetition\").hexdigest()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-224 provides reduced security compared to larger variants."
            },
            {
                "language": "Python",
                "filename": "hmac.py",
                "path": "C:/Python27\\Lib\\hmac.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 72,
                        "content": "key = self.digest_cons(key).digest()"
                    },
                    {
                        "line_number": 74,
                        "content": "key = key + chr(0) * (blocksize - len(key))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "hmac.py",
                "path": "C:/Python27\\Lib\\hmac.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 37,
                        "content": "Defaults to hashlib.md5."
                    },
                    {
                        "line_number": 45,
                        "content": "digestmod = hashlib.md5"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "mailbox.py",
                "path": "C:/Python27\\Lib\\mailbox.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 1241,
                        "content": "key = _singlefileMailbox.add(self, message)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "mailcap.py",
                "path": "C:/Python27\\Lib\\mailcap.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 83,
                        "content": "key = '/'.join(types).lower()"
                    },
                    {
                        "line_number": 138,
                        "content": "def findmatch(caps, MIMEtype, key='view', filename=\"/dev/null\", plist=[]):"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "mhlib.py",
                "path": "C:/Python27\\Lib\\mhlib.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 312,
                        "content": "key = fields[0].strip()"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "pickle.py",
                "path": "C:/Python27\\Lib\\pickle.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 1121,
                        "content": "key = _inverted_registry.get(code)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "poplib.py",
                "path": "C:/Python27\\Lib\\poplib.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 294,
                        "content": "digest = hashlib.md5(m.group(1)+secret).digest()"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "pydoc.py",
                "path": "C:/Python27\\Lib\\pydoc.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1997,
                        "content": "def run(self, callback, key=None, completer=None, onerror=None):"
                    },
                    {
                        "line_number": 2240,
                        "content": "key = self.search_ent.get()"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "site.py",
                "path": "C:/Python27\\Lib\\site.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 411,
                        "content": "key = raw_input(prompt)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "symtable.py",
                "path": "C:/Python27\\Lib\\symtable.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 28,
                        "content": "key = table, filename"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "trace.py",
                "path": "C:/Python27\\Lib\\trace.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 618,
                        "content": "key = filename, lineno"
                    },
                    {
                        "line_number": 645,
                        "content": "key = filename, lineno"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "urllib.py",
                "path": "C:/Python27\\Lib\\urllib.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 540,
                        "content": "key = user, host, port, '/'.join(dirs)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "urllib.py",
                "path": "C:/Python27\\Lib\\urllib.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 793,
                        "content": "key = realm + '@' + host.lower()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "urllib2.py",
                "path": "C:/Python27\\Lib\\urllib2.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1456,
                        "content": "key = user, host, port, '/'.join(dirs), timeout"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "urllib2.py",
                "path": "C:/Python27\\Lib\\urllib2.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 1269,
                        "content": "\"\"\"Parse list of key=value strings where keys are not duplicated.\"\"\""
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "urllib2.py",
                "path": "C:/Python27\\Lib\\urllib2.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 1070,
                        "content": "H = lambda x: hashlib.md5(x).hexdigest()"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "urllib2.py",
                "path": "C:/Python27\\Lib\\urllib2.py",
                "vulnerability": "SHA-1",
                "lines": [
                    {
                        "line_number": 1000,
                        "content": "dig = hashlib.sha1(\"%s:%s:%s:%s\" % (self.nonce_count, nonce, time.ctime(),"
                    },
                    {
                        "line_number": 1072,
                        "content": "H = lambda x: hashlib.sha1(x).hexdigest()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collisions."
            },
            {
                "language": "Python",
                "filename": "warnings.py",
                "path": "C:/Python27\\Lib\\warnings.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 252,
                        "content": "key = (text, category, lineno)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "warnings.py",
                "path": "C:/Python27\\Lib\\warnings.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 252,
                        "content": "key = (text, category, lineno)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "xmllib.py",
                "path": "C:/Python27\\Lib\\xmllib.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 652,
                        "content": "key = ans + ' ' + key"
                    },
                    {
                        "line_number": 654,
                        "content": "key = aprefix + ':' + key"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "zipfile.py",
                "path": "C:/Python27\\Lib\\zipfile.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 769,
                        "content": "self.mode = key = mode.replace('b', '')[0]"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "zipfile.py",
                "path": "C:/Python27\\Lib\\zipfile.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 769,
                        "content": "self.mode = key = mode.replace('b', '')[0]"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "_threading_local.py",
                "path": "C:/Python27\\Lib\\_threading_local.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 149,
                        "content": "key = '_local__key', 'thread.local.' + str(id(self))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "_threading_local.py",
                "path": "C:/Python27\\Lib\\_threading_local.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 149,
                        "content": "key = '_local__key', 'thread.local.' + str(id(self))"
                    },
                    {
                        "line_number": 166,
                        "content": "key = object.__getattribute__(self, '_local__key')"
                    },
                    {
                        "line_number": 222,
                        "content": "key = object.__getattribute__(self, '_local__key')"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "__init__.py",
                "path": "C:/Python27\\Lib\\bsddb\\__init__.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 119,
                        "content": "key = _DeadlockWrap(cur.first, 0,0,0)[0]"
                    },
                    {
                        "line_number": 125,
                        "content": "key = _DeadlockWrap(next, 0,0,0)[0]"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_all.py",
                "path": "C:/Python27\\Lib\\bsddb\\test\\test_all.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 148,
                        "content": "v=self._dbcursor.pget(key=key, data=data, flags=flags)"
                    },
                    {
                        "line_number": 354,
                        "content": "key = self._callback(key, data)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_all.py",
                "path": "C:/Python27\\Lib\\bsddb\\test\\test_all.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 135,
                        "content": "def pget(self, key=None, data=None, flags=0) :"
                    },
                    {
                        "line_number": 354,
                        "content": "key = self._callback(key, data)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_basics.py",
                "path": "C:/Python27\\Lib\\bsddb\\test\\test_basics.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 109,
                        "content": "key = '%04d' % (self._numKeys - x)  # insert keys in reverse order"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_basics.py",
                "path": "C:/Python27\\Lib\\bsddb\\test\\test_basics.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 109,
                        "content": "key = '%04d' % (self._numKeys - x)  # insert keys in reverse order"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_cursor_pget_bug.py",
                "path": "C:/Python27\\Lib\\bsddb\\test\\test_cursor_pget_bug.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 40,
                        "content": "self.assertEqual(('eggs', 'salad', 'eggs'), cursor.pget(key='eggs', flags=db.DB_SET))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_dbenv.py",
                "path": "C:/Python27\\Lib\\bsddb\\test\\test_dbenv.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 420,
                        "content": "self.db.put(key = i, data = i*int(i), txn=txn)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_dbenv.py",
                "path": "C:/Python27\\Lib\\bsddb\\test\\test_dbenv.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 420,
                        "content": "self.db.put(key = i, data = i*int(i), txn=txn)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_dbshelve.py",
                "path": "C:/Python27\\Lib\\bsddb\\test\\test_dbshelve.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 130,
                        "content": "values.sort(key=lambda x : str(x))"
                    },
                    {
                        "line_number": 131,
                        "content": "dbvalues.sort(key=lambda x : str(x))"
                    },
                    {
                        "line_number": 360,
                        "content": "key = self.intkey_map[intkey]"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_sequence.py",
                "path": "C:/Python27\\Lib\\bsddb\\test\\test_sequence.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 36,
                        "content": "self.assertEqual(None, self.seq.open(key='id', txn=None, flags=db.DB_CREATE))"
                    },
                    {
                        "line_number": 95,
                        "content": "key='id', txn=None, flags=0)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_sequence.py",
                "path": "C:/Python27\\Lib\\bsddb\\test\\test_sequence.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 36,
                        "content": "self.assertEqual(None, self.seq.open(key='id', txn=None, flags=db.DB_CREATE))"
                    },
                    {
                        "line_number": 49,
                        "content": "self.assertEqual(None, self.seq.open(key=key, txn=None, flags=db.DB_CREATE))"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "transformer.py",
                "path": "C:/Python27\\Lib\\compiler\\transformer.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 1229,
                        "content": "key = self.com_node(nodelist[0])"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "msvc9compiler.py",
                "path": "C:/Python27\\Lib\\distutils\\msvc9compiler.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 163,
                        "content": "key = RegEnumKey(h, 0)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "msvccompiler.py",
                "path": "C:/Python27\\Lib\\distutils\\msvccompiler.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 144,
                        "content": "key = RegEnumKey(h, 0)"
                    },
                    {
                        "line_number": 614,
                        "content": "key = (r\"%s\\%0.1f\\VC\\VC_OBJECTS_PLATFORM_INFO\\Win32\\Directories\""
                    },
                    {
                        "line_number": 617,
                        "content": "key = (r\"%s\\6.0\\Build System\\Components\\Platforms\""
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "msvccompiler.py",
                "path": "C:/Python27\\Lib\\distutils\\msvccompiler.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 617,
                        "content": "key = (r\"%s\\6.0\\Build System\\Components\\Platforms\""
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "configDialog.py",
                "path": "C:/Python27\\Lib\\idlelib\\configDialog.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 752,
                        "content": "key = ' '.join(keySet[bindName]) #make key(s) into a string"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "configDialog.py",
                "path": "C:/Python27\\Lib\\idlelib\\configDialog.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 752,
                        "content": "key = ' '.join(keySet[bindName]) #make key(s) into a string"
                    },
                    {
                        "line_number": 757,
                        "content": "key = self.changedItems['keys'][keySetName][bindName]"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "configHandler.py",
                "path": "C:/Python27\\Lib\\idlelib\\configHandler.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 688,
                        "content": "helpSources.sort(key=lambda x: int(x[2]))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "FileList.py",
                "path": "C:/Python27\\Lib\\idlelib\\FileList.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 27,
                        "content": "key = os.path.normcase(filename)"
                    },
                    {
                        "line_number": 55,
                        "content": "key = self.inversedict[edit]"
                    },
                    {
                        "line_number": 68,
                        "content": "key = self.inversedict[edit]"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "ObjectBrowser.py",
                "path": "C:/Python27\\Lib\\idlelib\\ObjectBrowser.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 57,
                        "content": "lambda value, key=key, object=self.object:"
                    },
                    {
                        "line_number": 100,
                        "content": "def setfunction(value, key=key, object=self.object):"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "StackViewer.py",
                "path": "C:/Python27\\Lib\\idlelib\\StackViewer.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 117,
                        "content": "def setfunction(value, key=key, object=self.object):"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "TreeWidget.py",
                "path": "C:/Python27\\Lib\\idlelib\\TreeWidget.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 401,
                        "content": "names.sort(key = os.path.normcase)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "topics.py",
                "path": "C:/Python27\\Lib\\pydoc_data\\topics.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 13323,
                        "content": "'\"key=str.lower\".  The\\n'"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "cache.py",
                "path": "C:/Python27\\Lib\\site-packages\\pip\\_internal\\cache.py",
                "vulnerability": "SHA-224",
                "lines": [
                    {
                        "line_number": 63,
                        "content": "hashed = hashlib.sha224(key_url.encode()).hexdigest()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-224 provides reduced security compared to larger variants."
            },
            {
                "language": "Python",
                "filename": "configuration.py",
                "path": "C:/Python27\\Lib\\site-packages\\pip\\_internal\\configuration.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 352,
                        "content": "key = section + \".\" + _normalize_name(name)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "wheel.py",
                "path": "C:/Python27\\Lib\\site-packages\\pip\\_internal\\wheel.py",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 72,
                        "content": "\"\"\"Return (hash, length) for path using hashlib.sha256()\"\"\""
                    },
                    {
                        "line_number": 73,
                        "content": "h = hashlib.sha256()"
                    },
                    {
                        "line_number": 84,
                        "content": "\"\"\"Return (encoded_digest, length) for path using hashlib.sha256()\"\"\""
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Python",
                "filename": "parser.py",
                "path": "C:/Python27\\Lib\\site-packages\\pip\\_internal\\cli\\parser.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 167,
                        "content": "section, key = section_key.split(\".\", 1)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "configuration.py",
                "path": "C:/Python27\\Lib\\site-packages\\pip\\_internal\\commands\\configuration.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 191,
                        "content": "key = self._get_n_args(args, \"get [name]\", n=1)"
                    },
                    {
                        "line_number": 203,
                        "content": "key = self._get_n_args(args, \"unset [name]\", n=1)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "configuration.py",
                "path": "C:/Python27\\Lib\\site-packages\\pip\\_internal\\commands\\configuration.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 191,
                        "content": "key = self._get_n_args(args, \"get [name]\", n=1)"
                    },
                    {
                        "line_number": 203,
                        "content": "key = self._get_n_args(args, \"unset [name]\", n=1)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "link.py",
                "path": "C:/Python27\\Lib\\site-packages\\pip\\_internal\\models\\link.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 60,
                        "content": "super(Link, self).__init__(key=url, defining_class=Link)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "freeze.py",
                "path": "C:/Python27\\Lib\\site-packages\\pip\\_internal\\operations\\freeze.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 165,
                        "content": "installations.values(), key=lambda x: x.name.lower()):"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "req_set.py",
                "path": "C:/Python27\\Lib\\site-packages\\pip\\_internal\\req\\req_set.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 40,
                        "content": "reqs.sort(key=lambda req: req.name.lower())"
                    },
                    {
                        "line_number": 46,
                        "content": "reqs.sort(key=lambda req: req.name.lower())"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "req_tracker.py",
                "path": "C:/Python27\\Lib\\site-packages\\pip\\_internal\\req\\req_tracker.py",
                "vulnerability": "SHA-224",
                "lines": [
                    {
                        "line_number": 51,
                        "content": "hashed = hashlib.sha224(link.url_without_fragment.encode()).hexdigest()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-224 provides reduced security compared to larger variants."
            },
            {
                "language": "Python",
                "filename": "appdirs.py",
                "path": "C:/Python27\\Lib\\site-packages\\pip\\_internal\\utils\\appdirs.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 211,
                        "content": "key = _winreg.OpenKey("
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "appdirs.py",
                "path": "C:/Python27\\Lib\\site-packages\\pip\\_vendor\\appdirs.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 471,
                        "content": "key = _winreg.OpenKey("
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "file_cache.py",
                "path": "C:/Python27\\Lib\\site-packages\\pip\\_vendor\\cachecontrol\\caches\\file_cache.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 145,
                        "content": "key = CacheController.cache_url(url)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "file_cache.py",
                "path": "C:/Python27\\Lib\\site-packages\\pip\\_vendor\\cachecontrol\\caches\\file_cache.py",
                "vulnerability": "SHA-224",
                "lines": [
                    {
                        "line_number": 99,
                        "content": "return hashlib.sha224(x.encode()).hexdigest()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-224 provides reduced security compared to larger variants."
            },
            {
                "language": "Python",
                "filename": "compat.py",
                "path": "C:/Python27\\Lib\\site-packages\\pip\\_vendor\\distlib\\compat.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 692,
                        "content": "link_prev, link_next, key = self.__map.pop(key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "database.py",
                "path": "C:/Python27\\Lib\\site-packages\\pip\\_vendor\\distlib\\database.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 343,
                        "content": "self.key = self.name.lower()    # for case-insensitive comparisons"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "database.py",
                "path": "C:/Python27\\Lib\\site-packages\\pip\\_vendor\\distlib\\database.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 343,
                        "content": "self.key = self.name.lower()    # for case-insensitive comparisons"
                    },
                    {
                        "line_number": 869,
                        "content": "s.key = n.lower()   # for case-insensitive comparisons"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "database.py",
                "path": "C:/Python27\\Lib\\site-packages\\pip\\_vendor\\distlib\\database.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 519,
                        "content": "hasher = hashlib.md5"
                    },
                    {
                        "line_number": 1017,
                        "content": "return hashlib.md5(content).hexdigest()"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "index.py",
                "path": "C:/Python27\\Lib\\site-packages\\pip\\_vendor\\distlib\\index.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 276,
                        "content": "md5_digest = hashlib.md5(file_data).hexdigest()"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "index.py",
                "path": "C:/Python27\\Lib\\site-packages\\pip\\_vendor\\distlib\\index.py",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 277,
                        "content": "sha256_digest = hashlib.sha256(file_data).hexdigest()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Python",
                "filename": "locators.py",
                "path": "C:/Python27\\Lib\\site-packages\\pip\\_vendor\\distlib\\locators.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 575,
                        "content": "result = sorted(result, key=lambda t: t[0], reverse=True)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "locators.py",
                "path": "C:/Python27\\Lib\\site-packages\\pip\\_vendor\\distlib\\locators.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 575,
                        "content": "result = sorted(result, key=lambda t: t[0], reverse=True)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "version.py",
                "path": "C:/Python27\\Lib\\site-packages\\pip\\_vendor\\distlib\\version.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 108,
                        "content": "self.key = self.name.lower()    # for case-insensitive comparisons"
                    },
                    {
                        "line_number": 163,
                        "content": "return self.key == other.key and self._parts == other._parts"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "version.py",
                "path": "C:/Python27\\Lib\\site-packages\\pip\\_vendor\\distlib\\version.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 108,
                        "content": "self.key = self.name.lower()    # for case-insensitive comparisons"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "wheel.py",
                "path": "C:/Python27\\Lib\\site-packages\\pip\\_vendor\\distlib\\wheel.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 376,
                        "content": "if key == 'scripts' and not p.endswith('.exe'):"
                    },
                    {
                        "line_number": 847,
                        "content": "key = '%s/PKG-INFO' % info_dir"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "wheel.py",
                "path": "C:/Python27\\Lib\\site-packages\\pip\\_vendor\\distlib\\wheel.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 847,
                        "content": "key = '%s/PKG-INFO' % info_dir"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "tarfile.py",
                "path": "C:/Python27\\Lib\\site-packages\\pip\\_vendor\\distlib\\_backport\\tarfile.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 2148,
                        "content": "directories.sort(key=lambda a: a.name)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "__init__.py",
                "path": "C:/Python27\\Lib\\site-packages\\pip\\_vendor\\pkg_resources\\__init__.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 2633,
                        "content": "self._key = key = self.project_name.lower()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "auth.py",
                "path": "C:/Python27\\Lib\\site-packages\\pip\\_vendor\\requests\\auth.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 148,
                        "content": "return hashlib.md5(x).hexdigest()"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "auth.py",
                "path": "C:/Python27\\Lib\\site-packages\\pip\\_vendor\\requests\\auth.py",
                "vulnerability": "SHA-1",
                "lines": [
                    {
                        "line_number": 154,
                        "content": "return hashlib.sha1(x).hexdigest()"
                    },
                    {
                        "line_number": 198,
                        "content": "cnonce = (hashlib.sha1(s).hexdigest()[:16])"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collisions."
            },
            {
                "language": "Python",
                "filename": "auth.py",
                "path": "C:/Python27\\Lib\\site-packages\\pip\\_vendor\\requests\\auth.py",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 160,
                        "content": "return hashlib.sha256(x).hexdigest()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Python",
                "filename": "models.py",
                "path": "C:/Python27\\Lib\\site-packages\\pip\\_vendor\\requests\\models.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 912,
                        "content": "key = link.get('rel') or link.get('url')"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "models.py",
                "path": "C:/Python27\\Lib\\site-packages\\pip\\_vendor\\requests\\models.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 912,
                        "content": "key = link.get('rel') or link.get('url')"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "utils.py",
                "path": "C:/Python27\\Lib\\site-packages\\pip\\_vendor\\requests\\utils.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 469,
                        "content": "key = param[:index_of_equals].strip(items_to_strip)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "__init__.py",
                "path": "C:/Python27\\Lib\\site-packages\\pkg_resources\\__init__.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 2642,
                        "content": "self._key = key = self.project_name.lower()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "appdirs.py",
                "path": "C:/Python27\\Lib\\site-packages\\pkg_resources\\_vendor\\appdirs.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 471,
                        "content": "key = _winreg.OpenKey("
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "dist.py",
                "path": "C:/Python27\\Lib\\site-packages\\setuptools\\dist.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 422,
                        "content": "key = pkg_resources.safe_name(str(attrs['name'])).lower()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "msvc.py",
                "path": "C:/Python27\\Lib\\site-packages\\setuptools\\msvc.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 86,
                        "content": "key = VC_BASE % ('', version)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "msvc.py",
                "path": "C:/Python27\\Lib\\site-packages\\setuptools\\msvc.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 93,
                        "content": "key = VC_BASE % ('Wow6432Node\\\\', version)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "egg_info.py",
                "path": "C:/Python27\\Lib\\site-packages\\setuptools\\command\\egg_info.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 237,
                        "content": "if pd is not None and pd.key == self.egg_name.lower():"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "upload.py",
                "path": "C:/Python27\\Lib\\site-packages\\setuptools\\command\\upload.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 86,
                        "content": "'md5_digest': hashlib.md5(content).hexdigest(),"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "make_ssl_certs.py",
                "path": "C:/Python27\\Lib\\test\\make_ssl_certs.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 165,
                        "content": "cert, key = make_cert_key('localhost')"
                    },
                    {
                        "line_number": 183,
                        "content": "cert, key = make_cert_key('fakehostname')"
                    },
                    {
                        "line_number": 188,
                        "content": "cert, key = make_cert_key('localhost', True)"
                    },
                    {
                        "line_number": 193,
                        "content": "cert, key = make_cert_key('fakehostname', True)"
                    },
                    {
                        "line_number": 212,
                        "content": "cert, key = make_cert_key('allsans', extra_san='\\n'.join(extra_san))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "make_ssl_certs.py",
                "path": "C:/Python27\\Lib\\test\\make_ssl_certs.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 165,
                        "content": "cert, key = make_cert_key('localhost')"
                    },
                    {
                        "line_number": 188,
                        "content": "cert, key = make_cert_key('localhost', True)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "mapping_tests.py",
                "path": "C:/Python27\\Lib\\test\\mapping_tests.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 351,
                        "content": "k.sort(key=lambda k: (id(type(k)), k))"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "pythoninfo.py",
                "path": "C:/Python27\\Lib\\test\\pythoninfo.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 588,
                        "content": "key = getattr(resource, name)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_bsddb.py",
                "path": "C:/Python27\\Lib\\test\\test_bsddb.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 177,
                        "content": "key = self.f.first()[0]"
                    },
                    {
                        "line_number": 185,
                        "content": "key = self.f.last()[0]"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_builtin.py",
                "path": "C:/Python27\\Lib\\test\\test_builtin.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 822,
                        "content": "self.assertEqual(max((1,), key=neg), 1)     # one elem iterable"
                    },
                    {
                        "line_number": 824,
                        "content": "self.assertEqual(max(1, 2, key=neg), 1)     # two elems"
                    },
                    {
                        "line_number": 868,
                        "content": "self.assertEqual(min((1,), key=neg), 1)     # one elem iterable"
                    },
                    {
                        "line_number": 870,
                        "content": "self.assertEqual(min(1, 2, key=neg), 2)     # two elems"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_gdbm.py",
                "path": "C:/Python27\\Lib\\test\\test_gdbm.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 27,
                        "content": "key = self.g.firstkey()"
                    },
                    {
                        "line_number": 31,
                        "content": "key = self.g.nextkey(key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_grammar.py",
                "path": "C:/Python27\\Lib\\test\\test_grammar.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 956,
                        "content": "L.sort(key=lambda x: (type(x).__name__, x))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_hashlib.py",
                "path": "C:/Python27\\Lib\\test\\test_hashlib.py",
                "vulnerability": "SHA-1",
                "lines": [
                    {
                        "line_number": 368,
                        "content": "hasher = hashlib.sha1()"
                    },
                    {
                        "line_number": 372,
                        "content": "expected_hash = hashlib.sha1(data*num_threads).hexdigest()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collisions."
            },
            {
                "language": "Python",
                "filename": "test_hmac.py",
                "path": "C:/Python27\\Lib\\test\\test_hmac.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 138,
                        "content": "hmactest(key = ''.join([chr(x) for x in xrange(0x01, 0x19+1)]),"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_hmac.py",
                "path": "C:/Python27\\Lib\\test\\test_hmac.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 138,
                        "content": "hmactest(key = ''.join([chr(x) for x in xrange(0x01, 0x19+1)]),"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_hmac.py",
                "path": "C:/Python27\\Lib\\test\\test_hmac.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 259,
                        "content": "self.assertTrue(h.digest_cons == hashlib.md5)"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "test_hmac.py",
                "path": "C:/Python27\\Lib\\test\\test_hmac.py",
                "vulnerability": "SHA-1",
                "lines": [
                    {
                        "line_number": 49,
                        "content": "h = hmac.HMAC(key, data, digestmod=hashlib.sha1)"
                    },
                    {
                        "line_number": 209,
                        "content": "self._x = hashlib.sha1(*args)"
                    },
                    {
                        "line_number": 249,
                        "content": "h = hmac.HMAC(\"key\", \"\", hashlib.sha1)"
                    },
                    {
                        "line_number": 251,
                        "content": "self.fail(\"Constructor call with hashlib.sha1 raised exception.\")"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collisions."
            },
            {
                "language": "Python",
                "filename": "test_hmac.py",
                "path": "C:/Python27\\Lib\\test\\test_hmac.py",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 92,
                        "content": "hashlib.sha256: 'b0344c61d8db38535ca8afceaf0bf12b'"
                    },
                    {
                        "line_number": 109,
                        "content": "hashlib.sha256: '5bdcc146bf60754e6a042426089575c7'"
                    },
                    {
                        "line_number": 126,
                        "content": "hashlib.sha256: '773ea91e36800e46854db8ebd09181a7'"
                    },
                    {
                        "line_number": 143,
                        "content": "hashlib.sha256: '82558a389a443c0ea4cc819899f2083a'"
                    },
                    {
                        "line_number": 161,
                        "content": "hashlib.sha256: '60e431591ee0b67f0d8a26aacbf5b77f'"
                    },
                    {
                        "line_number": 182,
                        "content": "hashlib.sha256: '9b09ffa71b942fcb27635fbcd5b0e944'"
                    },
                    {
                        "line_number": 197,
                        "content": "self._rfc4231_test_cases(hashlib.sha256)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Python",
                "filename": "test_hmac.py",
                "path": "C:/Python27\\Lib\\test\\test_hmac.py",
                "vulnerability": "SHA-224",
                "lines": [
                    {
                        "line_number": 90,
                        "content": "hashlib.sha224: '896fb1128abbdf196832107cd49df33f'"
                    },
                    {
                        "line_number": 107,
                        "content": "hashlib.sha224: 'a30e01098bc6dbbf45690f3a7e9e6d0f'"
                    },
                    {
                        "line_number": 124,
                        "content": "hashlib.sha224: '7fb3cb3588c6c1f6ffa9694d7d6ad264'"
                    },
                    {
                        "line_number": 141,
                        "content": "hashlib.sha224: '6c11506874013cac6a2abc1bb382627c'"
                    },
                    {
                        "line_number": 159,
                        "content": "hashlib.sha224: '95e9a0db962095adaebe9b2d6f0dbce2'"
                    },
                    {
                        "line_number": 180,
                        "content": "hashlib.sha224: '3a854166ac5d9f023f54d517d0b39dbd'"
                    },
                    {
                        "line_number": 194,
                        "content": "self._rfc4231_test_cases(hashlib.sha224)"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-224 provides reduced security compared to larger variants."
            },
            {
                "language": "Python",
                "filename": "test_mailbox.py",
                "path": "C:/Python27\\Lib\\test\\test_mailbox.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 83,
                        "content": "key = self._box.add(f)"
                    },
                    {
                        "line_number": 897,
                        "content": "key = self._box.add('From foo@bar blah\\nFrom: foo\\n\\n0\\n')"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_mailbox.py",
                "path": "C:/Python27\\Lib\\test\\test_mailbox.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 88,
                        "content": "key = self._box.add(StringIO.StringIO(self._template % \"0\"))"
                    },
                    {
                        "line_number": 897,
                        "content": "key = self._box.add('From foo@bar blah\\nFrom: foo\\n\\n0\\n')"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_parser.py",
                "path": "C:/Python27\\Lib\\test\\test_parser.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 101,
                        "content": "self.check_expr(\"foo(key=value, *args, **kw)\")"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_set.py",
                "path": "C:/Python27\\Lib\\test\\test_set.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 422,
                        "content": "key = self.thetype([3, 4])"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_sort.py",
                "path": "C:/Python27\\Lib\\test\\test_sort.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 265,
                        "content": "copy2.sort(key=lambda x: x[0], reverse=True)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_sort.py",
                "path": "C:/Python27\\Lib\\test\\test_sort.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 188,
                        "content": "data.sort(key=lambda x: x[0])   # sort on the random first field"
                    },
                    {
                        "line_number": 265,
                        "content": "copy2.sort(key=lambda x: x[0], reverse=True)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_stringprep.py",
                "path": "C:/Python27\\Lib\\test\\test_stringprep.py",
                "vulnerability": "SHA-1",
                "lines": [
                    {
                        "line_number": 88,
                        "content": "#     h = hashlib.sha1()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collisions."
            },
            {
                "language": "Python",
                "filename": "test_thread.py",
                "path": "C:/Python27\\Lib\\test\\test_thread.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 37,
                        "content": "key = support.threading_setup()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_unicodedata.py",
                "path": "C:/Python27\\Lib\\test\\test_unicodedata.py",
                "vulnerability": "SHA-1",
                "lines": [
                    {
                        "line_number": 26,
                        "content": "h = hashlib.sha1()"
                    },
                    {
                        "line_number": 86,
                        "content": "h = hashlib.sha1()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collisions."
            },
            {
                "language": "Python",
                "filename": "test_urllib2_localnet.py",
                "path": "C:/Python27\\Lib\\test\\test_urllib2_localnet.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 144,
                        "content": "nonce = hashlib.md5(str(self._request_num)).hexdigest()"
                    },
                    {
                        "line_number": 172,
                        "content": "HA1 = hashlib.md5(HA1_str).hexdigest()"
                    },
                    {
                        "line_number": 174,
                        "content": "HA2 = hashlib.md5(HA2_str).hexdigest()"
                    },
                    {
                        "line_number": 179,
                        "content": "response = hashlib.md5(response_str).hexdigest()"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "test_winreg.py",
                "path": "C:/Python27\\Lib\\test\\test_winreg.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 127,
                        "content": "key = OpenKey(root_key, test_key_name)"
                    },
                    {
                        "line_number": 162,
                        "content": "key = OpenKey(root_key, test_key_name, 0, KEY_ALL_ACCESS)"
                    },
                    {
                        "line_number": 186,
                        "content": "key = OpenKey(root_key, test_key_name)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_xml_etree.py",
                "path": "C:/Python27\\Lib\\test\\test_xml_etree.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 288,
                        "content": "self.serialize_check(element, '<tag key=\"value\" />') # 1"
                    },
                    {
                        "line_number": 298,
                        "content": "self.serialize_check(element, '<tag key=\"value\" />') # 5"
                    },
                    {
                        "line_number": 302,
                        "content": "self.serialize_check(element, '<tag key=\"value\" />') # 6"
                    },
                    {
                        "line_number": 890,
                        "content": "'<ns0:tag xmlns:ns0=\"uri\" ns0:key=\"value\" />') # 2.1"
                    },
                    {
                        "line_number": 895,
                        "content": "'<ns0:tag xmlns:ns0=\"uri\" ns0:key=\"value\" />') # 2.2"
                    },
                    {
                        "line_number": 2542,
                        "content": "\"<tag key=\\\"&lt;&amp;&quot;'&gt;\\\" />\")"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_xml_etree.py",
                "path": "C:/Python27\\Lib\\test\\test_xml_etree.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 443,
                        "content": "'   <element key=\"value\">text</element>\\n'"
                    },
                    {
                        "line_number": 466,
                        "content": "'   <element key=\"value\">text</element>\\n'"
                    },
                    {
                        "line_number": 475,
                        "content": "'   <element key=\"value\">text</element>\\n'"
                    },
                    {
                        "line_number": 485,
                        "content": "'   <element key=\"value\">text</element>\\n'"
                    },
                    {
                        "line_number": 1124,
                        "content": "'   <element key=\"value\">text</element>\\n'"
                    },
                    {
                        "line_number": 2559,
                        "content": "'<tag key=\"&#229;&#246;&#246;&lt;&gt;\" />')"
                    },
                    {
                        "line_number": 2563,
                        "content": "'<tag key=\"&#229;&#246;&#246;&lt;&gt;\" />')"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "__init__.py",
                "path": "C:/Python27\\Lib\\test\\support\\__init__.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1734,
                        "content": "key = threading_setup()"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "minidom.py",
                "path": "C:/Python27\\Lib\\xml\\dom\\minidom.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1512,
                        "content": "key = element.tagName"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "ElementTree.py",
                "path": "C:/Python27\\Lib\\xml\\etree\\ElementTree.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 919,
                        "content": "key=lambda x: x[1]):  # sort on prefix"
                    },
                    {
                        "line_number": 974,
                        "content": "key=lambda x: x[1]):  # sort on prefix"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "analyze_dxp.py",
                "path": "C:/Python27\\Tools\\Scripts\\analyze_dxp.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 93,
                        "content": "result.sort(key=operator.itemgetter(2), reverse=True)"
                    },
                    {
                        "line_number": 113,
                        "content": "result.sort(key=operator.itemgetter(2), reverse=True)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "logmerge.py",
                "path": "C:/Python27\\Tools\\Scripts\\logmerge.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 113,
                        "content": "key = 'symbolic names:\\n'"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "texi2html.py",
                "path": "C:/Python27\\Tools\\Scripts\\texi2html.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1919,
                        "content": "key = self.codeexpand(key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "sessions.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\ms-python.debugpy-2024.14.0-win32-x64\\bundled\\libs\\debugpy\\adapter\\sessions.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 290,
                        "content": "session = sorted(_sessions, key=lambda session: session.id)[0]"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "sessions.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\ms-python.debugpy-2024.14.0-win32-x64\\bundled\\libs\\debugpy\\adapter\\sessions.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 290,
                        "content": "session = sorted(_sessions, key=lambda session: session.id)[0]"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "breakpoint.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\ms-python.debugpy-2024.14.0-win32-x64\\bundled\\libs\\debugpy\\_vendored\\pydevd\\pydevd_attach_to_process\\winappdbg\\breakpoint.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 2235,
                        "content": "key = (dwProcessId, bp.get_address())"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "crash.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\ms-python.debugpy-2024.14.0-win32-x64\\bundled\\libs\\debugpy\\_vendored\\pydevd\\pydevd_attach_to_process\\winappdbg\\crash.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1317,
                        "content": "key = key.decode(\"hex\")"
                    },
                    {
                        "line_number": 1319,
                        "content": "key = zlib.decompress(key)"
                    },
                    {
                        "line_number": 1320,
                        "content": "key = pickle.loads(key)"
                    },
                    {
                        "line_number": 1457,
                        "content": "key = self.__keys_iter.next()"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "pydevd_comm.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\ms-python.debugpy-2024.14.0-win32-x64\\bundled\\libs\\debugpy\\_vendored\\pydevd\\_pydevd_bundle\\pydevd_comm.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 842,
                        "content": "keys = sorted(keys, key=compare_object_attrs_key)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "pydevd_constants.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\ms-python.debugpy-2024.14.0-win32-x64\\bundled\\libs\\debugpy\\_vendored\\pydevd\\_pydevd_bundle\\pydevd_constants.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 537,
                        "content": "s = sorted(d.items(), key=lambda x: str(x[0]))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "pydevd_process_net_command_json.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\ms-python.debugpy-2024.14.0-win32-x64\\bundled\\libs\\debugpy\\_vendored\\pydevd\\_pydevd_bundle\\pydevd_process_net_command_json.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 115,
                        "content": "directory_exclude_filters = sorted(directory_exclude_filters, key=lambda exclude_filter: -len(exclude_filter.name))"
                    },
                    {
                        "line_number": 116,
                        "content": "module_exclude_filters = sorted(module_exclude_filters, key=lambda exclude_filter: -len(exclude_filter.name))"
                    },
                    {
                        "line_number": 133,
                        "content": "key = self._value_to_key[value]"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "pydevd_source_mapping.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\ms-python.debugpy-2024.14.0-win32-x64\\bundled\\libs\\debugpy\\_vendored\\pydevd\\_pydevd_bundle\\pydevd_source_mapping.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 86,
                        "content": "key = (lineno, \"client\", runtime_source_filename)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "pydevd_source_mapping.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\ms-python.debugpy-2024.14.0-win32-x64\\bundled\\libs\\debugpy\\_vendored\\pydevd\\_pydevd_bundle\\pydevd_source_mapping.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 76,
                        "content": "self._mappings_to_server[absolute_normalized_filename] = sorted(mapping, key=lambda entry: entry.line)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "__main__pydevd_gen_debug_adapter_protocol.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\ms-python.debugpy-2024.14.0-win32-x64\\bundled\\libs\\debugpy\\_vendored\\pydevd\\_pydevd_bundle\\_debug_adapter\\__main__pydevd_gen_debug_adapter_protocol.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 273,
                        "content": "prop_name_and_prop.sort(key=compute_sort_key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "concrete.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\ms-python.debugpy-2024.14.0-win32-x64\\bundled\\libs\\debugpy\\_vendored\\pydevd\\_pydevd_frame_eval\\vendored\\bytecode\\concrete.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 540,
                        "content": "key = const_key(value)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "pydev_runfiles_parallel.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\ms-python.debugpy-2024.14.0-win32-x64\\bundled\\libs\\debugpy\\_vendored\\pydevd\\_pydev_runfiles\\pydev_runfiles_parallel.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 68,
                        "content": "key = (test.__pydev_pyfile__, test.__pydev_module_name__)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "_make.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\ms-python.isort-2023.10.1\\bundled\\libs\\attr\\_make.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 523,
                        "content": "sorted(unannotated, key=lambda n: cd.get(n).counter)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "disambiguators.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\ms-python.isort-2023.10.1\\bundled\\libs\\cattrs\\disambiguators.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 28,
                        "content": "cls_and_attrs.sort(key=lambda c_a: -len(c_a[1]))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "api.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\ms-python.isort-2023.10.1\\bundled\\libs\\isort\\api.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 564,
                        "content": "key = identified_import.module"
                    },
                    {
                        "line_number": 566,
                        "content": "key = identified_import.module.split(\".\")[0]"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "output.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\ms-python.isort-2023.10.1\\bundled\\libs\\isort\\output.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 113,
                        "content": "key=partial(sorting.section_key, config=config),"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "_parser.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\ms-python.isort-2023.10.1\\bundled\\libs\\isort\\_vendored\\tomli\\_parser.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 285,
                        "content": "pos, key = parse_key(src, pos)"
                    },
                    {
                        "line_number": 303,
                        "content": "pos, key = parse_key(src, pos)"
                    },
                    {
                        "line_number": 344,
                        "content": "pos, key = parse_key(src, pos)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "lsp_server.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\ms-python.isort-2023.10.1\\bundled\\tool\\lsp_server.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 482,
                        "content": "key = utils.normalize_path(os.getcwd())"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "download_get_pip.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\ms-python.python-2024.22.0-win32-x64\\python_files\\download_get_pip.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 39,
                        "content": "sorted_versions = sorted(data[\"releases\"].keys(), key=version_parser, reverse=True)[:5]"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "download_get_pip.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\ms-python.python-2024.22.0-win32-x64\\python_files\\download_get_pip.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 39,
                        "content": "sorted_versions = sorted(data[\"releases\"].keys(), key=version_parser, reverse=True)[:5]"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "_make.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\ms-python.python-2024.22.0-win32-x64\\python_files\\lib\\jedilsp\\attr\\_make.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 413,
                        "content": "sorted(unannotated, key=lambda n: cd.get(n).counter)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "converters.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\ms-python.python-2024.22.0-win32-x64\\python_files\\lib\\jedilsp\\cattrs\\converters.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 850,
                        "content": "key = key_handler(k, key_type)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "converters.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\ms-python.python-2024.22.0-win32-x64\\python_files\\lib\\jedilsp\\cattrs\\converters.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 850,
                        "content": "key = key_handler(k, key_type)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "disambiguators.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\ms-python.python-2024.22.0-win32-x64\\python_files\\lib\\jedilsp\\cattrs\\disambiguators.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 134,
                        "content": "cls_and_attrs.sort(key=lambda c_a: len(c_a[1]), reverse=True)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "cache.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\ms-python.python-2024.22.0-win32-x64\\python_files\\lib\\jedilsp\\jedi\\cache.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 85,
                        "content": "key = (args, frozenset(kwargs.items()))"
                    },
                    {
                        "line_number": 108,
                        "content": "key = (args, frozenset(kwargs.items()))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "cache.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\ms-python.python-2024.22.0-win32-x64\\python_files\\lib\\jedilsp\\jedi\\cache.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 85,
                        "content": "key = (args, frozenset(kwargs.items()))"
                    },
                    {
                        "line_number": 108,
                        "content": "key = (args, frozenset(kwargs.items()))"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "classes.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\ms-python.python-2024.22.0-win32-x64\\python_files\\lib\\jedilsp\\jedi\\api\\classes.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 157,
                        "content": ">>> defs = sorted(defs, key=lambda d: d.line)"
                    },
                    {
                        "line_number": 338,
                        "content": ">>> defs = sorted(defs, key=lambda d: d.line)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "classes.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\ms-python.python-2024.22.0-win32-x64\\python_files\\lib\\jedilsp\\jedi\\api\\classes.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 37,
                        "content": "return sorted(names, key=lambda s: s.start_pos or (0, 0))"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "environment.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\ms-python.python-2024.22.0-win32-x64\\python_files\\lib\\jedilsp\\jedi\\api\\environment.py",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 166,
                        "content": "sha256 = hashlib.sha256()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Python",
                "filename": "file_name.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\ms-python.python-2024.22.0-win32-x64\\python_files\\lib\\jedilsp\\jedi\\api\\file_name.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 40,
                        "content": "listed = sorted(os.scandir(base_path), key=lambda e: e.name)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "helpers.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\ms-python.python-2024.22.0-win32-x64\\python_files\\lib\\jedilsp\\jedi\\api\\helpers.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 47,
                        "content": "return sorted(defs, key=lambda x: (str(x.module_path or ''),"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "strings.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\ms-python.python-2024.22.0-win32-x64\\python_files\\lib\\jedilsp\\jedi\\api\\strings.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 56,
                        "content": "for dict_key in sorted(_get_python_keys(dicts), key=lambda x: repr(x)):"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "__init__.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\ms-python.python-2024.22.0-win32-x64\\python_files\\lib\\jedilsp\\jedi\\api\\__init__.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 540,
                        "content": "return sorted(set(ana), key=lambda x: x.line)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "type_var.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\ms-python.python-2024.22.0-win32-x64\\python_files\\lib\\jedilsp\\jedi\\inference\\gradual\\type_var.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 64,
                        "content": "elif key == 'contravariant':"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "cache.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\ms-python.python-2024.22.0-win32-x64\\python_files\\lib\\jedilsp\\parso\\cache.py",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 265,
                        "content": "file_hash = hashlib.sha256(str(path).encode(\"utf-8\")).hexdigest()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Python",
                "filename": "grammar.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\ms-python.python-2024.22.0-win32-x64\\python_files\\lib\\jedilsp\\parso\\grammar.py",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 47,
                        "content": "self._hashed = hashlib.sha256(text.encode(\"utf-8\")).hexdigest()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Python",
                "filename": "_itertools.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\ms-python.python-2024.22.0-win32-x64\\python_files\\lib\\python\\importlib_metadata\\_itertools.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 104,
                        "content": ">>> key = lambda x: x % 10  # Bucket by last digit"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "_itertools.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\ms-python.python-2024.22.0-win32-x64\\python_files\\lib\\python\\importlib_metadata\\_itertools.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 106,
                        "content": ">>> s = bucket(it, key=key, validator=validator)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "_parser.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\ms-python.python-2024.22.0-win32-x64\\python_files\\lib\\python\\tomli\\_parser.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 353,
                        "content": "pos, key = parse_key(src, pos)"
                    },
                    {
                        "line_number": 373,
                        "content": "pos, key = parse_key(src, pos)"
                    },
                    {
                        "line_number": 430,
                        "content": "pos, key = parse_key(src, pos)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "antigravity.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.10.0\\lldb\\lib\\antigravity.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 15,
                        "content": "h = hashlib.md5(datedow, usedforsecurity=False).hexdigest()"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "configparser.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.10.0\\lldb\\lib\\configparser.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 748,
                        "content": "key = self.optionxform(str(key))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "configparser.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.10.0\\lldb\\lib\\configparser.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 748,
                        "content": "key = self.optionxform(str(key))"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "enum.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.10.0\\lldb\\lib\\enum.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 111,
                        "content": "if key == '_generate_next_value_':"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "functools.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.10.0\\lldb\\lib\\functools.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 553,
                        "content": "key = make_key(args, kwds, typed)"
                    },
                    {
                        "line_number": 568,
                        "content": "key = make_key(args, kwds, typed)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "gettext.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.10.0\\lldb\\lib\\gettext.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 598,
                        "content": "key = (class_, os.path.abspath(mofile))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "gettext.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.10.0\\lldb\\lib\\gettext.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 598,
                        "content": "key = (class_, os.path.abspath(mofile))"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "hashlib.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.10.0\\lldb\\lib\\hashlib.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 43,
                        "content": ">>> m = hashlib.md5()"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "hashlib.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.10.0\\lldb\\lib\\hashlib.py",
                "vulnerability": "SHA-224",
                "lines": [
                    {
                        "line_number": 51,
                        "content": ">>> hashlib.sha224(b\"Nobody inspects the spammish repetition\").hexdigest()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-224 provides reduced security compared to larger variants."
            },
            {
                "language": "Python",
                "filename": "hmac.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.10.0\\lldb\\lib\\hmac.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 197,
                        "content": "key = digest_cons(key).digest()"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "hmac.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.10.0\\lldb\\lib\\hmac.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 87,
                        "content": "key = self._digest_cons(key).digest()"
                    },
                    {
                        "line_number": 89,
                        "content": "key = key.ljust(blocksize, b'\\0')"
                    },
                    {
                        "line_number": 197,
                        "content": "key = digest_cons(key).digest()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "mailbox.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.10.0\\lldb\\lib\\mailbox.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 1253,
                        "content": "key = _singlefileMailbox.add(self, message)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "mailcap.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.10.0\\lldb\\lib\\mailcap.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 104,
                        "content": "key = '/'.join(types).lower()"
                    },
                    {
                        "line_number": 159,
                        "content": "def findmatch(caps, MIMEtype, key='view', filename=\"/dev/null\", plist=[]):"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "os.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.10.0\\lldb\\lib\\os.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 683,
                        "content": "key = self.encodekey(key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "pickle.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.10.0\\lldb\\lib\\pickle.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 1561,
                        "content": "key = _inverted_registry.get(code)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "poplib.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.10.0\\lldb\\lib\\poplib.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 335,
                        "content": "digest = hashlib.md5(digest).hexdigest()"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "pyclbr.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.10.0\\lldb\\lib\\pyclbr.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 381,
                        "content": "objs = sorted(tree.values(), key=lineno_key, reverse=True)"
                    },
                    {
                        "line_number": 393,
                        "content": "key=lineno_key, reverse=True)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "pydoc.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.10.0\\lldb\\lib\\pydoc.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 2212,
                        "content": "def run(self, callback, key=None, completer=None, onerror=None):"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "pydoc.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.10.0\\lldb\\lib\\pydoc.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 2542,
                        "content": "'key = %s' % key, '#ffffff', '#ee77aa', '<br>'.join(results))"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "selectors.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.10.0\\lldb\\lib\\selectors.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 250,
                        "content": "key = self._fd_to_key.pop(self._fileobj_lookup(fileobj))"
                    },
                    {
                        "line_number": 257,
                        "content": "key = self._fd_to_key[self._fileobj_lookup(fileobj)]"
                    },
                    {
                        "line_number": 300,
                        "content": "key = super().register(fileobj, events, data)"
                    },
                    {
                        "line_number": 353,
                        "content": "key = super().register(fileobj, events, data)"
                    },
                    {
                        "line_number": 378,
                        "content": "key = self._fd_to_key[self._fileobj_lookup(fileobj)]"
                    },
                    {
                        "line_number": 518,
                        "content": "key = super().register(fileobj, events, data)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "selectors.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.10.0\\lldb\\lib\\selectors.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 250,
                        "content": "key = self._fd_to_key.pop(self._fileobj_lookup(fileobj))"
                    },
                    {
                        "line_number": 262,
                        "content": "key = self.register(fileobj, events, data)"
                    },
                    {
                        "line_number": 300,
                        "content": "key = super().register(fileobj, events, data)"
                    },
                    {
                        "line_number": 353,
                        "content": "key = super().register(fileobj, events, data)"
                    },
                    {
                        "line_number": 518,
                        "content": "key = super().register(fileobj, events, data)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "symtable.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.10.0\\lldb\\lib\\symtable.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 28,
                        "content": "key = table, filename"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "tarfile.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.10.0\\lldb\\lib\\tarfile.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 2040,
                        "content": "directories.sort(key=lambda a: a.name)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "trace.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.10.0\\lldb\\lib\\trace.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 556,
                        "content": "key = filename, lineno"
                    },
                    {
                        "line_number": 583,
                        "content": "key = filename, lineno"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "warnings.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.10.0\\lldb\\lib\\warnings.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 346,
                        "content": "key = (text, category, lineno)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "warnings.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.10.0\\lldb\\lib\\warnings.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 346,
                        "content": "key = (text, category, lineno)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "weakref.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.10.0\\lldb\\lib\\weakref.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 628,
                        "content": "L.sort(key=lambda item:item[1].index)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "selector_events.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.10.0\\lldb\\lib\\asyncio\\selector_events.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 36,
                        "content": "key = selector.get_key(fd)"
                    },
                    {
                        "line_number": 261,
                        "content": "key = self._selector.get_key(fd)"
                    },
                    {
                        "line_number": 277,
                        "content": "key = self._selector.get_key(fd)"
                    },
                    {
                        "line_number": 298,
                        "content": "key = self._selector.get_key(fd)"
                    },
                    {
                        "line_number": 315,
                        "content": "key = self._selector.get_key(fd)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "selector_events.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.10.0\\lldb\\lib\\asyncio\\selector_events.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 261,
                        "content": "key = self._selector.get_key(fd)"
                    },
                    {
                        "line_number": 277,
                        "content": "key = self._selector.get_key(fd)"
                    },
                    {
                        "line_number": 298,
                        "content": "key = self._selector.get_key(fd)"
                    },
                    {
                        "line_number": 315,
                        "content": "key = self._selector.get_key(fd)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "__init__.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.10.0\\lldb\\lib\\collections\\__init__.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 132,
                        "content": "link.prev, link.next, link.key = last, root, key"
                    },
                    {
                        "line_number": 610,
                        "content": "return sorted(self.items(), key=_itemgetter(1), reverse=True)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "__init__.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.10.0\\lldb\\lib\\collections\\__init__.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 610,
                        "content": "return sorted(self.items(), key=_itemgetter(1), reverse=True)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "dumb.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.10.0\\lldb\\lib\\dbm\\dumb.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 145,
                        "content": "key = key.encode('utf-8')"
                    },
                    {
                        "line_number": 190,
                        "content": "key = key.encode('utf-8')"
                    },
                    {
                        "line_number": 227,
                        "content": "key = key.encode('utf-8')"
                    },
                    {
                        "line_number": 250,
                        "content": "key = key.encode('utf-8')"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "msvc9compiler.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.10.0\\lldb\\lib\\distutils\\msvc9compiler.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 158,
                        "content": "key = RegEnumKey(h, 0)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "msvccompiler.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.10.0\\lldb\\lib\\distutils\\msvccompiler.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 138,
                        "content": "key = RegEnumKey(h, 0)"
                    },
                    {
                        "line_number": 598,
                        "content": "key = (r\"%s\\%0.1f\\VC\\VC_OBJECTS_PLATFORM_INFO\\Win32\\Directories\""
                    },
                    {
                        "line_number": 601,
                        "content": "key = (r\"%s\\6.0\\Build System\\Components\\Platforms\""
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "msvccompiler.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.10.0\\lldb\\lib\\distutils\\msvccompiler.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 601,
                        "content": "key = (r\"%s\\6.0\\Build System\\Components\\Platforms\""
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "_msvccompiler.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.10.0\\lldb\\lib\\distutils\\_msvccompiler.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 30,
                        "content": "key = winreg.OpenKeyEx("
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "cookiejar.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.10.0\\lldb\\lib\\http\\cookiejar.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1304,
                        "content": "cookies.sort(key=lambda a: len(a.path), reverse=True)"
                    },
                    {
                        "line_number": 1642,
                        "content": "key = ns_cookie.domain, ns_cookie.path, ns_cookie.name"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "cookies.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.10.0\\lldb\\lib\\http\\cookies.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 408,
                        "content": "if key == \"expires\" and isinstance(value, int):"
                    },
                    {
                        "line_number": 410,
                        "content": "elif key == \"max-age\" and isinstance(value, int):"
                    },
                    {
                        "line_number": 412,
                        "content": "elif key == \"comment\" and isinstance(value, str):"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "__init__.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.10.0\\lldb\\lib\\lldb-python\\lldb\\__init__.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 4034,
                        "content": "key = key * self.item_size # SBData uses byte-based indexes, but we want to use itemsize-based indexes here"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "topics.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.10.0\\lldb\\lib\\pydoc_data\\topics.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 13510,
                        "content": "'      \"key=str.lower\"). The key corresponding to each item in '"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "cache.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.10.0\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_internal\\cache.py",
                "vulnerability": "SHA-224",
                "lines": [
                    {
                        "line_number": 33,
                        "content": "return hashlib.sha224(s.encode(\"ascii\")).hexdigest()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-224 provides reduced security compared to larger variants."
            },
            {
                "language": "Python",
                "filename": "configuration.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.10.0\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_internal\\configuration.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 333,
                        "content": "key = section + \".\" + _normalize_name(name)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "self_outdated_check.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.10.0\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_internal\\self_outdated_check.py",
                "vulnerability": "SHA-224",
                "lines": [
                    {
                        "line_number": 35,
                        "content": "name = hashlib.sha224(key_bytes).hexdigest()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-224 provides reduced security compared to larger variants."
            },
            {
                "language": "Python",
                "filename": "parser.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.10.0\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_internal\\cli\\parser.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 188,
                        "content": "section, key = section_key.split(\".\", 1)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "configuration.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.10.0\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_internal\\commands\\configuration.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 173,
                        "content": "key = self._get_n_args(args, \"get [name]\", n=1)"
                    },
                    {
                        "line_number": 187,
                        "content": "key = self._get_n_args(args, \"unset [name]\", n=1)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "configuration.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.10.0\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_internal\\commands\\configuration.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 173,
                        "content": "key = self._get_n_args(args, \"get [name]\", n=1)"
                    },
                    {
                        "line_number": 187,
                        "content": "key = self._get_n_args(args, \"unset [name]\", n=1)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "candidate.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.10.0\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_internal\\models\\candidate.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 25,
                        "content": "key=(self.name, self.version, self.link),"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "candidate.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.10.0\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_internal\\models\\candidate.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 25,
                        "content": "key=(self.name, self.version, self.link),"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "link.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.10.0\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_internal\\models\\link.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 79,
                        "content": "super().__init__(key=url, defining_class=Link)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "freeze.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.10.0\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_internal\\operations\\freeze.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 169,
                        "content": "installations.values(), key=lambda x: x.name.lower()):"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "wheel.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.10.0\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_internal\\operations\\install\\wheel.py",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 88,
                        "content": "\"\"\"Return (encoded_digest, length) for path using hashlib.sha256()\"\"\""
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Python",
                "filename": "req_tracker.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.10.0\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_internal\\req\\req_tracker.py",
                "vulnerability": "SHA-224",
                "lines": [
                    {
                        "line_number": 88,
                        "content": "hashed = hashlib.sha224(link.url_without_fragment.encode()).hexdigest()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-224 provides reduced security compared to larger variants."
            },
            {
                "language": "Python",
                "filename": "provider.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.10.0\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_internal\\resolution\\resolvelib\\provider.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 119,
                        "content": "key = next(iter(candidates)).name if candidates else \"\""
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "misc.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.10.0\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_internal\\utils\\misc.py",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 879,
                        "content": "\"\"\"Return (hash, length) for path using hashlib.sha256()"
                    },
                    {
                        "line_number": 882,
                        "content": "h = hashlib.sha256()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Python",
                "filename": "appdirs.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.10.0\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_vendor\\appdirs.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 482,
                        "content": "key = _winreg.OpenKey("
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "file_cache.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.10.0\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_vendor\\cachecontrol\\caches\\file_cache.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 145,
                        "content": "key = CacheController.cache_url(url)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "file_cache.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.10.0\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_vendor\\cachecontrol\\caches\\file_cache.py",
                "vulnerability": "SHA-224",
                "lines": [
                    {
                        "line_number": 99,
                        "content": "return hashlib.sha224(x.encode()).hexdigest()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-224 provides reduced security compared to larger variants."
            },
            {
                "language": "Python",
                "filename": "__init__.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.10.0\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_vendor\\chardet\\__init__.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 81,
                        "content": "return sorted(results, key=lambda result: -result['confidence'])"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "__init__.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.10.0\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_vendor\\chardet\\__init__.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 81,
                        "content": "return sorted(results, key=lambda result: -result['confidence'])"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "compat.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.10.0\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_vendor\\distlib\\compat.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 692,
                        "content": "link_prev, link_next, key = self.__map.pop(key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "database.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.10.0\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_vendor\\distlib\\database.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 343,
                        "content": "self.key = self.name.lower()    # for case-insensitive comparisons"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "database.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.10.0\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_vendor\\distlib\\database.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 343,
                        "content": "self.key = self.name.lower()    # for case-insensitive comparisons"
                    },
                    {
                        "line_number": 869,
                        "content": "s.key = n.lower()   # for case-insensitive comparisons"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "database.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.10.0\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_vendor\\distlib\\database.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 519,
                        "content": "hasher = hashlib.md5"
                    },
                    {
                        "line_number": 1017,
                        "content": "return hashlib.md5(content).hexdigest()"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "index.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.10.0\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_vendor\\distlib\\index.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 276,
                        "content": "md5_digest = hashlib.md5(file_data).hexdigest()"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "index.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.10.0\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_vendor\\distlib\\index.py",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 277,
                        "content": "sha256_digest = hashlib.sha256(file_data).hexdigest()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Python",
                "filename": "locators.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.10.0\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_vendor\\distlib\\locators.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 582,
                        "content": "result = sorted(result, key=lambda t: t[0], reverse=True)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "locators.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.10.0\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_vendor\\distlib\\locators.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 582,
                        "content": "result = sorted(result, key=lambda t: t[0], reverse=True)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "version.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.10.0\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_vendor\\distlib\\version.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 108,
                        "content": "self.key = self.name.lower()    # for case-insensitive comparisons"
                    },
                    {
                        "line_number": 163,
                        "content": "return self.key == other.key and self._parts == other._parts"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "version.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.10.0\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_vendor\\distlib\\version.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 108,
                        "content": "self.key = self.name.lower()    # for case-insensitive comparisons"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "wheel.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.10.0\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_vendor\\distlib\\wheel.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 378,
                        "content": "if key == 'scripts' and not p.endswith('.exe'):"
                    },
                    {
                        "line_number": 861,
                        "content": "key = '%s/PKG-INFO' % info_dir"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "wheel.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.10.0\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_vendor\\distlib\\wheel.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 861,
                        "content": "key = '%s/PKG-INFO' % info_dir"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "tarfile.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.10.0\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_vendor\\distlib\\_backport\\tarfile.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 2148,
                        "content": "directories.sort(key=lambda a: a.name)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "__init__.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.10.0\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_vendor\\pkg_resources\\__init__.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 2642,
                        "content": "self._key = key = self.project_name.lower()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "auth.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.10.0\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_vendor\\requests\\auth.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 148,
                        "content": "return hashlib.md5(x).hexdigest()"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "auth.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.10.0\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_vendor\\requests\\auth.py",
                "vulnerability": "SHA-1",
                "lines": [
                    {
                        "line_number": 154,
                        "content": "return hashlib.sha1(x).hexdigest()"
                    },
                    {
                        "line_number": 198,
                        "content": "cnonce = (hashlib.sha1(s).hexdigest()[:16])"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collisions."
            },
            {
                "language": "Python",
                "filename": "auth.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.10.0\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_vendor\\requests\\auth.py",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 160,
                        "content": "return hashlib.sha256(x).hexdigest()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Python",
                "filename": "models.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.10.0\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_vendor\\requests\\models.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 915,
                        "content": "key = link.get('rel') or link.get('url')"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "models.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.10.0\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_vendor\\requests\\models.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 915,
                        "content": "key = link.get('rel') or link.get('url')"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "utils.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.10.0\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_vendor\\requests\\utils.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 480,
                        "content": "key = param[:index_of_equals].strip(items_to_strip)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "__init__.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.10.0\\lldb\\lib\\site-packages\\setuptools-56.0.0-py3.9.egg\\pkg_resources\\__init__.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 2640,
                        "content": "self._key = key = self.project_name.lower()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "appdirs.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.10.0\\lldb\\lib\\site-packages\\setuptools-56.0.0-py3.9.egg\\pkg_resources\\_vendor\\appdirs.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 471,
                        "content": "key = _winreg.OpenKey("
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "dist.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.10.0\\lldb\\lib\\site-packages\\setuptools-56.0.0-py3.9.egg\\setuptools\\dist.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 415,
                        "content": "key = pkg_resources.safe_name(str(attrs['name'])).lower()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "msvc.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.10.0\\lldb\\lib\\site-packages\\setuptools-56.0.0-py3.9.egg\\setuptools\\msvc.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 87,
                        "content": "key = vc_base % ('', version)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "msvc.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.10.0\\lldb\\lib\\site-packages\\setuptools-56.0.0-py3.9.egg\\setuptools\\msvc.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 94,
                        "content": "key = vc_base % ('Wow6432Node\\\\', version)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "egg_info.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.10.0\\lldb\\lib\\site-packages\\setuptools-56.0.0-py3.9.egg\\setuptools\\command\\egg_info.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 241,
                        "content": "if pd is not None and pd.key == self.egg_name.lower():"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "msvc9compiler.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.10.0\\lldb\\lib\\site-packages\\setuptools-56.0.0-py3.9.egg\\setuptools\\_distutils\\msvc9compiler.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 158,
                        "content": "key = RegEnumKey(h, 0)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "msvccompiler.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.10.0\\lldb\\lib\\site-packages\\setuptools-56.0.0-py3.9.egg\\setuptools\\_distutils\\msvccompiler.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 138,
                        "content": "key = RegEnumKey(h, 0)"
                    },
                    {
                        "line_number": 598,
                        "content": "key = (r\"%s\\%0.1f\\VC\\VC_OBJECTS_PLATFORM_INFO\\Win32\\Directories\""
                    },
                    {
                        "line_number": 601,
                        "content": "key = (r\"%s\\6.0\\Build System\\Components\\Platforms\""
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "msvccompiler.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.10.0\\lldb\\lib\\site-packages\\setuptools-56.0.0-py3.9.egg\\setuptools\\_distutils\\msvccompiler.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 601,
                        "content": "key = (r\"%s\\6.0\\Build System\\Components\\Platforms\""
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "_msvccompiler.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.10.0\\lldb\\lib\\site-packages\\setuptools-56.0.0-py3.9.egg\\setuptools\\_distutils\\_msvccompiler.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 34,
                        "content": "key = winreg.OpenKeyEx("
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "request.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.10.0\\lldb\\lib\\urllib\\request.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1604,
                        "content": "key = user, host, port, '/'.join(dirs), timeout"
                    },
                    {
                        "line_number": 2064,
                        "content": "key = user, host, port, '/'.join(dirs)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "request.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.10.0\\lldb\\lib\\urllib\\request.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 1420,
                        "content": "\"\"\"Parse list of key=value strings where keys are not duplicated.\"\"\""
                    },
                    {
                        "line_number": 2327,
                        "content": "key = realm + '@' + host.lower()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "request.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.10.0\\lldb\\lib\\urllib\\request.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 1209,
                        "content": "H = lambda x: hashlib.md5(x.encode(\"ascii\")).hexdigest()"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "request.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.10.0\\lldb\\lib\\urllib\\request.py",
                "vulnerability": "SHA-1",
                "lines": [
                    {
                        "line_number": 1141,
                        "content": "dig = hashlib.sha1(b).hexdigest()"
                    },
                    {
                        "line_number": 1211,
                        "content": "H = lambda x: hashlib.sha1(x.encode(\"ascii\")).hexdigest()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collisions."
            },
            {
                "language": "Python",
                "filename": "minidom.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.10.0\\lldb\\lib\\xml\\dom\\minidom.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1584,
                        "content": "key = element.tagName"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "ElementTree.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.10.0\\lldb\\lib\\xml\\etree\\ElementTree.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 893,
                        "content": "key=lambda x: x[1]):  # sort on prefix"
                    },
                    {
                        "line_number": 949,
                        "content": "key=lambda x: x[1]):  # sort on prefix"
                    },
                    {
                        "line_number": 1956,
                        "content": "qnames, key=lambda n: n.split('}', 1))}"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "_tzpath.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.10.0\\lldb\\lib\\zoneinfo\\_tzpath.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 152,
                        "content": "key = os.path.relpath(fpath, start=tz_root)"
                    },
                    {
                        "line_number": 154,
                        "content": "key = key.replace(os.sep, \"/\")"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "_tzpath.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.10.0\\lldb\\lib\\zoneinfo\\_tzpath.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 152,
                        "content": "key = os.path.relpath(fpath, start=tz_root)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "antigravity.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.0\\lldb\\lib\\antigravity.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 15,
                        "content": "h = hashlib.md5(datedow, usedforsecurity=False).hexdigest()"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "configparser.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.0\\lldb\\lib\\configparser.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 748,
                        "content": "key = self.optionxform(str(key))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "configparser.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.0\\lldb\\lib\\configparser.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 748,
                        "content": "key = self.optionxform(str(key))"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "enum.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.0\\lldb\\lib\\enum.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 111,
                        "content": "if key == '_generate_next_value_':"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "functools.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.0\\lldb\\lib\\functools.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 553,
                        "content": "key = make_key(args, kwds, typed)"
                    },
                    {
                        "line_number": 568,
                        "content": "key = make_key(args, kwds, typed)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "gettext.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.0\\lldb\\lib\\gettext.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 598,
                        "content": "key = (class_, os.path.abspath(mofile))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "gettext.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.0\\lldb\\lib\\gettext.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 598,
                        "content": "key = (class_, os.path.abspath(mofile))"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "hashlib.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.0\\lldb\\lib\\hashlib.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 43,
                        "content": ">>> m = hashlib.md5()"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "hashlib.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.0\\lldb\\lib\\hashlib.py",
                "vulnerability": "SHA-224",
                "lines": [
                    {
                        "line_number": 51,
                        "content": ">>> hashlib.sha224(b\"Nobody inspects the spammish repetition\").hexdigest()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-224 provides reduced security compared to larger variants."
            },
            {
                "language": "Python",
                "filename": "hmac.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.0\\lldb\\lib\\hmac.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 197,
                        "content": "key = digest_cons(key).digest()"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "hmac.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.0\\lldb\\lib\\hmac.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 87,
                        "content": "key = self._digest_cons(key).digest()"
                    },
                    {
                        "line_number": 89,
                        "content": "key = key.ljust(blocksize, b'\\0')"
                    },
                    {
                        "line_number": 197,
                        "content": "key = digest_cons(key).digest()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "mailbox.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.0\\lldb\\lib\\mailbox.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 1253,
                        "content": "key = _singlefileMailbox.add(self, message)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "mailcap.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.0\\lldb\\lib\\mailcap.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 104,
                        "content": "key = '/'.join(types).lower()"
                    },
                    {
                        "line_number": 159,
                        "content": "def findmatch(caps, MIMEtype, key='view', filename=\"/dev/null\", plist=[]):"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "os.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.0\\lldb\\lib\\os.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 683,
                        "content": "key = self.encodekey(key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "pickle.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.0\\lldb\\lib\\pickle.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 1561,
                        "content": "key = _inverted_registry.get(code)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "poplib.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.0\\lldb\\lib\\poplib.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 335,
                        "content": "digest = hashlib.md5(digest).hexdigest()"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "pyclbr.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.0\\lldb\\lib\\pyclbr.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 381,
                        "content": "objs = sorted(tree.values(), key=lineno_key, reverse=True)"
                    },
                    {
                        "line_number": 393,
                        "content": "key=lineno_key, reverse=True)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "pydoc.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.0\\lldb\\lib\\pydoc.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 2212,
                        "content": "def run(self, callback, key=None, completer=None, onerror=None):"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "pydoc.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.0\\lldb\\lib\\pydoc.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 2542,
                        "content": "'key = %s' % key, '#ffffff', '#ee77aa', '<br>'.join(results))"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "selectors.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.0\\lldb\\lib\\selectors.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 250,
                        "content": "key = self._fd_to_key.pop(self._fileobj_lookup(fileobj))"
                    },
                    {
                        "line_number": 257,
                        "content": "key = self._fd_to_key[self._fileobj_lookup(fileobj)]"
                    },
                    {
                        "line_number": 300,
                        "content": "key = super().register(fileobj, events, data)"
                    },
                    {
                        "line_number": 353,
                        "content": "key = super().register(fileobj, events, data)"
                    },
                    {
                        "line_number": 378,
                        "content": "key = self._fd_to_key[self._fileobj_lookup(fileobj)]"
                    },
                    {
                        "line_number": 518,
                        "content": "key = super().register(fileobj, events, data)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "selectors.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.0\\lldb\\lib\\selectors.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 250,
                        "content": "key = self._fd_to_key.pop(self._fileobj_lookup(fileobj))"
                    },
                    {
                        "line_number": 262,
                        "content": "key = self.register(fileobj, events, data)"
                    },
                    {
                        "line_number": 300,
                        "content": "key = super().register(fileobj, events, data)"
                    },
                    {
                        "line_number": 353,
                        "content": "key = super().register(fileobj, events, data)"
                    },
                    {
                        "line_number": 518,
                        "content": "key = super().register(fileobj, events, data)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "symtable.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.0\\lldb\\lib\\symtable.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 28,
                        "content": "key = table, filename"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "tarfile.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.0\\lldb\\lib\\tarfile.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 2040,
                        "content": "directories.sort(key=lambda a: a.name)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "trace.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.0\\lldb\\lib\\trace.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 556,
                        "content": "key = filename, lineno"
                    },
                    {
                        "line_number": 583,
                        "content": "key = filename, lineno"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "warnings.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.0\\lldb\\lib\\warnings.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 346,
                        "content": "key = (text, category, lineno)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "warnings.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.0\\lldb\\lib\\warnings.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 346,
                        "content": "key = (text, category, lineno)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "weakref.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.0\\lldb\\lib\\weakref.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 628,
                        "content": "L.sort(key=lambda item:item[1].index)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "selector_events.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.0\\lldb\\lib\\asyncio\\selector_events.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 36,
                        "content": "key = selector.get_key(fd)"
                    },
                    {
                        "line_number": 261,
                        "content": "key = self._selector.get_key(fd)"
                    },
                    {
                        "line_number": 277,
                        "content": "key = self._selector.get_key(fd)"
                    },
                    {
                        "line_number": 298,
                        "content": "key = self._selector.get_key(fd)"
                    },
                    {
                        "line_number": 315,
                        "content": "key = self._selector.get_key(fd)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "selector_events.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.0\\lldb\\lib\\asyncio\\selector_events.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 261,
                        "content": "key = self._selector.get_key(fd)"
                    },
                    {
                        "line_number": 277,
                        "content": "key = self._selector.get_key(fd)"
                    },
                    {
                        "line_number": 298,
                        "content": "key = self._selector.get_key(fd)"
                    },
                    {
                        "line_number": 315,
                        "content": "key = self._selector.get_key(fd)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "__init__.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.0\\lldb\\lib\\collections\\__init__.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 132,
                        "content": "link.prev, link.next, link.key = last, root, key"
                    },
                    {
                        "line_number": 610,
                        "content": "return sorted(self.items(), key=_itemgetter(1), reverse=True)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "__init__.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.0\\lldb\\lib\\collections\\__init__.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 610,
                        "content": "return sorted(self.items(), key=_itemgetter(1), reverse=True)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "dumb.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.0\\lldb\\lib\\dbm\\dumb.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 145,
                        "content": "key = key.encode('utf-8')"
                    },
                    {
                        "line_number": 190,
                        "content": "key = key.encode('utf-8')"
                    },
                    {
                        "line_number": 227,
                        "content": "key = key.encode('utf-8')"
                    },
                    {
                        "line_number": 250,
                        "content": "key = key.encode('utf-8')"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "msvc9compiler.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.0\\lldb\\lib\\distutils\\msvc9compiler.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 158,
                        "content": "key = RegEnumKey(h, 0)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "msvccompiler.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.0\\lldb\\lib\\distutils\\msvccompiler.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 138,
                        "content": "key = RegEnumKey(h, 0)"
                    },
                    {
                        "line_number": 598,
                        "content": "key = (r\"%s\\%0.1f\\VC\\VC_OBJECTS_PLATFORM_INFO\\Win32\\Directories\""
                    },
                    {
                        "line_number": 601,
                        "content": "key = (r\"%s\\6.0\\Build System\\Components\\Platforms\""
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "msvccompiler.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.0\\lldb\\lib\\distutils\\msvccompiler.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 601,
                        "content": "key = (r\"%s\\6.0\\Build System\\Components\\Platforms\""
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "_msvccompiler.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.0\\lldb\\lib\\distutils\\_msvccompiler.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 30,
                        "content": "key = winreg.OpenKeyEx("
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "cookiejar.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.0\\lldb\\lib\\http\\cookiejar.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1304,
                        "content": "cookies.sort(key=lambda a: len(a.path), reverse=True)"
                    },
                    {
                        "line_number": 1642,
                        "content": "key = ns_cookie.domain, ns_cookie.path, ns_cookie.name"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "cookies.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.0\\lldb\\lib\\http\\cookies.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 408,
                        "content": "if key == \"expires\" and isinstance(value, int):"
                    },
                    {
                        "line_number": 410,
                        "content": "elif key == \"max-age\" and isinstance(value, int):"
                    },
                    {
                        "line_number": 412,
                        "content": "elif key == \"comment\" and isinstance(value, str):"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "__init__.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.0\\lldb\\lib\\lldb-python\\lldb\\__init__.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 4340,
                        "content": "key = key * self.item_size # SBData uses byte-based indexes, but we want to use itemsize-based indexes here"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "topics.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.0\\lldb\\lib\\pydoc_data\\topics.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 13510,
                        "content": "'      \"key=str.lower\"). The key corresponding to each item in '"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "cache.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.0\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_internal\\cache.py",
                "vulnerability": "SHA-224",
                "lines": [
                    {
                        "line_number": 33,
                        "content": "return hashlib.sha224(s.encode(\"ascii\")).hexdigest()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-224 provides reduced security compared to larger variants."
            },
            {
                "language": "Python",
                "filename": "configuration.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.0\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_internal\\configuration.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 333,
                        "content": "key = section + \".\" + _normalize_name(name)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "self_outdated_check.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.0\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_internal\\self_outdated_check.py",
                "vulnerability": "SHA-224",
                "lines": [
                    {
                        "line_number": 35,
                        "content": "name = hashlib.sha224(key_bytes).hexdigest()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-224 provides reduced security compared to larger variants."
            },
            {
                "language": "Python",
                "filename": "parser.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.0\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_internal\\cli\\parser.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 188,
                        "content": "section, key = section_key.split(\".\", 1)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "configuration.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.0\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_internal\\commands\\configuration.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 173,
                        "content": "key = self._get_n_args(args, \"get [name]\", n=1)"
                    },
                    {
                        "line_number": 187,
                        "content": "key = self._get_n_args(args, \"unset [name]\", n=1)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "configuration.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.0\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_internal\\commands\\configuration.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 173,
                        "content": "key = self._get_n_args(args, \"get [name]\", n=1)"
                    },
                    {
                        "line_number": 187,
                        "content": "key = self._get_n_args(args, \"unset [name]\", n=1)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "candidate.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.0\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_internal\\models\\candidate.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 25,
                        "content": "key=(self.name, self.version, self.link),"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "candidate.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.0\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_internal\\models\\candidate.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 25,
                        "content": "key=(self.name, self.version, self.link),"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "link.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.0\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_internal\\models\\link.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 79,
                        "content": "super().__init__(key=url, defining_class=Link)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "freeze.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.0\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_internal\\operations\\freeze.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 169,
                        "content": "installations.values(), key=lambda x: x.name.lower()):"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "wheel.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.0\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_internal\\operations\\install\\wheel.py",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 88,
                        "content": "\"\"\"Return (encoded_digest, length) for path using hashlib.sha256()\"\"\""
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Python",
                "filename": "req_tracker.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.0\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_internal\\req\\req_tracker.py",
                "vulnerability": "SHA-224",
                "lines": [
                    {
                        "line_number": 88,
                        "content": "hashed = hashlib.sha224(link.url_without_fragment.encode()).hexdigest()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-224 provides reduced security compared to larger variants."
            },
            {
                "language": "Python",
                "filename": "provider.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.0\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_internal\\resolution\\resolvelib\\provider.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 119,
                        "content": "key = next(iter(candidates)).name if candidates else \"\""
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "misc.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.0\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_internal\\utils\\misc.py",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 879,
                        "content": "\"\"\"Return (hash, length) for path using hashlib.sha256()"
                    },
                    {
                        "line_number": 882,
                        "content": "h = hashlib.sha256()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Python",
                "filename": "appdirs.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.0\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_vendor\\appdirs.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 482,
                        "content": "key = _winreg.OpenKey("
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "file_cache.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.0\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_vendor\\cachecontrol\\caches\\file_cache.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 145,
                        "content": "key = CacheController.cache_url(url)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "file_cache.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.0\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_vendor\\cachecontrol\\caches\\file_cache.py",
                "vulnerability": "SHA-224",
                "lines": [
                    {
                        "line_number": 99,
                        "content": "return hashlib.sha224(x.encode()).hexdigest()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-224 provides reduced security compared to larger variants."
            },
            {
                "language": "Python",
                "filename": "__init__.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.0\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_vendor\\chardet\\__init__.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 81,
                        "content": "return sorted(results, key=lambda result: -result['confidence'])"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "__init__.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.0\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_vendor\\chardet\\__init__.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 81,
                        "content": "return sorted(results, key=lambda result: -result['confidence'])"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "compat.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.0\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_vendor\\distlib\\compat.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 692,
                        "content": "link_prev, link_next, key = self.__map.pop(key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "database.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.0\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_vendor\\distlib\\database.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 343,
                        "content": "self.key = self.name.lower()    # for case-insensitive comparisons"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "database.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.0\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_vendor\\distlib\\database.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 343,
                        "content": "self.key = self.name.lower()    # for case-insensitive comparisons"
                    },
                    {
                        "line_number": 869,
                        "content": "s.key = n.lower()   # for case-insensitive comparisons"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "database.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.0\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_vendor\\distlib\\database.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 519,
                        "content": "hasher = hashlib.md5"
                    },
                    {
                        "line_number": 1017,
                        "content": "return hashlib.md5(content).hexdigest()"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "index.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.0\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_vendor\\distlib\\index.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 276,
                        "content": "md5_digest = hashlib.md5(file_data).hexdigest()"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "index.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.0\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_vendor\\distlib\\index.py",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 277,
                        "content": "sha256_digest = hashlib.sha256(file_data).hexdigest()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Python",
                "filename": "locators.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.0\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_vendor\\distlib\\locators.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 582,
                        "content": "result = sorted(result, key=lambda t: t[0], reverse=True)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "locators.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.0\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_vendor\\distlib\\locators.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 582,
                        "content": "result = sorted(result, key=lambda t: t[0], reverse=True)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "version.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.0\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_vendor\\distlib\\version.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 108,
                        "content": "self.key = self.name.lower()    # for case-insensitive comparisons"
                    },
                    {
                        "line_number": 163,
                        "content": "return self.key == other.key and self._parts == other._parts"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "version.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.0\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_vendor\\distlib\\version.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 108,
                        "content": "self.key = self.name.lower()    # for case-insensitive comparisons"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "wheel.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.0\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_vendor\\distlib\\wheel.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 378,
                        "content": "if key == 'scripts' and not p.endswith('.exe'):"
                    },
                    {
                        "line_number": 861,
                        "content": "key = '%s/PKG-INFO' % info_dir"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "wheel.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.0\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_vendor\\distlib\\wheel.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 861,
                        "content": "key = '%s/PKG-INFO' % info_dir"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "tarfile.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.0\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_vendor\\distlib\\_backport\\tarfile.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 2148,
                        "content": "directories.sort(key=lambda a: a.name)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "__init__.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.0\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_vendor\\pkg_resources\\__init__.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 2642,
                        "content": "self._key = key = self.project_name.lower()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "auth.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.0\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_vendor\\requests\\auth.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 148,
                        "content": "return hashlib.md5(x).hexdigest()"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "auth.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.0\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_vendor\\requests\\auth.py",
                "vulnerability": "SHA-1",
                "lines": [
                    {
                        "line_number": 154,
                        "content": "return hashlib.sha1(x).hexdigest()"
                    },
                    {
                        "line_number": 198,
                        "content": "cnonce = (hashlib.sha1(s).hexdigest()[:16])"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collisions."
            },
            {
                "language": "Python",
                "filename": "auth.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.0\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_vendor\\requests\\auth.py",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 160,
                        "content": "return hashlib.sha256(x).hexdigest()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Python",
                "filename": "models.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.0\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_vendor\\requests\\models.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 915,
                        "content": "key = link.get('rel') or link.get('url')"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "models.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.0\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_vendor\\requests\\models.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 915,
                        "content": "key = link.get('rel') or link.get('url')"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "utils.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.0\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_vendor\\requests\\utils.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 480,
                        "content": "key = param[:index_of_equals].strip(items_to_strip)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "__init__.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.0\\lldb\\lib\\site-packages\\setuptools-56.0.0-py3.9.egg\\pkg_resources\\__init__.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 2640,
                        "content": "self._key = key = self.project_name.lower()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "appdirs.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.0\\lldb\\lib\\site-packages\\setuptools-56.0.0-py3.9.egg\\pkg_resources\\_vendor\\appdirs.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 471,
                        "content": "key = _winreg.OpenKey("
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "dist.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.0\\lldb\\lib\\site-packages\\setuptools-56.0.0-py3.9.egg\\setuptools\\dist.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 415,
                        "content": "key = pkg_resources.safe_name(str(attrs['name'])).lower()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "msvc.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.0\\lldb\\lib\\site-packages\\setuptools-56.0.0-py3.9.egg\\setuptools\\msvc.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 87,
                        "content": "key = vc_base % ('', version)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "msvc.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.0\\lldb\\lib\\site-packages\\setuptools-56.0.0-py3.9.egg\\setuptools\\msvc.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 94,
                        "content": "key = vc_base % ('Wow6432Node\\\\', version)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "egg_info.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.0\\lldb\\lib\\site-packages\\setuptools-56.0.0-py3.9.egg\\setuptools\\command\\egg_info.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 241,
                        "content": "if pd is not None and pd.key == self.egg_name.lower():"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "msvc9compiler.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.0\\lldb\\lib\\site-packages\\setuptools-56.0.0-py3.9.egg\\setuptools\\_distutils\\msvc9compiler.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 158,
                        "content": "key = RegEnumKey(h, 0)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "msvccompiler.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.0\\lldb\\lib\\site-packages\\setuptools-56.0.0-py3.9.egg\\setuptools\\_distutils\\msvccompiler.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 138,
                        "content": "key = RegEnumKey(h, 0)"
                    },
                    {
                        "line_number": 598,
                        "content": "key = (r\"%s\\%0.1f\\VC\\VC_OBJECTS_PLATFORM_INFO\\Win32\\Directories\""
                    },
                    {
                        "line_number": 601,
                        "content": "key = (r\"%s\\6.0\\Build System\\Components\\Platforms\""
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "msvccompiler.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.0\\lldb\\lib\\site-packages\\setuptools-56.0.0-py3.9.egg\\setuptools\\_distutils\\msvccompiler.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 601,
                        "content": "key = (r\"%s\\6.0\\Build System\\Components\\Platforms\""
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "_msvccompiler.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.0\\lldb\\lib\\site-packages\\setuptools-56.0.0-py3.9.egg\\setuptools\\_distutils\\_msvccompiler.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 34,
                        "content": "key = winreg.OpenKeyEx("
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "request.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.0\\lldb\\lib\\urllib\\request.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1604,
                        "content": "key = user, host, port, '/'.join(dirs), timeout"
                    },
                    {
                        "line_number": 2064,
                        "content": "key = user, host, port, '/'.join(dirs)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "request.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.0\\lldb\\lib\\urllib\\request.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 1420,
                        "content": "\"\"\"Parse list of key=value strings where keys are not duplicated.\"\"\""
                    },
                    {
                        "line_number": 2327,
                        "content": "key = realm + '@' + host.lower()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "request.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.0\\lldb\\lib\\urllib\\request.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 1209,
                        "content": "H = lambda x: hashlib.md5(x.encode(\"ascii\")).hexdigest()"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "request.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.0\\lldb\\lib\\urllib\\request.py",
                "vulnerability": "SHA-1",
                "lines": [
                    {
                        "line_number": 1141,
                        "content": "dig = hashlib.sha1(b).hexdigest()"
                    },
                    {
                        "line_number": 1211,
                        "content": "H = lambda x: hashlib.sha1(x.encode(\"ascii\")).hexdigest()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collisions."
            },
            {
                "language": "Python",
                "filename": "minidom.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.0\\lldb\\lib\\xml\\dom\\minidom.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1584,
                        "content": "key = element.tagName"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "ElementTree.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.0\\lldb\\lib\\xml\\etree\\ElementTree.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 893,
                        "content": "key=lambda x: x[1]):  # sort on prefix"
                    },
                    {
                        "line_number": 949,
                        "content": "key=lambda x: x[1]):  # sort on prefix"
                    },
                    {
                        "line_number": 1956,
                        "content": "qnames, key=lambda n: n.split('}', 1))}"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "_tzpath.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.0\\lldb\\lib\\zoneinfo\\_tzpath.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 152,
                        "content": "key = os.path.relpath(fpath, start=tz_root)"
                    },
                    {
                        "line_number": 154,
                        "content": "key = key.replace(os.sep, \"/\")"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "_tzpath.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.0\\lldb\\lib\\zoneinfo\\_tzpath.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 152,
                        "content": "key = os.path.relpath(fpath, start=tz_root)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "antigravity.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.1\\lldb\\lib\\antigravity.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 15,
                        "content": "h = hashlib.md5(datedow, usedforsecurity=False).hexdigest()"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "configparser.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.1\\lldb\\lib\\configparser.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 735,
                        "content": "key = self.optionxform(str(key))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "configparser.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.1\\lldb\\lib\\configparser.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 735,
                        "content": "key = self.optionxform(str(key))"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "enum.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.1\\lldb\\lib\\enum.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 420,
                        "content": "if key == '_generate_next_value_':"
                    },
                    {
                        "line_number": 1411,
                        "content": "key=lambda m: m._sort_order_,"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "functools.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.1\\lldb\\lib\\functools.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 552,
                        "content": "key = make_key(args, kwds, typed)"
                    },
                    {
                        "line_number": 567,
                        "content": "key = make_key(args, kwds, typed)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "gettext.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.1\\lldb\\lib\\gettext.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 534,
                        "content": "key = (class_, os.path.abspath(mofile))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "gettext.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.1\\lldb\\lib\\gettext.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 534,
                        "content": "key = (class_, os.path.abspath(mofile))"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "hashlib.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.1\\lldb\\lib\\hashlib.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 43,
                        "content": ">>> m = hashlib.md5()"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "hashlib.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.1\\lldb\\lib\\hashlib.py",
                "vulnerability": "SHA-224",
                "lines": [
                    {
                        "line_number": 51,
                        "content": ">>> hashlib.sha224(b\"Nobody inspects the spammish repetition\").hexdigest()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-224 provides reduced security compared to larger variants."
            },
            {
                "language": "Python",
                "filename": "hmac.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.1\\lldb\\lib\\hmac.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 98,
                        "content": "key = digest_cons(key).digest()"
                    },
                    {
                        "line_number": 213,
                        "content": "key = digest_cons(key).digest()"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "hmac.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.1\\lldb\\lib\\hmac.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 98,
                        "content": "key = digest_cons(key).digest()"
                    },
                    {
                        "line_number": 104,
                        "content": "key = key.ljust(blocksize, b'\\0')"
                    },
                    {
                        "line_number": 213,
                        "content": "key = digest_cons(key).digest()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "mailbox.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.1\\lldb\\lib\\mailbox.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 1258,
                        "content": "key = _singlefileMailbox.add(self, message)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "mailcap.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.1\\lldb\\lib\\mailcap.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 114,
                        "content": "key = '/'.join(types).lower()"
                    },
                    {
                        "line_number": 169,
                        "content": "def findmatch(caps, MIMEtype, key='view', filename=\"/dev/null\", plist=[]):"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "os.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.1\\lldb\\lib\\os.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 718,
                        "content": "key = self.encodekey(key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "pickle.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.1\\lldb\\lib\\pickle.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 1603,
                        "content": "key = _inverted_registry.get(code)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "poplib.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.1\\lldb\\lib\\poplib.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 335,
                        "content": "digest = hashlib.md5(digest).hexdigest()"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "pyclbr.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.1\\lldb\\lib\\pyclbr.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 291,
                        "content": "objs = sorted(tree.values(), key=lineno_key, reverse=True)"
                    },
                    {
                        "line_number": 303,
                        "content": "key=lineno_key, reverse=True)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "pydoc.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.1\\lldb\\lib\\pydoc.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 2315,
                        "content": "def run(self, callback, key=None, completer=None, onerror=None):"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "pydoc.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.1\\lldb\\lib\\pydoc.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 2647,
                        "content": "'key = %s' % key, 'index', '<br>'.join(results))"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "selectors.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.1\\lldb\\lib\\selectors.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 249,
                        "content": "key = self._fd_to_key.pop(self._fileobj_lookup(fileobj))"
                    },
                    {
                        "line_number": 256,
                        "content": "key = self._fd_to_key[self._fileobj_lookup(fileobj)]"
                    },
                    {
                        "line_number": 299,
                        "content": "key = super().register(fileobj, events, data)"
                    },
                    {
                        "line_number": 352,
                        "content": "key = super().register(fileobj, events, data)"
                    },
                    {
                        "line_number": 377,
                        "content": "key = self._fd_to_key[self._fileobj_lookup(fileobj)]"
                    },
                    {
                        "line_number": 518,
                        "content": "key = super().register(fileobj, events, data)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "selectors.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.1\\lldb\\lib\\selectors.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 249,
                        "content": "key = self._fd_to_key.pop(self._fileobj_lookup(fileobj))"
                    },
                    {
                        "line_number": 261,
                        "content": "key = self.register(fileobj, events, data)"
                    },
                    {
                        "line_number": 299,
                        "content": "key = super().register(fileobj, events, data)"
                    },
                    {
                        "line_number": 352,
                        "content": "key = super().register(fileobj, events, data)"
                    },
                    {
                        "line_number": 518,
                        "content": "key = super().register(fileobj, events, data)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "symtable.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.1\\lldb\\lib\\symtable.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 33,
                        "content": "key = table, filename"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "tarfile.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.1\\lldb\\lib\\tarfile.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 2306,
                        "content": "directories.sort(key=lambda a: a.name, reverse=True)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "trace.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.1\\lldb\\lib\\trace.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 556,
                        "content": "key = filename, lineno"
                    },
                    {
                        "line_number": 591,
                        "content": "key = filename, lineno"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "warnings.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.1\\lldb\\lib\\warnings.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 364,
                        "content": "key = (text, category, lineno)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "warnings.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.1\\lldb\\lib\\warnings.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 364,
                        "content": "key = (text, category, lineno)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "weakref.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.1\\lldb\\lib\\weakref.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 638,
                        "content": "L.sort(key=lambda item:item[1].index)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "selector_events.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.1\\lldb\\lib\\asyncio\\selector_events.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 46,
                        "content": "key = selector.get_key(fd)"
                    },
                    {
                        "line_number": 282,
                        "content": "key = self._selector.get_key(fd)"
                    },
                    {
                        "line_number": 298,
                        "content": "key = self._selector.get_key(fd)"
                    },
                    {
                        "line_number": 319,
                        "content": "key = self._selector.get_key(fd)"
                    },
                    {
                        "line_number": 336,
                        "content": "key = self._selector.get_key(fd)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "selector_events.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.1\\lldb\\lib\\asyncio\\selector_events.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 282,
                        "content": "key = self._selector.get_key(fd)"
                    },
                    {
                        "line_number": 298,
                        "content": "key = self._selector.get_key(fd)"
                    },
                    {
                        "line_number": 319,
                        "content": "key = self._selector.get_key(fd)"
                    },
                    {
                        "line_number": 336,
                        "content": "key = self._selector.get_key(fd)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "__init__.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.1\\lldb\\lib\\collections\\__init__.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 122,
                        "content": "link.prev, link.next, link.key = last, root, key"
                    },
                    {
                        "line_number": 628,
                        "content": "return sorted(self.items(), key=_itemgetter(1), reverse=True)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "__init__.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.1\\lldb\\lib\\collections\\__init__.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 628,
                        "content": "return sorted(self.items(), key=_itemgetter(1), reverse=True)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "dumb.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.1\\lldb\\lib\\dbm\\dumb.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 146,
                        "content": "key = key.encode('utf-8')"
                    },
                    {
                        "line_number": 191,
                        "content": "key = key.encode('utf-8')"
                    },
                    {
                        "line_number": 228,
                        "content": "key = key.encode('utf-8')"
                    },
                    {
                        "line_number": 251,
                        "content": "key = key.encode('utf-8')"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "cookiejar.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.1\\lldb\\lib\\http\\cookiejar.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1307,
                        "content": "cookies.sort(key=lambda a: len(a.path), reverse=True)"
                    },
                    {
                        "line_number": 1645,
                        "content": "key = ns_cookie.domain, ns_cookie.path, ns_cookie.name"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "cookies.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.1\\lldb\\lib\\http\\cookies.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 390,
                        "content": "if key == \"expires\" and isinstance(value, int):"
                    },
                    {
                        "line_number": 392,
                        "content": "elif key == \"max-age\" and isinstance(value, int):"
                    },
                    {
                        "line_number": 394,
                        "content": "elif key == \"comment\" and isinstance(value, str):"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "__init__.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.1\\lldb\\lib\\lldb-python\\lldb\\__init__.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 4340,
                        "content": "key = key * self.item_size # SBData uses byte-based indexes, but we want to use itemsize-based indexes here"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "topics.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.1\\lldb\\lib\\pydoc_data\\topics.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 16172,
                        "content": "'      \"key=str.lower\"). The key corresponding to each item in '"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "__init__.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.1\\lldb\\lib\\re\\__init__.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 289,
                        "content": "key = (type(pattern), pattern, flags)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "__init__.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.1\\lldb\\lib\\re\\__init__.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 289,
                        "content": "key = (type(pattern), pattern, flags)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "cache.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.1\\lldb\\lib\\site-packages\\pip\\_internal\\cache.py",
                "vulnerability": "SHA-224",
                "lines": [
                    {
                        "line_number": 29,
                        "content": "return hashlib.sha224(s.encode(\"ascii\")).hexdigest()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-224 provides reduced security compared to larger variants."
            },
            {
                "language": "Python",
                "filename": "configuration.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.1\\lldb\\lib\\site-packages\\pip\\_internal\\configuration.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 146,
                        "content": "key = _normalize_name(key)"
                    },
                    {
                        "line_number": 157,
                        "content": "key = _normalize_name(key)"
                    },
                    {
                        "line_number": 177,
                        "content": "key = _normalize_name(key)"
                    },
                    {
                        "line_number": 314,
                        "content": "key = section + \".\" + _normalize_name(name)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "self_outdated_check.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.1\\lldb\\lib\\site-packages\\pip\\_internal\\self_outdated_check.py",
                "vulnerability": "SHA-224",
                "lines": [
                    {
                        "line_number": 38,
                        "content": "name = hashlib.sha224(key_bytes).hexdigest()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-224 provides reduced security compared to larger variants."
            },
            {
                "language": "Python",
                "filename": "parser.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.1\\lldb\\lib\\site-packages\\pip\\_internal\\cli\\parser.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 197,
                        "content": "section, key = section_key.split(\".\", 1)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "configuration.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.1\\lldb\\lib\\site-packages\\pip\\_internal\\commands\\configuration.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 178,
                        "content": "key = self._get_n_args(args, \"get [name]\", n=1)"
                    },
                    {
                        "line_number": 190,
                        "content": "key = self._get_n_args(args, \"unset [name]\", n=1)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "configuration.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.1\\lldb\\lib\\site-packages\\pip\\_internal\\commands\\configuration.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 178,
                        "content": "key = self._get_n_args(args, \"get [name]\", n=1)"
                    },
                    {
                        "line_number": 190,
                        "content": "key = self._get_n_args(args, \"unset [name]\", n=1)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "_json.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.1\\lldb\\lib\\site-packages\\pip\\_internal\\metadata\\_json.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 64,
                        "content": "key = json_name(field)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "auth.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.1\\lldb\\lib\\site-packages\\pip\\_internal\\network\\auth.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 321,
                        "content": "key=lambda candidate: commonprefix("
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "freeze.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.1\\lldb\\lib\\site-packages\\pip\\_internal\\operations\\freeze.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 142,
                        "content": "for installation in sorted(installations.values(), key=lambda x: x.name.lower()):"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "build_tracker.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.1\\lldb\\lib\\site-packages\\pip\\_internal\\operations\\build\\build_tracker.py",
                "vulnerability": "SHA-224",
                "lines": [
                    {
                        "line_number": 84,
                        "content": "hashed = hashlib.sha224(key.encode()).hexdigest()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-224 provides reduced security compared to larger variants."
            },
            {
                "language": "Python",
                "filename": "wheel.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.1\\lldb\\lib\\site-packages\\pip\\_internal\\operations\\install\\wheel.py",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 81,
                        "content": "\"\"\"Return (encoded_digest, length) for path using hashlib.sha256()\"\"\""
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Python",
                "filename": "factory.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.1\\lldb\\lib\\site-packages\\pip\\_internal\\resolution\\resolvelib\\factory.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 558,
                        "content": "collected.requirements.sort(key=lambda r: r.name != r.project_name)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "resolver.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.1\\lldb\\lib\\site-packages\\pip\\_internal\\resolution\\resolvelib\\resolver.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 112,
                        "content": "result.mapping.values(), key=lambda c: c.name != c.project_name"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "misc.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.1\\lldb\\lib\\site-packages\\pip\\_internal\\utils\\misc.py",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 624,
                        "content": "\"\"\"Return (hash, length) for path using hashlib.sha256()\"\"\""
                    },
                    {
                        "line_number": 626,
                        "content": "h = hashlib.sha256()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Python",
                "filename": "file_cache.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.1\\lldb\\lib\\site-packages\\pip\\_vendor\\cachecontrol\\caches\\file_cache.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 181,
                        "content": "key = CacheController.cache_url(url)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "file_cache.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.1\\lldb\\lib\\site-packages\\pip\\_vendor\\cachecontrol\\caches\\file_cache.py",
                "vulnerability": "SHA-224",
                "lines": [
                    {
                        "line_number": 96,
                        "content": "return hashlib.sha224(x.encode()).hexdigest()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-224 provides reduced security compared to larger variants."
            },
            {
                "language": "Python",
                "filename": "compat.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.1\\lldb\\lib\\site-packages\\pip\\_vendor\\distlib\\compat.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 705,
                        "content": "link_prev, link_next, key = self.__map.pop(key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "database.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.1\\lldb\\lib\\site-packages\\pip\\_vendor\\distlib\\database.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 353,
                        "content": "self.key = self.name.lower()  # for case-insensitive comparisons"
                    },
                    {
                        "line_number": 880,
                        "content": "s.key = n.lower()  # for case-insensitive comparisons"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "database.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.1\\lldb\\lib\\site-packages\\pip\\_vendor\\distlib\\database.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 353,
                        "content": "self.key = self.name.lower()  # for case-insensitive comparisons"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "database.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.1\\lldb\\lib\\site-packages\\pip\\_vendor\\distlib\\database.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 528,
                        "content": "hasher = hashlib.md5"
                    },
                    {
                        "line_number": 1032,
                        "content": "return hashlib.md5(content).hexdigest()"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "index.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.1\\lldb\\lib\\site-packages\\pip\\_vendor\\distlib\\index.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 269,
                        "content": "md5_digest = hashlib.md5(file_data).hexdigest()"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "index.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.1\\lldb\\lib\\site-packages\\pip\\_vendor\\distlib\\index.py",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 270,
                        "content": "sha256_digest = hashlib.sha256(file_data).hexdigest()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Python",
                "filename": "locators.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.1\\lldb\\lib\\site-packages\\pip\\_vendor\\distlib\\locators.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 582,
                        "content": "result = sorted(result, key=lambda t: t[0], reverse=True)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "locators.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.1\\lldb\\lib\\site-packages\\pip\\_vendor\\distlib\\locators.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 582,
                        "content": "result = sorted(result, key=lambda t: t[0], reverse=True)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "version.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.1\\lldb\\lib\\site-packages\\pip\\_vendor\\distlib\\version.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 108,
                        "content": "self.key = self.name.lower()    # for case-insensitive comparisons"
                    },
                    {
                        "line_number": 163,
                        "content": "return self.key == other.key and self._parts == other._parts"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "version.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.1\\lldb\\lib\\site-packages\\pip\\_vendor\\distlib\\version.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 108,
                        "content": "self.key = self.name.lower()    # for case-insensitive comparisons"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "wheel.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.1\\lldb\\lib\\site-packages\\pip\\_vendor\\distlib\\wheel.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 416,
                        "content": "if key == 'scripts' and not p.endswith('.exe'):"
                    },
                    {
                        "line_number": 911,
                        "content": "key = '%s/PKG-INFO' % info_dir"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "wheel.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.1\\lldb\\lib\\site-packages\\pip\\_vendor\\distlib\\wheel.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 911,
                        "content": "key = '%s/PKG-INFO' % info_dir"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "__init__.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.1\\lldb\\lib\\site-packages\\pip\\_vendor\\pkg_resources\\__init__.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 2686,
                        "content": "self._key = key = self.project_name.lower()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "windows.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.1\\lldb\\lib\\site-packages\\pip\\_vendor\\platformdirs\\windows.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 208,
                        "content": "key = winreg.OpenKey(winreg.HKEY_CURRENT_USER, r\"Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders\")"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "lexer.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.1\\lldb\\lib\\site-packages\\pip\\_vendor\\pygments\\lexer.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 949,
                        "content": "key=lambda x: x[self._prof_sort_index],"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "sphinxext.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.1\\lldb\\lib\\site-packages\\pip\\_vendor\\pygments\\sphinxext.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 104,
                        "content": "for classname, data in sorted(LEXERS.items(), key=lambda x: x[1][1].lower()):"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "img.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.1\\lldb\\lib\\site-packages\\pip\\_vendor\\pygments\\formatters\\img.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 182,
                        "content": "key = _winreg.OpenKey(*keyname)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "img.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.1\\lldb\\lib\\site-packages\\pip\\_vendor\\pygments\\formatters\\img.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 182,
                        "content": "key = _winreg.OpenKey(*keyname)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "auth.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.1\\lldb\\lib\\site-packages\\pip\\_vendor\\requests\\auth.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 148,
                        "content": "return hashlib.md5(x).hexdigest()"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "auth.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.1\\lldb\\lib\\site-packages\\pip\\_vendor\\requests\\auth.py",
                "vulnerability": "SHA-1",
                "lines": [
                    {
                        "line_number": 156,
                        "content": "return hashlib.sha1(x).hexdigest()"
                    },
                    {
                        "line_number": 205,
                        "content": "cnonce = hashlib.sha1(s).hexdigest()[:16]"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collisions."
            },
            {
                "language": "Python",
                "filename": "auth.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.1\\lldb\\lib\\site-packages\\pip\\_vendor\\requests\\auth.py",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 164,
                        "content": "return hashlib.sha256(x).hexdigest()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Python",
                "filename": "models.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.1\\lldb\\lib\\site-packages\\pip\\_vendor\\requests\\models.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 992,
                        "content": "key = link.get(\"rel\") or link.get(\"url\")"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "models.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.1\\lldb\\lib\\site-packages\\pip\\_vendor\\requests\\models.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 992,
                        "content": "key = link.get(\"rel\") or link.get(\"url\")"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "utils.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.1\\lldb\\lib\\site-packages\\pip\\_vendor\\requests\\utils.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 533,
                        "content": "key = param[:index_of_equals].strip(items_to_strip)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "scope.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.1\\lldb\\lib\\site-packages\\pip\\_vendor\\rich\\scope.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 46,
                        "content": "items = sorted(scope.items(), key=sort_items) if sort_keys else scope.items()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "_parser.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.1\\lldb\\lib\\site-packages\\pip\\_vendor\\tomli\\_parser.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 287,
                        "content": "pos, key = parse_key(src, pos)"
                    },
                    {
                        "line_number": 305,
                        "content": "pos, key = parse_key(src, pos)"
                    },
                    {
                        "line_number": 360,
                        "content": "pos, key = parse_key(src, pos)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "_parser.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.1\\lldb\\lib\\tomllib\\_parser.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 287,
                        "content": "pos, key = parse_key(src, pos)"
                    },
                    {
                        "line_number": 305,
                        "content": "pos, key = parse_key(src, pos)"
                    },
                    {
                        "line_number": 360,
                        "content": "pos, key = parse_key(src, pos)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "request.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.1\\lldb\\lib\\urllib\\request.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1606,
                        "content": "key = user, host, port, '/'.join(dirs), timeout"
                    },
                    {
                        "line_number": 2071,
                        "content": "key = user, host, port, '/'.join(dirs)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "request.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.1\\lldb\\lib\\urllib\\request.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 1423,
                        "content": "\"\"\"Parse list of key=value strings where keys are not duplicated.\"\"\""
                    },
                    {
                        "line_number": 2341,
                        "content": "key = realm + '@' + host.lower()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "request.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.1\\lldb\\lib\\urllib\\request.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 1207,
                        "content": "H = lambda x: hashlib.md5(x.encode(\"ascii\")).hexdigest()"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "request.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.1\\lldb\\lib\\urllib\\request.py",
                "vulnerability": "SHA-1",
                "lines": [
                    {
                        "line_number": 1139,
                        "content": "dig = hashlib.sha1(b).hexdigest()"
                    },
                    {
                        "line_number": 1209,
                        "content": "H = lambda x: hashlib.sha1(x.encode(\"ascii\")).hexdigest()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collisions."
            },
            {
                "language": "Python",
                "filename": "minidom.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.1\\lldb\\lib\\xml\\dom\\minidom.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1586,
                        "content": "key = element.tagName"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "ElementTree.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.1\\lldb\\lib\\xml\\etree\\ElementTree.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 872,
                        "content": "key=lambda x: x[1]):  # sort on prefix"
                    },
                    {
                        "line_number": 924,
                        "content": "key=lambda x: x[1]):  # sort on prefix"
                    },
                    {
                        "line_number": 1951,
                        "content": "qnames, key=lambda n: n.split('}', 1))}"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "_tzpath.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.1\\lldb\\lib\\zoneinfo\\_tzpath.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 158,
                        "content": "key = os.path.relpath(fpath, start=tz_root)"
                    },
                    {
                        "line_number": 160,
                        "content": "key = key.replace(os.sep, \"/\")"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "_tzpath.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.11.1\\lldb\\lib\\zoneinfo\\_tzpath.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 158,
                        "content": "key = os.path.relpath(fpath, start=tz_root)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "antigravity.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.0\\lldb\\lib\\antigravity.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 15,
                        "content": "h = hashlib.md5(datedow, usedforsecurity=False).hexdigest()"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "configparser.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.0\\lldb\\lib\\configparser.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 748,
                        "content": "key = self.optionxform(str(key))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "configparser.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.0\\lldb\\lib\\configparser.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 748,
                        "content": "key = self.optionxform(str(key))"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "enum.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.0\\lldb\\lib\\enum.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 111,
                        "content": "if key == '_generate_next_value_':"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "functools.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.0\\lldb\\lib\\functools.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 553,
                        "content": "key = make_key(args, kwds, typed)"
                    },
                    {
                        "line_number": 568,
                        "content": "key = make_key(args, kwds, typed)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "gettext.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.0\\lldb\\lib\\gettext.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 598,
                        "content": "key = (class_, os.path.abspath(mofile))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "gettext.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.0\\lldb\\lib\\gettext.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 598,
                        "content": "key = (class_, os.path.abspath(mofile))"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "hashlib.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.0\\lldb\\lib\\hashlib.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 43,
                        "content": ">>> m = hashlib.md5()"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "hashlib.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.0\\lldb\\lib\\hashlib.py",
                "vulnerability": "SHA-224",
                "lines": [
                    {
                        "line_number": 51,
                        "content": ">>> hashlib.sha224(b\"Nobody inspects the spammish repetition\").hexdigest()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-224 provides reduced security compared to larger variants."
            },
            {
                "language": "Python",
                "filename": "hmac.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.0\\lldb\\lib\\hmac.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 197,
                        "content": "key = digest_cons(key).digest()"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "hmac.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.0\\lldb\\lib\\hmac.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 87,
                        "content": "key = self._digest_cons(key).digest()"
                    },
                    {
                        "line_number": 89,
                        "content": "key = key.ljust(blocksize, b'\\0')"
                    },
                    {
                        "line_number": 197,
                        "content": "key = digest_cons(key).digest()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "mailbox.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.0\\lldb\\lib\\mailbox.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 1253,
                        "content": "key = _singlefileMailbox.add(self, message)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "mailcap.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.0\\lldb\\lib\\mailcap.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 104,
                        "content": "key = '/'.join(types).lower()"
                    },
                    {
                        "line_number": 159,
                        "content": "def findmatch(caps, MIMEtype, key='view', filename=\"/dev/null\", plist=[]):"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "os.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.0\\lldb\\lib\\os.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 683,
                        "content": "key = self.encodekey(key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "pickle.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.0\\lldb\\lib\\pickle.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 1561,
                        "content": "key = _inverted_registry.get(code)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "poplib.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.0\\lldb\\lib\\poplib.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 335,
                        "content": "digest = hashlib.md5(digest).hexdigest()"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "pyclbr.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.0\\lldb\\lib\\pyclbr.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 381,
                        "content": "objs = sorted(tree.values(), key=lineno_key, reverse=True)"
                    },
                    {
                        "line_number": 393,
                        "content": "key=lineno_key, reverse=True)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "pydoc.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.0\\lldb\\lib\\pydoc.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 2212,
                        "content": "def run(self, callback, key=None, completer=None, onerror=None):"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "pydoc.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.0\\lldb\\lib\\pydoc.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 2542,
                        "content": "'key = %s' % key, '#ffffff', '#ee77aa', '<br>'.join(results))"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "selectors.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.0\\lldb\\lib\\selectors.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 250,
                        "content": "key = self._fd_to_key.pop(self._fileobj_lookup(fileobj))"
                    },
                    {
                        "line_number": 257,
                        "content": "key = self._fd_to_key[self._fileobj_lookup(fileobj)]"
                    },
                    {
                        "line_number": 300,
                        "content": "key = super().register(fileobj, events, data)"
                    },
                    {
                        "line_number": 353,
                        "content": "key = super().register(fileobj, events, data)"
                    },
                    {
                        "line_number": 378,
                        "content": "key = self._fd_to_key[self._fileobj_lookup(fileobj)]"
                    },
                    {
                        "line_number": 518,
                        "content": "key = super().register(fileobj, events, data)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "selectors.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.0\\lldb\\lib\\selectors.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 250,
                        "content": "key = self._fd_to_key.pop(self._fileobj_lookup(fileobj))"
                    },
                    {
                        "line_number": 262,
                        "content": "key = self.register(fileobj, events, data)"
                    },
                    {
                        "line_number": 300,
                        "content": "key = super().register(fileobj, events, data)"
                    },
                    {
                        "line_number": 353,
                        "content": "key = super().register(fileobj, events, data)"
                    },
                    {
                        "line_number": 518,
                        "content": "key = super().register(fileobj, events, data)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "symtable.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.0\\lldb\\lib\\symtable.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 28,
                        "content": "key = table, filename"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "tarfile.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.0\\lldb\\lib\\tarfile.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 2040,
                        "content": "directories.sort(key=lambda a: a.name)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "trace.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.0\\lldb\\lib\\trace.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 556,
                        "content": "key = filename, lineno"
                    },
                    {
                        "line_number": 583,
                        "content": "key = filename, lineno"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "warnings.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.0\\lldb\\lib\\warnings.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 346,
                        "content": "key = (text, category, lineno)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "warnings.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.0\\lldb\\lib\\warnings.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 346,
                        "content": "key = (text, category, lineno)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "weakref.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.0\\lldb\\lib\\weakref.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 628,
                        "content": "L.sort(key=lambda item:item[1].index)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "selector_events.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.0\\lldb\\lib\\asyncio\\selector_events.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 36,
                        "content": "key = selector.get_key(fd)"
                    },
                    {
                        "line_number": 261,
                        "content": "key = self._selector.get_key(fd)"
                    },
                    {
                        "line_number": 277,
                        "content": "key = self._selector.get_key(fd)"
                    },
                    {
                        "line_number": 298,
                        "content": "key = self._selector.get_key(fd)"
                    },
                    {
                        "line_number": 315,
                        "content": "key = self._selector.get_key(fd)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "selector_events.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.0\\lldb\\lib\\asyncio\\selector_events.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 261,
                        "content": "key = self._selector.get_key(fd)"
                    },
                    {
                        "line_number": 277,
                        "content": "key = self._selector.get_key(fd)"
                    },
                    {
                        "line_number": 298,
                        "content": "key = self._selector.get_key(fd)"
                    },
                    {
                        "line_number": 315,
                        "content": "key = self._selector.get_key(fd)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "__init__.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.0\\lldb\\lib\\collections\\__init__.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 132,
                        "content": "link.prev, link.next, link.key = last, root, key"
                    },
                    {
                        "line_number": 610,
                        "content": "return sorted(self.items(), key=_itemgetter(1), reverse=True)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "__init__.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.0\\lldb\\lib\\collections\\__init__.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 610,
                        "content": "return sorted(self.items(), key=_itemgetter(1), reverse=True)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "dumb.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.0\\lldb\\lib\\dbm\\dumb.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 145,
                        "content": "key = key.encode('utf-8')"
                    },
                    {
                        "line_number": 190,
                        "content": "key = key.encode('utf-8')"
                    },
                    {
                        "line_number": 227,
                        "content": "key = key.encode('utf-8')"
                    },
                    {
                        "line_number": 250,
                        "content": "key = key.encode('utf-8')"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "msvc9compiler.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.0\\lldb\\lib\\distutils\\msvc9compiler.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 158,
                        "content": "key = RegEnumKey(h, 0)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "msvccompiler.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.0\\lldb\\lib\\distutils\\msvccompiler.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 138,
                        "content": "key = RegEnumKey(h, 0)"
                    },
                    {
                        "line_number": 598,
                        "content": "key = (r\"%s\\%0.1f\\VC\\VC_OBJECTS_PLATFORM_INFO\\Win32\\Directories\""
                    },
                    {
                        "line_number": 601,
                        "content": "key = (r\"%s\\6.0\\Build System\\Components\\Platforms\""
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "msvccompiler.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.0\\lldb\\lib\\distutils\\msvccompiler.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 601,
                        "content": "key = (r\"%s\\6.0\\Build System\\Components\\Platforms\""
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "_msvccompiler.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.0\\lldb\\lib\\distutils\\_msvccompiler.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 30,
                        "content": "key = winreg.OpenKeyEx("
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "cookiejar.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.0\\lldb\\lib\\http\\cookiejar.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1304,
                        "content": "cookies.sort(key=lambda a: len(a.path), reverse=True)"
                    },
                    {
                        "line_number": 1642,
                        "content": "key = ns_cookie.domain, ns_cookie.path, ns_cookie.name"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "cookies.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.0\\lldb\\lib\\http\\cookies.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 408,
                        "content": "if key == \"expires\" and isinstance(value, int):"
                    },
                    {
                        "line_number": 410,
                        "content": "elif key == \"max-age\" and isinstance(value, int):"
                    },
                    {
                        "line_number": 412,
                        "content": "elif key == \"comment\" and isinstance(value, str):"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "__init__.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.0\\lldb\\lib\\lldb-python\\lldb\\__init__.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 3925,
                        "content": "key = key * self.item_size # SBData uses byte-based indexes, but we want to use itemsize-based indexes here"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "topics.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.0\\lldb\\lib\\pydoc_data\\topics.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 13510,
                        "content": "'      \"key=str.lower\"). The key corresponding to each item in '"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "cache.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.0\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_internal\\cache.py",
                "vulnerability": "SHA-224",
                "lines": [
                    {
                        "line_number": 33,
                        "content": "return hashlib.sha224(s.encode(\"ascii\")).hexdigest()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-224 provides reduced security compared to larger variants."
            },
            {
                "language": "Python",
                "filename": "configuration.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.0\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_internal\\configuration.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 333,
                        "content": "key = section + \".\" + _normalize_name(name)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "self_outdated_check.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.0\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_internal\\self_outdated_check.py",
                "vulnerability": "SHA-224",
                "lines": [
                    {
                        "line_number": 35,
                        "content": "name = hashlib.sha224(key_bytes).hexdigest()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-224 provides reduced security compared to larger variants."
            },
            {
                "language": "Python",
                "filename": "parser.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.0\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_internal\\cli\\parser.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 188,
                        "content": "section, key = section_key.split(\".\", 1)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "configuration.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.0\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_internal\\commands\\configuration.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 173,
                        "content": "key = self._get_n_args(args, \"get [name]\", n=1)"
                    },
                    {
                        "line_number": 187,
                        "content": "key = self._get_n_args(args, \"unset [name]\", n=1)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "configuration.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.0\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_internal\\commands\\configuration.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 173,
                        "content": "key = self._get_n_args(args, \"get [name]\", n=1)"
                    },
                    {
                        "line_number": 187,
                        "content": "key = self._get_n_args(args, \"unset [name]\", n=1)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "candidate.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.0\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_internal\\models\\candidate.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 25,
                        "content": "key=(self.name, self.version, self.link),"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "candidate.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.0\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_internal\\models\\candidate.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 25,
                        "content": "key=(self.name, self.version, self.link),"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "link.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.0\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_internal\\models\\link.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 79,
                        "content": "super().__init__(key=url, defining_class=Link)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "freeze.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.0\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_internal\\operations\\freeze.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 169,
                        "content": "installations.values(), key=lambda x: x.name.lower()):"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "wheel.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.0\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_internal\\operations\\install\\wheel.py",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 88,
                        "content": "\"\"\"Return (encoded_digest, length) for path using hashlib.sha256()\"\"\""
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Python",
                "filename": "req_tracker.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.0\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_internal\\req\\req_tracker.py",
                "vulnerability": "SHA-224",
                "lines": [
                    {
                        "line_number": 88,
                        "content": "hashed = hashlib.sha224(link.url_without_fragment.encode()).hexdigest()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-224 provides reduced security compared to larger variants."
            },
            {
                "language": "Python",
                "filename": "provider.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.0\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_internal\\resolution\\resolvelib\\provider.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 119,
                        "content": "key = next(iter(candidates)).name if candidates else \"\""
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "misc.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.0\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_internal\\utils\\misc.py",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 879,
                        "content": "\"\"\"Return (hash, length) for path using hashlib.sha256()"
                    },
                    {
                        "line_number": 882,
                        "content": "h = hashlib.sha256()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Python",
                "filename": "appdirs.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.0\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_vendor\\appdirs.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 482,
                        "content": "key = _winreg.OpenKey("
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "file_cache.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.0\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_vendor\\cachecontrol\\caches\\file_cache.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 145,
                        "content": "key = CacheController.cache_url(url)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "file_cache.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.0\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_vendor\\cachecontrol\\caches\\file_cache.py",
                "vulnerability": "SHA-224",
                "lines": [
                    {
                        "line_number": 99,
                        "content": "return hashlib.sha224(x.encode()).hexdigest()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-224 provides reduced security compared to larger variants."
            },
            {
                "language": "Python",
                "filename": "__init__.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.0\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_vendor\\chardet\\__init__.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 81,
                        "content": "return sorted(results, key=lambda result: -result['confidence'])"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "__init__.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.0\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_vendor\\chardet\\__init__.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 81,
                        "content": "return sorted(results, key=lambda result: -result['confidence'])"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "compat.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.0\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_vendor\\distlib\\compat.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 692,
                        "content": "link_prev, link_next, key = self.__map.pop(key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "database.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.0\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_vendor\\distlib\\database.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 343,
                        "content": "self.key = self.name.lower()    # for case-insensitive comparisons"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "database.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.0\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_vendor\\distlib\\database.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 343,
                        "content": "self.key = self.name.lower()    # for case-insensitive comparisons"
                    },
                    {
                        "line_number": 869,
                        "content": "s.key = n.lower()   # for case-insensitive comparisons"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "database.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.0\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_vendor\\distlib\\database.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 519,
                        "content": "hasher = hashlib.md5"
                    },
                    {
                        "line_number": 1017,
                        "content": "return hashlib.md5(content).hexdigest()"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "index.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.0\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_vendor\\distlib\\index.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 276,
                        "content": "md5_digest = hashlib.md5(file_data).hexdigest()"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "index.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.0\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_vendor\\distlib\\index.py",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 277,
                        "content": "sha256_digest = hashlib.sha256(file_data).hexdigest()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Python",
                "filename": "locators.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.0\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_vendor\\distlib\\locators.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 582,
                        "content": "result = sorted(result, key=lambda t: t[0], reverse=True)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "locators.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.0\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_vendor\\distlib\\locators.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 582,
                        "content": "result = sorted(result, key=lambda t: t[0], reverse=True)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "version.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.0\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_vendor\\distlib\\version.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 108,
                        "content": "self.key = self.name.lower()    # for case-insensitive comparisons"
                    },
                    {
                        "line_number": 163,
                        "content": "return self.key == other.key and self._parts == other._parts"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "version.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.0\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_vendor\\distlib\\version.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 108,
                        "content": "self.key = self.name.lower()    # for case-insensitive comparisons"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "wheel.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.0\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_vendor\\distlib\\wheel.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 378,
                        "content": "if key == 'scripts' and not p.endswith('.exe'):"
                    },
                    {
                        "line_number": 861,
                        "content": "key = '%s/PKG-INFO' % info_dir"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "wheel.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.0\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_vendor\\distlib\\wheel.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 861,
                        "content": "key = '%s/PKG-INFO' % info_dir"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "tarfile.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.0\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_vendor\\distlib\\_backport\\tarfile.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 2148,
                        "content": "directories.sort(key=lambda a: a.name)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "__init__.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.0\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_vendor\\pkg_resources\\__init__.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 2642,
                        "content": "self._key = key = self.project_name.lower()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "auth.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.0\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_vendor\\requests\\auth.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 148,
                        "content": "return hashlib.md5(x).hexdigest()"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "auth.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.0\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_vendor\\requests\\auth.py",
                "vulnerability": "SHA-1",
                "lines": [
                    {
                        "line_number": 154,
                        "content": "return hashlib.sha1(x).hexdigest()"
                    },
                    {
                        "line_number": 198,
                        "content": "cnonce = (hashlib.sha1(s).hexdigest()[:16])"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collisions."
            },
            {
                "language": "Python",
                "filename": "auth.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.0\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_vendor\\requests\\auth.py",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 160,
                        "content": "return hashlib.sha256(x).hexdigest()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Python",
                "filename": "models.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.0\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_vendor\\requests\\models.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 915,
                        "content": "key = link.get('rel') or link.get('url')"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "models.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.0\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_vendor\\requests\\models.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 915,
                        "content": "key = link.get('rel') or link.get('url')"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "utils.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.0\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_vendor\\requests\\utils.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 480,
                        "content": "key = param[:index_of_equals].strip(items_to_strip)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "__init__.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.0\\lldb\\lib\\site-packages\\setuptools-56.0.0-py3.9.egg\\pkg_resources\\__init__.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 2640,
                        "content": "self._key = key = self.project_name.lower()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "appdirs.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.0\\lldb\\lib\\site-packages\\setuptools-56.0.0-py3.9.egg\\pkg_resources\\_vendor\\appdirs.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 471,
                        "content": "key = _winreg.OpenKey("
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "dist.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.0\\lldb\\lib\\site-packages\\setuptools-56.0.0-py3.9.egg\\setuptools\\dist.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 415,
                        "content": "key = pkg_resources.safe_name(str(attrs['name'])).lower()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "msvc.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.0\\lldb\\lib\\site-packages\\setuptools-56.0.0-py3.9.egg\\setuptools\\msvc.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 87,
                        "content": "key = vc_base % ('', version)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "msvc.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.0\\lldb\\lib\\site-packages\\setuptools-56.0.0-py3.9.egg\\setuptools\\msvc.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 94,
                        "content": "key = vc_base % ('Wow6432Node\\\\', version)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "egg_info.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.0\\lldb\\lib\\site-packages\\setuptools-56.0.0-py3.9.egg\\setuptools\\command\\egg_info.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 241,
                        "content": "if pd is not None and pd.key == self.egg_name.lower():"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "msvc9compiler.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.0\\lldb\\lib\\site-packages\\setuptools-56.0.0-py3.9.egg\\setuptools\\_distutils\\msvc9compiler.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 158,
                        "content": "key = RegEnumKey(h, 0)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "msvccompiler.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.0\\lldb\\lib\\site-packages\\setuptools-56.0.0-py3.9.egg\\setuptools\\_distutils\\msvccompiler.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 138,
                        "content": "key = RegEnumKey(h, 0)"
                    },
                    {
                        "line_number": 598,
                        "content": "key = (r\"%s\\%0.1f\\VC\\VC_OBJECTS_PLATFORM_INFO\\Win32\\Directories\""
                    },
                    {
                        "line_number": 601,
                        "content": "key = (r\"%s\\6.0\\Build System\\Components\\Platforms\""
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "msvccompiler.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.0\\lldb\\lib\\site-packages\\setuptools-56.0.0-py3.9.egg\\setuptools\\_distutils\\msvccompiler.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 601,
                        "content": "key = (r\"%s\\6.0\\Build System\\Components\\Platforms\""
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "_msvccompiler.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.0\\lldb\\lib\\site-packages\\setuptools-56.0.0-py3.9.egg\\setuptools\\_distutils\\_msvccompiler.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 34,
                        "content": "key = winreg.OpenKeyEx("
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "request.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.0\\lldb\\lib\\urllib\\request.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1604,
                        "content": "key = user, host, port, '/'.join(dirs), timeout"
                    },
                    {
                        "line_number": 2064,
                        "content": "key = user, host, port, '/'.join(dirs)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "request.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.0\\lldb\\lib\\urllib\\request.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 1420,
                        "content": "\"\"\"Parse list of key=value strings where keys are not duplicated.\"\"\""
                    },
                    {
                        "line_number": 2327,
                        "content": "key = realm + '@' + host.lower()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "request.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.0\\lldb\\lib\\urllib\\request.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 1209,
                        "content": "H = lambda x: hashlib.md5(x.encode(\"ascii\")).hexdigest()"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "request.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.0\\lldb\\lib\\urllib\\request.py",
                "vulnerability": "SHA-1",
                "lines": [
                    {
                        "line_number": 1141,
                        "content": "dig = hashlib.sha1(b).hexdigest()"
                    },
                    {
                        "line_number": 1211,
                        "content": "H = lambda x: hashlib.sha1(x.encode(\"ascii\")).hexdigest()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collisions."
            },
            {
                "language": "Python",
                "filename": "minidom.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.0\\lldb\\lib\\xml\\dom\\minidom.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1584,
                        "content": "key = element.tagName"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "ElementTree.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.0\\lldb\\lib\\xml\\etree\\ElementTree.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 893,
                        "content": "key=lambda x: x[1]):  # sort on prefix"
                    },
                    {
                        "line_number": 949,
                        "content": "key=lambda x: x[1]):  # sort on prefix"
                    },
                    {
                        "line_number": 1956,
                        "content": "qnames, key=lambda n: n.split('}', 1))}"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "_tzpath.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.0\\lldb\\lib\\zoneinfo\\_tzpath.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 152,
                        "content": "key = os.path.relpath(fpath, start=tz_root)"
                    },
                    {
                        "line_number": 154,
                        "content": "key = key.replace(os.sep, \"/\")"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "_tzpath.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.0\\lldb\\lib\\zoneinfo\\_tzpath.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 152,
                        "content": "key = os.path.relpath(fpath, start=tz_root)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "antigravity.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.1\\lldb\\lib\\antigravity.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 15,
                        "content": "h = hashlib.md5(datedow, usedforsecurity=False).hexdigest()"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "configparser.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.1\\lldb\\lib\\configparser.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 748,
                        "content": "key = self.optionxform(str(key))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "configparser.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.1\\lldb\\lib\\configparser.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 748,
                        "content": "key = self.optionxform(str(key))"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "enum.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.1\\lldb\\lib\\enum.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 111,
                        "content": "if key == '_generate_next_value_':"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "functools.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.1\\lldb\\lib\\functools.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 553,
                        "content": "key = make_key(args, kwds, typed)"
                    },
                    {
                        "line_number": 568,
                        "content": "key = make_key(args, kwds, typed)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "gettext.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.1\\lldb\\lib\\gettext.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 598,
                        "content": "key = (class_, os.path.abspath(mofile))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "gettext.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.1\\lldb\\lib\\gettext.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 598,
                        "content": "key = (class_, os.path.abspath(mofile))"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "hashlib.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.1\\lldb\\lib\\hashlib.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 43,
                        "content": ">>> m = hashlib.md5()"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "hashlib.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.1\\lldb\\lib\\hashlib.py",
                "vulnerability": "SHA-224",
                "lines": [
                    {
                        "line_number": 51,
                        "content": ">>> hashlib.sha224(b\"Nobody inspects the spammish repetition\").hexdigest()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-224 provides reduced security compared to larger variants."
            },
            {
                "language": "Python",
                "filename": "hmac.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.1\\lldb\\lib\\hmac.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 197,
                        "content": "key = digest_cons(key).digest()"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "hmac.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.1\\lldb\\lib\\hmac.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 87,
                        "content": "key = self._digest_cons(key).digest()"
                    },
                    {
                        "line_number": 89,
                        "content": "key = key.ljust(blocksize, b'\\0')"
                    },
                    {
                        "line_number": 197,
                        "content": "key = digest_cons(key).digest()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "mailbox.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.1\\lldb\\lib\\mailbox.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 1253,
                        "content": "key = _singlefileMailbox.add(self, message)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "mailcap.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.1\\lldb\\lib\\mailcap.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 104,
                        "content": "key = '/'.join(types).lower()"
                    },
                    {
                        "line_number": 159,
                        "content": "def findmatch(caps, MIMEtype, key='view', filename=\"/dev/null\", plist=[]):"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "os.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.1\\lldb\\lib\\os.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 683,
                        "content": "key = self.encodekey(key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "pickle.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.1\\lldb\\lib\\pickle.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 1561,
                        "content": "key = _inverted_registry.get(code)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "poplib.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.1\\lldb\\lib\\poplib.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 335,
                        "content": "digest = hashlib.md5(digest).hexdigest()"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "pyclbr.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.1\\lldb\\lib\\pyclbr.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 381,
                        "content": "objs = sorted(tree.values(), key=lineno_key, reverse=True)"
                    },
                    {
                        "line_number": 393,
                        "content": "key=lineno_key, reverse=True)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "pydoc.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.1\\lldb\\lib\\pydoc.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 2212,
                        "content": "def run(self, callback, key=None, completer=None, onerror=None):"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "pydoc.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.1\\lldb\\lib\\pydoc.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 2542,
                        "content": "'key = %s' % key, '#ffffff', '#ee77aa', '<br>'.join(results))"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "selectors.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.1\\lldb\\lib\\selectors.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 250,
                        "content": "key = self._fd_to_key.pop(self._fileobj_lookup(fileobj))"
                    },
                    {
                        "line_number": 257,
                        "content": "key = self._fd_to_key[self._fileobj_lookup(fileobj)]"
                    },
                    {
                        "line_number": 300,
                        "content": "key = super().register(fileobj, events, data)"
                    },
                    {
                        "line_number": 353,
                        "content": "key = super().register(fileobj, events, data)"
                    },
                    {
                        "line_number": 378,
                        "content": "key = self._fd_to_key[self._fileobj_lookup(fileobj)]"
                    },
                    {
                        "line_number": 518,
                        "content": "key = super().register(fileobj, events, data)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "selectors.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.1\\lldb\\lib\\selectors.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 250,
                        "content": "key = self._fd_to_key.pop(self._fileobj_lookup(fileobj))"
                    },
                    {
                        "line_number": 262,
                        "content": "key = self.register(fileobj, events, data)"
                    },
                    {
                        "line_number": 300,
                        "content": "key = super().register(fileobj, events, data)"
                    },
                    {
                        "line_number": 353,
                        "content": "key = super().register(fileobj, events, data)"
                    },
                    {
                        "line_number": 518,
                        "content": "key = super().register(fileobj, events, data)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "symtable.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.1\\lldb\\lib\\symtable.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 28,
                        "content": "key = table, filename"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "tarfile.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.1\\lldb\\lib\\tarfile.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 2040,
                        "content": "directories.sort(key=lambda a: a.name)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "trace.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.1\\lldb\\lib\\trace.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 556,
                        "content": "key = filename, lineno"
                    },
                    {
                        "line_number": 583,
                        "content": "key = filename, lineno"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "warnings.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.1\\lldb\\lib\\warnings.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 346,
                        "content": "key = (text, category, lineno)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "warnings.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.1\\lldb\\lib\\warnings.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 346,
                        "content": "key = (text, category, lineno)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "weakref.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.1\\lldb\\lib\\weakref.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 628,
                        "content": "L.sort(key=lambda item:item[1].index)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "selector_events.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.1\\lldb\\lib\\asyncio\\selector_events.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 36,
                        "content": "key = selector.get_key(fd)"
                    },
                    {
                        "line_number": 261,
                        "content": "key = self._selector.get_key(fd)"
                    },
                    {
                        "line_number": 277,
                        "content": "key = self._selector.get_key(fd)"
                    },
                    {
                        "line_number": 298,
                        "content": "key = self._selector.get_key(fd)"
                    },
                    {
                        "line_number": 315,
                        "content": "key = self._selector.get_key(fd)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "selector_events.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.1\\lldb\\lib\\asyncio\\selector_events.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 261,
                        "content": "key = self._selector.get_key(fd)"
                    },
                    {
                        "line_number": 277,
                        "content": "key = self._selector.get_key(fd)"
                    },
                    {
                        "line_number": 298,
                        "content": "key = self._selector.get_key(fd)"
                    },
                    {
                        "line_number": 315,
                        "content": "key = self._selector.get_key(fd)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "__init__.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.1\\lldb\\lib\\collections\\__init__.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 132,
                        "content": "link.prev, link.next, link.key = last, root, key"
                    },
                    {
                        "line_number": 610,
                        "content": "return sorted(self.items(), key=_itemgetter(1), reverse=True)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "__init__.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.1\\lldb\\lib\\collections\\__init__.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 610,
                        "content": "return sorted(self.items(), key=_itemgetter(1), reverse=True)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "dumb.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.1\\lldb\\lib\\dbm\\dumb.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 145,
                        "content": "key = key.encode('utf-8')"
                    },
                    {
                        "line_number": 190,
                        "content": "key = key.encode('utf-8')"
                    },
                    {
                        "line_number": 227,
                        "content": "key = key.encode('utf-8')"
                    },
                    {
                        "line_number": 250,
                        "content": "key = key.encode('utf-8')"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "msvc9compiler.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.1\\lldb\\lib\\distutils\\msvc9compiler.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 158,
                        "content": "key = RegEnumKey(h, 0)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "msvccompiler.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.1\\lldb\\lib\\distutils\\msvccompiler.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 138,
                        "content": "key = RegEnumKey(h, 0)"
                    },
                    {
                        "line_number": 598,
                        "content": "key = (r\"%s\\%0.1f\\VC\\VC_OBJECTS_PLATFORM_INFO\\Win32\\Directories\""
                    },
                    {
                        "line_number": 601,
                        "content": "key = (r\"%s\\6.0\\Build System\\Components\\Platforms\""
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "msvccompiler.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.1\\lldb\\lib\\distutils\\msvccompiler.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 601,
                        "content": "key = (r\"%s\\6.0\\Build System\\Components\\Platforms\""
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "_msvccompiler.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.1\\lldb\\lib\\distutils\\_msvccompiler.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 30,
                        "content": "key = winreg.OpenKeyEx("
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "cookiejar.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.1\\lldb\\lib\\http\\cookiejar.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1304,
                        "content": "cookies.sort(key=lambda a: len(a.path), reverse=True)"
                    },
                    {
                        "line_number": 1642,
                        "content": "key = ns_cookie.domain, ns_cookie.path, ns_cookie.name"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "cookies.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.1\\lldb\\lib\\http\\cookies.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 408,
                        "content": "if key == \"expires\" and isinstance(value, int):"
                    },
                    {
                        "line_number": 410,
                        "content": "elif key == \"max-age\" and isinstance(value, int):"
                    },
                    {
                        "line_number": 412,
                        "content": "elif key == \"comment\" and isinstance(value, str):"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "__init__.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.1\\lldb\\lib\\lldb-python\\lldb\\__init__.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 3925,
                        "content": "key = key * self.item_size # SBData uses byte-based indexes, but we want to use itemsize-based indexes here"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "topics.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.1\\lldb\\lib\\pydoc_data\\topics.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 13510,
                        "content": "'      \"key=str.lower\"). The key corresponding to each item in '"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "cache.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.1\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_internal\\cache.py",
                "vulnerability": "SHA-224",
                "lines": [
                    {
                        "line_number": 33,
                        "content": "return hashlib.sha224(s.encode(\"ascii\")).hexdigest()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-224 provides reduced security compared to larger variants."
            },
            {
                "language": "Python",
                "filename": "configuration.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.1\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_internal\\configuration.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 333,
                        "content": "key = section + \".\" + _normalize_name(name)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "self_outdated_check.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.1\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_internal\\self_outdated_check.py",
                "vulnerability": "SHA-224",
                "lines": [
                    {
                        "line_number": 35,
                        "content": "name = hashlib.sha224(key_bytes).hexdigest()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-224 provides reduced security compared to larger variants."
            },
            {
                "language": "Python",
                "filename": "parser.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.1\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_internal\\cli\\parser.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 188,
                        "content": "section, key = section_key.split(\".\", 1)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "configuration.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.1\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_internal\\commands\\configuration.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 173,
                        "content": "key = self._get_n_args(args, \"get [name]\", n=1)"
                    },
                    {
                        "line_number": 187,
                        "content": "key = self._get_n_args(args, \"unset [name]\", n=1)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "configuration.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.1\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_internal\\commands\\configuration.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 173,
                        "content": "key = self._get_n_args(args, \"get [name]\", n=1)"
                    },
                    {
                        "line_number": 187,
                        "content": "key = self._get_n_args(args, \"unset [name]\", n=1)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "candidate.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.1\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_internal\\models\\candidate.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 25,
                        "content": "key=(self.name, self.version, self.link),"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "candidate.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.1\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_internal\\models\\candidate.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 25,
                        "content": "key=(self.name, self.version, self.link),"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "link.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.1\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_internal\\models\\link.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 79,
                        "content": "super().__init__(key=url, defining_class=Link)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "freeze.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.1\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_internal\\operations\\freeze.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 169,
                        "content": "installations.values(), key=lambda x: x.name.lower()):"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "wheel.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.1\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_internal\\operations\\install\\wheel.py",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 88,
                        "content": "\"\"\"Return (encoded_digest, length) for path using hashlib.sha256()\"\"\""
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Python",
                "filename": "req_tracker.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.1\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_internal\\req\\req_tracker.py",
                "vulnerability": "SHA-224",
                "lines": [
                    {
                        "line_number": 88,
                        "content": "hashed = hashlib.sha224(link.url_without_fragment.encode()).hexdigest()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-224 provides reduced security compared to larger variants."
            },
            {
                "language": "Python",
                "filename": "provider.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.1\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_internal\\resolution\\resolvelib\\provider.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 119,
                        "content": "key = next(iter(candidates)).name if candidates else \"\""
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "misc.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.1\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_internal\\utils\\misc.py",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 879,
                        "content": "\"\"\"Return (hash, length) for path using hashlib.sha256()"
                    },
                    {
                        "line_number": 882,
                        "content": "h = hashlib.sha256()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Python",
                "filename": "appdirs.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.1\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_vendor\\appdirs.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 482,
                        "content": "key = _winreg.OpenKey("
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "file_cache.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.1\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_vendor\\cachecontrol\\caches\\file_cache.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 145,
                        "content": "key = CacheController.cache_url(url)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "file_cache.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.1\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_vendor\\cachecontrol\\caches\\file_cache.py",
                "vulnerability": "SHA-224",
                "lines": [
                    {
                        "line_number": 99,
                        "content": "return hashlib.sha224(x.encode()).hexdigest()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-224 provides reduced security compared to larger variants."
            },
            {
                "language": "Python",
                "filename": "__init__.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.1\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_vendor\\chardet\\__init__.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 81,
                        "content": "return sorted(results, key=lambda result: -result['confidence'])"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "__init__.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.1\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_vendor\\chardet\\__init__.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 81,
                        "content": "return sorted(results, key=lambda result: -result['confidence'])"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "compat.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.1\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_vendor\\distlib\\compat.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 692,
                        "content": "link_prev, link_next, key = self.__map.pop(key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "database.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.1\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_vendor\\distlib\\database.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 343,
                        "content": "self.key = self.name.lower()    # for case-insensitive comparisons"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "database.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.1\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_vendor\\distlib\\database.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 343,
                        "content": "self.key = self.name.lower()    # for case-insensitive comparisons"
                    },
                    {
                        "line_number": 869,
                        "content": "s.key = n.lower()   # for case-insensitive comparisons"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "database.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.1\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_vendor\\distlib\\database.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 519,
                        "content": "hasher = hashlib.md5"
                    },
                    {
                        "line_number": 1017,
                        "content": "return hashlib.md5(content).hexdigest()"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "index.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.1\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_vendor\\distlib\\index.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 276,
                        "content": "md5_digest = hashlib.md5(file_data).hexdigest()"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "index.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.1\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_vendor\\distlib\\index.py",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 277,
                        "content": "sha256_digest = hashlib.sha256(file_data).hexdigest()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Python",
                "filename": "locators.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.1\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_vendor\\distlib\\locators.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 582,
                        "content": "result = sorted(result, key=lambda t: t[0], reverse=True)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "locators.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.1\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_vendor\\distlib\\locators.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 582,
                        "content": "result = sorted(result, key=lambda t: t[0], reverse=True)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "version.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.1\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_vendor\\distlib\\version.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 108,
                        "content": "self.key = self.name.lower()    # for case-insensitive comparisons"
                    },
                    {
                        "line_number": 163,
                        "content": "return self.key == other.key and self._parts == other._parts"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "version.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.1\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_vendor\\distlib\\version.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 108,
                        "content": "self.key = self.name.lower()    # for case-insensitive comparisons"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "wheel.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.1\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_vendor\\distlib\\wheel.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 378,
                        "content": "if key == 'scripts' and not p.endswith('.exe'):"
                    },
                    {
                        "line_number": 861,
                        "content": "key = '%s/PKG-INFO' % info_dir"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "wheel.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.1\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_vendor\\distlib\\wheel.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 861,
                        "content": "key = '%s/PKG-INFO' % info_dir"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "tarfile.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.1\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_vendor\\distlib\\_backport\\tarfile.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 2148,
                        "content": "directories.sort(key=lambda a: a.name)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "__init__.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.1\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_vendor\\pkg_resources\\__init__.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 2642,
                        "content": "self._key = key = self.project_name.lower()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "auth.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.1\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_vendor\\requests\\auth.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 148,
                        "content": "return hashlib.md5(x).hexdigest()"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "auth.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.1\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_vendor\\requests\\auth.py",
                "vulnerability": "SHA-1",
                "lines": [
                    {
                        "line_number": 154,
                        "content": "return hashlib.sha1(x).hexdigest()"
                    },
                    {
                        "line_number": 198,
                        "content": "cnonce = (hashlib.sha1(s).hexdigest()[:16])"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collisions."
            },
            {
                "language": "Python",
                "filename": "auth.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.1\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_vendor\\requests\\auth.py",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 160,
                        "content": "return hashlib.sha256(x).hexdigest()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Python",
                "filename": "models.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.1\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_vendor\\requests\\models.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 915,
                        "content": "key = link.get('rel') or link.get('url')"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "models.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.1\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_vendor\\requests\\models.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 915,
                        "content": "key = link.get('rel') or link.get('url')"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "utils.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.1\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_vendor\\requests\\utils.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 480,
                        "content": "key = param[:index_of_equals].strip(items_to_strip)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "__init__.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.1\\lldb\\lib\\site-packages\\setuptools-56.0.0-py3.9.egg\\pkg_resources\\__init__.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 2640,
                        "content": "self._key = key = self.project_name.lower()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "appdirs.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.1\\lldb\\lib\\site-packages\\setuptools-56.0.0-py3.9.egg\\pkg_resources\\_vendor\\appdirs.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 471,
                        "content": "key = _winreg.OpenKey("
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "dist.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.1\\lldb\\lib\\site-packages\\setuptools-56.0.0-py3.9.egg\\setuptools\\dist.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 415,
                        "content": "key = pkg_resources.safe_name(str(attrs['name'])).lower()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "msvc.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.1\\lldb\\lib\\site-packages\\setuptools-56.0.0-py3.9.egg\\setuptools\\msvc.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 87,
                        "content": "key = vc_base % ('', version)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "msvc.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.1\\lldb\\lib\\site-packages\\setuptools-56.0.0-py3.9.egg\\setuptools\\msvc.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 94,
                        "content": "key = vc_base % ('Wow6432Node\\\\', version)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "egg_info.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.1\\lldb\\lib\\site-packages\\setuptools-56.0.0-py3.9.egg\\setuptools\\command\\egg_info.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 241,
                        "content": "if pd is not None and pd.key == self.egg_name.lower():"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "msvc9compiler.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.1\\lldb\\lib\\site-packages\\setuptools-56.0.0-py3.9.egg\\setuptools\\_distutils\\msvc9compiler.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 158,
                        "content": "key = RegEnumKey(h, 0)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "msvccompiler.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.1\\lldb\\lib\\site-packages\\setuptools-56.0.0-py3.9.egg\\setuptools\\_distutils\\msvccompiler.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 138,
                        "content": "key = RegEnumKey(h, 0)"
                    },
                    {
                        "line_number": 598,
                        "content": "key = (r\"%s\\%0.1f\\VC\\VC_OBJECTS_PLATFORM_INFO\\Win32\\Directories\""
                    },
                    {
                        "line_number": 601,
                        "content": "key = (r\"%s\\6.0\\Build System\\Components\\Platforms\""
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "msvccompiler.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.1\\lldb\\lib\\site-packages\\setuptools-56.0.0-py3.9.egg\\setuptools\\_distutils\\msvccompiler.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 601,
                        "content": "key = (r\"%s\\6.0\\Build System\\Components\\Platforms\""
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "_msvccompiler.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.1\\lldb\\lib\\site-packages\\setuptools-56.0.0-py3.9.egg\\setuptools\\_distutils\\_msvccompiler.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 34,
                        "content": "key = winreg.OpenKeyEx("
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "request.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.1\\lldb\\lib\\urllib\\request.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1604,
                        "content": "key = user, host, port, '/'.join(dirs), timeout"
                    },
                    {
                        "line_number": 2064,
                        "content": "key = user, host, port, '/'.join(dirs)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "request.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.1\\lldb\\lib\\urllib\\request.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 1420,
                        "content": "\"\"\"Parse list of key=value strings where keys are not duplicated.\"\"\""
                    },
                    {
                        "line_number": 2327,
                        "content": "key = realm + '@' + host.lower()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "request.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.1\\lldb\\lib\\urllib\\request.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 1209,
                        "content": "H = lambda x: hashlib.md5(x.encode(\"ascii\")).hexdigest()"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "request.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.1\\lldb\\lib\\urllib\\request.py",
                "vulnerability": "SHA-1",
                "lines": [
                    {
                        "line_number": 1141,
                        "content": "dig = hashlib.sha1(b).hexdigest()"
                    },
                    {
                        "line_number": 1211,
                        "content": "H = lambda x: hashlib.sha1(x.encode(\"ascii\")).hexdigest()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collisions."
            },
            {
                "language": "Python",
                "filename": "minidom.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.1\\lldb\\lib\\xml\\dom\\minidom.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1584,
                        "content": "key = element.tagName"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "ElementTree.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.1\\lldb\\lib\\xml\\etree\\ElementTree.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 893,
                        "content": "key=lambda x: x[1]):  # sort on prefix"
                    },
                    {
                        "line_number": 949,
                        "content": "key=lambda x: x[1]):  # sort on prefix"
                    },
                    {
                        "line_number": 1956,
                        "content": "qnames, key=lambda n: n.split('}', 1))}"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "_tzpath.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.1\\lldb\\lib\\zoneinfo\\_tzpath.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 152,
                        "content": "key = os.path.relpath(fpath, start=tz_root)"
                    },
                    {
                        "line_number": 154,
                        "content": "key = key.replace(os.sep, \"/\")"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "_tzpath.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.1\\lldb\\lib\\zoneinfo\\_tzpath.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 152,
                        "content": "key = os.path.relpath(fpath, start=tz_root)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "antigravity.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.2\\lldb\\lib\\antigravity.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 15,
                        "content": "h = hashlib.md5(datedow, usedforsecurity=False).hexdigest()"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "configparser.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.2\\lldb\\lib\\configparser.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 748,
                        "content": "key = self.optionxform(str(key))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "configparser.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.2\\lldb\\lib\\configparser.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 748,
                        "content": "key = self.optionxform(str(key))"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "enum.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.2\\lldb\\lib\\enum.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 111,
                        "content": "if key == '_generate_next_value_':"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "functools.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.2\\lldb\\lib\\functools.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 553,
                        "content": "key = make_key(args, kwds, typed)"
                    },
                    {
                        "line_number": 568,
                        "content": "key = make_key(args, kwds, typed)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "gettext.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.2\\lldb\\lib\\gettext.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 598,
                        "content": "key = (class_, os.path.abspath(mofile))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "gettext.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.2\\lldb\\lib\\gettext.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 598,
                        "content": "key = (class_, os.path.abspath(mofile))"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "hashlib.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.2\\lldb\\lib\\hashlib.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 43,
                        "content": ">>> m = hashlib.md5()"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "hashlib.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.2\\lldb\\lib\\hashlib.py",
                "vulnerability": "SHA-224",
                "lines": [
                    {
                        "line_number": 51,
                        "content": ">>> hashlib.sha224(b\"Nobody inspects the spammish repetition\").hexdigest()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-224 provides reduced security compared to larger variants."
            },
            {
                "language": "Python",
                "filename": "hmac.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.2\\lldb\\lib\\hmac.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 197,
                        "content": "key = digest_cons(key).digest()"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "hmac.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.2\\lldb\\lib\\hmac.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 87,
                        "content": "key = self._digest_cons(key).digest()"
                    },
                    {
                        "line_number": 89,
                        "content": "key = key.ljust(blocksize, b'\\0')"
                    },
                    {
                        "line_number": 197,
                        "content": "key = digest_cons(key).digest()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "mailbox.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.2\\lldb\\lib\\mailbox.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 1253,
                        "content": "key = _singlefileMailbox.add(self, message)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "mailcap.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.2\\lldb\\lib\\mailcap.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 104,
                        "content": "key = '/'.join(types).lower()"
                    },
                    {
                        "line_number": 159,
                        "content": "def findmatch(caps, MIMEtype, key='view', filename=\"/dev/null\", plist=[]):"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "os.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.2\\lldb\\lib\\os.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 683,
                        "content": "key = self.encodekey(key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "pickle.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.2\\lldb\\lib\\pickle.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 1561,
                        "content": "key = _inverted_registry.get(code)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "poplib.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.2\\lldb\\lib\\poplib.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 335,
                        "content": "digest = hashlib.md5(digest).hexdigest()"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "pyclbr.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.2\\lldb\\lib\\pyclbr.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 381,
                        "content": "objs = sorted(tree.values(), key=lineno_key, reverse=True)"
                    },
                    {
                        "line_number": 393,
                        "content": "key=lineno_key, reverse=True)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "pydoc.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.2\\lldb\\lib\\pydoc.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 2212,
                        "content": "def run(self, callback, key=None, completer=None, onerror=None):"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "pydoc.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.2\\lldb\\lib\\pydoc.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 2542,
                        "content": "'key = %s' % key, '#ffffff', '#ee77aa', '<br>'.join(results))"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "selectors.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.2\\lldb\\lib\\selectors.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 250,
                        "content": "key = self._fd_to_key.pop(self._fileobj_lookup(fileobj))"
                    },
                    {
                        "line_number": 257,
                        "content": "key = self._fd_to_key[self._fileobj_lookup(fileobj)]"
                    },
                    {
                        "line_number": 300,
                        "content": "key = super().register(fileobj, events, data)"
                    },
                    {
                        "line_number": 353,
                        "content": "key = super().register(fileobj, events, data)"
                    },
                    {
                        "line_number": 378,
                        "content": "key = self._fd_to_key[self._fileobj_lookup(fileobj)]"
                    },
                    {
                        "line_number": 518,
                        "content": "key = super().register(fileobj, events, data)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "selectors.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.2\\lldb\\lib\\selectors.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 250,
                        "content": "key = self._fd_to_key.pop(self._fileobj_lookup(fileobj))"
                    },
                    {
                        "line_number": 262,
                        "content": "key = self.register(fileobj, events, data)"
                    },
                    {
                        "line_number": 300,
                        "content": "key = super().register(fileobj, events, data)"
                    },
                    {
                        "line_number": 353,
                        "content": "key = super().register(fileobj, events, data)"
                    },
                    {
                        "line_number": 518,
                        "content": "key = super().register(fileobj, events, data)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "symtable.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.2\\lldb\\lib\\symtable.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 28,
                        "content": "key = table, filename"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "tarfile.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.2\\lldb\\lib\\tarfile.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 2040,
                        "content": "directories.sort(key=lambda a: a.name)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "trace.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.2\\lldb\\lib\\trace.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 556,
                        "content": "key = filename, lineno"
                    },
                    {
                        "line_number": 583,
                        "content": "key = filename, lineno"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "warnings.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.2\\lldb\\lib\\warnings.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 346,
                        "content": "key = (text, category, lineno)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "warnings.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.2\\lldb\\lib\\warnings.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 346,
                        "content": "key = (text, category, lineno)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "weakref.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.2\\lldb\\lib\\weakref.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 628,
                        "content": "L.sort(key=lambda item:item[1].index)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "selector_events.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.2\\lldb\\lib\\asyncio\\selector_events.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 36,
                        "content": "key = selector.get_key(fd)"
                    },
                    {
                        "line_number": 261,
                        "content": "key = self._selector.get_key(fd)"
                    },
                    {
                        "line_number": 277,
                        "content": "key = self._selector.get_key(fd)"
                    },
                    {
                        "line_number": 298,
                        "content": "key = self._selector.get_key(fd)"
                    },
                    {
                        "line_number": 315,
                        "content": "key = self._selector.get_key(fd)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "selector_events.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.2\\lldb\\lib\\asyncio\\selector_events.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 261,
                        "content": "key = self._selector.get_key(fd)"
                    },
                    {
                        "line_number": 277,
                        "content": "key = self._selector.get_key(fd)"
                    },
                    {
                        "line_number": 298,
                        "content": "key = self._selector.get_key(fd)"
                    },
                    {
                        "line_number": 315,
                        "content": "key = self._selector.get_key(fd)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "__init__.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.2\\lldb\\lib\\collections\\__init__.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 132,
                        "content": "link.prev, link.next, link.key = last, root, key"
                    },
                    {
                        "line_number": 610,
                        "content": "return sorted(self.items(), key=_itemgetter(1), reverse=True)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "__init__.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.2\\lldb\\lib\\collections\\__init__.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 610,
                        "content": "return sorted(self.items(), key=_itemgetter(1), reverse=True)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "dumb.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.2\\lldb\\lib\\dbm\\dumb.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 145,
                        "content": "key = key.encode('utf-8')"
                    },
                    {
                        "line_number": 190,
                        "content": "key = key.encode('utf-8')"
                    },
                    {
                        "line_number": 227,
                        "content": "key = key.encode('utf-8')"
                    },
                    {
                        "line_number": 250,
                        "content": "key = key.encode('utf-8')"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "msvc9compiler.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.2\\lldb\\lib\\distutils\\msvc9compiler.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 158,
                        "content": "key = RegEnumKey(h, 0)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "msvccompiler.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.2\\lldb\\lib\\distutils\\msvccompiler.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 138,
                        "content": "key = RegEnumKey(h, 0)"
                    },
                    {
                        "line_number": 598,
                        "content": "key = (r\"%s\\%0.1f\\VC\\VC_OBJECTS_PLATFORM_INFO\\Win32\\Directories\""
                    },
                    {
                        "line_number": 601,
                        "content": "key = (r\"%s\\6.0\\Build System\\Components\\Platforms\""
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "msvccompiler.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.2\\lldb\\lib\\distutils\\msvccompiler.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 601,
                        "content": "key = (r\"%s\\6.0\\Build System\\Components\\Platforms\""
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "_msvccompiler.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.2\\lldb\\lib\\distutils\\_msvccompiler.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 30,
                        "content": "key = winreg.OpenKeyEx("
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "cookiejar.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.2\\lldb\\lib\\http\\cookiejar.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1304,
                        "content": "cookies.sort(key=lambda a: len(a.path), reverse=True)"
                    },
                    {
                        "line_number": 1642,
                        "content": "key = ns_cookie.domain, ns_cookie.path, ns_cookie.name"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "cookies.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.2\\lldb\\lib\\http\\cookies.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 408,
                        "content": "if key == \"expires\" and isinstance(value, int):"
                    },
                    {
                        "line_number": 410,
                        "content": "elif key == \"max-age\" and isinstance(value, int):"
                    },
                    {
                        "line_number": 412,
                        "content": "elif key == \"comment\" and isinstance(value, str):"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "__init__.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.2\\lldb\\lib\\lldb-python\\lldb\\__init__.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 3925,
                        "content": "key = key * self.item_size # SBData uses byte-based indexes, but we want to use itemsize-based indexes here"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "topics.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.2\\lldb\\lib\\pydoc_data\\topics.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 13510,
                        "content": "'      \"key=str.lower\"). The key corresponding to each item in '"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "cache.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.2\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_internal\\cache.py",
                "vulnerability": "SHA-224",
                "lines": [
                    {
                        "line_number": 33,
                        "content": "return hashlib.sha224(s.encode(\"ascii\")).hexdigest()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-224 provides reduced security compared to larger variants."
            },
            {
                "language": "Python",
                "filename": "configuration.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.2\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_internal\\configuration.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 333,
                        "content": "key = section + \".\" + _normalize_name(name)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "self_outdated_check.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.2\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_internal\\self_outdated_check.py",
                "vulnerability": "SHA-224",
                "lines": [
                    {
                        "line_number": 35,
                        "content": "name = hashlib.sha224(key_bytes).hexdigest()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-224 provides reduced security compared to larger variants."
            },
            {
                "language": "Python",
                "filename": "parser.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.2\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_internal\\cli\\parser.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 188,
                        "content": "section, key = section_key.split(\".\", 1)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "configuration.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.2\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_internal\\commands\\configuration.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 173,
                        "content": "key = self._get_n_args(args, \"get [name]\", n=1)"
                    },
                    {
                        "line_number": 187,
                        "content": "key = self._get_n_args(args, \"unset [name]\", n=1)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "configuration.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.2\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_internal\\commands\\configuration.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 173,
                        "content": "key = self._get_n_args(args, \"get [name]\", n=1)"
                    },
                    {
                        "line_number": 187,
                        "content": "key = self._get_n_args(args, \"unset [name]\", n=1)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "candidate.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.2\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_internal\\models\\candidate.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 25,
                        "content": "key=(self.name, self.version, self.link),"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "candidate.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.2\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_internal\\models\\candidate.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 25,
                        "content": "key=(self.name, self.version, self.link),"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "link.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.2\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_internal\\models\\link.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 79,
                        "content": "super().__init__(key=url, defining_class=Link)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "freeze.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.2\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_internal\\operations\\freeze.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 169,
                        "content": "installations.values(), key=lambda x: x.name.lower()):"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "wheel.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.2\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_internal\\operations\\install\\wheel.py",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 88,
                        "content": "\"\"\"Return (encoded_digest, length) for path using hashlib.sha256()\"\"\""
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Python",
                "filename": "req_tracker.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.2\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_internal\\req\\req_tracker.py",
                "vulnerability": "SHA-224",
                "lines": [
                    {
                        "line_number": 88,
                        "content": "hashed = hashlib.sha224(link.url_without_fragment.encode()).hexdigest()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-224 provides reduced security compared to larger variants."
            },
            {
                "language": "Python",
                "filename": "provider.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.2\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_internal\\resolution\\resolvelib\\provider.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 119,
                        "content": "key = next(iter(candidates)).name if candidates else \"\""
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "misc.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.2\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_internal\\utils\\misc.py",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 879,
                        "content": "\"\"\"Return (hash, length) for path using hashlib.sha256()"
                    },
                    {
                        "line_number": 882,
                        "content": "h = hashlib.sha256()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Python",
                "filename": "appdirs.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.2\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_vendor\\appdirs.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 482,
                        "content": "key = _winreg.OpenKey("
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "file_cache.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.2\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_vendor\\cachecontrol\\caches\\file_cache.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 145,
                        "content": "key = CacheController.cache_url(url)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "file_cache.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.2\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_vendor\\cachecontrol\\caches\\file_cache.py",
                "vulnerability": "SHA-224",
                "lines": [
                    {
                        "line_number": 99,
                        "content": "return hashlib.sha224(x.encode()).hexdigest()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-224 provides reduced security compared to larger variants."
            },
            {
                "language": "Python",
                "filename": "__init__.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.2\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_vendor\\chardet\\__init__.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 81,
                        "content": "return sorted(results, key=lambda result: -result['confidence'])"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "__init__.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.2\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_vendor\\chardet\\__init__.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 81,
                        "content": "return sorted(results, key=lambda result: -result['confidence'])"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "compat.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.2\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_vendor\\distlib\\compat.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 692,
                        "content": "link_prev, link_next, key = self.__map.pop(key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "database.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.2\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_vendor\\distlib\\database.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 343,
                        "content": "self.key = self.name.lower()    # for case-insensitive comparisons"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "database.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.2\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_vendor\\distlib\\database.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 343,
                        "content": "self.key = self.name.lower()    # for case-insensitive comparisons"
                    },
                    {
                        "line_number": 869,
                        "content": "s.key = n.lower()   # for case-insensitive comparisons"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "database.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.2\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_vendor\\distlib\\database.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 519,
                        "content": "hasher = hashlib.md5"
                    },
                    {
                        "line_number": 1017,
                        "content": "return hashlib.md5(content).hexdigest()"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "index.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.2\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_vendor\\distlib\\index.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 276,
                        "content": "md5_digest = hashlib.md5(file_data).hexdigest()"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "index.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.2\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_vendor\\distlib\\index.py",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 277,
                        "content": "sha256_digest = hashlib.sha256(file_data).hexdigest()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Python",
                "filename": "locators.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.2\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_vendor\\distlib\\locators.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 582,
                        "content": "result = sorted(result, key=lambda t: t[0], reverse=True)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "locators.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.2\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_vendor\\distlib\\locators.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 582,
                        "content": "result = sorted(result, key=lambda t: t[0], reverse=True)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "version.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.2\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_vendor\\distlib\\version.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 108,
                        "content": "self.key = self.name.lower()    # for case-insensitive comparisons"
                    },
                    {
                        "line_number": 163,
                        "content": "return self.key == other.key and self._parts == other._parts"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "version.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.2\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_vendor\\distlib\\version.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 108,
                        "content": "self.key = self.name.lower()    # for case-insensitive comparisons"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "wheel.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.2\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_vendor\\distlib\\wheel.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 378,
                        "content": "if key == 'scripts' and not p.endswith('.exe'):"
                    },
                    {
                        "line_number": 861,
                        "content": "key = '%s/PKG-INFO' % info_dir"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "wheel.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.2\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_vendor\\distlib\\wheel.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 861,
                        "content": "key = '%s/PKG-INFO' % info_dir"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "tarfile.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.2\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_vendor\\distlib\\_backport\\tarfile.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 2148,
                        "content": "directories.sort(key=lambda a: a.name)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "__init__.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.2\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_vendor\\pkg_resources\\__init__.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 2642,
                        "content": "self._key = key = self.project_name.lower()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "auth.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.2\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_vendor\\requests\\auth.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 148,
                        "content": "return hashlib.md5(x).hexdigest()"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "auth.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.2\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_vendor\\requests\\auth.py",
                "vulnerability": "SHA-1",
                "lines": [
                    {
                        "line_number": 154,
                        "content": "return hashlib.sha1(x).hexdigest()"
                    },
                    {
                        "line_number": 198,
                        "content": "cnonce = (hashlib.sha1(s).hexdigest()[:16])"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collisions."
            },
            {
                "language": "Python",
                "filename": "auth.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.2\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_vendor\\requests\\auth.py",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 160,
                        "content": "return hashlib.sha256(x).hexdigest()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Python",
                "filename": "models.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.2\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_vendor\\requests\\models.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 915,
                        "content": "key = link.get('rel') or link.get('url')"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "models.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.2\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_vendor\\requests\\models.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 915,
                        "content": "key = link.get('rel') or link.get('url')"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "utils.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.2\\lldb\\lib\\site-packages\\pip-21.0.1-py3.9.egg\\pip\\_vendor\\requests\\utils.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 480,
                        "content": "key = param[:index_of_equals].strip(items_to_strip)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "__init__.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.2\\lldb\\lib\\site-packages\\setuptools-56.0.0-py3.9.egg\\pkg_resources\\__init__.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 2640,
                        "content": "self._key = key = self.project_name.lower()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "appdirs.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.2\\lldb\\lib\\site-packages\\setuptools-56.0.0-py3.9.egg\\pkg_resources\\_vendor\\appdirs.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 471,
                        "content": "key = _winreg.OpenKey("
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "dist.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.2\\lldb\\lib\\site-packages\\setuptools-56.0.0-py3.9.egg\\setuptools\\dist.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 415,
                        "content": "key = pkg_resources.safe_name(str(attrs['name'])).lower()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "msvc.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.2\\lldb\\lib\\site-packages\\setuptools-56.0.0-py3.9.egg\\setuptools\\msvc.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 87,
                        "content": "key = vc_base % ('', version)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "msvc.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.2\\lldb\\lib\\site-packages\\setuptools-56.0.0-py3.9.egg\\setuptools\\msvc.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 94,
                        "content": "key = vc_base % ('Wow6432Node\\\\', version)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "egg_info.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.2\\lldb\\lib\\site-packages\\setuptools-56.0.0-py3.9.egg\\setuptools\\command\\egg_info.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 241,
                        "content": "if pd is not None and pd.key == self.egg_name.lower():"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "msvc9compiler.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.2\\lldb\\lib\\site-packages\\setuptools-56.0.0-py3.9.egg\\setuptools\\_distutils\\msvc9compiler.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 158,
                        "content": "key = RegEnumKey(h, 0)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "msvccompiler.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.2\\lldb\\lib\\site-packages\\setuptools-56.0.0-py3.9.egg\\setuptools\\_distutils\\msvccompiler.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 138,
                        "content": "key = RegEnumKey(h, 0)"
                    },
                    {
                        "line_number": 598,
                        "content": "key = (r\"%s\\%0.1f\\VC\\VC_OBJECTS_PLATFORM_INFO\\Win32\\Directories\""
                    },
                    {
                        "line_number": 601,
                        "content": "key = (r\"%s\\6.0\\Build System\\Components\\Platforms\""
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "msvccompiler.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.2\\lldb\\lib\\site-packages\\setuptools-56.0.0-py3.9.egg\\setuptools\\_distutils\\msvccompiler.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 601,
                        "content": "key = (r\"%s\\6.0\\Build System\\Components\\Platforms\""
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "_msvccompiler.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.2\\lldb\\lib\\site-packages\\setuptools-56.0.0-py3.9.egg\\setuptools\\_distutils\\_msvccompiler.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 34,
                        "content": "key = winreg.OpenKeyEx("
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "request.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.2\\lldb\\lib\\urllib\\request.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1604,
                        "content": "key = user, host, port, '/'.join(dirs), timeout"
                    },
                    {
                        "line_number": 2064,
                        "content": "key = user, host, port, '/'.join(dirs)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "request.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.2\\lldb\\lib\\urllib\\request.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 1420,
                        "content": "\"\"\"Parse list of key=value strings where keys are not duplicated.\"\"\""
                    },
                    {
                        "line_number": 2327,
                        "content": "key = realm + '@' + host.lower()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "request.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.2\\lldb\\lib\\urllib\\request.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 1209,
                        "content": "H = lambda x: hashlib.md5(x.encode(\"ascii\")).hexdigest()"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "request.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.2\\lldb\\lib\\urllib\\request.py",
                "vulnerability": "SHA-1",
                "lines": [
                    {
                        "line_number": 1141,
                        "content": "dig = hashlib.sha1(b).hexdigest()"
                    },
                    {
                        "line_number": 1211,
                        "content": "H = lambda x: hashlib.sha1(x.encode(\"ascii\")).hexdigest()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collisions."
            },
            {
                "language": "Python",
                "filename": "minidom.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.2\\lldb\\lib\\xml\\dom\\minidom.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1584,
                        "content": "key = element.tagName"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "ElementTree.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.2\\lldb\\lib\\xml\\etree\\ElementTree.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 893,
                        "content": "key=lambda x: x[1]):  # sort on prefix"
                    },
                    {
                        "line_number": 949,
                        "content": "key=lambda x: x[1]):  # sort on prefix"
                    },
                    {
                        "line_number": 1956,
                        "content": "qnames, key=lambda n: n.split('}', 1))}"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "_tzpath.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.2\\lldb\\lib\\zoneinfo\\_tzpath.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 152,
                        "content": "key = os.path.relpath(fpath, start=tz_root)"
                    },
                    {
                        "line_number": 154,
                        "content": "key = key.replace(os.sep, \"/\")"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "_tzpath.py",
                "path": "C:/Users\\alexa\\.vscode\\extensions\\vadimcn.vscode-lldb-1.9.2\\lldb\\lib\\zoneinfo\\_tzpath.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 152,
                        "content": "key = os.path.relpath(fpath, start=tz_root)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "cloud_storage.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Android\\Sdk\\platform-tools\\systrace\\catapult\\common\\py_utils\\py_utils\\cloud_storage.py",
                "vulnerability": "SHA-1",
                "lines": [
                    {
                        "line_number": 489,
                        "content": "sha1 = hashlib.sha1()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collisions."
            },
            {
                "language": "Python",
                "filename": "discover.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Android\\Sdk\\platform-tools\\systrace\\catapult\\common\\py_utils\\py_utils\\discover.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 70,
                        "content": "'key=%s, class_1=%s, class_2=%s' % ("
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "local_path_info.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Android\\Sdk\\platform-tools\\systrace\\catapult\\dependency_manager\\dependency_manager\\local_path_info.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 38,
                        "content": "return max(priority_group, key=lambda path: os.stat(path).st_mtime)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "flag_changer_test.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Android\\Sdk\\platform-tools\\systrace\\catapult\\devil\\devil\\android\\flag_changer_test.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 97,
                        "content": "\"--key=this is 'fine' too\", '''--key=\"this is 'fine' too\"''')"
                    },
                    {
                        "line_number": 102,
                        "content": "'''--key=\"'I really want to keep these quotes'\"''')"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "flag_changer_test.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Android\\Sdk\\platform-tools\\systrace\\catapult\\devil\\devil\\android\\flag_changer_test.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 89,
                        "content": "self._testQuoteFlag('--key=valueA valueB', '--key=\"valueA valueB\"')"
                    },
                    {
                        "line_number": 102,
                        "content": "'''--key=\"'I really want to keep these quotes'\"''')"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "settings.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Android\\Sdk\\platform-tools\\systrace\\catapult\\devil\\devil\\android\\settings.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 160,
                        "content": "raise KeyError('key=%s not found' % key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "device_monitor.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Android\\Sdk\\platform-tools\\systrace\\catapult\\devil\\devil\\android\\tools\\device_monitor.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 114,
                        "content": "key = line.split(':')[0].strip()"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "device_monitor.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Android\\Sdk\\platform-tools\\systrace\\catapult\\devil\\devil\\android\\tools\\device_monitor.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 114,
                        "content": "key = line.split(':')[0].strip()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "output_generator_unittest.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Android\\Sdk\\platform-tools\\systrace\\catapult\\systrace\\systrace\\output_generator_unittest.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 106,
                        "content": "output_generator_md5sum = hashlib.md5("
                    },
                    {
                        "line_number": 108,
                        "content": "data_builder_md5sum = hashlib.md5("
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "zipfile_2_7_13.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Android\\Sdk\\platform-tools\\systrace\\catapult\\third_party\\zipfile\\zipfile_2_7_13.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 746,
                        "content": "self.mode = key = mode.replace('b', '')[0]"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "zipfile_2_7_13.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Android\\Sdk\\platform-tools\\systrace\\catapult\\third_party\\zipfile\\zipfile_2_7_13.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 746,
                        "content": "self.mode = key = mode.replace('b', '')[0]"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Java",
                "filename": "AtomicFormula.java",
                "path": "C:/Users\\alexa\\AppData\\Local\\Android\\Sdk\\sources\\android-30\\android\\content\\integrity\\AtomicFormula.java",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 500,
                        "content": "MessageDigest messageDigest = MessageDigest.getInstance(\"SHA-256\");"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Java",
                "filename": "WifiAwareAgentNetworkSpecifier.java",
                "path": "C:/Users\\alexa\\AppData\\Local\\Android\\Sdk\\sources\\android-30\\android\\net\\wifi\\aware\\WifiAwareAgentNetworkSpecifier.java",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 152,
                        "content": "mDigester = MessageDigest.getInstance(\"SHA-256\");"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Java",
                "filename": "Credential.java",
                "path": "C:/Users\\alexa\\AppData\\Local\\Android\\Sdk\\sources\\android-30\\android\\net\\wifi\\hotspot2\\pps\\Credential.java",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 1292,
                        "content": "MessageDigest digester = MessageDigest.getInstance(\"SHA-256\");"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Java",
                "filename": "SystemProperties.java",
                "path": "C:/Users\\alexa\\AppData\\Local\\Android\\Sdk\\sources\\android-30\\android\\os\\SystemProperties.java",
                "vulnerability": "SHA-1",
                "lines": [
                    {
                        "line_number": 320,
                        "content": "final MessageDigest digest = MessageDigest.getInstance(\"SHA-1\");"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collisions."
            },
            {
                "language": "Java",
                "filename": "RapporEncoder.java",
                "path": "C:/Users\\alexa\\AppData\\Local\\Android\\Sdk\\sources\\android-30\\android\\privacy\\internal\\rappor\\RapporEncoder.java",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 84,
                        "content": "MessageDigest digest = MessageDigest.getInstance(\"SHA-256\");"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Java",
                "filename": "CredstoreIdentityCredential.java",
                "path": "C:/Users\\alexa\\AppData\\Local\\Android\\Sdk\\sources\\android-30\\android\\security\\identity\\CredstoreIdentityCredential.java",
                "vulnerability": "ECDH",
                "lines": [
                    {
                        "line_number": 139,
                        "content": "KeyAgreement ka = KeyAgreement.getInstance(\"ECDH\");"
                    }
                ],
                "severity": "Low",
                "explanation": "ECDH is not quantum-safe; quantum computers can break its security."
            },
            {
                "language": "Java",
                "filename": "DirectoryCertificateSource.java",
                "path": "C:/Users\\alexa\\AppData\\Local\\Android\\Sdk\\sources\\android-30\\android\\security\\net\\config\\DirectoryCertificateSource.java",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 215,
                        "content": "byte[] digest = MessageDigest.getInstance(\"MD5\").digest(principal.getEncoded());"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Java",
                "filename": "AutofillService.java",
                "path": "C:/Users\\alexa\\AppData\\Local\\Android\\Sdk\\sources\\android-30\\android\\service\\autofill\\AutofillService.java",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 268,
                        "content": "*     MessageDigest md = MessageDigest.getInstance(\"SHA-256\");"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Java",
                "filename": "Rlog.java",
                "path": "C:/Users\\alexa\\AppData\\Local\\Android\\Sdk\\sources\\android-30\\android\\telephony\\Rlog.java",
                "vulnerability": "SHA-1",
                "lines": [
                    {
                        "line_number": 152,
                        "content": "messageDigest = MessageDigest.getInstance(\"SHA-1\");"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collisions."
            },
            {
                "language": "Java",
                "filename": "DownloadRequest.java",
                "path": "C:/Users\\alexa\\AppData\\Local\\Android\\Sdk\\sources\\android-30\\android\\telephony\\mbms\\DownloadRequest.java",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 368,
                        "content": "digest = MessageDigest.getInstance(\"SHA-256\");"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Java",
                "filename": "HashedStringCache.java",
                "path": "C:/Users\\alexa\\AppData\\Local\\Android\\Sdk\\sources\\android-30\\android\\util\\HashedStringCache.java",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 68,
                        "content": "mDigester = MessageDigest.getInstance(\"MD5\");"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Java",
                "filename": "SourceStampVerifier.java",
                "path": "C:/Users\\alexa\\AppData\\Local\\Android\\Sdk\\sources\\android-30\\android\\util\\apk\\SourceStampVerifier.java",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 419,
                        "content": "MessageDigest messageDigest = MessageDigest.getInstance(\"SHA-256\");"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Java",
                "filename": "CipherInputStreamBenchmark.java",
                "path": "C:/Users\\alexa\\AppData\\Local\\Android\\Sdk\\sources\\android-30\\benchmarks\\regression\\CipherInputStreamBenchmark.java",
                "vulnerability": "CBC_Static_IV",
                "lines": [
                    {
                        "line_number": 65,
                        "content": "cipherEncrypt = Cipher.getInstance(\"AES/CBC/PKCS5Padding\");"
                    }
                ],
                "severity": "High",
                "explanation": "Static IVs in CBC mode weaken security and allow chosen-plaintext attacks."
            },
            {
                "language": "Java",
                "filename": "ChooserUtil.java",
                "path": "C:/Users\\alexa\\AppData\\Local\\Android\\Sdk\\sources\\android-30\\com\\android\\internal\\app\\ChooserUtil.java",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 37,
                        "content": "MessageDigest md = MessageDigest.getInstance(\"MD5\");"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Java",
                "filename": "InboundSmsTracker.java",
                "path": "C:/Users\\alexa\\AppData\\Local\\Android\\Sdk\\sources\\android-30\\com\\android\\internal\\telephony\\InboundSmsTracker.java",
                "vulnerability": "SHA-1",
                "lines": [
                    {
                        "line_number": 442,
                        "content": "MessageDigest messageDigest = MessageDigest.getInstance(\"SHA-1\");"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collisions."
            },
            {
                "language": "Java",
                "filename": "SmsNumberUtils.java",
                "path": "C:/Users\\alexa\\AppData\\Local\\Android\\Sdk\\sources\\android-30\\com\\android\\internal\\telephony\\SmsNumberUtils.java",
                "vulnerability": "SHA-1",
                "lines": [
                    {
                        "line_number": 688,
                        "content": "messageDigest = MessageDigest.getInstance(\"SHA-1\");"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collisions."
            },
            {
                "language": "Java",
                "filename": "LockPatternUtils.java",
                "path": "C:/Users\\alexa\\AppData\\Local\\Android\\Sdk\\sources\\android-30\\com\\android\\internal\\widget\\LockPatternUtils.java",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 1020,
                        "content": "byte[] md5 = MessageDigest.getInstance(\"MD5\").digest(saltedPassword);"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Java",
                "filename": "LockPatternUtils.java",
                "path": "C:/Users\\alexa\\AppData\\Local\\Android\\Sdk\\sources\\android-30\\com\\android\\internal\\widget\\LockPatternUtils.java",
                "vulnerability": "SHA-1",
                "lines": [
                    {
                        "line_number": 1019,
                        "content": "byte[] sha1 = MessageDigest.getInstance(\"SHA-1\").digest(saltedPassword);"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collisions."
            },
            {
                "language": "Java",
                "filename": "LockPatternUtils.java",
                "path": "C:/Users\\alexa\\AppData\\Local\\Android\\Sdk\\sources\\android-30\\com\\android\\internal\\widget\\LockPatternUtils.java",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 1043,
                        "content": "MessageDigest sha256 = MessageDigest.getInstance(\"SHA-256\");"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Java",
                "filename": "CustomPrinterIconCache.java",
                "path": "C:/Users\\alexa\\AppData\\Local\\Android\\Sdk\\sources\\android-30\\com\\android\\printspooler\\model\\CustomPrinterIconCache.java",
                "vulnerability": "SHA-1",
                "lines": [
                    {
                        "line_number": 71,
                        "content": "MessageDigest md = MessageDigest.getInstance(\"SHA-1\");"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collisions."
            },
            {
                "language": "Java",
                "filename": "PersistentDataBlockService.java",
                "path": "C:/Users\\alexa\\AppData\\Local\\Android\\Sdk\\sources\\android-30\\com\\android\\server\\PersistentDataBlockService.java",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 325,
                        "content": "md = MessageDigest.getInstance(\"SHA-256\");"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Java",
                "filename": "AccountManagerService.java",
                "path": "C:/Users\\alexa\\AppData\\Local\\Android\\Sdk\\sources\\android-30\\com\\android\\server\\accounts\\AccountManagerService.java",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 3031,
                        "content": "digester = MessageDigest.getInstance(\"SHA-256\");"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Java",
                "filename": "AdbDebuggingManager.java",
                "path": "C:/Users\\alexa\\AppData\\Local\\Android\\Sdk\\sources\\android-30\\com\\android\\server\\adb\\AdbDebuggingManager.java",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 1412,
                        "content": "digester = MessageDigest.getInstance(\"MD5\");"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Java",
                "filename": "AccountSyncSettingsBackupHelper.java",
                "path": "C:/Users\\alexa\\AppData\\Local\\Android\\Sdk\\sources\\android-30\\com\\android\\server\\backup\\AccountSyncSettingsBackupHelper.java",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 242,
                        "content": "MessageDigest md5 = MessageDigest.getInstance(\"MD5\");"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Java",
                "filename": "BackupUtils.java",
                "path": "C:/Users\\alexa\\AppData\\Local\\Android\\Sdk\\sources\\android-30\\com\\android\\server\\backup\\BackupUtils.java",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 106,
                        "content": "MessageDigest digest = MessageDigest.getInstance(\"SHA-256\");"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Java",
                "filename": "PerformAdbBackupTask.java",
                "path": "C:/Users\\alexa\\AppData\\Local\\Android\\Sdk\\sources\\android-30\\com\\android\\server\\backup\\fullbackup\\PerformAdbBackupTask.java",
                "vulnerability": "CBC_Static_IV",
                "lines": [
                    {
                        "line_number": 156,
                        "content": "Cipher c = Cipher.getInstance(\"AES/CBC/PKCS5Padding\");"
                    },
                    {
                        "line_number": 175,
                        "content": "Cipher mkC = Cipher.getInstance(\"AES/CBC/PKCS5Padding\");"
                    }
                ],
                "severity": "High",
                "explanation": "Static IVs in CBC mode weaken security and allow chosen-plaintext attacks."
            },
            {
                "language": "Java",
                "filename": "KeyValueBackupTask.java",
                "path": "C:/Users\\alexa\\AppData\\Local\\Android\\Sdk\\sources\\android-30\\com\\android\\server\\backup\\keyvalue\\KeyValueBackupTask.java",
                "vulnerability": "SHA-1",
                "lines": [
                    {
                        "line_number": 963,
                        "content": "MessageDigest md = MessageDigest.getInstance(\"SHA-1\");"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collisions."
            },
            {
                "language": "Java",
                "filename": "PerformAdbRestoreTask.java",
                "path": "C:/Users\\alexa\\AppData\\Local\\Android\\Sdk\\sources\\android-30\\com\\android\\server\\backup\\restore\\PerformAdbRestoreTask.java",
                "vulnerability": "CBC_Static_IV",
                "lines": [
                    {
                        "line_number": 222,
                        "content": "Cipher c = Cipher.getInstance(\"AES/CBC/PKCS5Padding\");"
                    }
                ],
                "severity": "High",
                "explanation": "Static IVs in CBC mode weaken security and allow chosen-plaintext attacks."
            },
            {
                "language": "Java",
                "filename": "AppIntegrityManagerServiceImpl.java",
                "path": "C:/Users\\alexa\\AppData\\Local\\Android\\Sdk\\sources\\android-30\\com\\android\\server\\integrity\\AppIntegrityManagerServiceImpl.java",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 425,
                        "content": "MessageDigest messageDigest = MessageDigest.getInstance(\"SHA-256\");"
                    },
                    {
                        "line_number": 516,
                        "content": "MessageDigest digest = MessageDigest.getInstance(\"SHA-256\");"
                    },
                    {
                        "line_number": 560,
                        "content": "MessageDigest digest = MessageDigest.getInstance(\"SHA-256\");"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Java",
                "filename": "KeySyncUtils.java",
                "path": "C:/Users\\alexa\\AppData\\Local\\Android\\Sdk\\sources\\android-30\\com\\android\\server\\locksettings\\recoverablekeystore\\KeySyncUtils.java",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 110,
                        "content": "MessageDigest messageDigest = MessageDigest.getInstance(\"SHA-256\");"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Java",
                "filename": "PackageManagerService.java",
                "path": "C:/Users\\alexa\\AppData\\Local\\Android\\Sdk\\sources\\android-30\\com\\android\\server\\pm\\PackageManagerService.java",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 20729,
                        "content": "final MessageDigest msgDigest = MessageDigest.getInstance(\"SHA-256\");"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Java",
                "filename": "ProcessLoggingHandler.java",
                "path": "C:/Users\\alexa\\AppData\\Local\\Android\\Sdk\\sources\\android-30\\com\\android\\server\\pm\\ProcessLoggingHandler.java",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 102,
                        "content": "MessageDigest md = MessageDigest.getInstance(\"SHA-256\");"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Java",
                "filename": "CertificateTransparencyLogInstallReceiver.java",
                "path": "C:/Users\\alexa\\AppData\\Local\\Android\\Sdk\\sources\\android-30\\com\\android\\server\\updates\\CertificateTransparencyLogInstallReceiver.java",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 160,
                        "content": "byte[] id = MessageDigest.getInstance(\"SHA-256\").digest(keyBytes);"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Java",
                "filename": "WifiScoreCard.java",
                "path": "C:/Users\\alexa\\AppData\\Local\\Android\\Sdk\\sources\\android-30\\com\\android\\server\\wifi\\WifiScoreCard.java",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 1717,
                        "content": "md = MessageDigest.getInstance(\"SHA-256\");"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Java",
                "filename": "PasspointProvider.java",
                "path": "C:/Users\\alexa\\AppData\\Local\\Android\\Sdk\\sources\\android-30\\com\\android\\server\\wifi\\hotspot2\\PasspointProvider.java",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 668,
                        "content": "MessageDigest digester = MessageDigest.getInstance(\"SHA-256\");"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Java",
                "filename": "ServiceProviderVerifier.java",
                "path": "C:/Users\\alexa\\AppData\\Local\\Android\\Sdk\\sources\\android-30\\com\\android\\server\\wifi\\hotspot2\\ServiceProviderVerifier.java",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 209,
                        "content": "MessageDigest digest = MessageDigest.getInstance(\"SHA-256\");"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Java",
                "filename": "BugreportProgressService.java",
                "path": "C:/Users\\alexa\\AppData\\Local\\Android\\Sdk\\sources\\android-30\\com\\android\\shell\\BugreportProgressService.java",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 451,
                        "content": "MessageDigest md = MessageDigest.getInstance(\"SHA-256\");"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Java",
                "filename": "Utils.java",
                "path": "C:/Users\\alexa\\AppData\\Local\\Android\\Sdk\\sources\\android-30\\com\\android\\statementservice\\retriever\\Utils.java",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 117,
                        "content": "digester = MessageDigest.getInstance(\"SHA-256\");"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Java",
                "filename": "Rlog.java",
                "path": "C:/Users\\alexa\\AppData\\Local\\Android\\Sdk\\sources\\android-30\\com\\android\\telephony\\Rlog.java",
                "vulnerability": "SHA-1",
                "lines": [
                    {
                        "line_number": 145,
                        "content": "messageDigest = MessageDigest.getInstance(\"SHA-1\");"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collisions."
            },
            {
                "language": "Java",
                "filename": "UUID.java",
                "path": "C:/Users\\alexa\\AppData\\Local\\Android\\Sdk\\sources\\android-30\\java\\util\\UUID.java",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 165,
                        "content": "md = MessageDigest.getInstance(\"MD5\");"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Java",
                "filename": "ObexHelper.java",
                "path": "C:/Users\\alexa\\AppData\\Local\\Android\\Sdk\\sources\\android-30\\javax\\obex\\ObexHelper.java",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 984,
                        "content": "MessageDigest md5 = MessageDigest.getInstance(\"MD5\");"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "common.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\FACEIT\\app-1.35.1\\resources\\app\\node_modules\\node-gyp\\gyp\\pylib\\gyp\\common.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 565,
                        "content": "key = self.end[1][0] if last else self.end[2][0]"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "common.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\FACEIT\\app-1.35.1\\resources\\app\\node_modules\\node-gyp\\gyp\\pylib\\gyp\\common.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 565,
                        "content": "key = self.end[1][0] if last else self.end[2][0]"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "input.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\FACEIT\\app-1.35.1\\resources\\app\\node_modules\\node-gyp\\gyp\\pylib\\gyp\\input.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1391,
                        "content": "if key == \"variables\" or type(value) is str:"
                    },
                    {
                        "line_number": 2074,
                        "content": "elif key == \"link_settings\":"
                    },
                    {
                        "line_number": 2939,
                        "content": "key = subdir + \":\" + name"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "MSVSNew.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\FACEIT\\app-1.35.1\\resources\\app\\node_modules\\node-gyp\\gyp\\pylib\\gyp\\MSVSNew.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 100,
                        "content": "self.entries = sorted(entries or [], key=attrgetter(\"path\"))"
                    },
                    {
                        "line_number": 252,
                        "content": "all_entries = sorted(all_entries, key=attrgetter(\"path\"))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "MSVSNew.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\FACEIT\\app-1.35.1\\resources\\app\\node_modules\\node-gyp\\gyp\\pylib\\gyp\\MSVSNew.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 48,
                        "content": "d = hashlib.md5((str(seed) + str(name)).encode(\"utf-8\")).hexdigest().upper()"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "MSVSVersion.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\FACEIT\\app-1.35.1\\resources\\app\\node_modules\\node-gyp\\gyp\\pylib\\gyp\\MSVSVersion.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 45,
                        "content": "compatible_sdks.sort(key=lambda v: float(v.replace(\"v\", \"\")), reverse=True)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "xcodeproj_file.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\FACEIT\\app-1.35.1\\resources\\app\\node_modules\\node-gyp\\gyp\\pylib\\gyp\\xcodeproj_file.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 693,
                        "content": "if key == \"settings\" and isinstance(self, PBXBuildFile):"
                    },
                    {
                        "line_number": 700,
                        "content": "if key == \"buildSettings\" and isinstance(self, XCBuildConfiguration):"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "xcodeproj_file.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\FACEIT\\app-1.35.1\\resources\\app\\node_modules\\node-gyp\\gyp\\pylib\\gyp\\xcodeproj_file.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 1216,
                        "content": "key = (child_name, child_path)"
                    },
                    {
                        "line_number": 1490,
                        "content": "self._properties[\"children\"], key=cmp_to_key(lambda x, y: x.Compare(y))"
                    },
                    {
                        "line_number": 2898,
                        "content": "key=cmp_to_key(lambda x, y: x.CompareRootGroup(y)),"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "xcodeproj_file.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\FACEIT\\app-1.35.1\\resources\\app\\node_modules\\node-gyp\\gyp\\pylib\\gyp\\xcodeproj_file.py",
                "vulnerability": "SHA-1",
                "lines": [
                    {
                        "line_number": 433,
                        "content": "seed_hash = hashlib.sha1()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collisions."
            },
            {
                "language": "Python",
                "filename": "eclipse.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\FACEIT\\app-1.35.1\\resources\\app\\node_modules\\node-gyp\\gyp\\pylib\\gyp\\generator\\eclipse.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 250,
                        "content": "key = cpp_line_parts[1]"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "make.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\FACEIT\\app-1.35.1\\resources\\app\\node_modules\\node-gyp\\gyp\\pylib\\gyp\\generator\\make.py",
                "vulnerability": "SHA-1",
                "lines": [
                    {
                        "line_number": 2159,
                        "content": "cmddigest = hashlib.sha1("
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collisions."
            },
            {
                "language": "Python",
                "filename": "ninja.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\FACEIT\\app-1.35.1\\resources\\app\\node_modules\\node-gyp\\gyp\\pylib\\gyp\\generator\\ninja.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 815,
                        "content": "(\"unique_name\", hashlib.md5(outputs[0]).hexdigest())"
                    },
                    {
                        "line_number": 2814,
                        "content": "hash_for_rules = hashlib.md5(qualified_target_for_hash).hexdigest()"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "_zoneinfo.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\JetBrains\\PyCharm2023.3\\python_stubs\\-2004735479\\_zoneinfo.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 81,
                        "content": "key = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "_philox.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\JetBrains\\PyCharm2023.3\\python_stubs\\-2004735479\\numpy\\random\\_philox.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 102,
                        "content": ">>> key = 2**96 + 2**33 + 2**17 + 2**9"
                    },
                    {
                        "line_number": 103,
                        "content": ">>> rg = [Generator(Philox(key=key+i)) for i in range(10)]"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "_philox.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\JetBrains\\PyCharm2023.3\\python_stubs\\-2004735479\\numpy\\random\\_philox.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 102,
                        "content": ">>> key = 2**96 + 2**33 + 2**17 + 2**9"
                    },
                    {
                        "line_number": 183,
                        "content": "def __init__(self, seed=None, counter=None, key=None): # real signature unknown; restored from __doc__"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "timezones.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\JetBrains\\PyCharm2023.3\\python_stubs\\-2004735479\\pandas\\_libs\\tslibs\\timezones.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 364,
                        "content": "key = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "_zoneinfo.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\JetBrains\\PyCharm2023.3\\python_stubs\\1524412434\\_zoneinfo.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 81,
                        "content": "key = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "_zoneinfo.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\JetBrains\\PyCharm2023.3\\python_stubs\\cache\\21acc8fa6ab18bc2e047a59899601c50daf395edfed8908b86fc63ec21ff5286\\_zoneinfo.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 81,
                        "content": "key = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "timezones.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\JetBrains\\PyCharm2023.3\\python_stubs\\cache\\6a1ead9c8212e5b2d454a3e8b142d0a321a54a196216b9d06851863ab41e6edf\\pandas\\_libs\\tslibs\\timezones.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 364,
                        "content": "key = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "_zoneinfo.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\JetBrains\\PyCharm2023.3\\python_stubs\\cache\\7e7b4157e401f8281fd85b68f2e21c828bf739c91416b2824dd22cb385eef819\\_zoneinfo.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 81,
                        "content": "key = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "_philox.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\JetBrains\\PyCharm2023.3\\python_stubs\\cache\\9a4a213688fd658ec1438640e4cca621fb024295415637a1fe68ba6bdef2dcce\\numpy\\random\\_philox.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 102,
                        "content": ">>> key = 2**96 + 2**33 + 2**17 + 2**9"
                    },
                    {
                        "line_number": 103,
                        "content": ">>> rg = [Generator(Philox(key=key+i)) for i in range(10)]"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "_philox.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\JetBrains\\PyCharm2023.3\\python_stubs\\cache\\9a4a213688fd658ec1438640e4cca621fb024295415637a1fe68ba6bdef2dcce\\numpy\\random\\_philox.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 102,
                        "content": ">>> key = 2**96 + 2**33 + 2**17 + 2**9"
                    },
                    {
                        "line_number": 183,
                        "content": "def __init__(self, seed=None, counter=None, key=None): # real signature unknown; restored from __doc__"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "_philox.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\JetBrains\\PyCharmCE2023.2\\python_stubs\\-1235990757\\numpy\\random\\_philox.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 102,
                        "content": ">>> key = 2**96 + 2**33 + 2**17 + 2**9"
                    },
                    {
                        "line_number": 103,
                        "content": ">>> rg = [Generator(Philox(key=key+i)) for i in range(10)]"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "_philox.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\JetBrains\\PyCharmCE2023.2\\python_stubs\\-1235990757\\numpy\\random\\_philox.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 102,
                        "content": ">>> key = 2**96 + 2**33 + 2**17 + 2**9"
                    },
                    {
                        "line_number": 183,
                        "content": "def __init__(self, seed=None, counter=None, key=None): # real signature unknown; restored from __doc__"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "_philox.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\JetBrains\\PyCharmCE2023.2\\python_stubs\\-2004735479\\numpy\\random\\_philox.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 102,
                        "content": ">>> key = 2**96 + 2**33 + 2**17 + 2**9"
                    },
                    {
                        "line_number": 103,
                        "content": ">>> rg = [Generator(Philox(key=key+i)) for i in range(10)]"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "_philox.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\JetBrains\\PyCharmCE2023.2\\python_stubs\\-2004735479\\numpy\\random\\_philox.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 102,
                        "content": ">>> key = 2**96 + 2**33 + 2**17 + 2**9"
                    },
                    {
                        "line_number": 183,
                        "content": "def __init__(self, seed=None, counter=None, key=None): # real signature unknown; restored from __doc__"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "_philox.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\JetBrains\\PyCharmCE2023.2\\python_stubs\\1929292833\\numpy\\random\\_philox.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 102,
                        "content": ">>> key = 2**96 + 2**33 + 2**17 + 2**9"
                    },
                    {
                        "line_number": 103,
                        "content": ">>> rg = [Generator(Philox(key=key+i)) for i in range(10)]"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "_philox.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\JetBrains\\PyCharmCE2023.2\\python_stubs\\1929292833\\numpy\\random\\_philox.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 102,
                        "content": ">>> key = 2**96 + 2**33 + 2**17 + 2**9"
                    },
                    {
                        "line_number": 183,
                        "content": "def __init__(self, seed=None, counter=None, key=None): # real signature unknown; restored from __doc__"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "_zoneinfo.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\JetBrains\\PyCharmCE2023.2\\python_stubs\\cache\\78cf0403e6fcc4e24264ba3b8f2e6bd8cb638ffb67e79656b4160677b6314577\\_zoneinfo.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 81,
                        "content": "key = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "_zoneinfo.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\JetBrains\\PyCharmCE2023.2\\python_stubs\\cache\\898abd70e026bb1d508c0be2358e4625578acaa10fce453e8d0159c43307297e\\_zoneinfo.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 81,
                        "content": "key = property(lambda self: object(), lambda self, v: None, lambda self: None)  # default"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "_philox.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\JetBrains\\PyCharmCE2023.2\\python_stubs\\cache\\9a4a213688fd658ec1438640e4cca621fb024295415637a1fe68ba6bdef2dcce\\numpy\\random\\_philox.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 102,
                        "content": ">>> key = 2**96 + 2**33 + 2**17 + 2**9"
                    },
                    {
                        "line_number": 103,
                        "content": ">>> rg = [Generator(Philox(key=key+i)) for i in range(10)]"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "_philox.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\JetBrains\\PyCharmCE2023.2\\python_stubs\\cache\\9a4a213688fd658ec1438640e4cca621fb024295415637a1fe68ba6bdef2dcce\\numpy\\random\\_philox.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 102,
                        "content": ">>> key = 2**96 + 2**33 + 2**17 + 2**9"
                    },
                    {
                        "line_number": 183,
                        "content": "def __init__(self, seed=None, counter=None, key=None): # real signature unknown; restored from __doc__"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "_philox.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\JetBrains\\PyCharmCE2023.2\\python_stubs\\cache\\c3e32db0419e4b75cd5dbafbb83b3666506c489a643bb5c1e31e2f5e2e913c7d\\numpy\\random\\_philox.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 102,
                        "content": ">>> key = 2**96 + 2**33 + 2**17 + 2**9"
                    },
                    {
                        "line_number": 103,
                        "content": ">>> rg = [Generator(Philox(key=key+i)) for i in range(10)]"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "_philox.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\JetBrains\\PyCharmCE2023.2\\python_stubs\\cache\\c3e32db0419e4b75cd5dbafbb83b3666506c489a643bb5c1e31e2f5e2e913c7d\\numpy\\random\\_philox.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 102,
                        "content": ">>> key = 2**96 + 2**33 + 2**17 + 2**9"
                    },
                    {
                        "line_number": 183,
                        "content": "def __init__(self, seed=None, counter=None, key=None): # real signature unknown; restored from __doc__"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "calls.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\bandit\\blacklists\\calls.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 58,
                        "content": "| B303 | md5                 | - hashlib.md5                      | Medium    |"
                    },
                    {
                        "line_number": 405,
                        "content": "\"hashlib.md5\","
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "calls.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\bandit\\blacklists\\calls.py",
                "vulnerability": "SHA-1",
                "lines": [
                    {
                        "line_number": 59,
                        "content": "|      |                     | - hashlib.sha1                     |           |"
                    },
                    {
                        "line_number": 407,
                        "content": "\"hashlib.sha1\","
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collisions."
            },
            {
                "language": "Python",
                "filename": "_dup.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\bidict\\_dup.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 57,
                        "content": "ON_DUP_RAISE: t.Final[OnDup] = OnDup(key=RAISE, val=RAISE, kv=RAISE)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "_dup.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\bidict\\_dup.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 55,
                        "content": "ON_DUP_DEFAULT: t.Final[OnDup] = OnDup(key=DROP_OLD, val=RAISE, kv=RAISE)"
                    },
                    {
                        "line_number": 59,
                        "content": "ON_DUP_DROP_OLD: t.Final[OnDup] = OnDup(key=DROP_OLD, val=DROP_OLD, kv=DROP_OLD)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "_saferef.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\blinker\\_saferef.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 124,
                        "content": "key = cls.calculate_key(target)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "__init__.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\bs4\\tests\\__init__.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1137,
                        "content": "<ns2:tag key=\"value\">baz</ns2:tag>"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "core.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\click\\core.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 2676,
                        "content": "possible_names.sort(key=lambda x: -len(x[0]))  # group long options first"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "_parser.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\dateutil\\parser\\_parser.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 464,
                        "content": "key = [x for x in ['y', 'm', 'd'] if x not in strids]"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "_parser.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\dateutil\\parser\\_parser.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 464,
                        "content": "key = [x for x in ['y', 'm', 'd'] if x not in strids]"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "_factories.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\dateutil\\tz\\_factories.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 64,
                        "content": "key = (s, posix_offset)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "dnssec.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\dns\\dnssec.py",
                "vulnerability": "SHA-1",
                "lines": [
                    {
                        "line_number": 236,
                        "content": "dshash = hashlib.sha1()"
                    },
                    {
                        "line_number": 784,
                        "content": "digest = hashlib.sha1(domain_encoded + salt_encoded).digest()"
                    },
                    {
                        "line_number": 786,
                        "content": "digest = hashlib.sha1(digest + salt_encoded).digest()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collisions."
            },
            {
                "language": "Python",
                "filename": "dnssec.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\dns\\dnssec.py",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 238,
                        "content": "dshash = hashlib.sha256()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Python",
                "filename": "entropy.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\dns\\entropy.py",
                "vulnerability": "SHA-1",
                "lines": [
                    {
                        "line_number": 37,
                        "content": "self.hash = hashlib.sha1()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collisions."
            },
            {
                "language": "Python",
                "filename": "message.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\dns\\message.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 407,
                        "content": "key = (section_number, name, rdclass, rdtype, covers, deleting)"
                    },
                    {
                        "line_number": 677,
                        "content": "key = keyring[keyname]"
                    },
                    {
                        "line_number": 1148,
                        "content": "key = self.keyring.get(absolute_name)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "message.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\dns\\message.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 407,
                        "content": "key = (section_number, name, rdclass, rdtype, covers, deleting)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "tsig.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\dns\\tsig.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 183,
                        "content": "HMAC_MD5: hashlib.md5,"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "tsig.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\dns\\tsig.py",
                "vulnerability": "SHA-1",
                "lines": [
                    {
                        "line_number": 175,
                        "content": "HMAC_SHA1: hashlib.sha1,"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collisions."
            },
            {
                "language": "Python",
                "filename": "tsig.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\dns\\tsig.py",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 177,
                        "content": "HMAC_SHA256: hashlib.sha256,"
                    },
                    {
                        "line_number": 178,
                        "content": "HMAC_SHA256_128: (hashlib.sha256, 128),"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Python",
                "filename": "tsig.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\dns\\tsig.py",
                "vulnerability": "SHA-224",
                "lines": [
                    {
                        "line_number": 176,
                        "content": "HMAC_SHA224: hashlib.sha224,"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-224 provides reduced security compared to larger variants."
            },
            {
                "language": "Python",
                "filename": "win32util.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\dns\\win32util.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 225,
                        "content": "key = winreg.OpenKey(interfaces, guid)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "zone.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\dns\\zone.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 799,
                        "content": "for rdataset in sorted(node, key=lambda rds: (rds.rdtype, rds.covers)):"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "zone.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\dns\\zone.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 179,
                        "content": "key = self._validate_name(key)"
                    },
                    {
                        "line_number": 183,
                        "content": "key = self._validate_name(key)"
                    },
                    {
                        "line_number": 187,
                        "content": "key = self._validate_name(key)"
                    },
                    {
                        "line_number": 203,
                        "content": "key = self._validate_name(key)"
                    },
                    {
                        "line_number": 207,
                        "content": "key = self._validate_name(key)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "dsa.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\dns\\dnssecalgs\\dsa.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 92,
                        "content": "key=dsa.generate_private_key(key_size=key_size),"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "rsa.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\dns\\dnssecalgs\\rsa.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 69,
                        "content": "key=rsa.generate_private_key("
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "dnskeybase.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\dns\\rdtypes\\dnskeybase.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 49,
                        "content": "self.key = self._as_bytes(key)"
                    },
                    {
                        "line_number": 67,
                        "content": "key = base64.b64decode(b64)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "svcbbase.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\dns\\rdtypes\\svcbbase.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 497,
                        "content": "# 'key=', so next token should be a quoted string without"
                    },
                    {
                        "line_number": 499,
                        "content": "key = token.value[:-1]"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "svcbbase.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\dns\\rdtypes\\svcbbase.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 497,
                        "content": "# 'key=', so next token should be a quoted string without"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "HIP.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\dns\\rdtypes\\ANY\\HIP.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 41,
                        "content": "self.key = self._as_bytes(key, True)"
                    },
                    {
                        "line_number": 46,
                        "content": "key = base64.b64encode(self.key).replace(b\"\\n\", b\"\").decode()"
                    },
                    {
                        "line_number": 61,
                        "content": "key = base64.b64decode(tok.get_string().encode())"
                    },
                    {
                        "line_number": 81,
                        "content": "key = parser.get_bytes(lk)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "HIP.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\dns\\rdtypes\\ANY\\HIP.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 41,
                        "content": "self.key = self._as_bytes(key, True)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "OPENPGPKEY.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\dns\\rdtypes\\ANY\\OPENPGPKEY.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 35,
                        "content": "self.key = self._as_bytes(key)"
                    },
                    {
                        "line_number": 45,
                        "content": "key = base64.b64decode(b64)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "TKEY.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\dns\\rdtypes\\ANY\\TKEY.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 59,
                        "content": "self.key = self._as_bytes(key)"
                    },
                    {
                        "line_number": 87,
                        "content": "key = base64.b64decode(key_b64)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "TKEY.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\dns\\rdtypes\\ANY\\TKEY.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 87,
                        "content": "key = base64.b64decode(key_b64)"
                    },
                    {
                        "line_number": 110,
                        "content": "key = parser.get_counted_bytes(2)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "IPSECKEY.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\dns\\rdtypes\\IN\\IPSECKEY.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 48,
                        "content": "self.key = self._as_bytes(key)"
                    },
                    {
                        "line_number": 71,
                        "content": "key = base64.b64decode(b64)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "websocket.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\eventlet\\websocket.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 170,
                        "content": "key = struct.pack(\">II\", key1, key2) + key3"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "websocket.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\eventlet\\websocket.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 170,
                        "content": "key = struct.pack(\">II\", key1, key2) + key3"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "cookiejar.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\eventlet\\green\\http\\cookiejar.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1339,
                        "content": "cookies.sort(key=lambda a: len(a.path), reverse=True)"
                    },
                    {
                        "line_number": 1676,
                        "content": "key = ns_cookie.domain, ns_cookie.path, ns_cookie.name"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "cookies.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\eventlet\\green\\http\\cookies.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 490,
                        "content": "if key == \"expires\" and isinstance(value, int):"
                    },
                    {
                        "line_number": 492,
                        "content": "elif key == \"max-age\" and isinstance(value, int):"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "ttypes.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\eventlet\\zipkin\\_thrift\\zipkinCore\\ttypes.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 234,
                        "content": "def __init__(self, key=None, value=None, annotation_type=None, host=None,):"
                    },
                    {
                        "line_number": 251,
                        "content": "self.key = iprot.readString();"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "cli.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\flask\\cli.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1038,
                        "content": "rows.sort(key=itemgetter(sorts.index(sort)))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "config.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\flask\\config.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 338,
                        "content": "key = k[len(namespace) :]"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "sessions.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\flask\\sessions.py",
                "vulnerability": "SHA-1",
                "lines": [
                    {
                        "line_number": 285,
                        "content": "digest_method = staticmethod(hashlib.sha1)"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collisions."
            },
            {
                "language": "Python",
                "filename": "tag.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\flask\\json\\tag.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 110,
                        "content": "key = next(iter(value))"
                    },
                    {
                        "line_number": 114,
                        "content": "key = next(iter(value))"
                    },
                    {
                        "line_number": 301,
                        "content": "key = next(iter(value))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "blueprints.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\flask\\sansio\\blueprints.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 382,
                        "content": "key = name if key is None else f\"{name}.{key}\""
                    },
                    {
                        "line_number": 386,
                        "content": "key = name if key is None else f\"{name}.{key}\""
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "blueprints.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\flask\\sansio\\blueprints.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 382,
                        "content": "key = name if key is None else f\"{name}.{key}\""
                    },
                    {
                        "line_number": 386,
                        "content": "key = name if key is None else f\"{name}.{key}\""
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "flask_compress.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\flask_compress\\flask_compress.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 183,
                        "content": "key = self.cache_key(request)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "fontBuilder.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\fontTools\\fontBuilder.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 785,
                        "content": "bag, key=lambda vorg: bag[vorg], reverse=True"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "fontBuilder.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\fontTools\\fontBuilder.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 785,
                        "content": "bag, key=lambda vorg: bag[vorg], reverse=True"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "width.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\fontTools\\cffLib\\width.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 161,
                        "content": "default = min(ends, key=lambda default: byteCost(widths, default, nominal))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "width.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\fontTools\\cffLib\\width.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 161,
                        "content": "default = min(ends, key=lambda default: byteCost(widths, default, nominal))"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "builder.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\fontTools\\colorLib\\builder.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 492,
                        "content": "key=lambda t: (t[1] - t[0], t[1], t[0]),"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "statNames.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\fontTools\\designspaceLib\\statNames.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 148,
                        "content": "key=lambda a: a.axisOrdering,"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "builder.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\fontTools\\feaLib\\builder.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 254,
                        "content": "key = (script, lang, feature_name)"
                    },
                    {
                        "line_number": 1097,
                        "content": "key = (self.script_, language, self.cur_feature_name_)"
                    },
                    {
                        "line_number": 1106,
                        "content": "key = (self.script_, language)"
                    },
                    {
                        "line_number": 1242,
                        "content": "key = (script, lang, self.cur_feature_name_)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "builder.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\fontTools\\feaLib\\builder.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 1097,
                        "content": "key = (self.script_, language, self.cur_feature_name_)"
                    },
                    {
                        "line_number": 1106,
                        "content": "key = (self.script_, language)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "parser.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\fontTools\\feaLib\\parser.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1133,
                        "content": "key = self.cur_token_.lower()"
                    },
                    {
                        "line_number": 1160,
                        "content": "key = self.cur_token_.lower()"
                    },
                    {
                        "line_number": 1349,
                        "content": "key = self.cur_token_.lower()"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "variableScalar.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\fontTools\\feaLib\\variableScalar.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 71,
                        "content": "key = Location({ax.axisTag: ax.defaultValue for ax in self.axes})"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "classifyTools.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\fontTools\\misc\\classifyTools.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 77,
                        "content": "self._sets = sorted(self._sets, key=lambda s: (-len(s), sorted(s)))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "__init__.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\fontTools\\mtiLib\\__init__.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 172,
                        "content": "script.Script.LangSysRecord, key=lambda rec: rec.LangSysTag"
                    },
                    {
                        "line_number": 174,
                        "content": "self.ScriptRecord = sorted(records, key=lambda rec: rec.ScriptTag)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "builder.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\fontTools\\otlLib\\builder.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1361,
                        "content": "key = (glyph1, glyph2)"
                    },
                    {
                        "line_number": 2677,
                        "content": "result = sorted(self.classes_, key=lambda s: (len(s), s), reverse=True)"
                    },
                    {
                        "line_number": 2887,
                        "content": "axisValueRecords.sort(key=lambda avr: avr.AxisIndex)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "__init__.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\fontTools\\subset\\__init__.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 3472,
                        "content": "tags = sorted(font.keys(), key=lambda tag: tagOrder.get(tag, 0))"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "F__e_a_t.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\fontTools\\ttLib\\tables\\F__e_a_t.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 98,
                        "content": "v.settings.items(), key=lambda x: (-1, x[1]) if x[0] == v.default else x"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "F__e_a_t.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\fontTools\\ttLib\\tables\\F__e_a_t.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 98,
                        "content": "v.settings.items(), key=lambda x: (-1, x[1]) if x[0] == v.default else x"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "grUtils.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\fontTools\\ttLib\\tables\\grUtils.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 59,
                        "content": "g = _entries(sorted(attributes.items(), key=lambda x: int(x[0])), sameval)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "G__l_a_t.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\fontTools\\ttLib\\tables\\G__l_a_t.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 165,
                        "content": "self.attributes.items(), key=lambda x: ttFont.getGlyphID(x[0])"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "otTables.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\fontTools\\ttLib\\tables\\otTables.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 305,
                        "content": "for a in sorted(actions, key=lambda x: (-len(x), x)):"
                    },
                    {
                        "line_number": 494,
                        "content": "for action in sorted(actions, key=lambda x: (-len(x), x)):"
                    },
                    {
                        "line_number": 1310,
                        "content": "self.BaseGlyphRecord, key=lambda rec: font.getGlyphID(rec.BaseGlyph)"
                    },
                    {
                        "line_number": 1318,
                        "content": "self.BaseGlyphPaintRecord, key=lambda rec: font.getGlyphID(rec.BaseGlyph)"
                    },
                    {
                        "line_number": 1396,
                        "content": "key = clipBox.as_tuple()"
                    },
                    {
                        "line_number": 1450,
                        "content": "self.groups().items(), key=lambda item: min(item[0])"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "otTables.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\fontTools\\ttLib\\tables\\otTables.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 1140,
                        "content": "ligatures.items(), key=lambda item: (-len(item[0]), item[0])"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "S__i_l_f.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\fontTools\\ttLib\\tables\\S__i_l_f.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 929,
                        "content": "self.colMap.items(), key=lambda x: ttFont.getGlyphID(x[0])"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "TupleVariation.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\fontTools\\ttLib\\tables\\TupleVariation.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 636,
                        "content": "key=lambda item: (-item[1], item[0]),"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "_c_m_a_p.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\fontTools\\ttLib\\tables\\_c_m_a_p.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 1412,
                        "content": "uvList.sort(key=lambda item: (item[1] is not None, item[0], item[1]))"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "_n_a_m_e.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\fontTools\\ttLib\\tables\\_n_a_m_e.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 313,
                        "content": "key = (name.toUnicode(), name.platformID, name.platEncID, name.langID)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "_n_a_m_e.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\fontTools\\ttLib\\tables\\_n_a_m_e.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 313,
                        "content": "key = (name.toUnicode(), name.platformID, name.platEncID, name.langID)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "cff.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\fontTools\\varLib\\cff.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 438,
                        "content": "key = tuple(v is not None for v in all_cs)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "cff.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\fontTools\\varLib\\cff.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 438,
                        "content": "key = tuple(v is not None for v in all_cs)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "featureVars.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\fontTools\\varLib\\featureVars.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 161,
                        "content": "key=lambda d: tuple(sorted(d.items())),"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "featureVars.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\fontTools\\varLib\\featureVars.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 161,
                        "content": "key=lambda d: tuple(sorted(d.items())),"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "interpolatable.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\fontTools\\varLib\\interpolatable.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 458,
                        "content": "for loc in sorted(locs, key=lambda v: (len(v), v)):"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "merger.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\fontTools\\varLib\\merger.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 227,
                        "content": "if not all(sorted(vs, key=sortKey) == vs for vs in lst):"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "models.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\fontTools\\varLib\\models.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 276,
                        "content": "key = tuple(v is not None for v in items)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "models.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\fontTools\\varLib\\models.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 276,
                        "content": "key = tuple(v is not None for v in items)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "varStore.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\fontTools\\varLib\\varStore.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 64,
                        "content": "key = _getLocationKey(region)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "varStore.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\fontTools\\varLib\\varStore.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 620,
                        "content": "encodings.sort(key=_Encoding.width_sort_key)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "names.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\fontTools\\varLib\\instancer\\names.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 171,
                        "content": "key=lambda v: len(v.AxisValueRecord),"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "voltToFea.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\fontTools\\voltLib\\voltToFea.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 132,
                        "content": "for statement in sorted(groups, key=lambda x: Group(x)):"
                    },
                    {
                        "line_number": 194,
                        "content": "stags = sorted(scripts, key=lambda k: 0 if k == \"DFLT\" else 1)"
                    },
                    {
                        "line_number": 197,
                        "content": "ltags = sorted(scripts[stag], key=lambda k: 0 if k == \"dflt\" else 1)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "signer.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\itsdangerous\\signer.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 209,
                        "content": "key = self.derive_key()"
                    },
                    {
                        "line_number": 228,
                        "content": "key = self.derive_key(secret_key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "signer.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\itsdangerous\\signer.py",
                "vulnerability": "SHA-1",
                "lines": [
                    {
                        "line_number": 47,
                        "content": "default_digest_method: _t.Any = staticmethod(hashlib.sha1)"
                    },
                    {
                        "line_number": 87,
                        "content": "defaults to :func:`hashlib.sha1`. Note that the security of the"
                    },
                    {
                        "line_number": 106,
                        "content": "#: :func:`hashlib.sha1`, but can be changed to any :mod:`hashlib` or"
                    },
                    {
                        "line_number": 111,
                        "content": "default_digest_method: _t.Any = staticmethod(hashlib.sha1)"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collisions."
            },
            {
                "language": "Python",
                "filename": "bccache.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\jinja2\\bccache.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 175,
                        "content": "key = self.get_cache_key(name, filename)"
                    },
                    {
                        "line_number": 396,
                        "content": "key = self.prefix + bucket.key"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "lexer.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\jinja2\\lexer.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 144,
                        "content": "f\"({'|'.join(re.escape(x) for x in sorted(operators, key=lambda x: -len(x)))})\""
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "figure.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\matplotlib\\figure.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 107,
                        "content": "return max(self._axes, key=self._axes.__getitem__, default=None)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "mlab.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\matplotlib\\mlab.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 111,
                        "content": "return detrend(x, key=detrend_linear, axis=axis)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "texmanager.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\matplotlib\\texmanager.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 338,
                        "content": "key = cls._get_tex_source(tex, fontsize), dpi"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "texmanager.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\matplotlib\\texmanager.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 115,
                        "content": "return hashlib.md5(preambles.encode('utf-8')).hexdigest()"
                    },
                    {
                        "line_number": 179,
                        "content": "filehash = hashlib.md5(src.encode('utf-8')).hexdigest()"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "text.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\matplotlib\\text.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1989,
                        "content": "x, relposx = min(xpos, key=lambda v: abs(v[0] - x1))"
                    },
                    {
                        "line_number": 1990,
                        "content": "y, relposy = min(ypos, key=lambda v: abs(v[0] - y1))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "_fontconfig_pattern.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\matplotlib\\_fontconfig_pattern.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 117,
                        "content": "# are necessarily scalar) are given as key=value, skipping Nones."
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "__init__.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\matplotlib\\__init__.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 744,
                        "content": "elif key == \"backend\" and self is globals().get(\"rcParams\"):"
                    },
                    {
                        "line_number": 907,
                        "content": "dict(key=key, fname=fname, line_no=line_no,"
                    },
                    {
                        "line_number": 972,
                        "content": "key: [(rcsetup._auto_backend_sentinel if key == \"backend\" else"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "__init__.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\matplotlib\\__init__.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 744,
                        "content": "elif key == \"backend\" and self is globals().get(\"rcParams\"):"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "backend_svg.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\matplotlib\\backends\\backend_svg.py",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 499,
                        "content": "m = hashlib.sha256()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Python",
                "filename": "backend_webagg_core.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\matplotlib\\backends\\backend_webagg_core.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 79,
                        "content": "key = key[:key.index('k')] + value"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "backend_webagg_core.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\matplotlib\\backends\\backend_webagg_core.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 79,
                        "content": "key = key[:key.index('k')] + value"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "mathmpl.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\matplotlib\\sphinxext\\mathmpl.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 142,
                        "content": "hashlib.md5(f'{latex}{fontset}{fontsize}'.encode()).hexdigest()[-10:])"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "compare.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\matplotlib\\testing\\compare.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 334,
                        "content": "cache_stat, key=lambda path: cache_stat[path].st_atime,"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "compare.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\matplotlib\\testing\\compare.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 48,
                        "content": "md5 = hashlib.md5()"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "decorators.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\matplotlib\\testing\\decorators.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 160,
                        "content": "key=lambda manager: manager.num)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "decorators.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\matplotlib\\testing\\decorators.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 160,
                        "content": "key=lambda manager: manager.num)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_dviread.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\matplotlib\\tests\\test_dviread.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 16,
                        "content": "key = b'TeXfont%d' % n"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_mlab.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\matplotlib\\tests\\test_mlab.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 174,
                        "content": "mlab.detrend(input.T, key=\"constant\", axis=None), target.T)"
                    },
                    {
                        "line_number": 187,
                        "content": "self.allclose(mlab.detrend(input, key=\"default\", axis=1), target)"
                    },
                    {
                        "line_number": 240,
                        "content": "mlab.detrend(input.T, key=\"linear\", axis=0), target.T)"
                    },
                    {
                        "line_number": 244,
                        "content": "mlab.detrend(input, key=\"linear\", axis=1), target)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_mlab.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\matplotlib\\tests\\test_mlab.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 174,
                        "content": "mlab.detrend(input.T, key=\"constant\", axis=None), target.T)"
                    },
                    {
                        "line_number": 188,
                        "content": "self.allclose(mlab.detrend(input.T, key=\"mean\", axis=0), target.T)"
                    },
                    {
                        "line_number": 190,
                        "content": "mlab.detrend(input.T, key=mlab.detrend_mean, axis=0), target.T)"
                    },
                    {
                        "line_number": 217,
                        "content": "assert mlab.detrend(5.5, key=mlab.detrend_linear) == 0."
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "art3d.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\mpl_toolkits\\mplot3d\\art3d.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1010,
                        "content": "key=lambda x: x[0], reverse=True)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "art3d.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\mpl_toolkits\\mplot3d\\art3d.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 1010,
                        "content": "key=lambda x: x[0], reverse=True)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_array_object.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\numpy\\array_api\\tests\\test_array_object.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 373,
                        "content": "key = ones((0, 0), dtype=bool_)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "einsumfunc.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\numpy\\core\\einsumfunc.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 204,
                        "content": "path = min(full_results, key=lambda x: x[0])[1]"
                    },
                    {
                        "line_number": 212,
                        "content": "path = min(full_results, key=lambda x: x[0])[1]"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "getlimits.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\numpy\\core\\getlimits.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 675,
                        "content": "self.key = \"%s%d\" % (self.kind, self.bits)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "numerictypes.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\numpy\\core\\numerictypes.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 520,
                        "content": "ScalarType += sorted(_concrete_types, key=_scalar_type_key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "system_info.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\numpy\\distutils\\system_info.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1716,
                        "content": "key = (tuple(libraries), tuple(library_dirs))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "system_info.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\numpy\\distutils\\system_info.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 1716,
                        "content": "key = (tuple(libraries), tuple(library_dirs))"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "gnu.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\numpy\\distutils\\fcompiler\\gnu.py",
                "vulnerability": "SHA-1",
                "lines": [
                    {
                        "line_number": 402,
                        "content": "h = hashlib.sha1()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collisions."
            },
            {
                "language": "Python",
                "filename": "test_system_info.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\numpy\\distutils\\tests\\test_system_info.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 211,
                        "content": "assert_equal(tsi.get_runtime_lib_dirs(key='rpath'), [self._dir2])"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "cb_rules.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\numpy\\f2py\\cb_rules.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 60,
                        "content": "char *key = \"__f2py_cb_#name#\";"
                    },
                    {
                        "line_number": 65,
                        "content": "char *key = \"__f2py_cb_#name#\";"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "crackfortran.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\numpy\\f2py\\crackfortran.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 3448,
                        "content": "elif key == 'callstatement':"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "npyio.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\numpy\\lib\\npyio.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 2090,
                        "content": "key = names.index(key)"
                    },
                    {
                        "line_number": 2141,
                        "content": "key = names.index(key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "recfunctions.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\numpy\\lib\\recfunctions.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1323,
                        "content": "a, key=None, ignoremask=None, return_index=None):"
                    },
                    {
                        "line_number": 1328,
                        "content": "def find_duplicates(a, key=None, ignoremask=True, return_index=False):"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_direct.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\numpy\\random\\tests\\test_direct.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 333,
                        "content": "key=state['state']['key'])"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_generator_mt19937.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\numpy\\random\\tests\\test_generator_mt19937.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 2601,
                        "content": "key = mt19937.state[\"state\"][\"key\"]"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_generator_mt19937.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\numpy\\random\\tests\\test_generator_mt19937.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 2601,
                        "content": "key = mt19937.state[\"state\"][\"key\"]"
                    },
                    {
                        "line_number": 2609,
                        "content": "key = jumped.state[\"state\"][\"key\"]"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_generator_mt19937.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\numpy\\random\\tests\\test_generator_mt19937.py",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 512,
                        "content": "res = hashlib.sha256(val).hexdigest()"
                    },
                    {
                        "line_number": 519,
                        "content": "res = hashlib.sha256(val).hexdigest()"
                    },
                    {
                        "line_number": 927,
                        "content": "res = hashlib.sha256(actual.view(np.int8)).hexdigest()"
                    },
                    {
                        "line_number": 2604,
                        "content": "sha256 = hashlib.sha256(key)"
                    },
                    {
                        "line_number": 2612,
                        "content": "sha256 = hashlib.sha256(key)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Python",
                "filename": "test_random.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\numpy\\random\\tests\\test_random.py",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 238,
                        "content": "res = hashlib.sha256(val.view(np.int8)).hexdigest()"
                    },
                    {
                        "line_number": 244,
                        "content": "res = hashlib.sha256(val).hexdigest()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Python",
                "filename": "test_randomstate.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\numpy\\random\\tests\\test_randomstate.py",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 360,
                        "content": "res = hashlib.sha256(val.view(np.int8)).hexdigest()"
                    },
                    {
                        "line_number": 366,
                        "content": "res = hashlib.sha256(val).hexdigest()"
                    },
                    {
                        "line_number": 2029,
                        "content": "res = hashlib.sha256(val.view(np.int8)).hexdigest()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Python",
                "filename": "test_typing.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\numpy\\typing\\tests\\test_typing.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 225,
                        "content": "key = (np_scalar.dtype.kind, np_scalar.dtype.itemsize)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_typing.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\numpy\\typing\\tests\\test_typing.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 225,
                        "content": "key = (np_scalar.dtype.kind, np_scalar.dtype.itemsize)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "frame.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\pandas\\core\\frame.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 6943,
                        "content": ">>> df.sort_index(key=lambda x: x.str.lower())"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "frame.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\pandas\\core\\frame.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 3805,
                        "content": "key = check_bool_indexer(self.index, key)"
                    },
                    {
                        "line_number": 3967,
                        "content": "key = check_bool_indexer(self.index, key)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "generic.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\pandas\\core\\generic.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 554,
                        "content": "key = f\"{prefix}level_{i}\""
                    },
                    {
                        "line_number": 4968,
                        "content": ">>> df.sort_values(by='col4', key=lambda col: col.str.lower())"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "indexing.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\pandas\\core\\indexing.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 799,
                        "content": "key = key[column_axis]"
                    },
                    {
                        "line_number": 841,
                        "content": "key = tuple(list(x) if is_iterator(x) else x for x in key)"
                    },
                    {
                        "line_number": 1093,
                        "content": "key = tuple(list(x) if is_iterator(x) else x for x in key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "indexing.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\pandas\\core\\indexing.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 698,
                        "content": "key = _tupleize_axis_indexer(self.ndim, self.axis, key)"
                    },
                    {
                        "line_number": 1683,
                        "content": "key = _tupleize_axis_indexer(self.ndim, self.axis, key)"
                    },
                    {
                        "line_number": 2381,
                        "content": "key = _tuplify(self.ndim, key)"
                    },
                    {
                        "line_number": 2382,
                        "content": "key = list(self._convert_key(key))"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "resample.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\pandas\\core\\resample.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 460,
                        "content": "return self._resampler_for_grouping(groupby=groupby, key=key, parent=self)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "series.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\pandas\\core\\series.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1030,
                        "content": "key = np.asarray(key, dtype=bool)"
                    },
                    {
                        "line_number": 1191,
                        "content": "key = np.asarray(key, dtype=bool)"
                    },
                    {
                        "line_number": 3577,
                        "content": ">>> s.sort_values(key=lambda x: x.str.lower())"
                    },
                    {
                        "line_number": 3828,
                        "content": ">>> s.sort_index(key=lambda x : x.str.lower())"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "series.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\pandas\\core\\series.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 1029,
                        "content": "key = check_bool_indexer(self.index, key)"
                    },
                    {
                        "line_number": 1190,
                        "content": "key = check_bool_indexer(self.index, key)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "datetimelike.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\pandas\\core\\arrays\\datetimelike.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 390,
                        "content": "key = check_array_indexer(self, key)  # maybe ndarray[bool] -> slice"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "interval.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\pandas\\core\\arrays\\interval.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 715,
                        "content": "key = check_array_indexer(self, key)"
                    },
                    {
                        "line_number": 735,
                        "content": "key = check_array_indexer(self, key)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "masked.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\pandas\\core\\arrays\\masked.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 234,
                        "content": "key = check_array_indexer(self, key)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "string_.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\pandas\\core\\arrays\\string_.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 404,
                        "content": "key = check_array_indexer(self, key)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "_mixins.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\pandas\\core\\arrays\\_mixins.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 248,
                        "content": "key = check_array_indexer(self, key)"
                    },
                    {
                        "line_number": 280,
                        "content": "key = check_array_indexer(self, key)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "array.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\pandas\\core\\arrays\\arrow\\array.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1401,
                        "content": "key = np.asarray(key, dtype=np.bool_)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "array.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\pandas\\core\\arrays\\arrow\\array.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 1372,
                        "content": "key = check_array_indexer(self, key)"
                    },
                    {
                        "line_number": 1401,
                        "content": "key = np.asarray(key, dtype=np.bool_)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "array.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\pandas\\core\\arrays\\sparse\\array.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 994,
                        "content": "key = cast(np.ndarray, key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "array.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\pandas\\core\\arrays\\sparse\\array.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 990,
                        "content": "key = check_array_indexer(self, key)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "generic.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\pandas\\core\\groupby\\generic.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 315,
                        "content": "key = base.OutputKey(label=name, position=idx)"
                    },
                    {
                        "line_number": 1346,
                        "content": "key = base.OutputKey(label=name, position=idx)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "grouper.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\pandas\\core\\groupby\\grouper.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 166,
                        "content": ">>> df.groupby(pd.Grouper(key=\"Publish date\", freq=\"1W\")).mean()"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "grouper.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\pandas\\core\\groupby\\grouper.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 166,
                        "content": ">>> df.groupby(pd.Grouper(key=\"Publish date\", freq=\"1W\")).mean()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "base.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\pandas\\core\\indexes\\base.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 4583,
                        "content": "ldrop_names = sorted(self_names - overlap, key=self_names_order)"
                    },
                    {
                        "line_number": 5194,
                        "content": "key = np.asarray(key, dtype=bool)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "base.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\pandas\\core\\indexes\\base.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 5174,
                        "content": "key = com.cast_scalar_indexer(key)"
                    },
                    {
                        "line_number": 5192,
                        "content": "key = key.to_numpy(dtype=bool, na_value=False)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "interval.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\pandas\\core\\indexes\\interval.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 526,
                        "content": "key = ensure_index(key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "multi.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\pandas\\core\\indexes\\multi.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 2022,
                        "content": "key = np.asarray(key, dtype=bool)"
                    },
                    {
                        "line_number": 2845,
                        "content": "# e.g. test_groupby_example key = ((0, 0, 1, 2), \"new_col\")"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "multi.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\pandas\\core\\indexes\\multi.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 2008,
                        "content": "key = com.cast_scalar_indexer(key)"
                    },
                    {
                        "line_number": 2845,
                        "content": "# e.g. test_groupby_example key = ((0, 0, 1, 2), \"new_col\")"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "merge.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\pandas\\core\\reshape\\merge.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 2338,
                        "content": "Left (resp. right if called with `key='right'`) labels, as enumerated type."
                    },
                    {
                        "line_number": 2340,
                        "content": "Right (resp. left if called with `key='right'`) labels, as enumerated type."
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "stata.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\pandas\\io\\stata.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 871,
                        "content": "key = struct.unpack(\"<f\", float32_base)[0]"
                    },
                    {
                        "line_number": 881,
                        "content": "key = struct.unpack(\"<d\", float64_base)[0]"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "stata.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\pandas\\io\\stata.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 3083,
                        "content": "key = gso_table.get(val, None)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "_odswriter.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\pandas\\io\\excel\\_odswriter.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 129,
                        "content": "for cell in sorted(cells, key=lambda cell: (cell.row, cell.col)):"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "printing.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\pandas\\io\\formats\\printing.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 153,
                        "content": "key=pprint_thing(k, _nest_lvl + 1, max_seq_items=max_seq_items, **kwds),"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "_misc.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\pandas\\plotting\\_misc.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 571,
                        "content": "key = self._get_canonical_key(key)"
                    },
                    {
                        "line_number": 577,
                        "content": "key = self._get_canonical_key(key)"
                    },
                    {
                        "line_number": 581,
                        "content": "key = self._get_canonical_key(key)"
                    },
                    {
                        "line_number": 587,
                        "content": "key = self._get_canonical_key(key)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_algos.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\pandas\\tests\\test_algos.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 204,
                        "content": "key = np.array([1, 2, 1, np.nan], dtype=\"O\")"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_downstream.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\pandas\\tests\\test_downstream.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 116,
                        "content": "key = cftime.DatetimeGregorian(2000, 1, 1)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_numpy.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\pandas\\tests\\extension\\test_numpy.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 439,
                        "content": "key = full_indexer(df)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "setitem.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\pandas\\tests\\extension\\base\\setitem.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 340,
                        "content": "key = full_indexer(df)"
                    },
                    {
                        "line_number": 366,
                        "content": "key = full_indexer(ser)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "array.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\pandas\\tests\\extension\\decimal\\array.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 198,
                        "content": "key = check_array_indexer(self, key)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_stack_unstack.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\pandas\\tests\\frame\\test_stack_unstack.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 988,
                        "content": "key = r[\"1st\"], (col, r[\"2nd\"], r[\"3rd\"])"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_indexing.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\pandas\\tests\\frame\\indexing\\test_indexing.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 885,
                        "content": "key = (f.index[slice(None, 2)], [\"A\", \"B\"])"
                    },
                    {
                        "line_number": 897,
                        "content": "key = (f.index[slice(None, 2)], [\"A\", \"B\"])"
                    },
                    {
                        "line_number": 908,
                        "content": "key = (f.index[slice(-2, None)], [\"A\", \"B\"])"
                    },
                    {
                        "line_number": 917,
                        "content": "key = (f.index[slice(-2, None)], [\"A\", \"B\"])"
                    },
                    {
                        "line_number": 1673,
                        "content": "key = (df.index[2], df.columns[0])"
                    },
                    {
                        "line_number": 1725,
                        "content": "key = (slice(2, 4), 0)"
                    },
                    {
                        "line_number": 1754,
                        "content": "key = (slice(2, 4), 0)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_indexing.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\pandas\\tests\\frame\\indexing\\test_indexing.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 908,
                        "content": "key = (f.index[slice(-2, None)], [\"A\", \"B\"])"
                    },
                    {
                        "line_number": 917,
                        "content": "key = (f.index[slice(-2, None)], [\"A\", \"B\"])"
                    },
                    {
                        "line_number": 1673,
                        "content": "key = (df.index[2], df.columns[0])"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_sort_index.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\pandas\\tests\\frame\\methods\\test_sort_index.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 847,
                        "content": "result = df.sort_index(key=lambda x: x.str.lower())"
                    },
                    {
                        "line_number": 851,
                        "content": "result = df.sort_index(key=lambda x: x.str.lower(), ascending=False)"
                    },
                    {
                        "line_number": 874,
                        "content": "result = df.sort_index(level=\"a\", key=lambda x: x.str.lower())"
                    },
                    {
                        "line_number": 883,
                        "content": "key=lambda x: x.str.lower() if x.name in [\"a\", \"c\"] else -x,"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_sort_index.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\pandas\\tests\\frame\\methods\\test_sort_index.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 883,
                        "content": "key=lambda x: x.str.lower() if x.name in [\"a\", \"c\"] else -x,"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_sort_values.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\pandas\\tests\\frame\\methods\\test_sort_values.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 749,
                        "content": "result = df.sort_values([0, 1], key=lambda col: col.str.lower())"
                    },
                    {
                        "line_number": 753,
                        "content": "[0, 1], key=lambda col: col.str.lower(), ascending=False"
                    },
                    {
                        "line_number": 755,
                        "content": "expected = df.sort_values(1, key=lambda col: col.str.lower(), ascending=False)"
                    },
                    {
                        "line_number": 772,
                        "content": "result = df.sort_values(0, key=lambda col: col.str.lower())"
                    },
                    {
                        "line_number": 776,
                        "content": "result = df.sort_values(1, key=lambda col: -col)"
                    },
                    {
                        "line_number": 783,
                        "content": "result = df.sort_values(0, key=lambda col: col.str.lower(), axis=1)"
                    },
                    {
                        "line_number": 787,
                        "content": "result = df.sort_values(1, key=lambda col: -col, axis=1)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_sort_values.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\pandas\\tests\\frame\\methods\\test_sort_values.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 688,
                        "content": "result = df.sort_values(0, key=lambda x: -x, ascending=False)"
                    },
                    {
                        "line_number": 708,
                        "content": "result = df.sort_values(by=[\"a\", \"b\"], key=lambda x: -x, ascending=False)"
                    },
                    {
                        "line_number": 787,
                        "content": "result = df.sort_values(1, key=lambda col: -col, axis=1)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_categorical.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\pandas\\tests\\groupby\\test_categorical.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 964,
                        "content": "exp = res[sorted(res.index, key=lambda x: float(x.split()[0]))]"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_groupby.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\pandas\\tests\\groupby\\test_groupby.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 36,
                        "content": "expected = \"Grouper(key='A', level='B', axis=0, sort=False, dropna=True)\""
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_groupby.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\pandas\\tests\\groupby\\test_groupby.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 36,
                        "content": "expected = \"Grouper(key='A', level='B', axis=0, sort=False, dropna=True)\""
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_grouping.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\pandas\\tests\\groupby\\test_grouping.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 644,
                        "content": "grouper = Grouper(key=\"date\", freq=\"AS\")"
                    },
                    {
                        "line_number": 771,
                        "content": "key = list(g.groups)[0]"
                    },
                    {
                        "line_number": 780,
                        "content": "key = list(g.groups)[0]"
                    },
                    {
                        "line_number": 1039,
                        "content": "gb = df.groupby([Grouper(level=\"a\"), Grouper(key=\"b\")], as_index=False)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_grouping.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\pandas\\tests\\groupby\\test_grouping.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 223,
                        "content": "# Grouper(key=...) may be passed in a list"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_min_max.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\pandas\\tests\\groupby\\test_min_max.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 84,
                        "content": "key = np.array([1, 1], dtype=np.int64)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_nth.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\pandas\\tests\\groupby\\test_nth.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 281,
                        "content": "key = [df.index.year, df.index.month]"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_nth.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\pandas\\tests\\groupby\\test_nth.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 281,
                        "content": "key = [df.index.year, df.index.month]"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_quantile.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\pandas\\tests\\groupby\\test_quantile.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 76,
                        "content": "key = np.array([0, 0, 1, 1, 1], dtype=np.int64)"
                    },
                    {
                        "line_number": 86,
                        "content": "key = np.array([0, 0, 1, 1], dtype=np.int64)"
                    },
                    {
                        "line_number": 113,
                        "content": "key = np.array([1, 0, 1], dtype=np.int64)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_quantile.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\pandas\\tests\\groupby\\test_quantile.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 76,
                        "content": "key = np.array([0, 0, 1, 1, 1], dtype=np.int64)"
                    },
                    {
                        "line_number": 86,
                        "content": "key = np.array([0, 0, 1, 1], dtype=np.int64)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_rank.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\pandas\\tests\\groupby\\test_rank.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 129,
                        "content": "key = np.repeat(grps, len(vals))"
                    },
                    {
                        "line_number": 184,
                        "content": "key = np.repeat(grps, len(vals))"
                    },
                    {
                        "line_number": 435,
                        "content": "key = np.repeat(grps, len(vals))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_rank.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\pandas\\tests\\groupby\\test_rank.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 129,
                        "content": "key = np.repeat(grps, len(vals))"
                    },
                    {
                        "line_number": 184,
                        "content": "key = np.repeat(grps, len(vals))"
                    },
                    {
                        "line_number": 435,
                        "content": "key = np.repeat(grps, len(vals))"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_timegrouper.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\pandas\\tests\\groupby\\test_timegrouper.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 69,
                        "content": "tdg = Grouper(key=\"Date\", freq=\"5D\")"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_timegrouper.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\pandas\\tests\\groupby\\test_timegrouper.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 314,
                        "content": "[Grouper(freq=\"1M\", key=\"Date\", level=\"Date\"), \"Buyer\"]"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_aggregate.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\pandas\\tests\\groupby\\aggregate\\test_aggregate.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1153,
                        "content": "# check agg(key=(col, aggfunc)) case"
                    },
                    {
                        "line_number": 1190,
                        "content": "# check agg(key=(col, aggfunc)) case"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_transform.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\pandas\\tests\\groupby\\transform\\test_transform.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 67,
                        "content": "key = [\"one\", \"two\", \"one\", \"two\", \"one\"]"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_transform.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\pandas\\tests\\groupby\\transform\\test_transform.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 67,
                        "content": "key = [\"one\", \"two\", \"one\", \"two\", \"one\"]"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_any_index.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\pandas\\tests\\indexes\\test_any_index.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 118,
                        "content": "key = np.array([0, 1], dtype=np.intp)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_indexing.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\pandas\\tests\\indexes\\test_indexing.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 278,
                        "content": "key = slice(None, None, \"foo\")"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_indexing.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\pandas\\tests\\indexes\\datetimes\\test_indexing.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 389,
                        "content": "key = idx[1].as_unit(\"ms\")"
                    },
                    {
                        "line_number": 397,
                        "content": "key = dta[0].as_unit(\"ns\") + pd.Timedelta(1)"
                    },
                    {
                        "line_number": 424,
                        "content": "key = time(15, 11, 30)"
                    },
                    {
                        "line_number": 631,
                        "content": "key = box(year=2000, month=1, day=7)"
                    },
                    {
                        "line_number": 650,
                        "content": "key = box(year=year, month=1, day=7)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_indexing.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\pandas\\tests\\indexes\\datetimes\\test_indexing.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 397,
                        "content": "key = dta[0].as_unit(\"ns\") + pd.Timedelta(1)"
                    },
                    {
                        "line_number": 631,
                        "content": "key = box(year=2000, month=1, day=7)"
                    },
                    {
                        "line_number": 650,
                        "content": "key = box(year=year, month=1, day=7)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_partial_slicing.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\pandas\\tests\\indexes\\datetimes\\test_partial_slicing.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 73,
                        "content": "key = \"2015-5-14 00:00:00\""
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_interval.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\pandas\\tests\\indexes\\interval\\test_interval.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 426,
                        "content": "key = make_key(breaks)"
                    },
                    {
                        "line_number": 447,
                        "content": "key = make_key(breaks)"
                    },
                    {
                        "line_number": 479,
                        "content": "key = make_key(breaks2)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_indexing.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\pandas\\tests\\indexes\\multi\\test_indexing.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 752,
                        "content": "key = ((2, 3, 4), \"foo\")"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_partial_indexing.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\pandas\\tests\\indexes\\multi\\test_partial_indexing.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 51,
                        "content": "key = (\"2016-01-01\", \"a\")"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_indexing.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\pandas\\tests\\indexes\\period\\test_indexing.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 763,
                        "content": "key = \"2017-09-01 00:00:01\""
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_range.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\pandas\\tests\\indexes\\ranges\\test_range.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 609,
                        "content": "result = values.sort_values(key=lambda x: x.map(sort_order))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_indexing.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\pandas\\tests\\indexes\\timedeltas\\test_indexing.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 77,
                        "content": "key = idx[1].as_unit(\"ms\")"
                    },
                    {
                        "line_number": 84,
                        "content": "key = tdi[0].as_unit(\"ns\") + Timedelta(1)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_indexing.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\pandas\\tests\\indexes\\timedeltas\\test_indexing.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 84,
                        "content": "key = tdi[0].as_unit(\"ns\") + Timedelta(1)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_coercion.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\pandas\\tests\\indexing\\test_coercion.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 757,
                        "content": "key = f\"datetime64[ns, {tz}]\""
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_datetime.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\pandas\\tests\\indexing\\test_datetime.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 23,
                        "content": "key = \"2013-01-01 00:00:00.000000050+0000\""
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_loc.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\pandas\\tests\\indexing\\test_loc.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1652,
                        "content": "key = 0 if (indexer is tm.iloc or len(obj) == 0) else obj.index[0]"
                    },
                    {
                        "line_number": 1676,
                        "content": "key = 0 if (indexer is tm.iloc or len(obj) == 0) else obj.index[0]"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_loc.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\pandas\\tests\\indexing\\test_loc.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 1652,
                        "content": "key = 0 if (indexer is tm.iloc or len(obj) == 0) else obj.index[0]"
                    },
                    {
                        "line_number": 1676,
                        "content": "key = 0 if (indexer is tm.iloc or len(obj) == 0) else obj.index[0]"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_sorted.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\pandas\\tests\\indexing\\multiindex\\test_sorted.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 71,
                        "content": "key=lambda x: x.map(lambda entry: entry[2])"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_compat.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\pandas\\tests\\io\\pytables\\test_compat.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 59,
                        "content": "result = pd.read_hdf(path, key=objname, start=1)"
                    },
                    {
                        "line_number": 73,
                        "content": "result = pd.read_hdf(path, key=objname, start=1, stop=2)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_compat.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\pandas\\tests\\io\\pytables\\test_compat.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 73,
                        "content": "result = pd.read_hdf(path, key=objname, start=1, stop=2)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_store.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\pandas\\tests\\io\\pytables\\test_store.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 61,
                        "content": "def checksum(filename, hash_factory=hashlib.md5, chunk_num_blocks=128):"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "test_series.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\pandas\\tests\\plotting\\test_series.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 105,
                        "content": "key = \"axes.prop_cycle\""
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_time_grouper.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\pandas\\tests\\resample\\test_time_grouper.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 270,
                        "content": "\"TimeGrouper(key='A', freq=<Hour>, axis=0, sort=True, dropna=True, \""
                    },
                    {
                        "line_number": 278,
                        "content": "\"TimeGrouper(key='A', freq=<Hour>, axis=0, sort=True, dropna=True, \""
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_pivot.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\pandas\\tests\\reshape\\test_pivot.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1498,
                        "content": "index=[Grouper(freq=\"M\", key=\"Date\"), Grouper(freq=\"M\", key=\"PayDay\")],"
                    },
                    {
                        "line_number": 1508,
                        "content": "columns=[Grouper(freq=\"M\", key=\"Date\"), Grouper(freq=\"M\", key=\"PayDay\")],"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_pivot.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\pandas\\tests\\reshape\\test_pivot.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 1498,
                        "content": "index=[Grouper(freq=\"M\", key=\"Date\"), Grouper(freq=\"M\", key=\"PayDay\")],"
                    },
                    {
                        "line_number": 1508,
                        "content": "columns=[Grouper(freq=\"M\", key=\"Date\"), Grouper(freq=\"M\", key=\"PayDay\")],"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_merge.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\pandas\\tests\\reshape\\merge\\test_merge.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 363,
                        "content": "key = np.array([1, 1, 2, 3, 4, 5], dtype=\"int64\")"
                    },
                    {
                        "line_number": 384,
                        "content": "key = np.array([0, 1, 1, 2, 2, 3], dtype=np.int64)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_merge.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\pandas\\tests\\reshape\\merge\\test_merge.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 363,
                        "content": "key = np.array([1, 1, 2, 3, 4, 5], dtype=\"int64\")"
                    },
                    {
                        "line_number": 384,
                        "content": "key = np.array([0, 1, 1, 2, 2, 3], dtype=np.int64)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_datetime.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\pandas\\tests\\series\\indexing\\test_datetime.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 300,
                        "content": "key = datetime(2000, 1, 6)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_getitem.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\pandas\\tests\\series\\indexing\\test_getitem.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 192,
                        "content": "key = \"6 days, 23:11:12\""
                    },
                    {
                        "line_number": 468,
                        "content": "key = np.array([True, True, False, False])"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_setitem.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\pandas\\tests\\series\\indexing\\test_setitem.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 472,
                        "content": "key = Timestamp(\"2012-01-01\")"
                    },
                    {
                        "line_number": 481,
                        "content": "key = Timestamp(\"2012-01-01\")"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_sort_index.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\pandas\\tests\\series\\methods\\test_sort_index.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 229,
                        "content": "result = s.sort_index(level=\"C\", key=lambda x: x)  # nothing happens"
                    },
                    {
                        "line_number": 240,
                        "content": "result = s.sort_index(level=[\"A\", \"C\"], key=lambda x: x)  # nothing happens"
                    },
                    {
                        "line_number": 250,
                        "content": "result = series.sort_index(key=lambda x: x.str.lower())"
                    },
                    {
                        "line_number": 254,
                        "content": "result = series.sort_index(key=lambda x: x.str.lower(), ascending=False)"
                    },
                    {
                        "line_number": 315,
                        "content": "result = s.sort_index(key=lambda x: x.year)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_sort_index.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\pandas\\tests\\series\\methods\\test_sort_index.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 229,
                        "content": "result = s.sort_index(level=\"C\", key=lambda x: x)  # nothing happens"
                    },
                    {
                        "line_number": 240,
                        "content": "result = s.sort_index(level=[\"A\", \"C\"], key=lambda x: x)  # nothing happens"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_sort_values.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\pandas\\tests\\series\\methods\\test_sort_values.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 229,
                        "content": "result = series.sort_values(axis=0, key=lambda x: x.str.lower())"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_sort_values.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\pandas\\tests\\series\\methods\\test_sort_values.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 244,
                        "content": "result = series.sort_values(axis=0, key=lambda x: -x, ascending=False)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "frequencies.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\pandas\\tseries\\frequencies.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 82,
                        "content": "key = f\"{_prefix}-{_m}\""
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "_decorators.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\pandas\\util\\_decorators.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 313,
                        "content": "new_params.sort(key=lambda p: p.kind)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "config.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\pandas\\_config\\config.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 129,
                        "content": "key = _translate_key(key)"
                    },
                    {
                        "line_number": 135,
                        "content": "key = _get_single_key(pat, silent)"
                    },
                    {
                        "line_number": 156,
                        "content": "key = _get_single_key(k, silent)"
                    },
                    {
                        "line_number": 205,
                        "content": "key = _get_single_key(pat, silent=True)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "config.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\pandas\\_config\\config.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 523,
                        "content": "key=key, defval=defval, doc=doc, validator=validator, cb=cb"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "IcoImagePlugin.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\PIL\\IcoImagePlugin.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 175,
                        "content": "self.entry = sorted(self.entry, key=lambda x: x[\"color_depth\"])"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "Image.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\PIL\\Image.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 2603,
                        "content": "x / aspect, key=lambda n: 0 if n == 0 else abs(aspect - x / n)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "Image.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\PIL\\Image.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 2600,
                        "content": "x = round_aspect(y * aspect, key=lambda n: abs(aspect - n / y))"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "PngImagePlugin.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\PIL\\PngImagePlugin.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 297,
                        "content": "key = key.encode(\"latin-1\", \"strict\")"
                    },
                    {
                        "line_number": 333,
                        "content": "key = key.encode(\"latin-1\", \"strict\")"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "__init__.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\pkg_resources\\__init__.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 2661,
                        "content": "self._key = key = self.project_name.lower()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "appdirs.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\pkg_resources\\_vendor\\appdirs.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 471,
                        "content": "key = _winreg.OpenKey("
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "more.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\pkg_resources\\_vendor\\more_itertools\\more.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 426,
                        "content": ">>> key = lambda s: int(s)  # Sort by numeric value, not by string"
                    },
                    {
                        "line_number": 968,
                        "content": ">>> key = lambda x: x % 10  # Bucket by last digit"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "more.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\pkg_resources\\_vendor\\more_itertools\\more.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 426,
                        "content": ">>> key = lambda s: int(s)  # Sort by numeric value, not by string"
                    },
                    {
                        "line_number": 970,
                        "content": ">>> s = bucket(it, key=key, validator=validator)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "recipes.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\pkg_resources\\_vendor\\more_itertools\\recipes.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 403,
                        "content": "``key=frozenset``. For ``dict`` objects,"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "core.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\pkg_resources\\_vendor\\pyparsing\\core.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 4017,
                        "content": "fatals.sort(key=lambda e: -e.loc)"
                    },
                    {
                        "line_number": 4316,
                        "content": "fatals.sort(key=lambda e: -e.loc)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "core.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\pkg_resources\\_vendor\\pyparsing\\core.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 4019,
                        "content": "fatals.sort(key=lambda e: (-e.loc, -len(str(e.parserElement))))"
                    },
                    {
                        "line_number": 4318,
                        "content": "fatals.sort(key=lambda e: (-e.loc, -len(str(e.parserElement))))"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "sysfont.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\pygame\\sysfont.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 70,
                        "content": "key = _winreg.OpenKey(domain, font_dir)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "sysfont.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\pygame\\sysfont.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 70,
                        "content": "key = _winreg.OpenKey(domain, font_dir)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "__init__.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\pygame\\__init__.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 148,
                        "content": "key = MissingModule(\"key\", urgent=1)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "midi.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\pygame\\examples\\midi.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 816,
                        "content": "key = self._keys[note]"
                    },
                    {
                        "line_number": 834,
                        "content": "key = self._keys[note]"
                    },
                    {
                        "line_number": 840,
                        "content": "key = self._keys[note]"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "midi.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\pygame\\examples\\midi.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 776,
                        "content": "key = self.WhiteKey(ident, (x, y), prev_white_key)"
                    },
                    {
                        "line_number": 778,
                        "content": "key = self.WhiteKeyLeft(ident, (x, y), prev_white_key)"
                    },
                    {
                        "line_number": 781,
                        "content": "key = self.WhiteKeyRight(ident, (x, y), prev_white_key)"
                    },
                    {
                        "line_number": 788,
                        "content": "key = self.BlackKey(ident, (x - black_offset, y), prev_white_key)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "textinput.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\pygame\\examples\\textinput.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 82,
                        "content": "if event.key == pg.K_BACKSPACE:"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "event_test.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\pygame\\tests\\event_test.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 411,
                        "content": "pygame.event.Event(pygame.KEYDOWN, key=pygame.K_y, mod=activemodkeys),"
                    },
                    {
                        "line_number": 414,
                        "content": "pygame.event.Event(pygame.KEYDOWN, key=pygame.K_m, mod=None, window=None),"
                    },
                    {
                        "line_number": 416,
                        "content": "pygame.KEYDOWN, key=pygame.K_e, mod=activemodkeys, unicode=\"e\""
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "event_test.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\pygame\\tests\\event_test.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 413,
                        "content": "pygame.event.Event(pygame.KEYDOWN, key=pygame.K_a, unicode=None),"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "surface_test.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\pygame\\tests\\surface_test.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1189,
                        "content": "#             key = ((dest_r, dest_b, dest_a), (src_r, src_b, src_a))"
                    },
                    {
                        "line_number": 1280,
                        "content": "key = ((dst_r, dst_b, dst_a), (src_r, src_b, src_a))"
                    },
                    {
                        "line_number": 1300,
                        "content": "#             key = ((dest_r, dest_b, dest_a), (src_r, src_b, src_a))"
                    },
                    {
                        "line_number": 1391,
                        "content": "key = ((dst_r, dst_b, dst_a), (src_r, src_b, src_a))"
                    },
                    {
                        "line_number": 1489,
                        "content": "key = ((dst_r, dst_b, dst_a), (src_r, src_b, src_a))"
                    },
                    {
                        "line_number": 1591,
                        "content": "key = ((dst_r, dst_b, dst_a), (src_r, src_b, src_a))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "surface_test.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\pygame\\tests\\surface_test.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 1189,
                        "content": "#             key = ((dest_r, dest_b, dest_a), (src_r, src_b, src_a))"
                    },
                    {
                        "line_number": 1300,
                        "content": "#             key = ((dest_r, dest_b, dest_a), (src_r, src_b, src_a))"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "png.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\pygame\\tests\\test_utils\\png.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 2721,
                        "content": "d = hashlib.md5(seqtobytes(pixel)).digest()"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "test_machinery.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\pygame\\tests\\test_utils\\test_machinery.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 58,
                        "content": "key = (parent_class, meth.__name__)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "lexer.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\pygments\\lexer.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 940,
                        "content": "key=lambda x: x[self._prof_sort_index],"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "sphinxext.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\pygments\\sphinxext.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 104,
                        "content": "for classname, data in sorted(LEXERS.items(), key=lambda x: x[1][1].lower()):"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "img.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\pygments\\formatters\\img.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 182,
                        "content": "key = _winreg.OpenKey(*keyname)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "img.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\pygments\\formatters\\img.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 182,
                        "content": "key = _winreg.OpenKey(*keyname)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "lilypond.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\pygments\\lexers\\lilypond.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 193,
                        "content": "# (myAlist.my-key.my-nested-key = \\markup \\spam \\eggs)."
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "lisp.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\pygments\\lexers\\lisp.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1056,
                        "content": "'member-name-key-hash-code', 'member-name-key=?', 'member-name-key?',"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "core.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\pyparsing\\core.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 4191,
                        "content": "fatals.sort(key=lambda e: -e.loc)"
                    },
                    {
                        "line_number": 4507,
                        "content": "fatals.sort(key=lambda e: -e.loc)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "core.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\pyparsing\\core.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 4193,
                        "content": "fatals.sort(key=lambda e: (-e.loc, -len(str(e.parser_element))))"
                    },
                    {
                        "line_number": 4509,
                        "content": "fatals.sort(key=lambda e: (-e.loc, -len(str(e.parser_element))))"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "scope.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\rich\\scope.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 46,
                        "content": "items = sorted(scope.items(), key=sort_items) if sort_keys else scope.items()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "dist.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\setuptools\\dist.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 457,
                        "content": "key = pkg_resources.safe_name(str(attrs['name'])).lower()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "egg_info.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\setuptools\\command\\egg_info.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 252,
                        "content": "if pd is not None and pd.key == self.egg_name.lower():"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "_apply_pyprojecttoml.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\setuptools\\config\\_apply_pyprojecttoml.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 232,
                        "content": "key = json_compatible_key(key)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "msvc9compiler.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\setuptools\\_distutils\\msvc9compiler.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 177,
                        "content": "key = RegEnumKey(h, 0)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "msvccompiler.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\setuptools\\_distutils\\msvccompiler.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 161,
                        "content": "key = RegEnumKey(h, 0)"
                    },
                    {
                        "line_number": 643,
                        "content": "key = r\"{}\\{:0.1f}\\VC\\VC_OBJECTS_PLATFORM_INFO\\Win32\\Directories\".format("
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "_msvccompiler.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\setuptools\\_distutils\\_msvccompiler.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 41,
                        "content": "key = winreg.OpenKeyEx("
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "install.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\setuptools\\_distutils\\command\\install.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 143,
                        "content": "os_name, sep, key = name.partition('_')"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "more.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\setuptools\\_vendor\\more_itertools\\more.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 412,
                        "content": ">>> key = lambda s: int(s)  # Sort by numeric value, not by string"
                    },
                    {
                        "line_number": 876,
                        "content": ">>> key = lambda x: x % 10  # Bucket by last digit"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "more.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\setuptools\\_vendor\\more_itertools\\more.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 412,
                        "content": ">>> key = lambda s: int(s)  # Sort by numeric value, not by string"
                    },
                    {
                        "line_number": 878,
                        "content": ">>> s = bucket(it, key=key, validator=validator)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "recipes.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\setuptools\\_vendor\\more_itertools\\recipes.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 400,
                        "content": "``key=frozenset``. For ``dict`` objects,"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "core.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\setuptools\\_vendor\\pyparsing\\core.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 4017,
                        "content": "fatals.sort(key=lambda e: -e.loc)"
                    },
                    {
                        "line_number": 4316,
                        "content": "fatals.sort(key=lambda e: -e.loc)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "core.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\setuptools\\_vendor\\pyparsing\\core.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 4019,
                        "content": "fatals.sort(key=lambda e: (-e.loc, -len(str(e.parserElement))))"
                    },
                    {
                        "line_number": 4318,
                        "content": "fatals.sort(key=lambda e: (-e.loc, -len(str(e.parserElement))))"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "_parser.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\setuptools\\_vendor\\tomli\\_parser.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 287,
                        "content": "pos, key = parse_key(src, pos)"
                    },
                    {
                        "line_number": 305,
                        "content": "pos, key = parse_key(src, pos)"
                    },
                    {
                        "line_number": 360,
                        "content": "pos, key = parse_key(src, pos)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "admin.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\socketio\\admin.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 19,
                        "content": "key = '{};{}'.format(timestamp, type)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "admin.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\socketio\\admin.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 19,
                        "content": "key = '{};{}'.format(timestamp, type)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "_cache.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\stevedore\\_cache.py",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 71,
                        "content": "h = hashlib.sha256()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Python",
                "filename": "http.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\werkzeug\\http.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 240,
                        "content": "\"\"\"Produce a header value from a list of items or ``key=value`` pairs, separated by"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "testapp.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\werkzeug\\testapp.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 149,
                        "content": "sorted_environ = sorted(req.environ.items(), key=lambda x: repr(x[0]).lower())"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "testapp.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\werkzeug\\testapp.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 136,
                        "content": "key=lambda x: x.project_name.lower(),"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "accept.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\werkzeug\\datastructures\\accept.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 55,
                        "content": "values, key=lambda x: (self._specificity(x[0]), x[1]), reverse=True"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "__init__.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\werkzeug\\debug\\__init__.py",
                "vulnerability": "SHA-1",
                "lines": [
                    {
                        "line_number": 42,
                        "content": "return hashlib.sha1(f\"{pin} added salt\".encode(\"utf-8\", \"replace\")).hexdigest()[:12]"
                    },
                    {
                        "line_number": 191,
                        "content": "h = hashlib.sha1()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collisions."
            },
            {
                "language": "Python",
                "filename": "utilities.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.local\\lib\\python3.8\\site-packages\\wsproto\\utilities.py",
                "vulnerability": "SHA-1",
                "lines": [
                    {
                        "line_number": 87,
                        "content": "accept_token = hashlib.sha1(accept_token).digest()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collisions."
            },
            {
                "language": "Python",
                "filename": "common.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.vscode-server\\bin\\e8a3071ea4344d9d48ef8a4df2c097372b0c5161\\node_modules\\node-gyp\\gyp\\pylib\\gyp\\common.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 558,
                        "content": "key = self.end[1][0] if last else self.end[2][0]"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "common.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.vscode-server\\bin\\e8a3071ea4344d9d48ef8a4df2c097372b0c5161\\node_modules\\node-gyp\\gyp\\pylib\\gyp\\common.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 558,
                        "content": "key = self.end[1][0] if last else self.end[2][0]"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "input.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.vscode-server\\bin\\e8a3071ea4344d9d48ef8a4df2c097372b0c5161\\node_modules\\node-gyp\\gyp\\pylib\\gyp\\input.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1398,
                        "content": "if key == \"variables\" or type(value) is str:"
                    },
                    {
                        "line_number": 2081,
                        "content": "elif key == \"link_settings\":"
                    },
                    {
                        "line_number": 2946,
                        "content": "key = subdir + \":\" + name"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "MSVSNew.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.vscode-server\\bin\\e8a3071ea4344d9d48ef8a4df2c097372b0c5161\\node_modules\\node-gyp\\gyp\\pylib\\gyp\\MSVSNew.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 100,
                        "content": "self.entries = sorted(entries or [], key=attrgetter(\"path\"))"
                    },
                    {
                        "line_number": 252,
                        "content": "all_entries = sorted(all_entries, key=attrgetter(\"path\"))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "MSVSNew.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.vscode-server\\bin\\e8a3071ea4344d9d48ef8a4df2c097372b0c5161\\node_modules\\node-gyp\\gyp\\pylib\\gyp\\MSVSNew.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 48,
                        "content": "d = hashlib.md5((str(seed) + str(name)).encode(\"utf-8\")).hexdigest().upper()"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "MSVSVersion.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.vscode-server\\bin\\e8a3071ea4344d9d48ef8a4df2c097372b0c5161\\node_modules\\node-gyp\\gyp\\pylib\\gyp\\MSVSVersion.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 45,
                        "content": "compatible_sdks.sort(key=lambda v: float(v.replace(\"v\", \"\")), reverse=True)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "xcodeproj_file.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.vscode-server\\bin\\e8a3071ea4344d9d48ef8a4df2c097372b0c5161\\node_modules\\node-gyp\\gyp\\pylib\\gyp\\xcodeproj_file.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 693,
                        "content": "if key == \"settings\" and isinstance(self, PBXBuildFile):"
                    },
                    {
                        "line_number": 700,
                        "content": "if key == \"buildSettings\" and isinstance(self, XCBuildConfiguration):"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "xcodeproj_file.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.vscode-server\\bin\\e8a3071ea4344d9d48ef8a4df2c097372b0c5161\\node_modules\\node-gyp\\gyp\\pylib\\gyp\\xcodeproj_file.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 1216,
                        "content": "key = (child_name, child_path)"
                    },
                    {
                        "line_number": 1490,
                        "content": "self._properties[\"children\"], key=cmp_to_key(lambda x, y: x.Compare(y))"
                    },
                    {
                        "line_number": 2898,
                        "content": "key=cmp_to_key(lambda x, y: x.CompareRootGroup(y)),"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "xcodeproj_file.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.vscode-server\\bin\\e8a3071ea4344d9d48ef8a4df2c097372b0c5161\\node_modules\\node-gyp\\gyp\\pylib\\gyp\\xcodeproj_file.py",
                "vulnerability": "SHA-1",
                "lines": [
                    {
                        "line_number": 433,
                        "content": "seed_hash = hashlib.sha1()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collisions."
            },
            {
                "language": "Python",
                "filename": "eclipse.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.vscode-server\\bin\\e8a3071ea4344d9d48ef8a4df2c097372b0c5161\\node_modules\\node-gyp\\gyp\\pylib\\gyp\\generator\\eclipse.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 250,
                        "content": "key = cpp_line_parts[1]"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "make.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.vscode-server\\bin\\e8a3071ea4344d9d48ef8a4df2c097372b0c5161\\node_modules\\node-gyp\\gyp\\pylib\\gyp\\generator\\make.py",
                "vulnerability": "SHA-1",
                "lines": [
                    {
                        "line_number": 1995,
                        "content": "cmddigest = hashlib.sha1("
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collisions."
            },
            {
                "language": "Python",
                "filename": "ninja.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\.vscode-server\\bin\\e8a3071ea4344d9d48ef8a4df2c097372b0c5161\\node_modules\\node-gyp\\gyp\\pylib\\gyp\\generator\\ninja.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 815,
                        "content": "(\"unique_name\", hashlib.md5(outputs[0]).hexdigest())"
                    },
                    {
                        "line_number": 2814,
                        "content": "hash_for_rules = hashlib.md5(qualified_target_for_hash).hexdigest()"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "breaker.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\vine_talk\\tools\\breaker.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 140,
                        "content": "key = gmap[stats[0][i]]"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "header_op.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\home\\alex\\vine_talk\\tools\\header_op.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 14,
                        "content": "return \"MD\"+hashlib.md5(val.encode()).hexdigest();"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "main.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\llvm-10\\build\\utils\\lit\\lit\\main.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 164,
                        "content": "tests.sort(key=lambda t: (not t.isEarlyTest(), t.getFullName()))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "opt-viewer.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\llvm-10\\share\\opt-viewer\\opt-viewer.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 284,
                        "content": "sorted_remarks = sorted(optrecord.itervalues(all_remarks), key=lambda r: (r.Hotness, r.File, r.Line, r.Column, r.PassWithDiffPrefix, r.yaml_tag, r.Function), reverse=True)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "optrecord.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\llvm-10\\share\\opt-viewer\\optrecord.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 186,
                        "content": "key = arg[1 - dbgidx][0]"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "main.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\llvm-9\\build\\utils\\lit\\lit\\main.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 454,
                        "content": "run.tests.sort(key = lambda t: (not t.isEarlyTest(), t.getFullName()))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "opt-viewer.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\llvm-9\\share\\opt-viewer\\opt-viewer.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 284,
                        "content": "sorted_remarks = sorted(optrecord.itervalues(all_remarks), key=lambda r: (r.Hotness, r.File, r.Line, r.Column, r.PassWithDiffPrefix, r.yaml_tag, r.Function), reverse=True)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "optrecord.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\llvm-9\\share\\opt-viewer\\optrecord.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 186,
                        "content": "key = arg[1 - dbgidx][0]"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "collections.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python2.7\\collections.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 494,
                        "content": "return sorted(self.iteritems(), key=_itemgetter(1), reverse=True)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "collections.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python2.7\\collections.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 177,
                        "content": "key = next(reversed(self) if last else iter(self))"
                    },
                    {
                        "line_number": 494,
                        "content": "return sorted(self.iteritems(), key=_itemgetter(1), reverse=True)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "ConfigParser.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python2.7\\ConfigParser.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 412,
                        "content": "key = \" = \".join((key, str(value).replace('\\n', '\\n\\t')))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "cookielib.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python2.7\\cookielib.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1298,
                        "content": "cookies.sort(key=lambda arg: len(arg.path), reverse=True)"
                    },
                    {
                        "line_number": 1635,
                        "content": "key = ns_cookie.domain, ns_cookie.path, ns_cookie.name"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "cookielib.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python2.7\\cookielib.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 1298,
                        "content": "cookies.sort(key=lambda arg: len(arg.path), reverse=True)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "gettext.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python2.7\\gettext.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 565,
                        "content": "key = (class_, os.path.abspath(mofile))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "gettext.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python2.7\\gettext.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 565,
                        "content": "key = (class_, os.path.abspath(mofile))"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "hashlib.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python2.7\\hashlib.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 45,
                        "content": ">>> m = hashlib.md5()"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "hashlib.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python2.7\\hashlib.py",
                "vulnerability": "SHA-224",
                "lines": [
                    {
                        "line_number": 53,
                        "content": ">>> hashlib.sha224(\"Nobody inspects the spammish repetition\").hexdigest()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-224 provides reduced security compared to larger variants."
            },
            {
                "language": "Python",
                "filename": "hmac.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python2.7\\hmac.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 72,
                        "content": "key = self.digest_cons(key).digest()"
                    },
                    {
                        "line_number": 74,
                        "content": "key = key + chr(0) * (blocksize - len(key))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "hmac.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python2.7\\hmac.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 37,
                        "content": "Defaults to hashlib.md5."
                    },
                    {
                        "line_number": 45,
                        "content": "digestmod = hashlib.md5"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "mailbox.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python2.7\\mailbox.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 1241,
                        "content": "key = _singlefileMailbox.add(self, message)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "mailcap.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python2.7\\mailcap.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 92,
                        "content": "key = '/'.join(types).lower()"
                    },
                    {
                        "line_number": 147,
                        "content": "def findmatch(caps, MIMEtype, key='view', filename=\"/dev/null\", plist=[]):"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "mhlib.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python2.7\\mhlib.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 312,
                        "content": "key = fields[0].strip()"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "pickle.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python2.7\\pickle.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 1121,
                        "content": "key = _inverted_registry.get(code)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "poplib.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python2.7\\poplib.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 294,
                        "content": "digest = hashlib.md5(m.group(1)+secret).digest()"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "pydoc.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python2.7\\pydoc.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 2000,
                        "content": "def run(self, callback, key=None, completer=None, onerror=None):"
                    },
                    {
                        "line_number": 2243,
                        "content": "key = self.search_ent.get()"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "site.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python2.7\\site.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 426,
                        "content": "key = raw_input(prompt)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "symtable.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python2.7\\symtable.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 28,
                        "content": "key = table, filename"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "trace.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python2.7\\trace.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 618,
                        "content": "key = filename, lineno"
                    },
                    {
                        "line_number": 645,
                        "content": "key = filename, lineno"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "urllib.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python2.7\\urllib.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 540,
                        "content": "key = user, host, port, '/'.join(dirs)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "urllib.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python2.7\\urllib.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 793,
                        "content": "key = realm + '@' + host.lower()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "urllib2.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python2.7\\urllib2.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1463,
                        "content": "key = user, host, port, '/'.join(dirs), timeout"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "urllib2.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python2.7\\urllib2.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 1276,
                        "content": "\"\"\"Parse list of key=value strings where keys are not duplicated.\"\"\""
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "urllib2.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python2.7\\urllib2.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 1077,
                        "content": "H = lambda x: hashlib.md5(x).hexdigest()"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "urllib2.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python2.7\\urllib2.py",
                "vulnerability": "SHA-1",
                "lines": [
                    {
                        "line_number": 1007,
                        "content": "dig = hashlib.sha1(\"%s:%s:%s:%s\" % (self.nonce_count, nonce, time.ctime(),"
                    },
                    {
                        "line_number": 1079,
                        "content": "H = lambda x: hashlib.sha1(x).hexdigest()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collisions."
            },
            {
                "language": "Python",
                "filename": "warnings.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python2.7\\warnings.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 252,
                        "content": "key = (text, category, lineno)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "warnings.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python2.7\\warnings.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 252,
                        "content": "key = (text, category, lineno)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "xmllib.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python2.7\\xmllib.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 652,
                        "content": "key = ans + ' ' + key"
                    },
                    {
                        "line_number": 654,
                        "content": "key = aprefix + ':' + key"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "zipfile.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python2.7\\zipfile.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 769,
                        "content": "self.mode = key = mode.replace('b', '')[0]"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "zipfile.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python2.7\\zipfile.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 769,
                        "content": "self.mode = key = mode.replace('b', '')[0]"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "_threading_local.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python2.7\\_threading_local.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 149,
                        "content": "key = '_local__key', 'thread.local.' + str(id(self))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "_threading_local.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python2.7\\_threading_local.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 149,
                        "content": "key = '_local__key', 'thread.local.' + str(id(self))"
                    },
                    {
                        "line_number": 166,
                        "content": "key = object.__getattribute__(self, '_local__key')"
                    },
                    {
                        "line_number": 222,
                        "content": "key = object.__getattribute__(self, '_local__key')"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "__init__.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python2.7\\bsddb\\__init__.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 119,
                        "content": "key = _DeadlockWrap(cur.first, 0,0,0)[0]"
                    },
                    {
                        "line_number": 125,
                        "content": "key = _DeadlockWrap(next, 0,0,0)[0]"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "transformer.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python2.7\\compiler\\transformer.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 1229,
                        "content": "key = self.com_node(nodelist[0])"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "common.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python2.7\\dist-packages\\gyp\\common.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 541,
                        "content": "key = self.end[1][0] if last else self.end[2][0]"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "common.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python2.7\\dist-packages\\gyp\\common.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 541,
                        "content": "key = self.end[1][0] if last else self.end[2][0]"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "input.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python2.7\\dist-packages\\gyp\\input.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 204,
                        "content": "key = c[n].getChildren()[0]"
                    },
                    {
                        "line_number": 1280,
                        "content": "if key == 'variables' or type(value) is str:"
                    },
                    {
                        "line_number": 1915,
                        "content": "elif key == 'link_settings':"
                    },
                    {
                        "line_number": 2729,
                        "content": "key = subdir + ':' + name"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "mac_tool.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python2.7\\dist-packages\\gyp\\mac_tool.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 670,
                        "content": "max_value_length = len(max(filelist.items(), key=lambda (k,v):len(v))[1])"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "MSVSNew.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python2.7\\dist-packages\\gyp\\MSVSNew.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 18,
                        "content": "_new_md5 = hashlib.md5"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "MSVSVersion.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python2.7\\dist-packages\\gyp\\MSVSVersion.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 36,
                        "content": "compatible_sdks.sort(key=lambda v: float(v.replace('v', '')), reverse=True)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "ordered_dict.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python2.7\\dist-packages\\gyp\\ordered_dict.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 86,
                        "content": "link_prev, link_next, key = self.__map.pop(key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "xcodeproj_file.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python2.7\\dist-packages\\gyp\\xcodeproj_file.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 674,
                        "content": "if key == 'settings' and isinstance(self, PBXBuildFile):"
                    },
                    {
                        "line_number": 681,
                        "content": "if key == 'buildSettings' and isinstance(self, XCBuildConfiguration):"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "xcodeproj_file.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python2.7\\dist-packages\\gyp\\xcodeproj_file.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 1150,
                        "content": "key = (child_name, child_path)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "xcodeproj_file.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python2.7\\dist-packages\\gyp\\xcodeproj_file.py",
                "vulnerability": "SHA-1",
                "lines": [
                    {
                        "line_number": 152,
                        "content": "_new_sha1 = hashlib.sha1"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collisions."
            },
            {
                "language": "Python",
                "filename": "eclipse.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python2.7\\dist-packages\\gyp\\generator\\eclipse.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 242,
                        "content": "key = cpp_line_parts[1]"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "make.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python2.7\\dist-packages\\gyp\\generator\\make.py",
                "vulnerability": "SHA-1",
                "lines": [
                    {
                        "line_number": 1774,
                        "content": "cmddigest = hashlib.sha1(command if command else self.target).hexdigest()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collisions."
            },
            {
                "language": "Python",
                "filename": "ninja.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python2.7\\dist-packages\\gyp\\generator\\ninja.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 748,
                        "content": "hashlib.md5(outputs[0]).hexdigest()))"
                    },
                    {
                        "line_number": 2384,
                        "content": "hash_for_rules = hashlib.md5(qualified_target_for_hash).hexdigest()"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "__init__.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python2.7\\dist-packages\\pkg_resources\\__init__.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 2642,
                        "content": "self._key = key = self.project_name.lower()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "appdirs.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python2.7\\dist-packages\\pkg_resources\\_vendor\\appdirs.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 471,
                        "content": "key = _winreg.OpenKey("
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "msvc9compiler.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python2.7\\distutils\\msvc9compiler.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 163,
                        "content": "key = RegEnumKey(h, 0)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "msvccompiler.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python2.7\\distutils\\msvccompiler.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 144,
                        "content": "key = RegEnumKey(h, 0)"
                    },
                    {
                        "line_number": 614,
                        "content": "key = (r\"%s\\%0.1f\\VC\\VC_OBJECTS_PLATFORM_INFO\\Win32\\Directories\""
                    },
                    {
                        "line_number": 617,
                        "content": "key = (r\"%s\\6.0\\Build System\\Components\\Platforms\""
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "msvccompiler.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python2.7\\distutils\\msvccompiler.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 617,
                        "content": "key = (r\"%s\\6.0\\Build System\\Components\\Platforms\""
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "topics.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python2.7\\pydoc_data\\topics.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 13323,
                        "content": "'\"key=str.lower\".  The\\n'"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "__init__.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python2.7\\test\\support\\__init__.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1734,
                        "content": "key = threading_setup()"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "minidom.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python2.7\\xml\\dom\\minidom.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1512,
                        "content": "key = element.tagName"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "ElementTree.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python2.7\\xml\\etree\\ElementTree.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 919,
                        "content": "key=lambda x: x[1]):  # sort on prefix"
                    },
                    {
                        "line_number": 974,
                        "content": "key=lambda x: x[1]):  # sort on prefix"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "configobj.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\configobj.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 436,
                        "content": "key = match.group('named') or match.group('braced')"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "docopt.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\docopt.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 285,
                        "content": "return min(outcomes, key=lambda outcome: len(outcome[1]))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "feedparser.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\feedparser.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 391,
                        "content": "key = self.keymap.get(key, key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "feedparser.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\feedparser.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 391,
                        "content": "key = self.keymap.get(key, key)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "jsonpatch.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\jsonpatch.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 752,
                        "content": "op.key = v._on_undo_add(op.path, op.key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "jsonpatch.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\jsonpatch.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 752,
                        "content": "op.key = v._on_undo_add(op.path, op.key)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "snack.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\snack.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 166,
                        "content": "key = self.w.listboxInsertItem(text, 0)"
                    },
                    {
                        "line_number": 168,
                        "content": "key = self.w.listboxInsertItem(text, self.item2key[before])"
                    },
                    {
                        "line_number": 178,
                        "content": "key = self.w.listboxInsertItem(text, self.item2key[item])"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "hookutils.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\apport\\hookutils.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 53,
                        "content": "def attach_file_if_exists(report, path, key=None, overwrite=True, force_unicode=False):"
                    },
                    {
                        "line_number": 71,
                        "content": "key = path_to_key(path)"
                    },
                    {
                        "line_number": 114,
                        "content": "def attach_file(report, path, key=None, overwrite=True, force_unicode=False):"
                    },
                    {
                        "line_number": 127,
                        "content": "key = path_to_key(path)"
                    },
                    {
                        "line_number": 195,
                        "content": "key = 'upstart.' + log"
                    },
                    {
                        "line_number": 341,
                        "content": "key = 'Card%d.Amixer.info' % card"
                    },
                    {
                        "line_number": 343,
                        "content": "key = 'Card%d.Amixer.values' % card"
                    },
                    {
                        "line_number": 349,
                        "content": "key = 'Card%d.Codecs.%s' % (card, path_to_key(codec))"
                    },
                    {
                        "line_number": 355,
                        "content": "key = 'Card%d.Codecs.%s.%s' % (card, path_to_key(codec), path_to_key(name))"
                    },
                    {
                        "line_number": 1018,
                        "content": "key = path_to_key(path)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "hookutils.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\apport\\hookutils.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 149,
                        "content": "key = 'modified.conffile.' + path_to_key(path)"
                    },
                    {
                        "line_number": 341,
                        "content": "key = 'Card%d.Amixer.info' % card"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "packaging_impl.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\apport\\packaging_impl.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 445,
                        "content": "m = hashlib.md5()"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "report.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\apport\\report.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1015,
                        "content": "<re key=\"Package\">^\\\\S* 1-2$</re> <!-- test for a particular version -->"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "report.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\apport\\report.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 1015,
                        "content": "<re key=\"Package\">^\\\\S* 1-2$</re> <!-- test for a particular version -->"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "auth.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\apt\\auth.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 314,
                        "content": "key = TrustedKey(uid, keyid, creation_date)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "auth.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\apt\\auth.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 314,
                        "content": "key = TrustedKey(uid, keyid, creation_date)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "distro.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\aptsources\\distro.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 552,
                        "content": "if key == \"ID_LIKE\" and isinstance(value, str):"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "sourceslist.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\aptsources\\sourceslist.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 447,
                        "content": "key = source.template"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "_make.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\attr\\_make.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 349,
                        "content": "sorted(unannotated, key=lambda n: cd.get(n).counter)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "catalog.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\babel\\messages\\catalog.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 610,
                        "content": "key = self._key_for(id, message.context)"
                    },
                    {
                        "line_number": 698,
                        "content": "key = self._key_for(id, context)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "catalog.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\babel\\messages\\catalog.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 801,
                        "content": "key = self._key_for(message.id, message.context)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "_saferef.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\blinker\\_saferef.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 135,
                        "content": "key = cls.calculate_key(target)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "core.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\click\\core.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1641,
                        "content": "possible_names.sort(key=lambda x: -len(x[0]))  # group long options first"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "utils.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\click\\utils.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 404,
                        "content": "key = roaming and 'APPDATA' or 'LOCALAPPDATA'"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "ssh_util.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\cloudinit\\ssh_util.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 603,
                        "content": "key = casemap[line.key]"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "util.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\cloudinit\\util.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 3020,
                        "content": "\"\"\"Given shell like syntax (key=value\\nkey2=value2\\n) in content"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "util.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\cloudinit\\util.py",
                "vulnerability": "SHA-1",
                "lines": [
                    {
                        "line_number": 1801,
                        "content": "hasher = hashlib.sha1()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collisions."
            },
            {
                "language": "Python",
                "filename": "cc_apt_configure.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\cloudinit\\config\\cc_apt_configure.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 874,
                        "content": "key = srcent[\"filename\"]"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "cc_wireguard.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\cloudinit\\config\\cc_wireguard.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 121,
                        "content": "if key == \"name\" or key == \"config_path\" or key == \"content\":"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "schema.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\cloudinit\\config\\schema.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 585,
                        "content": "validator.iter_errors(config), key=lambda e: e.path"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "photon.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\cloudinit\\distros\\photon.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 55,
                        "content": "key = \"disable_fallback_netcfg\""
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "eni.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\cloudinit\\net\\eni.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 538,
                        "content": "key=lambda k: (order[k[\"type\"]], k[\"name\"]),"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "eni.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\cloudinit\\net\\eni.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 538,
                        "content": "key=lambda k: (order[k[\"type\"]], k[\"name\"]),"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "network_manager.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\cloudinit\\net\\network_manager.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 126,
                        "content": "key = f\"{key_prefix}{index}\""
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "sysconfig.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\cloudinit\\net\\sysconfig.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 303,
                        "content": "if key == \"TYPE\" and val == \"Vlan\":"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "__init__.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\cloudinit\\net\\__init__.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 430,
                        "content": "return sorted(get_interfaces_by_mac().values(), key=natural_sort_key)"
                    },
                    {
                        "line_number": 457,
                        "content": "return sorted(get_interfaces_by_mac().values(), key=natural_sort_key)"
                    },
                    {
                        "line_number": 536,
                        "content": "interfaces = sorted(interfaces, key=natural_sort_key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "handlers.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\cloudinit\\reporting\\handlers.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 371,
                        "content": "key = self._event_key(event)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "DataSourceAzure.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\cloudinit\\sources\\DataSourceAzure.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 957,
                        "content": "if any(not _key_is_openssh_formatted(key=key) for key in ssh_keys):"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "DataSourceAzure.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\cloudinit\\sources\\DataSourceAzure.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 957,
                        "content": "if any(not _key_is_openssh_formatted(key=key) for key in ssh_keys):"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "DataSourceGCE.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\cloudinit\\sources\\DataSourceGCE.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 254,
                        "content": "user, key = split_public_key"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "DataSourceMAAS.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\cloudinit\\sources\\DataSourceMAAS.py",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 203,
                        "content": "return \"v1:\" + hashlib.sha256(idstr.encode(\"utf-8\")).hexdigest()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Python",
                "filename": "DataSourceNoCloud.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\cloudinit\\sources\\DataSourceNoCloud.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 324,
                        "content": "# a ';' and then key=value pairs also terminated with ';'"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "DataSourceOpenNebula.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\cloudinit\\sources\\DataSourceOpenNebula.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 349,
                        "content": "#   key=value (for each preset variable)"
                    },
                    {
                        "line_number": 351,
                        "content": "#   key=value (for each post set variable)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "DataSourceOpenNebula.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\cloudinit\\sources\\DataSourceOpenNebula.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 351,
                        "content": "#   key=value (for each post set variable)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "DataSourceOVF.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\cloudinit\\sources\\DataSourceOVF.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 380,
                        "content": "key = elem.attributes.getNamedItemNS(envNsURI, \"key\").value"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "DataSourceVMware.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\cloudinit\\sources\\DataSourceVMware.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 481,
                        "content": "LOG.debug(\"Getting encoded data for key=%s, enc=%s\", key, enc_type)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "cloudsigma.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\cloudinit\\sources\\helpers\\cloudsigma.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 44,
                        "content": "def get(self, key=\"\", request_pattern=None):"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "config.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\cloudinit\\sources\\helpers\\vmware\\imc\\config.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 63,
                        "content": "key = Config.DNS + str(i)"
                    },
                    {
                        "line_number": 74,
                        "content": "key = Config.SUFFIX + str(i)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "fernet.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\cryptography\\fernet.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 35,
                        "content": "key = base64.urlsafe_b64decode(key)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "backend.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\cryptography\\hazmat\\backends\\openssl\\backend.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1150,
                        "content": "key = self._ffi.gc(key, self._lib.EVP_PKEY_free)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "backend.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\cryptography\\hazmat\\backends\\openssl\\backend.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 1150,
                        "content": "key = self._ffi.gc(key, self._lib.EVP_PKEY_free)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "ec.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\cryptography\\hazmat\\primitives\\asymmetric\\ec.py",
                "vulnerability": "ECDH",
                "lines": [
                    {
                        "line_number": 466,
                        "content": "class ECDH(object):"
                    }
                ],
                "severity": "Low",
                "explanation": "ECDH is not quantum-safe; quantum computers can break its security."
            },
            {
                "language": "Python",
                "filename": "algorithms.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\cryptography\\hazmat\\primitives\\ciphers\\algorithms.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 35,
                        "content": "self.key = _verify_key_size(self, key)"
                    },
                    {
                        "line_number": 50,
                        "content": "self.key = _verify_key_size(self, key)"
                    },
                    {
                        "line_number": 69,
                        "content": "self.key = _verify_key_size(self, key)"
                    },
                    {
                        "line_number": 84,
                        "content": "self.key = _verify_key_size(self, key)"
                    },
                    {
                        "line_number": 99,
                        "content": "self.key = _verify_key_size(self, key)"
                    },
                    {
                        "line_number": 112,
                        "content": "self.key = _verify_key_size(self, key)"
                    },
                    {
                        "line_number": 126,
                        "content": "self.key = _verify_key_size(self, key)"
                    },
                    {
                        "line_number": 141,
                        "content": "self.key = _verify_key_size(self, key)"
                    },
                    {
                        "line_number": 155,
                        "content": "self.key = _verify_key_size(self, key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "algorithms.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\cryptography\\hazmat\\primitives\\ciphers\\algorithms.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 35,
                        "content": "self.key = _verify_key_size(self, key)"
                    },
                    {
                        "line_number": 50,
                        "content": "self.key = _verify_key_size(self, key)"
                    },
                    {
                        "line_number": 69,
                        "content": "self.key = _verify_key_size(self, key)"
                    },
                    {
                        "line_number": 84,
                        "content": "self.key = _verify_key_size(self, key)"
                    },
                    {
                        "line_number": 99,
                        "content": "self.key = _verify_key_size(self, key)"
                    },
                    {
                        "line_number": 112,
                        "content": "self.key = _verify_key_size(self, key)"
                    },
                    {
                        "line_number": 126,
                        "content": "self.key = _verify_key_size(self, key)"
                    },
                    {
                        "line_number": 141,
                        "content": "self.key = _verify_key_size(self, key)"
                    },
                    {
                        "line_number": 155,
                        "content": "self.key = _verify_key_size(self, key)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "extensions.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\cryptography\\x509\\extensions.py",
                "vulnerability": "SHA-1",
                "lines": [
                    {
                        "line_number": 70,
                        "content": "return hashlib.sha1(data).digest()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collisions."
            },
            {
                "language": "Python",
                "filename": "name.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\cryptography\\x509\\name.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 125,
                        "content": "key = _NAMEOID_TO_NAME.get(self.oid, self.oid.dotted_string)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "proxies.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\dbus\\proxies.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 126,
                        "content": "key = dbus_interface + '.' + self._method_name"
                    },
                    {
                        "line_number": 158,
                        "content": "key = dbus_interface + '.' + self._method_name"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "changelog.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\debian\\changelog.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 190,
                        "content": ":param other_pairs: dict, key=value pairs from the header of the"
                    },
                    {
                        "line_number": 560,
                        "content": "key = kv_match.group(1)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "apt_clone.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\DistUpgrade\\apt_clone.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 773,
                        "content": "md5 = hashlib.md5()"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "distro.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\DistUpgrade\\distro.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 552,
                        "content": "if key == \"ID_LIKE\" and isinstance(value, str):"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "DistUpgradePatcher.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\DistUpgrade\\DistUpgradePatcher.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 104,
                        "content": "md5 = hashlib.md5()"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "DistUpgradeQuirks.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\DistUpgrade\\DistUpgradeQuirks.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 693,
                        "content": "md5 = hashlib.md5()"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "DistUpgradeViewKDE.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\DistUpgrade\\DistUpgradeViewKDE.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 158,
                        "content": "if key == \"ID_LIKE\" and isinstance(value, str):"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "math2html.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\docutils\\utils\\math\\math2html.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 1008,
                        "content": "key = self.readequalskey(arg, args)"
                    },
                    {
                        "line_number": 3942,
                        "content": "key = self.getparameter('name')"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "__init__.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\docutils\\writers\\html4css1\\__init__.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 639,
                        "content": "not (key == 'classes' and value in"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "__init__.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\docutils\\writers\\html4css1\\__init__.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 639,
                        "content": "not (key == 'classes' and value in"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "GLib.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\gi\\overrides\\GLib.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 361,
                        "content": "key = self.n_children() + key"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "GLib.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\gi\\overrides\\GLib.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 361,
                        "content": "key = self.n_children() + key"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "licenses.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\gitsome\\lib\\github3\\licenses.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 29,
                        "content": "self.key = license.get('key')"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "__init__.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\httplib2\\__init__.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 508,
                        "content": "key = \"-varied-%s\" % header"
                    },
                    {
                        "line_number": 779,
                        "content": "self.key = self.pwhashmod.new(self.key).hexdigest().lower()"
                    },
                    {
                        "line_number": 1846,
                        "content": "key = \"-varied-%s\" % header"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "__init__.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\httplib2\\__init__.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 779,
                        "content": "self.key = self.pwhashmod.new(self.key).hexdigest().lower()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "bccache.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\jinja2\\bccache.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 184,
                        "content": "key = self.get_cache_key(name, filename)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "lexer.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\jinja2\\lexer.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 147,
                        "content": "sorted(operators, key=lambda x: -len(x))))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "algorithms.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\jwt\\algorithms.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 141,
                        "content": "key = force_bytes(key)"
                    },
                    {
                        "line_number": 193,
                        "content": "key = force_bytes(key)"
                    },
                    {
                        "line_number": 334,
                        "content": "key = force_bytes(key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "algorithms.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\jwt\\algorithms.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 197,
                        "content": "key = load_ssh_public_key(key, backend=default_backend())"
                    },
                    {
                        "line_number": 199,
                        "content": "key = load_pem_private_key(key, password=None, backend=default_backend())"
                    },
                    {
                        "line_number": 201,
                        "content": "key = load_pem_public_key(key, backend=default_backend())"
                    },
                    {
                        "line_number": 341,
                        "content": "key = load_ssh_public_key(key, backend=default_backend())"
                    },
                    {
                        "line_number": 343,
                        "content": "key = load_pem_public_key(key, backend=default_backend())"
                    },
                    {
                        "line_number": 345,
                        "content": "key = load_pem_private_key(key, password=None, backend=default_backend())"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "algorithms.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\jwt\\algorithms.py",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 133,
                        "content": "SHA256 = hashlib.sha256"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Python",
                "filename": "api_jws.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\jwt\\api_jws.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 113,
                        "content": "key = alg_obj.prepare_key(key)"
                    },
                    {
                        "line_number": 220,
                        "content": "key = alg_obj.prepare_key(key)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "api_jwt.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\jwt\\api_jwt.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 92,
                        "content": "jwt, key=key, algorithms=algorithms, options=options, **kwargs"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "__main__.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\jwt\\__main__.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 66,
                        "content": "data = decode(token, key=args.key, verify=args.verify)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "__main__.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\jwt\\__main__.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 89,
                        "content": "%(prog)s --key=secret encode iss=me exp=1302049071"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "pycrypto.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\jwt\\contrib\\algorithms\\pycrypto.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 34,
                        "content": "key = key.encode('utf-8')"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "py_ecdsa.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\jwt\\contrib\\algorithms\\py_ecdsa.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 36,
                        "content": "key = key.encode('utf-8')"
                    },
                    {
                        "line_number": 44,
                        "content": "key = ecdsa.SigningKey.from_pem(key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "py_ecdsa.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\jwt\\contrib\\algorithms\\py_ecdsa.py",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 21,
                        "content": "SHA256 = hashlib.sha256"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Python",
                "filename": "platform_.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\keyring\\util\\platform_.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 60,
                        "content": "key = 'XDG_CONFIG_HOME'"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "facade.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\landscape\\lib\\apt\\package\\facade.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 606,
                        "content": "for package in sorted(broken_packages, key=attrgetter(\"name\")):"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "facade.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\landscape\\lib\\apt\\package\\facade.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 371,
                        "content": "md5 = hashlib.md5(contents).hexdigest()"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "facade.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\landscape\\lib\\apt\\package\\facade.py",
                "vulnerability": "SHA-1",
                "lines": [
                    {
                        "line_number": 372,
                        "content": "sha1 = hashlib.sha1(contents).hexdigest()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collisions."
            },
            {
                "language": "Python",
                "filename": "facade.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\landscape\\lib\\apt\\package\\facade.py",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 373,
                        "content": "sha256 = hashlib.sha256(contents).hexdigest()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Python",
                "filename": "launchpad.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\launchpadlib\\testing\\launchpad.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 483,
                        "content": "key = self._values.get(\"id\", key)"
                    },
                    {
                        "line_number": 484,
                        "content": "key = self._values.get(\"name\", key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "launchpad.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\launchpadlib\\testing\\launchpad.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 483,
                        "content": "key = self._values.get(\"id\", key)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "_browser.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\lazr\\restfulclient\\_browser.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 325,
                        "content": "key = key + '-' + self.request_media_type"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "oauth.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\lazr\\restfulclient\\authorize\\oauth.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 264,
                        "content": "key = key.encode('UTF-8')"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "more.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\more_itertools\\more.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 314,
                        "content": "key = kwargs.pop('key', lambda a: a)"
                    },
                    {
                        "line_number": 340,
                        "content": ">>> key = lambda s: int(s)  # Sort by numeric value, not by string"
                    },
                    {
                        "line_number": 691,
                        "content": ">>> key = lambda x: x % 10  # Bucket by last digit"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "more.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\more_itertools\\more.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 314,
                        "content": "key = kwargs.pop('key', lambda a: a)"
                    },
                    {
                        "line_number": 340,
                        "content": ">>> key = lambda s: int(s)  # Sort by numeric value, not by string"
                    },
                    {
                        "line_number": 693,
                        "content": ">>> s = bucket(it, key=key, validator=validator)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_more.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\more_itertools\\tests\\test_more.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 606,
                        "content": "D = mi.bucket(iterable, key=lambda x: 10 * (x // 10))"
                    },
                    {
                        "line_number": 619,
                        "content": "D = mi.bucket(iterable, key=lambda x: 10 * (x // 10))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "hashlib.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\nacl\\hashlib.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 69,
                        "content": "self._state = _b2b_init(key=key, salt=salt, person=person,"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "secret.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\nacl\\secret.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 53,
                        "content": "key = encoder.decode(key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "signing.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\nacl\\signing.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 64,
                        "content": "key = encoder.decode(key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "signature.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\oauthlib\\oauth1\\rfc5849\\signature.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 584,
                        "content": "key = _prepare_key_plus(alg, rsa_private_key)"
                    },
                    {
                        "line_number": 723,
                        "content": "key = _prepare_key_plus(alg, rsa_public_key)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "signature.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\oauthlib\\oauth1\\rfc5849\\signature.py",
                "vulnerability": "SHA-1",
                "lines": [
                    {
                        "line_number": 488,
                        "content": "signature = hmac.new(key_utf8, text_utf8, hashlib.sha1)"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collisions."
            },
            {
                "language": "Python",
                "filename": "signature.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\oauthlib\\oauth1\\rfc5849\\signature.py",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 545,
                        "content": "signature = hmac.new(key_utf8, text_utf8, hashlib.sha256)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Python",
                "filename": "__init__.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\oauthlib\\oauth1\\rfc5849\\__init__.py",
                "vulnerability": "SHA-1",
                "lines": [
                    {
                        "line_number": 184,
                        "content": "params.append(('oauth_body_hash', base64.b64encode(hashlib.sha1(request.body.encode('utf-8')).digest()).decode('utf-8')))"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collisions."
            },
            {
                "language": "Python",
                "filename": "tokens.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\oauthlib\\oauth2\\rfc6749\\tokens.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 162,
                        "content": "key = key.encode('utf-8')"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "tokens.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\oauthlib\\oauth2\\rfc6749\\tokens.py",
                "vulnerability": "SHA-1",
                "lines": [
                    {
                        "line_number": 117,
                        "content": "h = hashlib.sha1"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collisions."
            },
            {
                "language": "Python",
                "filename": "tokens.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\oauthlib\\oauth2\\rfc6749\\tokens.py",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 119,
                        "content": "h = hashlib.sha256"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Python",
                "filename": "service_application.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\oauthlib\\oauth2\\rfc6749\\clients\\service_application.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 156,
                        "content": "key = private_key or self.private_key"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "authorization_code.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\oauthlib\\oauth2\\rfc6749\\grant_types\\authorization_code.py",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 51,
                        "content": "hashlib.sha256(verifier.encode()).digest()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Python",
                "filename": "base.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\oauthlib\\openid\\connect\\core\\grant_types\\base.py",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 54,
                        "content": "def id_token_hash(self, value, hashfunc=hashlib.sha256):"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Python",
                "filename": "IcoImagePlugin.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\PIL\\IcoImagePlugin.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 139,
                        "content": "self.entry = sorted(self.entry, key=lambda x: x[\"color_depth\"])"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "PngImagePlugin.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\PIL\\PngImagePlugin.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 241,
                        "content": "key = key.encode(\"latin-1\", \"strict\")"
                    },
                    {
                        "line_number": 277,
                        "content": "key = key.encode(\"latin-1\", \"strict\")"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "cache.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\pip\\_internal\\cache.py",
                "vulnerability": "SHA-224",
                "lines": [
                    {
                        "line_number": 36,
                        "content": "return hashlib.sha224(s.encode(\"ascii\")).hexdigest()"
                    },
                    {
                        "line_number": 80,
                        "content": "hashed = hashlib.sha224(key_url.encode()).hexdigest()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-224 provides reduced security compared to larger variants."
            },
            {
                "language": "Python",
                "filename": "configuration.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\pip\\_internal\\configuration.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 357,
                        "content": "key = section + \".\" + _normalize_name(name)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "self_outdated_check.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\pip\\_internal\\self_outdated_check.py",
                "vulnerability": "SHA-224",
                "lines": [
                    {
                        "line_number": 82,
                        "content": "name = hashlib.sha224(key_bytes).hexdigest()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-224 provides reduced security compared to larger variants."
            },
            {
                "language": "Python",
                "filename": "parser.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\pip\\_internal\\cli\\parser.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 171,
                        "content": "section, key = section_key.split(\".\", 1)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "configuration.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\pip\\_internal\\commands\\configuration.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 166,
                        "content": "key = self._get_n_args(args, \"get [name]\", n=1)"
                    },
                    {
                        "line_number": 178,
                        "content": "key = self._get_n_args(args, \"unset [name]\", n=1)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "configuration.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\pip\\_internal\\commands\\configuration.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 166,
                        "content": "key = self._get_n_args(args, \"get [name]\", n=1)"
                    },
                    {
                        "line_number": 178,
                        "content": "key = self._get_n_args(args, \"unset [name]\", n=1)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "candidate.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\pip\\_internal\\models\\candidate.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 22,
                        "content": "key=(self.name, self.version, self.link),"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "candidate.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\pip\\_internal\\models\\candidate.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 22,
                        "content": "key=(self.name, self.version, self.link),"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "link.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\pip\\_internal\\models\\link.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 64,
                        "content": "super(Link, self).__init__(key=url, defining_class=Link)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "freeze.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\pip\\_internal\\operations\\freeze.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 176,
                        "content": "installations.values(), key=lambda x: x.name.lower()):"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "wheel.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\pip\\_internal\\operations\\install\\wheel.py",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 57,
                        "content": "\"\"\"Return (encoded_digest, length) for path using hashlib.sha256()\"\"\""
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Python",
                "filename": "req_tracker.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\pip\\_internal\\req\\req_tracker.py",
                "vulnerability": "SHA-224",
                "lines": [
                    {
                        "line_number": 93,
                        "content": "hashed = hashlib.sha224(link.url_without_fragment.encode()).hexdigest()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-224 provides reduced security compared to larger variants."
            },
            {
                "language": "Python",
                "filename": "misc.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\pip\\_internal\\utils\\misc.py",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 883,
                        "content": "\"\"\"Return (hash, length) for path using hashlib.sha256()"
                    },
                    {
                        "line_number": 886,
                        "content": "h = hashlib.sha256()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Python",
                "filename": "__init__.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\pkg_resources\\__init__.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 2644,
                        "content": "self._key = key = self.project_name.lower()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "appdirs.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\pkg_resources\\_vendor\\appdirs.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 471,
                        "content": "key = _winreg.OpenKey("
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "lex.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\ply\\lex.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 732,
                        "content": "s.sort(key=lambda x: len(x[1]), reverse=True)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "lex.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\ply\\lex.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 728,
                        "content": "f.sort(key=lambda x: x[1].__code__.co_firstlineno)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "cache.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\prompt_toolkit\\cache.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 109,
                        "content": "key = (a, tuple(sorted(kw.items())))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "application.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\prompt_toolkit\\application\\application.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 963,
                        "content": "key = current_window, frozenset(other_controls)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "typeahead.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\prompt_toolkit\\input\\typeahead.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 57,
                        "content": "key = input_obj.typeahead_hash()"
                    },
                    {
                        "line_number": 68,
                        "content": "key = input_obj.typeahead_hash()"
                    },
                    {
                        "line_number": 80,
                        "content": "key = input_obj.typeahead_hash()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "win32.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\prompt_toolkit\\input\\win32.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 336,
                        "content": "result.key = Keys.ControlLeft"
                    },
                    {
                        "line_number": 345,
                        "content": "result.key = Keys.ControlDown"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "key_bindings.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\prompt_toolkit\\key_binding\\key_bindings.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 329,
                        "content": "key = KEY_ALIASES.get(key, key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "key_bindings.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\prompt_toolkit\\key_binding\\key_bindings.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 329,
                        "content": "key = KEY_ALIASES.get(key, key)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "key_processor.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\prompt_toolkit\\key_binding\\key_processor.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 55,
                        "content": "return self.key == other.key and self.data == other.data"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "containers.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\prompt_toolkit\\layout\\containers.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1319,
                        "content": "key = (margin, get_app().render_counter)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "controls.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\prompt_toolkit\\layout\\controls.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 586,
                        "content": "key = (document.text, self.lexer.invalidation_hash())"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "controls.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\prompt_toolkit\\layout\\controls.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 169,
                        "content": "key = get_app().render_counter, lineno, width, slice_stop"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "vt100.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\prompt_toolkit\\output\\vt100.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 157,
                        "content": "key = (value, exclude)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "lexer.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\pygments\\lexer.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 859,
                        "content": "key=lambda x: x[self._prof_sort_index],"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "img.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\pygments\\formatters\\img.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 168,
                        "content": "key = _winreg.OpenKey("
                    },
                    {
                        "line_number": 173,
                        "content": "key = _winreg.OpenKey("
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "hash_signatures_binder.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\pymacaroons\\binders\\hash_signatures_binder.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 11,
                        "content": "self.key = key or truncate_or_pad(b'\\0')"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "third_party.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\pymacaroons\\caveat_delegates\\third_party.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 103,
                        "content": "key = truncate_or_pad(signature)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "secret_box_encryptor.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\pymacaroons\\field_encryptors\\secret_box_encryptor.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 28,
                        "content": "key = truncate_or_pad(signature)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "binary_serializer.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\pymacaroons\\serializers\\binary_serializer.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 144,
                        "content": "key=key, value=value"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "_pclass.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\pyrsistent\\_pclass.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 174,
                        "content": "raise AttributeError(\"Can't set attribute, key={0}, value={1}\".format(key, value))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "orderedset.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\python-sigmavirus24-urltemplate\\uritemplate\\orderedset.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 45,
                        "content": "link.prev, link.next, link.key = last, root, key"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "orderedset.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\python-sigmavirus24-urltemplate\\uritemplate\\orderedset.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 75,
                        "content": "key = next(reversed(self)) if last else next(iter(self))"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "auth.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\requests\\auth.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 148,
                        "content": "return hashlib.md5(x).hexdigest()"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "auth.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\requests\\auth.py",
                "vulnerability": "SHA-1",
                "lines": [
                    {
                        "line_number": 154,
                        "content": "return hashlib.sha1(x).hexdigest()"
                    },
                    {
                        "line_number": 198,
                        "content": "cnonce = (hashlib.sha1(s).hexdigest()[:16])"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collisions."
            },
            {
                "language": "Python",
                "filename": "auth.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\requests\\auth.py",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 160,
                        "content": "return hashlib.sha256(x).hexdigest()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Python",
                "filename": "models.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\requests\\models.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 912,
                        "content": "key = link.get('rel') or link.get('url')"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "models.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\requests\\models.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 912,
                        "content": "key = link.get('rel') or link.get('url')"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "utils.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\requests\\utils.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 469,
                        "content": "key = param[:index_of_equals].strip(items_to_strip)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "dist.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\setuptools\\dist.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 424,
                        "content": "key = pkg_resources.safe_name(str(attrs['name'])).lower()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "msvc.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\setuptools\\msvc.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 87,
                        "content": "key = vc_base % ('', version)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "msvc.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\setuptools\\msvc.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 94,
                        "content": "key = vc_base % ('Wow6432Node\\\\', version)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "egg_info.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\setuptools\\command\\egg_info.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 238,
                        "content": "if pd is not None and pd.key == self.egg_name.lower():"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "encoder.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\simplejson\\encoder.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 607,
                        "content": "key = _stringify_key(key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "ordered_dict.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\simplejson\\ordered_dict.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 55,
                        "content": "key = reversed(self).next() if last else iter(self).next()"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "ordered_dict.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\simplejson\\ordered_dict.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 55,
                        "content": "key = reversed(self).next() if last else iter(self).next()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "SoftwareProperties.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\softwareproperties\\SoftwareProperties.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 266,
                        "content": "if key == \"PARTICIPATE\" and value.strip('\"').lower() == \"yes\":"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "__init__.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\sos\\cleaner\\mappings\\__init__.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 82,
                        "content": "self.compiled_regexes.sort(key=lambda x: len(x[0]), reverse=True)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "__init__.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\sos\\cleaner\\parsers\\__init__.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 157,
                        "content": "key=lambda x: len(x[0])):"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "__init__.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\sos\\collector\\__init__.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 651,
                        "content": "for _opt in sorted(_opts, key=lambda x: _opts[x].cluster):"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "__init__.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\sos\\report\\__init__.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1562,
                        "content": "key=lambda x: x[1], reverse=True)[:5]"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "__init__.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\sos\\report\\__init__.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 1562,
                        "content": "key=lambda x: x[1], reverse=True)[:5]"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "foreman.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\sos\\report\\plugins\\foreman.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 137,
                        "content": "--ssl-key=/etc/pki/katello/qpid_router_client.key \\"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "jars.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\sos\\report\\plugins\\jars.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 121,
                        "content": "key = key.decode('utf8').strip()"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "jars.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\sos\\report\\plugins\\jars.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 121,
                        "content": "key = key.decode('utf8').strip()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "jars.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\sos\\report\\plugins\\jars.py",
                "vulnerability": "SHA-1",
                "lines": [
                    {
                        "line_number": 139,
                        "content": "m = hashlib.sha1()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collisions."
            },
            {
                "language": "Python",
                "filename": "python.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\sos\\report\\plugins\\python.py",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 96,
                        "content": "digest = hashlib.sha256()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Python",
                "filename": "versioning.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\sphinx\\versioning.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 105,
                        "content": "ratios = sorted(iteritems(ratios), key=itemgetter(1))  # type: ignore"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "rst.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\sphinx\\domains\\rst.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 50,
                        "content": "key = (self.objtype, name)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "std.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\sphinx\\domains\\std.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 873,
                        "content": "key = (objtype, target)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "__init__.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\sphinx\\ext\\autodoc\\__init__.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 538,
                        "content": "key = ('.'.join(self.objpath[:-1]), self.objpath[-1])"
                    },
                    {
                        "line_number": 714,
                        "content": "classes.sort(key=lambda cls: cls.priority)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "__init__.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\sphinx\\ext\\autodoc\\__init__.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 714,
                        "content": "classes.sort(key=lambda cls: cls.priority)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "__init__.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\sphinx\\ext\\autosummary\\__init__.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 219,
                        "content": "classes.sort(key=lambda cls: cls.priority)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "__init__.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\sphinx\\ext\\autosummary\\__init__.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 219,
                        "content": "classes.sort(key=lambda cls: cls.priority)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "i18n.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\sphinx\\transforms\\i18n.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 430,
                        "content": "key = get_ref_key(old)"
                    },
                    {
                        "line_number": 434,
                        "content": "key = get_ref_key(new)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "html.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\sphinx\\writers\\html.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 328,
                        "content": "key = u\"%s/%s\" % (self.docnames[-1], figtype)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "html5.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\sphinx\\writers\\html5.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 296,
                        "content": "key = u\"%s/%s\" % (self.docnames[-1], figtype)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "checkers.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\twisted\\conch\\checkers.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 560,
                        "content": "if any(key == pubKey for key in"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "endpoints.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\twisted\\conch\\endpoints.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 320,
                        "content": "self.key = self.keys.pop(0)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "knownhosts.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\twisted\\conch\\client\\knownhosts.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 69,
                        "content": "key = Key.fromString(a2b_base64(keyString))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "transport.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\twisted\\conch\\ssh\\transport.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 241,
                        "content": "key = key[:digestSize] + (b'\\x00' * (blockSize - digestSize))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "transport.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\twisted\\conch\\ssh\\transport.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 241,
                        "content": "key = key[:digestSize] + (b'\\x00' * (blockSize - digestSize))"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "transport.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\twisted\\conch\\ssh\\transport.py",
                "vulnerability": "ECDH",
                "lines": [
                    {
                        "line_number": 1319,
                        "content": "ecPriv.exchange(ec.ECDH(), theirECPub)), 16))"
                    },
                    {
                        "line_number": 1670,
                        "content": "self.ecPriv.exchange(ec.ECDH(), theirECPub)), 16))"
                    }
                ],
                "severity": "Low",
                "explanation": "ECDH is not quantum-safe; quantum computers can break its security."
            },
            {
                "language": "Python",
                "filename": "_kex.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\twisted\\conch\\ssh\\_kex.py",
                "vulnerability": "ECDH",
                "lines": [
                    {
                        "line_number": 262,
                        "content": "ec.ECDH(), _curveTable[keyAlgorithmDsa])"
                    }
                ],
                "severity": "Low",
                "explanation": "ECDH is not quantum-safe; quantum computers can break its security."
            },
            {
                "language": "Python",
                "filename": "_kex.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\twisted\\conch\\ssh\\_kex.py",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 30,
                        "content": "\"A callable hash algorithm constructor (e.g. C{hashlib.sha256}) \""
                    },
                    {
                        "line_number": 221,
                        "content": "@return: A callable hash algorithm constructor (e.g. C{hashlib.sha256})."
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Python",
                "filename": "test_ckeygen.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\twisted\\conch\\test\\test_ckeygen.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 187,
                        "content": "key = Key.fromString(privateRSA_openssh)"
                    },
                    {
                        "line_number": 216,
                        "content": "key = Key.fromString(privateECDSA_openssh)"
                    },
                    {
                        "line_number": 244,
                        "content": "key = Key.fromString(privateRSA_openssh)"
                    },
                    {
                        "line_number": 272,
                        "content": "key = Key.fromString(privateRSA_openssh)"
                    },
                    {
                        "line_number": 288,
                        "content": "key = Key.fromString(privateRSA_openssh)"
                    },
                    {
                        "line_number": 305,
                        "content": "key = Key.fromString(privateECDSA_openssh)"
                    },
                    {
                        "line_number": 326,
                        "content": "key = Key.fromString(privateRSA_openssh)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_endpoints.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\twisted\\conch\\test\\test_endpoints.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1137,
                        "content": "key = Key.fromString(privateDSA_openssh)"
                    },
                    {
                        "line_number": 1190,
                        "content": "key = Key.fromString(privateRSA_openssh)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_knownhosts.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\twisted\\conch\\test\\test_knownhosts.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 680,
                        "content": "key = Key.fromString(thirdSampleKey)"
                    },
                    {
                        "line_number": 724,
                        "content": "key = Key.fromString(sampleKey)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_knownhosts.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\twisted\\conch\\test\\test_knownhosts.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 724,
                        "content": "key = Key.fromString(sampleKey)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_transport.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\twisted\\conch\\test\\test_transport.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 2292,
                        "content": "key = secret[:digestSize] + b'\\x00' * blockPadSize"
                    },
                    {
                        "line_number": 2476,
                        "content": "\"Failed HMAC test vector; key=%r data=%r\" % (key, data))"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "credentials.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\twisted\\cred\\credentials.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 281,
                        "content": "key = b\",\".join((nonce, clientip, now))"
                    },
                    {
                        "line_number": 315,
                        "content": "key = base64.b64decode(opaqueParts[1])"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_endpoints.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\twisted\\internet\\test\\test_endpoints.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 3532,
                        "content": "key=lambda cert: cert.digest()),"
                    },
                    {
                        "line_number": 3534,
                        "content": "key=lambda cert: cert.digest())"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_flatten.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\twisted\\logger\\test\\test_flatten.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 173,
                        "content": "key = keyPlusLiteral[1:]"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "imap4.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\twisted\\mail\\imap4.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 4193,
                        "content": "key = nativeString(key)"
                    },
                    {
                        "line_number": 4207,
                        "content": "key = (key, (valueHead, tuple(valueTail)))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "imap4.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\twisted\\mail\\imap4.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 4207,
                        "content": "key = (key, (valueHead, tuple(valueTail)))"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "client.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\twisted\\names\\client.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 399,
                        "content": "key = (name, type, cls)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "srvconnect.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\twisted\\names\\srvconnect.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 192,
                        "content": "self.servers.sort(key=lambda record: (record.priority, record.weight))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_tuntap.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\twisted\\pair\\test\\test_tuntap.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 444,
                        "content": "key = randrange(2 ** 64)"
                    },
                    {
                        "line_number": 478,
                        "content": "key = randrange(2 ** 64)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "dirdbm.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\twisted\\persisted\\dirdbm.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 235,
                        "content": "key = self._encode(key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "amp.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\twisted\\protocols\\amp.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 2059,
                        "content": "key = KeyPair.generate()"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "htb.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\twisted\\protocols\\htb.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 156,
                        "content": "key = self.getBucketKey(*a, **kw)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "memcache.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\twisted\\protocols\\memcache.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 559,
                        "content": "cmdObj = Command(cmd, key=key, flags=flags, length=length)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "memcache.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\twisted\\protocols\\memcache.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 559,
                        "content": "cmdObj = Command(cmd, key=key, flags=flags, length=length)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "reporter.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\twisted\\trial\\reporter.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 415,
                        "content": "key = (event['filename'], event['lineno'],"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_script.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\twisted\\trial\\test\\test_script.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 793,
                        "content": "names, sorted(names, key=lambda name : name.split(\".\")[:4]),"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "client.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\twisted\\web\\client.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1706,
                        "content": "key = (\"http-proxy\", self._proxyEndpoint)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "http.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\twisted\\web\\http.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 875,
                        "content": "if key == b'application/x-www-form-urlencoded':"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_http.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\twisted\\web\\test\\test_http.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 1704,
                        "content": "GET /?key=value&multiple=two+words&multiple=more%20words&empty= HTTP/1.0"
                    },
                    {
                        "line_number": 1760,
                        "content": "query = 'key=value&multiple=two+words&multiple=more%20words&empty='"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_wsgi.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\twisted\\web\\test\\test_wsgi.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1532,
                        "content": "key = b\"key\" if _PY3 else u\"key\""
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "irc.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\twisted\\words\\protocols\\irc.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1863,
                        "content": "key = ''.join([random.choice(chars) for i in range(12)])"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "irc.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\twisted\\words\\protocols\\irc.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 1863,
                        "content": "key = ''.join([random.choice(chars) for i in range(12)])"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "data_types.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\uaclient\\data_types.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 32,
                        "content": "super().__init__(key=key, nested_msg=err.msg)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "v1.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\uaclient\\api\\u\\pro\\status\\enabled_services\\v1.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 74,
                        "content": "enabled_services=sorted(enabled_services, key=lambda x: x.name)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "__init__.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\uaclient\\cli\\__init__.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 784,
                        "content": "key=args.key, value=getattr(cfg, args.key, None)"
                    },
                    {
                        "line_number": 961,
                        "content": "args.key = \"global_\" + args.key"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "__init__.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\uaclient\\cli\\__init__.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 784,
                        "content": "key=args.key, value=getattr(cfg, args.key, None)"
                    },
                    {
                        "line_number": 793,
                        "content": "print(row_tmpl.format(key=key, value=getattr(cfg, key, None)))"
                    },
                    {
                        "line_number": 909,
                        "content": "key=set_key, value=set_value"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "__init__.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\uaclient\\messages\\__init__.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 909,
                        "content": "\"key=value pair to configure for Ubuntu Pro services.\""
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "util.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\ufw\\util.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 414,
                        "content": "lst.sort(key=lambda k: [ norm(c) for c in re.split('([0-9]+)', k)])"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "util.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\ufw\\util.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 414,
                        "content": "lst.sort(key=lambda k: [ norm(c) for c in re.split('([0-9]+)', k)])"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "UpdateList.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\UpdateManager\\Core\\UpdateList.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 77,
                        "content": "return sorted(all_items, key=lambda a: a.name.lower())"
                    },
                    {
                        "line_number": 300,
                        "content": "rated_applications.sort(key=lambda app: app[0], reverse=True)"
                    },
                    {
                        "line_number": 472,
                        "content": "app_groups.sort(key=lambda a: a.name.lower())"
                    },
                    {
                        "line_number": 473,
                        "content": "pkg_groups.sort(key=lambda a: a.name.lower())"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "wheelfile.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\wheel\\wheelfile.py",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 36,
                        "content": "_default_algorithm = hashlib.sha256"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Python",
                "filename": "wpa.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\wifite\\attack\\wpa.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 75,
                        "content": "key = Aircrack.crack_handshake(handshake, show_command=False)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "result.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\wifite\\model\\result.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 87,
                        "content": "results = sorted([cls.load(item) for item in cracked_targets], key=lambda x: x.date, reverse=True)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "aircrack.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\wifite\\tools\\aircrack.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 137,
                        "content": "key = fid.read().strip()"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "cowpatty.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\wifite\\tools\\cowpatty.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 33,
                        "content": "key = line.split('\"', 1)[1][:-2]"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "cowpatty.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\wifite\\tools\\cowpatty.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 33,
                        "content": "key = line.split('\"', 1)[1][:-2]"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "hashcat.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\wifite\\tools\\hashcat.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 93,
                        "content": "key = stdout.strip().split(':', 1)[1]"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "hashcat.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\wifite\\tools\\hashcat.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 49,
                        "content": "key = stdout.split(':', 5)[-1].strip()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "john.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\wifite\\tools\\john.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 58,
                        "content": "key = line.split(':')[1]"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "crack.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\wifite\\util\\crack.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 277,
                        "content": "key = Aircrack.crack_handshake(handshake, show_command=True)"
                    },
                    {
                        "line_number": 279,
                        "content": "key = Hashcat.crack_handshake(handshake, show_command=True)"
                    },
                    {
                        "line_number": 283,
                        "content": "key = Cowpatty.crack_handshake(handshake, show_command=True)"
                    },
                    {
                        "line_number": 295,
                        "content": "key = Hashcat.crack_pmkid(hs['filename'], verbose=True)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "codecache.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\xonsh\\codecache.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 173,
                        "content": "return hashlib.md5(_code).hexdigest()"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "color_tools.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\xonsh\\color_tools.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 470,
                        "content": "return min(sorted(palette.keys())[::-1], key=lambda k: color_dist(x, palette[k]))"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "commands_cache.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\xonsh\\commands_cache.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 107,
                        "content": "key = cmd.upper() if ON_WINDOWS else cmd"
                    },
                    {
                        "line_number": 111,
                        "content": "key = cmd.upper() if ON_WINDOWS else cmd"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "foreign_shells.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\xonsh\\foreign_shells.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 354,
                        "content": "key = key[6:]  # lstrip 'alias '"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "jupyter_kernel.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\xonsh\\jupyter_kernel.py",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 65,
                        "content": "signature_schemes = {\"hmac-sha256\": hashlib.sha256}"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Python",
                "filename": "lazyjson.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\xonsh\\lazyjson.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 159,
                        "content": "key = slice(*key.indices(len(self)))"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "lexer.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\xonsh\\lexer.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 254,
                        "content": "key = (typ, st) if (typ, st) in token_map else typ"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "platform.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\xonsh\\platform.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 385,
                        "content": "key = winreg.OpenKey(winreg.HKEY_LOCAL_MACHINE, \"SOFTWARE\\\\GitForWindows\")"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "pretty.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\xonsh\\pretty.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 842,
                        "content": "key = (type_module, type_name)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "pygments_cache.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\xonsh\\pygments_cache.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 321,
                        "content": "key = fname if fname in exts else os.path.splitext(fname)[1]"
                    },
                    {
                        "line_number": 353,
                        "content": "key = fname if fname in exts else os.path.splitext(fname)[1]"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "pygments_cache.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\xonsh\\pygments_cache.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 321,
                        "content": "key = fname if fname in exts else os.path.splitext(fname)[1]"
                    },
                    {
                        "line_number": 353,
                        "content": "key = fname if fname in exts else os.path.splitext(fname)[1]"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "xonfig.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\xonsh\\xonfig.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 481,
                        "content": "s += row.format(key=key, wcol1=wcol1, val=val, wcol2=wcol2)"
                    },
                    {
                        "line_number": 549,
                        "content": "color_names = sorted(cmap.keys(), key=(lambda s: (len(s), s)))"
                    },
                    {
                        "line_number": 576,
                        "content": "color_names = sorted(names_toks.keys(), key=(lambda s: (len(s), s)))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "__amalgam__.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\xonsh\\__amalgam__.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 66,
                        "content": "key = pkg if asname is None else mod"
                    },
                    {
                        "line_number": 1734,
                        "content": "key = winreg.OpenKey(winreg.HKEY_LOCAL_MACHINE, \"SOFTWARE\\\\GitForWindows\")"
                    },
                    {
                        "line_number": 8719,
                        "content": "key = cmd.upper() if ON_WINDOWS else cmd"
                    },
                    {
                        "line_number": 8723,
                        "content": "key = cmd.upper() if ON_WINDOWS else cmd"
                    },
                    {
                        "line_number": 17065,
                        "content": "s += row.format(key=key, wcol1=wcol1, val=val, wcol2=wcol2)"
                    },
                    {
                        "line_number": 17133,
                        "content": "color_names = sorted(cmap.keys(), key=(lambda s: (len(s), s)))"
                    },
                    {
                        "line_number": 17160,
                        "content": "color_names = sorted(names_toks.keys(), key=(lambda s: (len(s), s)))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "__amalgam__.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\xonsh\\__amalgam__.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 776,
                        "content": "key = slice(*key.indices(len(self)))"
                    },
                    {
                        "line_number": 1338,
                        "content": "return min(sorted(palette.keys())[::-1], key=lambda k: color_dist(x, palette[k]))"
                    },
                    {
                        "line_number": 2826,
                        "content": "key = (type_module, type_name)"
                    },
                    {
                        "line_number": 10180,
                        "content": "key = key[6:]  # lstrip 'alias '"
                    },
                    {
                        "line_number": 11233,
                        "content": "key = (typ, st) if (typ, st) in token_map else typ"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "__amalgam__.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\xonsh\\__amalgam__.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 3054,
                        "content": "return hashlib.md5(_code).hexdigest()"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "bash_completion.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\xonsh\\completers\\bash_completion.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 26,
                        "content": "key = winreg.OpenKey(winreg.HKEY_LOCAL_MACHINE, \"SOFTWARE\\\\GitForWindows\")"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "__amalgam__.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\xonsh\\completers\\__amalgam__.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 39,
                        "content": "key = pkg if asname is None else mod"
                    },
                    {
                        "line_number": 90,
                        "content": "key = winreg.OpenKey(winreg.HKEY_LOCAL_MACHINE, \"SOFTWARE\\\\GitForWindows\")"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "__amalgam__.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\xonsh\\history\\__amalgam__.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 30,
                        "content": "key = pkg if asname is None else mod"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "__amalgam__.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\xonsh\\prompt\\__amalgam__.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 31,
                        "content": "key = pkg if asname is None else mod"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "scanner.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\yaml\\scanner.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 308,
                        "content": "key = SimpleKey(token_number, required,"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_registry.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3\\dist-packages\\zope\\interface\\tests\\test_registry.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 702,
                        "content": "reg = sorted(comp.registeredUtilities(), key=lambda r: r.name)"
                    },
                    {
                        "line_number": 1245,
                        "content": "reg = sorted(comp.registeredAdapters(), key=lambda r: r.name)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "antigravity.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3.8\\antigravity.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 15,
                        "content": "h = hashlib.md5(datedow).hexdigest()"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "configparser.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3.8\\configparser.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 748,
                        "content": "key = self.optionxform(str(key))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "configparser.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3.8\\configparser.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 748,
                        "content": "key = self.optionxform(str(key))"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "enum.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3.8\\enum.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 90,
                        "content": "if key == '_generate_next_value_':"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "functools.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3.8\\functools.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 560,
                        "content": "key = make_key(args, kwds, typed)"
                    },
                    {
                        "line_number": 575,
                        "content": "key = make_key(args, kwds, typed)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "gettext.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3.8\\gettext.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 609,
                        "content": "key = (class_, os.path.abspath(mofile))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "gettext.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3.8\\gettext.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 609,
                        "content": "key = (class_, os.path.abspath(mofile))"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "hashlib.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3.8\\hashlib.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 43,
                        "content": ">>> m = hashlib.md5()"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "hashlib.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3.8\\hashlib.py",
                "vulnerability": "SHA-224",
                "lines": [
                    {
                        "line_number": 51,
                        "content": ">>> hashlib.sha224(b\"Nobody inspects the spammish repetition\").hexdigest()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-224 provides reduced security compared to larger variants."
            },
            {
                "language": "Python",
                "filename": "hmac.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3.8\\hmac.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 82,
                        "content": "key = self.digest_cons(key).digest()"
                    },
                    {
                        "line_number": 180,
                        "content": "key = digest_cons(key).digest()"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "hmac.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3.8\\hmac.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 84,
                        "content": "key = key.ljust(blocksize, b'\\0')"
                    },
                    {
                        "line_number": 180,
                        "content": "key = digest_cons(key).digest()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "mailbox.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3.8\\mailbox.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 1250,
                        "content": "key = _singlefileMailbox.add(self, message)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "mailcap.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3.8\\mailcap.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 110,
                        "content": "key = '/'.join(types).lower()"
                    },
                    {
                        "line_number": 165,
                        "content": "def findmatch(caps, MIMEtype, key='view', filename=\"/dev/null\", plist=[]):"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "os.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3.8\\os.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 679,
                        "content": "key = self.encodekey(key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "pickle.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3.8\\pickle.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 1561,
                        "content": "key = _inverted_registry.get(code)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "poplib.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3.8\\poplib.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 333,
                        "content": "digest = hashlib.md5(digest).hexdigest()"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "pyclbr.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3.8\\pyclbr.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 381,
                        "content": "objs = sorted(tree.values(), key=lineno_key, reverse=True)"
                    },
                    {
                        "line_number": 393,
                        "content": "key=lineno_key, reverse=True)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "pydoc.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3.8\\pydoc.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 2126,
                        "content": "def run(self, callback, key=None, completer=None, onerror=None):"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "pydoc.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3.8\\pydoc.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 2456,
                        "content": "'key = %s' % key, '#ffffff', '#ee77aa', '<br>'.join(results))"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "selectors.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3.8\\selectors.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 249,
                        "content": "key = self._fd_to_key.pop(self._fileobj_lookup(fileobj))"
                    },
                    {
                        "line_number": 256,
                        "content": "key = self._fd_to_key[self._fileobj_lookup(fileobj)]"
                    },
                    {
                        "line_number": 299,
                        "content": "key = super().register(fileobj, events, data)"
                    },
                    {
                        "line_number": 352,
                        "content": "key = super().register(fileobj, events, data)"
                    },
                    {
                        "line_number": 377,
                        "content": "key = self._fd_to_key[self._fileobj_lookup(fileobj)]"
                    },
                    {
                        "line_number": 517,
                        "content": "key = super().register(fileobj, events, data)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "selectors.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3.8\\selectors.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 249,
                        "content": "key = self._fd_to_key.pop(self._fileobj_lookup(fileobj))"
                    },
                    {
                        "line_number": 261,
                        "content": "key = self.register(fileobj, events, data)"
                    },
                    {
                        "line_number": 299,
                        "content": "key = super().register(fileobj, events, data)"
                    },
                    {
                        "line_number": 352,
                        "content": "key = super().register(fileobj, events, data)"
                    },
                    {
                        "line_number": 517,
                        "content": "key = super().register(fileobj, events, data)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "symtable.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3.8\\symtable.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 28,
                        "content": "key = table, filename"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "tarfile.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3.8\\tarfile.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 2062,
                        "content": "directories.sort(key=lambda a: a.name)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "trace.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3.8\\trace.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 572,
                        "content": "key = filename, lineno"
                    },
                    {
                        "line_number": 599,
                        "content": "key = filename, lineno"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "warnings.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3.8\\warnings.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 346,
                        "content": "key = (text, category, lineno)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "warnings.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3.8\\warnings.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 346,
                        "content": "key = (text, category, lineno)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "weakref.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3.8\\weakref.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 614,
                        "content": "L.sort(key=lambda item:item[1].index)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "selector_events.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3.8\\asyncio\\selector_events.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 36,
                        "content": "key = selector.get_key(fd)"
                    },
                    {
                        "line_number": 261,
                        "content": "key = self._selector.get_key(fd)"
                    },
                    {
                        "line_number": 276,
                        "content": "key = self._selector.get_key(fd)"
                    },
                    {
                        "line_number": 297,
                        "content": "key = self._selector.get_key(fd)"
                    },
                    {
                        "line_number": 313,
                        "content": "key = self._selector.get_key(fd)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "selector_events.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3.8\\asyncio\\selector_events.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 261,
                        "content": "key = self._selector.get_key(fd)"
                    },
                    {
                        "line_number": 276,
                        "content": "key = self._selector.get_key(fd)"
                    },
                    {
                        "line_number": 297,
                        "content": "key = self._selector.get_key(fd)"
                    },
                    {
                        "line_number": 313,
                        "content": "key = self._selector.get_key(fd)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "__init__.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3.8\\collections\\__init__.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 118,
                        "content": "link.prev, link.next, link.key = last, root, key"
                    },
                    {
                        "line_number": 569,
                        "content": "return sorted(self.items(), key=_itemgetter(1), reverse=True)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "__init__.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3.8\\collections\\__init__.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 569,
                        "content": "return sorted(self.items(), key=_itemgetter(1), reverse=True)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "dumb.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3.8\\dbm\\dumb.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 145,
                        "content": "key = key.encode('utf-8')"
                    },
                    {
                        "line_number": 190,
                        "content": "key = key.encode('utf-8')"
                    },
                    {
                        "line_number": 227,
                        "content": "key = key.encode('utf-8')"
                    },
                    {
                        "line_number": 250,
                        "content": "key = key.encode('utf-8')"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "msvc9compiler.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3.8\\distutils\\msvc9compiler.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 159,
                        "content": "key = RegEnumKey(h, 0)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "msvccompiler.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3.8\\distutils\\msvccompiler.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 138,
                        "content": "key = RegEnumKey(h, 0)"
                    },
                    {
                        "line_number": 598,
                        "content": "key = (r\"%s\\%0.1f\\VC\\VC_OBJECTS_PLATFORM_INFO\\Win32\\Directories\""
                    },
                    {
                        "line_number": 601,
                        "content": "key = (r\"%s\\6.0\\Build System\\Components\\Platforms\""
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "msvccompiler.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3.8\\distutils\\msvccompiler.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 601,
                        "content": "key = (r\"%s\\6.0\\Build System\\Components\\Platforms\""
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "_msvccompiler.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3.8\\distutils\\_msvccompiler.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 32,
                        "content": "key = winreg.OpenKeyEx("
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "upload.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3.8\\distutils\\command\\upload.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 105,
                        "content": "'md5_digest': hashlib.md5(content).hexdigest(),"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "cookiejar.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3.8\\http\\cookiejar.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1304,
                        "content": "cookies.sort(key=lambda a: len(a.path), reverse=True)"
                    },
                    {
                        "line_number": 1642,
                        "content": "key = ns_cookie.domain, ns_cookie.path, ns_cookie.name"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "cookies.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3.8\\http\\cookies.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 389,
                        "content": "if key == \"expires\" and isinstance(value, int):"
                    },
                    {
                        "line_number": 391,
                        "content": "elif key == \"max-age\" and isinstance(value, int):"
                    },
                    {
                        "line_number": 393,
                        "content": "elif key == \"comment\" and isinstance(value, str):"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "topics.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3.8\\pydoc_data\\topics.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 13399,
                        "content": "'      \"key=str.lower\"). The key corresponding to each item in '"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "__init__.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3.8\\test\\support\\__init__.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 2286,
                        "content": "key = threading_setup()"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "request.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3.8\\urllib\\request.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1612,
                        "content": "key = user, host, port, '/'.join(dirs), timeout"
                    },
                    {
                        "line_number": 2072,
                        "content": "key = user, host, port, '/'.join(dirs)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "request.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3.8\\urllib\\request.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 1428,
                        "content": "\"\"\"Parse list of key=value strings where keys are not duplicated.\"\"\""
                    },
                    {
                        "line_number": 2335,
                        "content": "key = realm + '@' + host.lower()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "request.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3.8\\urllib\\request.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 1217,
                        "content": "H = lambda x: hashlib.md5(x.encode(\"ascii\")).hexdigest()"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "request.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3.8\\urllib\\request.py",
                "vulnerability": "SHA-1",
                "lines": [
                    {
                        "line_number": 1149,
                        "content": "dig = hashlib.sha1(b).hexdigest()"
                    },
                    {
                        "line_number": 1219,
                        "content": "H = lambda x: hashlib.sha1(x.encode(\"ascii\")).hexdigest()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collisions."
            },
            {
                "language": "Python",
                "filename": "minidom.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3.8\\xml\\dom\\minidom.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1560,
                        "content": "key = element.tagName"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "ElementTree.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3.8\\xml\\etree\\ElementTree.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 917,
                        "content": "key=lambda x: x[1]):  # sort on prefix"
                    },
                    {
                        "line_number": 973,
                        "content": "key=lambda x: x[1]):  # sort on prefix"
                    },
                    {
                        "line_number": 1929,
                        "content": "qnames, key=lambda n: n.split('}', 1))}"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "msvc9compiler.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3.9\\distutils\\msvc9compiler.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 158,
                        "content": "key = RegEnumKey(h, 0)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "msvccompiler.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3.9\\distutils\\msvccompiler.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 138,
                        "content": "key = RegEnumKey(h, 0)"
                    },
                    {
                        "line_number": 598,
                        "content": "key = (r\"%s\\%0.1f\\VC\\VC_OBJECTS_PLATFORM_INFO\\Win32\\Directories\""
                    },
                    {
                        "line_number": 601,
                        "content": "key = (r\"%s\\6.0\\Build System\\Components\\Platforms\""
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "msvccompiler.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3.9\\distutils\\msvccompiler.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 601,
                        "content": "key = (r\"%s\\6.0\\Build System\\Components\\Platforms\""
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "_msvccompiler.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\python3.9\\distutils\\_msvccompiler.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 30,
                        "content": "key = winreg.OpenKeyEx("
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "apt_check.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\lib\\update-notifier\\apt_check.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 56,
                        "content": "return _get_info_from_os_release(key=\"UBUNTU_CODENAME\")"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "source_plymouth.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\share\\apport\\package-hooks\\source_plymouth.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 16,
                        "content": "key = path_to_key(path)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "firmware_packager.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\share\\fwupd\\firmware_packager.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 50,
                        "content": "<value key=\"LVFS::UpdateProtocol\">{update_protocol}</value>"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "type_printers.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\share\\gdb\\python\\gdb\\command\\type_printers.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 36,
                        "content": "key = lambda x: x.name)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "codegen.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\share\\glib-2.0\\codegen\\codegen.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 742,
                        "content": "key = (a.since, '%s__%s_annotation' % (array_name_lower, a.key_lower))"
                    },
                    {
                        "line_number": 769,
                        "content": "key = (a.since, '%s__%s_arg' % (array_name_lower, a.name))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "codegen.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\share\\glib-2.0\\codegen\\codegen.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 124,
                        "content": "key = (m.since, '_method_%s'%m.name_lower)"
                    },
                    {
                        "line_number": 139,
                        "content": "key = (s.since, '_signal_%s'%s.name_lower)"
                    },
                    {
                        "line_number": 151,
                        "content": "key = (p.since, '_prop_get_%s'%p.name_lower)"
                    },
                    {
                        "line_number": 1371,
                        "content": "key = (m.since, '_method_%s'%m.name_lower)"
                    },
                    {
                        "line_number": 1377,
                        "content": "key = (s.since, '_signal_%s'%s.name_lower)"
                    },
                    {
                        "line_number": 1383,
                        "content": "key = (p.since, '_prop_get_%s'%p.name_lower)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "codegen_docbook.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\share\\glib-2.0\\codegen\\codegen_docbook.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 263,
                        "content": "key = '#%s:%s'%(i.name, p.name)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "codegen_docbook.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\share\\glib-2.0\\codegen\\codegen_docbook.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 263,
                        "content": "key = '#%s:%s'%(i.name, p.name)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "glib_gdb.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\share\\glib-2.0\\gdb\\glib_gdb.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 128,
                        "content": "key = self.keys[self.pos]"
                    },
                    {
                        "line_number": 138,
                        "content": "key = ('[%dk]'% (self.pos), key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "get.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\share\\netplan\\netplan\\cli\\commands\\get.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 51,
                        "content": "key = '.'.join(('network', key))"
                    },
                    {
                        "line_number": 53,
                        "content": "key = re.sub(r'(?<!\\\\)\\.', '\\t', key).replace(r'\\.', '.')"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "set.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\share\\netplan\\netplan\\cli\\commands\\set.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 40,
                        "content": "description='Add new setting by specifying a dotted key=value pair like ethernets.eth0.dhcp4=true',"
                    },
                    {
                        "line_number": 131,
                        "content": "key = 'network.' + key"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "lsb_release.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\\LocalState\\rootfs\\usr\\share\\pyshared\\lsb_release.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 48,
                        "content": "RELEASES_ORDER.sort(key=lambda n: float(n[0]))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "pandocfilters.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\pandocfilters.py",
                "vulnerability": "SHA-1",
                "lines": [
                    {
                        "line_number": 49,
                        "content": "fn = hashlib.sha1(content.encode(sys.getfilesystemencoding())).hexdigest()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collisions."
            },
            {
                "language": "Python",
                "filename": "remote.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\adodbapi\\remote.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 455,
                        "content": "if key == \"remote_cursor\":"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "locales.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\arrow\\locales.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 3163,
                        "content": "key = \"zero\"  # And *never* use 0 in the singular!"
                    },
                    {
                        "line_number": 3173,
                        "content": "key = \"future-singular\""
                    },
                    {
                        "line_number": 3294,
                        "content": "key = \"zero\"  # And *never* use 0 in the singular!"
                    },
                    {
                        "line_number": 3303,
                        "content": "key = \"future-singular\""
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "__init__.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\async_lru\\__init__.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 110,
                        "content": "key = _make_key(args, kwargs, self.__typed)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "__init__.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\async_lru\\__init__.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 110,
                        "content": "key = _make_key(args, kwargs, self.__typed)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "_make.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\attr\\_make.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 535,
                        "content": "sorted(unannotated, key=lambda n: cd.get(n).counter)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "catalog.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\babel\\messages\\catalog.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 665,
                        "content": "key = self._key_for(id, message.context)"
                    },
                    {
                        "line_number": 762,
                        "content": "key = self._key_for(id, context)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "catalog.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\babel\\messages\\catalog.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 879,
                        "content": "key = self._key_for(message.id, message.context)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "__init__.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\bs4\\tests\\__init__.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1111,
                        "content": "<ns2:tag key=\"value\">baz</ns2:tag>"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "cparser.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\cffi\\cparser.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 782,
                        "content": "key = '%s %s' % (kind, name)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "recompiler.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\cffi\\recompiler.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 259,
                        "content": "lst.sort(key=lambda entry: entry.name)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "verifier.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\cffi\\verifier.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 53,
                        "content": "key = '\\x00'.join(['%d.%d' % sys.version_info[:2],"
                    },
                    {
                        "line_number": 58,
                        "content": "key = key.encode('utf-8')"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "verifier.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\cffi\\verifier.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 53,
                        "content": "key = '\\x00'.join(['%d.%d' % sys.version_info[:2],"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "cd.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\charset_normalizer\\cd.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 167,
                        "content": "languages = sorted(languages, key=lambda x: x[1], reverse=True)"
                    },
                    {
                        "line_number": 316,
                        "content": "return sorted(merge, key=lambda x: x[1], reverse=True)"
                    },
                    {
                        "line_number": 394,
                        "content": "filter_alt_coherence_matches(results), key=lambda x: x[1], reverse=True"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "cd.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\charset_normalizer\\cd.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 167,
                        "content": "languages = sorted(languages, key=lambda x: x[1], reverse=True)"
                    },
                    {
                        "line_number": 316,
                        "content": "return sorted(merge, key=lambda x: x[1], reverse=True)"
                    },
                    {
                        "line_number": 394,
                        "content": "filter_alt_coherence_matches(results), key=lambda x: x[1], reverse=True"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "_parser.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\dateutil\\parser\\_parser.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 464,
                        "content": "key = [x for x in ['y', 'm', 'd'] if x not in strids]"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "_parser.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\dateutil\\parser\\_parser.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 464,
                        "content": "key = [x for x in ['y', 'm', 'd'] if x not in strids]"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "_factories.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\dateutil\\tz\\_factories.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 64,
                        "content": "key = (s, posix_offset)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "sessions.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\debugpy\\adapter\\sessions.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 290,
                        "content": "session = sorted(_sessions, key=lambda session: session.id)[0]"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "sessions.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\debugpy\\adapter\\sessions.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 290,
                        "content": "session = sorted(_sessions, key=lambda session: session.id)[0]"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "breakpoint.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\debugpy\\_vendored\\pydevd\\pydevd_attach_to_process\\winappdbg\\breakpoint.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 2268,
                        "content": "key = (dwProcessId, bp.get_address())"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "crash.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\debugpy\\_vendored\\pydevd\\pydevd_attach_to_process\\winappdbg\\crash.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1265,
                        "content": "key = key.decode('hex')"
                    },
                    {
                        "line_number": 1267,
                        "content": "key = zlib.decompress(key)"
                    },
                    {
                        "line_number": 1268,
                        "content": "key = pickle.loads(key)"
                    },
                    {
                        "line_number": 1405,
                        "content": "key  = self.__keys_iter.next()"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "pydevd_comm.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\debugpy\\_vendored\\pydevd\\_pydevd_bundle\\pydevd_comm.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 800,
                        "content": "keys = sorted(keys, key=compare_object_attrs_key)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "pydevd_constants.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\debugpy\\_vendored\\pydevd\\_pydevd_bundle\\pydevd_constants.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 496,
                        "content": "s = sorted(d.items(), key=lambda x:str(x[0]))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "pydevd_process_net_command_json.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\debugpy\\_vendored\\pydevd\\_pydevd_bundle\\pydevd_process_net_command_json.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 110,
                        "content": "key = self._value_to_key[value]"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "pydevd_source_mapping.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\debugpy\\_vendored\\pydevd\\_pydevd_bundle\\pydevd_source_mapping.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 85,
                        "content": "key = (lineno, 'client', runtime_source_filename)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "__main__pydevd_gen_debug_adapter_protocol.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\debugpy\\_vendored\\pydevd\\_pydevd_bundle\\_debug_adapter\\__main__pydevd_gen_debug_adapter_protocol.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 272,
                        "content": "prop_name_and_prop.sort(key=compute_sort_key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "concrete.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\debugpy\\_vendored\\pydevd\\_pydevd_frame_eval\\vendored\\bytecode\\concrete.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 551,
                        "content": "key = const_key(value)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "__init__.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\debugpy\\_vendored\\pydevd\\_pydev_bundle\\fsnotify\\__init__.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 256,
                        "content": "paths = sorted(set(paths), key=lambda path:-len(path))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "pydev_runfiles_parallel.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\debugpy\\_vendored\\pydevd\\_pydev_runfiles\\pydev_runfiles_parallel.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 67,
                        "content": "key = (test.__pydev_pyfile__, test.__pydev_module_name__)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "fontBuilder.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\fontTools\\fontBuilder.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 785,
                        "content": "bag, key=lambda vorg: bag[vorg], reverse=True"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "fontBuilder.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\fontTools\\fontBuilder.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 785,
                        "content": "bag, key=lambda vorg: bag[vorg], reverse=True"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "width.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\fontTools\\cffLib\\width.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 161,
                        "content": "default = min(ends, key=lambda default: byteCost(widths, default, nominal))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "width.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\fontTools\\cffLib\\width.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 161,
                        "content": "default = min(ends, key=lambda default: byteCost(widths, default, nominal))"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "builder.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\fontTools\\colorLib\\builder.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 492,
                        "content": "key=lambda t: (t[1] - t[0], t[1], t[0]),"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "statNames.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\fontTools\\designspaceLib\\statNames.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 148,
                        "content": "key=lambda a: a.axisOrdering,"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "builder.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\fontTools\\feaLib\\builder.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 254,
                        "content": "key = (script, lang, feature_name)"
                    },
                    {
                        "line_number": 1097,
                        "content": "key = (self.script_, language, self.cur_feature_name_)"
                    },
                    {
                        "line_number": 1106,
                        "content": "key = (self.script_, language)"
                    },
                    {
                        "line_number": 1242,
                        "content": "key = (script, lang, self.cur_feature_name_)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "builder.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\fontTools\\feaLib\\builder.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 1097,
                        "content": "key = (self.script_, language, self.cur_feature_name_)"
                    },
                    {
                        "line_number": 1106,
                        "content": "key = (self.script_, language)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "parser.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\fontTools\\feaLib\\parser.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1133,
                        "content": "key = self.cur_token_.lower()"
                    },
                    {
                        "line_number": 1160,
                        "content": "key = self.cur_token_.lower()"
                    },
                    {
                        "line_number": 1349,
                        "content": "key = self.cur_token_.lower()"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "variableScalar.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\fontTools\\feaLib\\variableScalar.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 71,
                        "content": "key = Location({ax.axisTag: ax.defaultValue for ax in self.axes})"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "classifyTools.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\fontTools\\misc\\classifyTools.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 77,
                        "content": "self._sets = sorted(self._sets, key=lambda s: (-len(s), sorted(s)))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "__init__.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\fontTools\\mtiLib\\__init__.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 172,
                        "content": "script.Script.LangSysRecord, key=lambda rec: rec.LangSysTag"
                    },
                    {
                        "line_number": 174,
                        "content": "self.ScriptRecord = sorted(records, key=lambda rec: rec.ScriptTag)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "builder.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\fontTools\\otlLib\\builder.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1361,
                        "content": "key = (glyph1, glyph2)"
                    },
                    {
                        "line_number": 2677,
                        "content": "result = sorted(self.classes_, key=lambda s: (len(s), s), reverse=True)"
                    },
                    {
                        "line_number": 2887,
                        "content": "axisValueRecords.sort(key=lambda avr: avr.AxisIndex)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "__init__.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\fontTools\\subset\\__init__.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 3472,
                        "content": "tags = sorted(font.keys(), key=lambda tag: tagOrder.get(tag, 0))"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "F__e_a_t.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\fontTools\\ttLib\\tables\\F__e_a_t.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 98,
                        "content": "v.settings.items(), key=lambda x: (-1, x[1]) if x[0] == v.default else x"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "F__e_a_t.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\fontTools\\ttLib\\tables\\F__e_a_t.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 98,
                        "content": "v.settings.items(), key=lambda x: (-1, x[1]) if x[0] == v.default else x"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "grUtils.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\fontTools\\ttLib\\tables\\grUtils.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 59,
                        "content": "g = _entries(sorted(attributes.items(), key=lambda x: int(x[0])), sameval)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "G__l_a_t.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\fontTools\\ttLib\\tables\\G__l_a_t.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 165,
                        "content": "self.attributes.items(), key=lambda x: ttFont.getGlyphID(x[0])"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "otTables.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\fontTools\\ttLib\\tables\\otTables.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 305,
                        "content": "for a in sorted(actions, key=lambda x: (-len(x), x)):"
                    },
                    {
                        "line_number": 494,
                        "content": "for action in sorted(actions, key=lambda x: (-len(x), x)):"
                    },
                    {
                        "line_number": 1310,
                        "content": "self.BaseGlyphRecord, key=lambda rec: font.getGlyphID(rec.BaseGlyph)"
                    },
                    {
                        "line_number": 1318,
                        "content": "self.BaseGlyphPaintRecord, key=lambda rec: font.getGlyphID(rec.BaseGlyph)"
                    },
                    {
                        "line_number": 1396,
                        "content": "key = clipBox.as_tuple()"
                    },
                    {
                        "line_number": 1450,
                        "content": "self.groups().items(), key=lambda item: min(item[0])"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "otTables.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\fontTools\\ttLib\\tables\\otTables.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 1140,
                        "content": "ligatures.items(), key=lambda item: (-len(item[0]), item[0])"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "S__i_l_f.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\fontTools\\ttLib\\tables\\S__i_l_f.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 929,
                        "content": "self.colMap.items(), key=lambda x: ttFont.getGlyphID(x[0])"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "TupleVariation.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\fontTools\\ttLib\\tables\\TupleVariation.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 636,
                        "content": "key=lambda item: (-item[1], item[0]),"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "_c_m_a_p.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\fontTools\\ttLib\\tables\\_c_m_a_p.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 1412,
                        "content": "uvList.sort(key=lambda item: (item[1] is not None, item[0], item[1]))"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "_n_a_m_e.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\fontTools\\ttLib\\tables\\_n_a_m_e.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 313,
                        "content": "key = (name.toUnicode(), name.platformID, name.platEncID, name.langID)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "_n_a_m_e.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\fontTools\\ttLib\\tables\\_n_a_m_e.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 313,
                        "content": "key = (name.toUnicode(), name.platformID, name.platEncID, name.langID)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "cff.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\fontTools\\varLib\\cff.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 438,
                        "content": "key = tuple(v is not None for v in all_cs)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "cff.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\fontTools\\varLib\\cff.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 438,
                        "content": "key = tuple(v is not None for v in all_cs)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "featureVars.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\fontTools\\varLib\\featureVars.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 161,
                        "content": "key=lambda d: tuple(sorted(d.items())),"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "featureVars.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\fontTools\\varLib\\featureVars.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 161,
                        "content": "key=lambda d: tuple(sorted(d.items())),"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "interpolatable.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\fontTools\\varLib\\interpolatable.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 458,
                        "content": "for loc in sorted(locs, key=lambda v: (len(v), v)):"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "merger.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\fontTools\\varLib\\merger.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 227,
                        "content": "if not all(sorted(vs, key=sortKey) == vs for vs in lst):"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "models.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\fontTools\\varLib\\models.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 276,
                        "content": "key = tuple(v is not None for v in items)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "models.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\fontTools\\varLib\\models.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 276,
                        "content": "key = tuple(v is not None for v in items)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "varStore.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\fontTools\\varLib\\varStore.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 64,
                        "content": "key = _getLocationKey(region)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "varStore.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\fontTools\\varLib\\varStore.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 620,
                        "content": "encodings.sort(key=_Encoding.width_sort_key)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "names.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\fontTools\\varLib\\instancer\\names.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 171,
                        "content": "key=lambda v: len(v.AxisValueRecord),"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "voltToFea.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\fontTools\\voltLib\\voltToFea.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 132,
                        "content": "for statement in sorted(groups, key=lambda x: Group(x)):"
                    },
                    {
                        "line_number": 194,
                        "content": "stags = sorted(scripts, key=lambda k: 0 if k == \"DFLT\" else 1)"
                    },
                    {
                        "line_number": 197,
                        "content": "ltags = sorted(scripts[stag], key=lambda k: 0 if k == \"dflt\" else 1)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "_auth.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\httpx\\_auth.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 174,
                        "content": "\"MD5\": hashlib.md5,"
                    },
                    {
                        "line_number": 175,
                        "content": "\"MD5-SESS\": hashlib.md5,"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "_auth.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\httpx\\_auth.py",
                "vulnerability": "SHA-1",
                "lines": [
                    {
                        "line_number": 176,
                        "content": "\"SHA\": hashlib.sha1,"
                    },
                    {
                        "line_number": 177,
                        "content": "\"SHA-SESS\": hashlib.sha1,"
                    },
                    {
                        "line_number": 306,
                        "content": "return hashlib.sha1(s).hexdigest()[:16].encode()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collisions."
            },
            {
                "language": "Python",
                "filename": "_auth.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\httpx\\_auth.py",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 178,
                        "content": "\"SHA-256\": hashlib.sha256,"
                    },
                    {
                        "line_number": 179,
                        "content": "\"SHA-256-SESS\": hashlib.sha256,"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Python",
                "filename": "wsgi.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\httpx\\_transports\\wsgi.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 111,
                        "content": "key = header_key.decode(\"ascii\").upper().replace(\"-\", \"_\")"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "kernelapp.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\ipykernel\\kernelapp.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 267,
                        "content": "key=self.session.key,"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "compilerop.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\IPython\\core\\compilerop.py",
                "vulnerability": "SHA-1",
                "lines": [
                    {
                        "line_number": 59,
                        "content": "hash_digest = hashlib.sha1(code.encode(\"utf-8\")).hexdigest()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collisions."
            },
            {
                "language": "Python",
                "filename": "formatters.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\IPython\\core\\formatters.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 503,
                        "content": "key = (type_module, type_name)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "shellapp.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\IPython\\core\\shellapp.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 238,
                        "content": "key = self.matplotlib"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "autoreload.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\IPython\\extensions\\autoreload.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 432,
                        "content": "key = (module.__name__, name)"
                    },
                    {
                        "line_number": 457,
                        "content": "key = (module.__name__, name)"
                    },
                    {
                        "line_number": 483,
                        "content": "key = (module.__name__, name)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "pretty.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\IPython\\lib\\pretty.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 871,
                        "content": "key = (type_module, type_name)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "widget_selection.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\ipywidgets\\widgets\\widget_selection.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 278,
                        "content": "if key == 'index' and self.index == 0:"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "threaded_extension.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\isapi\\threaded_extension.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 42,
                        "content": "if key == ISAPI_SHUTDOWN and overlapped is None:"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "parsing.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\isoduration\\parser\\parsing.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 68,
                        "content": "key = parse_designator(date_designators, ch)"
                    },
                    {
                        "line_number": 111,
                        "content": "key = parse_designator(time_designators, ch)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "cache.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\jedi\\cache.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 85,
                        "content": "key = (args, frozenset(kwargs.items()))"
                    },
                    {
                        "line_number": 108,
                        "content": "key = (args, frozenset(kwargs.items()))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "cache.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\jedi\\cache.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 85,
                        "content": "key = (args, frozenset(kwargs.items()))"
                    },
                    {
                        "line_number": 108,
                        "content": "key = (args, frozenset(kwargs.items()))"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "classes.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\jedi\\api\\classes.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 157,
                        "content": ">>> defs = sorted(defs, key=lambda d: d.line)"
                    },
                    {
                        "line_number": 338,
                        "content": ">>> defs = sorted(defs, key=lambda d: d.line)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "classes.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\jedi\\api\\classes.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 37,
                        "content": "return sorted(names, key=lambda s: s.start_pos or (0, 0))"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "environment.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\jedi\\api\\environment.py",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 166,
                        "content": "sha256 = hashlib.sha256()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Python",
                "filename": "file_name.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\jedi\\api\\file_name.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 40,
                        "content": "listed = sorted(os.scandir(base_path), key=lambda e: e.name)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "helpers.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\jedi\\api\\helpers.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 47,
                        "content": "return sorted(defs, key=lambda x: (str(x.module_path or ''),"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "strings.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\jedi\\api\\strings.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 56,
                        "content": "for dict_key in sorted(_get_python_keys(dicts), key=lambda x: repr(x)):"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "__init__.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\jedi\\api\\__init__.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 540,
                        "content": "return sorted(set(ana), key=lambda x: x.line)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "type_var.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\jedi\\inference\\gradual\\type_var.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 64,
                        "content": "elif key == 'contravariant':"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "bccache.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\jinja2\\bccache.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 175,
                        "content": "key = self.get_cache_key(name, filename)"
                    },
                    {
                        "line_number": 396,
                        "content": "key = self.prefix + bucket.key"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "lexer.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\jinja2\\lexer.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 144,
                        "content": "f\"({'|'.join(re.escape(x) for x in sorted(operators, key=lambda x: -len(x)))})\""
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "commands.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\jupyterlab\\commands.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 2524,
                        "content": "key = (*key, v.major, v.minor, v.patch)"
                    },
                    {
                        "line_number": 2527,
                        "content": "key = (*key, 0) if v.prerelease else (1,)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "commands.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\jupyterlab\\commands.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 2524,
                        "content": "key = (*key, v.major, v.minor, v.patch)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "semver.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\jupyterlab\\semver.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 608,
                        "content": "key = key + tuple(v.prerelease)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "announcements.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\jupyterlab\\handlers\\announcements.py",
                "vulnerability": "SHA-1",
                "lines": [
                    {
                        "line_number": 174,
                        "content": "hash_ = hashlib.sha1(message.encode()).hexdigest()  # noqa: S324"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collisions."
            },
            {
                "language": "Python",
                "filename": "test_announcements.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\jupyterlab\\tests\\test_announcements.py",
                "vulnerability": "SHA-1",
                "lines": [
                    {
                        "line_number": 69,
                        "content": "\"data\": {\"id\": hashlib.sha1(message.encode()).hexdigest(), \"tags\": [\"update\"]}  # noqa: S324"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collisions."
            },
            {
                "language": "Python",
                "filename": "workspaces_handler.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\jupyterlab_server\\workspaces_handler.py",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 83,
                        "content": "signature = \"-\" + hashlib.sha256(data.encode(\"utf-8\")).hexdigest()[:4]"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Python",
                "filename": "connect.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\jupyter_client\\connect.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 504,
                        "content": "key=self.session.key,"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "kernelspecapp.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\jupyter_client\\kernelspecapp.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 53,
                        "content": "name_len = len(sorted(paths, key=lambda name: len(name))[-1])"
                    },
                    {
                        "line_number": 295,
                        "content": "name_len = len(sorted(provisioners, key=lambda name: len(name))[-1])"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "session.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\jupyter_client\\session.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 428,
                        "content": "key = CBytes(config=True, help=\"\"\"execution key, for signing messages.\"\"\")"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "session.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\jupyter_client\\session.py",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 459,
                        "content": "return hashlib.sha256"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Python",
                "filename": "logger.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\jupyter_events\\logger.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 149,
                        "content": "key = event_schema.id"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "bash_language_server.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\jupyter_lsp\\specs\\bash_language_server.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 7,
                        "content": "node_module = key = \"bash-language-server\""
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "javascript_typescript_langserver.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\jupyter_lsp\\specs\\javascript_typescript_langserver.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 5,
                        "content": "node_module = key = \"javascript-typescript-langserver\""
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "julia_language_server.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\jupyter_lsp\\specs\\julia_language_server.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 6,
                        "content": "key = \"julia-language-server\""
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "unified_language_server.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\jupyter_lsp\\specs\\unified_language_server.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 5,
                        "content": "node_module = key = \"unified-language-server\""
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "yaml_language_server.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\jupyter_lsp\\specs\\yaml_language_server.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 6,
                        "content": "node_module = key = \"yaml-language-server\""
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "serverapp.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\jupyter_server\\serverapp.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1061,
                        "content": "key = encodebytes(os.urandom(32))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "serverapp.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\jupyter_server\\serverapp.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 1061,
                        "content": "key = encodebytes(os.urandom(32))"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "serverapp.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\jupyter_server\\serverapp.py",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 1063,
                        "content": "h = hmac.new(key, digestmod=hashlib.sha256)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Python",
                "filename": "figure.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\matplotlib\\figure.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 107,
                        "content": "return max(self._axes, key=self._axes.__getitem__, default=None)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "mlab.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\matplotlib\\mlab.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 108,
                        "content": "return detrend(x, key=detrend_linear, axis=axis)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "texmanager.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\matplotlib\\texmanager.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 333,
                        "content": "key = cls._get_tex_source(tex, fontsize), dpi"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "texmanager.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\matplotlib\\texmanager.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 174,
                        "content": "filehash = hashlib.md5(src.encode('utf-8')).hexdigest()"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "text.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\matplotlib\\text.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1945,
                        "content": "x, relposx = min(xpos, key=lambda v: abs(v[0] - x1))"
                    },
                    {
                        "line_number": 1946,
                        "content": "y, relposy = min(ypos, key=lambda v: abs(v[0] - y1))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "_fontconfig_pattern.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\matplotlib\\_fontconfig_pattern.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 117,
                        "content": "# are necessarily scalar) are given as key=value, skipping Nones."
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "__init__.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\matplotlib\\__init__.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 769,
                        "content": "elif key == \"backend\" and self is globals().get(\"rcParams\"):"
                    },
                    {
                        "line_number": 932,
                        "content": "dict(key=key, fname=fname, line_no=line_no,"
                    },
                    {
                        "line_number": 997,
                        "content": "key: [(rcsetup._auto_backend_sentinel if key == \"backend\" else"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "__init__.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\matplotlib\\__init__.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 769,
                        "content": "elif key == \"backend\" and self is globals().get(\"rcParams\"):"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "backend_svg.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\matplotlib\\backends\\backend_svg.py",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 470,
                        "content": "m = hashlib.sha256()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Python",
                "filename": "backend_webagg_core.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\matplotlib\\backends\\backend_webagg_core.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 77,
                        "content": "key = key[:key.index('k')] + value"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "backend_webagg_core.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\matplotlib\\backends\\backend_webagg_core.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 77,
                        "content": "key = key[:key.index('k')] + value"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "mathmpl.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\matplotlib\\sphinxext\\mathmpl.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 149,
                        "content": "hashlib.md5(f'{latex}{fontset}{fontsize}'.encode()).hexdigest()[-10:])"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "compare.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\matplotlib\\testing\\compare.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 331,
                        "content": "cache_stat, key=lambda path: cache_stat[path].st_atime,"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "compare.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\matplotlib\\testing\\compare.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 48,
                        "content": "md5 = hashlib.md5()"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "decorators.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\matplotlib\\testing\\decorators.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 96,
                        "content": "key=lambda manager: manager.num)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "decorators.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\matplotlib\\testing\\decorators.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 96,
                        "content": "key=lambda manager: manager.num)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_dviread.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\matplotlib\\tests\\test_dviread.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 16,
                        "content": "key = b'TeXfont%d' % n"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_mlab.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\matplotlib\\tests\\test_mlab.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 95,
                        "content": "mlab.detrend(input.T, key=\"constant\", axis=None), target.T)"
                    },
                    {
                        "line_number": 108,
                        "content": "self.allclose(mlab.detrend(input, key=\"default\", axis=1), target)"
                    },
                    {
                        "line_number": 161,
                        "content": "mlab.detrend(input.T, key=\"linear\", axis=0), target.T)"
                    },
                    {
                        "line_number": 165,
                        "content": "mlab.detrend(input, key=\"linear\", axis=1), target)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_mlab.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\matplotlib\\tests\\test_mlab.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 95,
                        "content": "mlab.detrend(input.T, key=\"constant\", axis=None), target.T)"
                    },
                    {
                        "line_number": 109,
                        "content": "self.allclose(mlab.detrend(input.T, key=\"mean\", axis=0), target.T)"
                    },
                    {
                        "line_number": 111,
                        "content": "mlab.detrend(input.T, key=mlab.detrend_mean, axis=0), target.T)"
                    },
                    {
                        "line_number": 138,
                        "content": "assert mlab.detrend(5.5, key=mlab.detrend_linear) == 0."
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "util.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\mistune\\util.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 49,
                        "content": "key = ' '.join(s.split()).strip()"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "footnotes.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\mistune\\plugins\\footnotes.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 22,
                        "content": "key = unikey(m.group('footnote_key'))"
                    },
                    {
                        "line_number": 46,
                        "content": "key = unikey(m.group('footnote_key'))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "art3d.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\mpl_toolkits\\mplot3d\\art3d.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1035,
                        "content": "key=lambda x: x[0], reverse=True)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "art3d.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\mpl_toolkits\\mplot3d\\art3d.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 1035,
                        "content": "key=lambda x: x[0], reverse=True)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "ctx_base.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\mpmath\\ctx_base.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 481,
                        "content": "key = args, tuple(kwargs.items())"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "ctx_mp.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\mpmath\\ctx_mp.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 668,
                        "content": "key = p, q, flags, 'R'"
                    },
                    {
                        "line_number": 671,
                        "content": "key = p, q, flags, 'C'"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "polynomials.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\mpmath\\calculus\\polynomials.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 207,
                        "content": "roots.sort(key=lambda x: (abs(ctx._im(x)), ctx._re(x)))"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "quadrature.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\mpmath\\calculus\\quadrature.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 54,
                        "content": "key = (a, b, degree, prec)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "csshtmlheader.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\nbconvert\\preprocessors\\csshtmlheader.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 90,
                        "content": "md5 = hashlib.md5()  # noqa: S324"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "test_array_object.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\numpy\\array_api\\tests\\test_array_object.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 393,
                        "content": "key = ones((0, 0), dtype=bool_)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "einsumfunc.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\numpy\\core\\einsumfunc.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 204,
                        "content": "path = min(full_results, key=lambda x: x[0])[1]"
                    },
                    {
                        "line_number": 212,
                        "content": "path = min(full_results, key=lambda x: x[0])[1]"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "getlimits.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\numpy\\core\\getlimits.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 336,
                        "content": "key = (ftype(-1.0) / ftype(10.)).newbyteorder('<').tobytes()"
                    },
                    {
                        "line_number": 692,
                        "content": "self.key = \"%s%d\" % (self.kind, self.bits)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "getlimits.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\numpy\\core\\getlimits.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 336,
                        "content": "key = (ftype(-1.0) / ftype(10.)).newbyteorder('<').tobytes()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "numerictypes.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\numpy\\core\\numerictypes.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 521,
                        "content": "ScalarType += sorted(_concrete_types, key=_scalar_type_key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "system_info.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\numpy\\distutils\\system_info.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1781,
                        "content": "key = (tuple(libraries), tuple(library_dirs))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "system_info.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\numpy\\distutils\\system_info.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 1781,
                        "content": "key = (tuple(libraries), tuple(library_dirs))"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "gnu.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\numpy\\distutils\\fcompiler\\gnu.py",
                "vulnerability": "SHA-1",
                "lines": [
                    {
                        "line_number": 402,
                        "content": "h = hashlib.sha1()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collisions."
            },
            {
                "language": "Python",
                "filename": "test_system_info.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\numpy\\distutils\\tests\\test_system_info.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 222,
                        "content": "assert_equal(tsi.get_runtime_lib_dirs(key='rpath'), [self._dir2])"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "cb_rules.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\numpy\\f2py\\cb_rules.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 60,
                        "content": "char *key = \"__f2py_cb_#name#\";"
                    },
                    {
                        "line_number": 65,
                        "content": "char *key = \"__f2py_cb_#name#\";"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "crackfortran.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\numpy\\f2py\\crackfortran.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 3502,
                        "content": "elif key == 'callstatement':"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "npyio.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\numpy\\lib\\npyio.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 2093,
                        "content": "key = names.index(key)"
                    },
                    {
                        "line_number": 2144,
                        "content": "key = names.index(key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "recfunctions.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\numpy\\lib\\recfunctions.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1406,
                        "content": "a, key=None, ignoremask=None, return_index=None):"
                    },
                    {
                        "line_number": 1411,
                        "content": "def find_duplicates(a, key=None, ignoremask=True, return_index=False):"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_direct.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\numpy\\random\\tests\\test_direct.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 373,
                        "content": "key=state['state']['key'])"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_generator_mt19937.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\numpy\\random\\tests\\test_generator_mt19937.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 2623,
                        "content": "key = mt19937.state[\"state\"][\"key\"]"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_generator_mt19937.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\numpy\\random\\tests\\test_generator_mt19937.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 2623,
                        "content": "key = mt19937.state[\"state\"][\"key\"]"
                    },
                    {
                        "line_number": 2631,
                        "content": "key = jumped.state[\"state\"][\"key\"]"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_generator_mt19937.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\numpy\\random\\tests\\test_generator_mt19937.py",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 516,
                        "content": "res = hashlib.sha256(val).hexdigest()"
                    },
                    {
                        "line_number": 523,
                        "content": "res = hashlib.sha256(val).hexdigest()"
                    },
                    {
                        "line_number": 931,
                        "content": "res = hashlib.sha256(actual.view(np.int8)).hexdigest()"
                    },
                    {
                        "line_number": 2626,
                        "content": "sha256 = hashlib.sha256(key)"
                    },
                    {
                        "line_number": 2634,
                        "content": "sha256 = hashlib.sha256(key)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Python",
                "filename": "test_random.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\numpy\\random\\tests\\test_random.py",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 238,
                        "content": "res = hashlib.sha256(val.view(np.int8)).hexdigest()"
                    },
                    {
                        "line_number": 244,
                        "content": "res = hashlib.sha256(val).hexdigest()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Python",
                "filename": "test_randomstate.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\numpy\\random\\tests\\test_randomstate.py",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 360,
                        "content": "res = hashlib.sha256(val.view(np.int8)).hexdigest()"
                    },
                    {
                        "line_number": 366,
                        "content": "res = hashlib.sha256(val).hexdigest()"
                    },
                    {
                        "line_number": 2029,
                        "content": "res = hashlib.sha256(val.view(np.int8)).hexdigest()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Python",
                "filename": "frame.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\pandas\\core\\frame.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 7107,
                        "content": ">>> df.sort_values(by='col4', key=lambda col: col.str.lower())"
                    },
                    {
                        "line_number": 7359,
                        "content": ">>> df.sort_index(key=lambda x: x.str.lower())"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "frame.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\pandas\\core\\frame.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 4137,
                        "content": "key = check_bool_indexer(self.index, key)"
                    },
                    {
                        "line_number": 4316,
                        "content": "key = check_bool_indexer(self.index, key)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "generic.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\pandas\\core\\generic.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 616,
                        "content": "key = f\"{prefix}level_{i}\""
                    },
                    {
                        "line_number": 5202,
                        "content": ">>> df.sort_values(by='col4', key=lambda col: col.str.lower())"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "indexing.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\pandas\\core\\indexing.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 850,
                        "content": "key = key[column_axis]"
                    },
                    {
                        "line_number": 902,
                        "content": "key = tuple(list(x) if is_iterator(x) else x for x in key)"
                    },
                    {
                        "line_number": 1180,
                        "content": "key = tuple(list(x) if is_iterator(x) else x for x in key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "indexing.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\pandas\\core\\indexing.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 757,
                        "content": "key = _tupleize_axis_indexer(self.ndim, self.axis, key)"
                    },
                    {
                        "line_number": 1779,
                        "content": "key = _tupleize_axis_indexer(self.ndim, self.axis, key)"
                    },
                    {
                        "line_number": 2537,
                        "content": "key = _tuplify(self.ndim, key)"
                    },
                    {
                        "line_number": 2538,
                        "content": "key = list(self._convert_key(key))"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "resample.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\pandas\\core\\resample.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 490,
                        "content": "groupby=groupby, key=key, parent=self, include_groups=include_groups"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "resample.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\pandas\\core\\resample.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 2208,
                        "content": "super().__init__(freq=freq, key=key, axis=axis, **kwargs)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "series.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\pandas\\core\\series.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1141,
                        "content": "key = np.asarray(key, dtype=bool)"
                    },
                    {
                        "line_number": 1330,
                        "content": "key = np.asarray(key, dtype=bool)"
                    },
                    {
                        "line_number": 3800,
                        "content": ">>> s.sort_values(key=lambda x: x.str.lower())"
                    },
                    {
                        "line_number": 4052,
                        "content": ">>> s.sort_index(key=lambda x : x.str.lower())"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "series.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\pandas\\core\\series.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 1140,
                        "content": "key = check_bool_indexer(self.index, key)"
                    },
                    {
                        "line_number": 1329,
                        "content": "key = check_bool_indexer(self.index, key)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "datetimelike.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\pandas\\core\\arrays\\datetimelike.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 398,
                        "content": "key = check_array_indexer(self, key)  # maybe ndarray[bool] -> slice"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "interval.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\pandas\\core\\arrays\\interval.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 718,
                        "content": "key = check_array_indexer(self, key)"
                    },
                    {
                        "line_number": 738,
                        "content": "key = check_array_indexer(self, key)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "masked.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\pandas\\core\\arrays\\masked.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 308,
                        "content": "key = check_array_indexer(self, key)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "string_.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\pandas\\core\\arrays\\string_.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 451,
                        "content": "key = check_array_indexer(self, key)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "_mixins.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\pandas\\core\\arrays\\_mixins.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 260,
                        "content": "key = check_array_indexer(self, key)"
                    },
                    {
                        "line_number": 292,
                        "content": "key = check_array_indexer(self, key)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "accessors.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\pandas\\core\\arrays\\arrow\\accessors.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 154,
                        "content": "#     key = pc.add(key, pc.list_value_length(self._pa_array))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "array.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\pandas\\core\\arrays\\arrow\\array.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1856,
                        "content": "key = np.asarray(key, dtype=np.bool_)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "array.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\pandas\\core\\arrays\\arrow\\array.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 1827,
                        "content": "key = check_array_indexer(self, key)"
                    },
                    {
                        "line_number": 1856,
                        "content": "key = np.asarray(key, dtype=np.bool_)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "array.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\pandas\\core\\arrays\\sparse\\array.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1021,
                        "content": "key = cast(np.ndarray, key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "array.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\pandas\\core\\arrays\\sparse\\array.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 1017,
                        "content": "key = check_array_indexer(self, key)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "generic.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\pandas\\core\\groupby\\generic.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 361,
                        "content": "key = base.OutputKey(label=name, position=idx)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "grouper.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\pandas\\core\\groupby\\grouper.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 130,
                        "content": "``df.groupby(pd.Grouper(key=\"Animal\"))`` is equivalent to ``df.groupby('Animal')``"
                    },
                    {
                        "line_number": 171,
                        "content": ">>> df.groupby(pd.Grouper(key=\"Publish date\", freq=\"1W\")).mean()"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "grouper.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\pandas\\core\\groupby\\grouper.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 171,
                        "content": ">>> df.groupby(pd.Grouper(key=\"Publish date\", freq=\"1W\")).mean()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "base.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\pandas\\core\\indexes\\base.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 4743,
                        "content": "ldrop_names = sorted(self_names - overlap, key=self_names_order)"
                    },
                    {
                        "line_number": 5404,
                        "content": "key = np.asarray(key, dtype=bool)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "base.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\pandas\\core\\indexes\\base.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 5388,
                        "content": "key = com.cast_scalar_indexer(key)"
                    },
                    {
                        "line_number": 5402,
                        "content": "key = key.to_numpy(dtype=bool, na_value=False)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "interval.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\pandas\\core\\indexes\\interval.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 544,
                        "content": "key = ensure_index(key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "multi.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\pandas\\core\\indexes\\multi.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 2199,
                        "content": "key = np.asarray(key, dtype=bool)"
                    },
                    {
                        "line_number": 3075,
                        "content": "# e.g. test_groupby_example key = ((0, 0, 1, 2), \"new_col\")"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "multi.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\pandas\\core\\indexes\\multi.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 2185,
                        "content": "key = com.cast_scalar_indexer(key)"
                    },
                    {
                        "line_number": 3075,
                        "content": "# e.g. test_groupby_example key = ((0, 0, 1, 2), \"new_col\")"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "merge.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\pandas\\core\\reshape\\merge.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 2419,
                        "content": "Left (resp. right if called with `key='right'`) labels, as enumerated type."
                    },
                    {
                        "line_number": 2421,
                        "content": "Right (resp. left if called with `key='right'`) labels, as enumerated type."
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "stata.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\pandas\\io\\stata.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 872,
                        "content": "key = struct.unpack(\"<f\", float32_base)[0]"
                    },
                    {
                        "line_number": 882,
                        "content": "key = struct.unpack(\"<d\", float64_base)[0]"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "stata.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\pandas\\io\\stata.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 3129,
                        "content": "key = gso_table.get(val, None)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "_odswriter.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\pandas\\io\\excel\\_odswriter.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 130,
                        "content": "for cell in sorted(cells, key=lambda cell: (cell.row, cell.col)):"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "printing.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\pandas\\io\\formats\\printing.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 154,
                        "content": "key=pprint_thing(k, _nest_lvl + 1, max_seq_items=max_seq_items, **kwds),"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "_misc.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\pandas\\plotting\\_misc.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 641,
                        "content": "key = self._get_canonical_key(key)"
                    },
                    {
                        "line_number": 647,
                        "content": "key = self._get_canonical_key(key)"
                    },
                    {
                        "line_number": 651,
                        "content": "key = self._get_canonical_key(key)"
                    },
                    {
                        "line_number": 657,
                        "content": "key = self._get_canonical_key(key)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_algos.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\pandas\\tests\\test_algos.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 218,
                        "content": "key = np.array([1, 2, 1, np.nan], dtype=\"O\")"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_downstream.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\pandas\\tests\\test_downstream.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 106,
                        "content": "key = cftime.DatetimeGregorian(2000, 1, 1)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_numpy.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\pandas\\tests\\extension\\test_numpy.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 405,
                        "content": "key = full_indexer(df)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "setitem.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\pandas\\tests\\extension\\base\\setitem.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 363,
                        "content": "key = full_indexer(df)"
                    },
                    {
                        "line_number": 389,
                        "content": "key = full_indexer(ser)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "array.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\pandas\\tests\\extension\\decimal\\array.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 206,
                        "content": "key = check_array_indexer(self, key)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_stack_unstack.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\pandas\\tests\\frame\\test_stack_unstack.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1061,
                        "content": "key = r[\"1st\"], (col, r[\"2nd\"], r[\"3rd\"])"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_indexing.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\pandas\\tests\\frame\\indexing\\test_indexing.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 912,
                        "content": "key = (f.index[slice(None, 2)], [\"A\", \"B\"])"
                    },
                    {
                        "line_number": 924,
                        "content": "key = (f.index[slice(None, 2)], [\"A\", \"B\"])"
                    },
                    {
                        "line_number": 935,
                        "content": "key = (f.index[slice(-2, None)], [\"A\", \"B\"])"
                    },
                    {
                        "line_number": 944,
                        "content": "key = (f.index[slice(-2, None)], [\"A\", \"B\"])"
                    },
                    {
                        "line_number": 1741,
                        "content": "key = (df.index[2], df.columns[0])"
                    },
                    {
                        "line_number": 1793,
                        "content": "key = (slice(2, 4), 0)"
                    },
                    {
                        "line_number": 1822,
                        "content": "key = (slice(2, 4), 0)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_indexing.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\pandas\\tests\\frame\\indexing\\test_indexing.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 935,
                        "content": "key = (f.index[slice(-2, None)], [\"A\", \"B\"])"
                    },
                    {
                        "line_number": 944,
                        "content": "key = (f.index[slice(-2, None)], [\"A\", \"B\"])"
                    },
                    {
                        "line_number": 1741,
                        "content": "key = (df.index[2], df.columns[0])"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_sort_index.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\pandas\\tests\\frame\\methods\\test_sort_index.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 859,
                        "content": "result = df.sort_index(key=lambda x: x.str.lower())"
                    },
                    {
                        "line_number": 863,
                        "content": "result = df.sort_index(key=lambda x: x.str.lower(), ascending=False)"
                    },
                    {
                        "line_number": 886,
                        "content": "result = df.sort_index(level=\"a\", key=lambda x: x.str.lower())"
                    },
                    {
                        "line_number": 895,
                        "content": "key=lambda x: x.str.lower() if x.name in [\"a\", \"c\"] else -x,"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_sort_index.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\pandas\\tests\\frame\\methods\\test_sort_index.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 895,
                        "content": "key=lambda x: x.str.lower() if x.name in [\"a\", \"c\"] else -x,"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_sort_values.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\pandas\\tests\\frame\\methods\\test_sort_values.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 755,
                        "content": "result = df.sort_values([0, 1], key=lambda col: col.str.lower())"
                    },
                    {
                        "line_number": 759,
                        "content": "[0, 1], key=lambda col: col.str.lower(), ascending=False"
                    },
                    {
                        "line_number": 761,
                        "content": "expected = df.sort_values(1, key=lambda col: col.str.lower(), ascending=False)"
                    },
                    {
                        "line_number": 778,
                        "content": "result = df.sort_values(0, key=lambda col: col.str.lower())"
                    },
                    {
                        "line_number": 782,
                        "content": "result = df.sort_values(1, key=lambda col: -col)"
                    },
                    {
                        "line_number": 789,
                        "content": "result = df.sort_values(0, key=lambda col: col.str.lower(), axis=1)"
                    },
                    {
                        "line_number": 793,
                        "content": "result = df.sort_values(1, key=lambda col: -col, axis=1)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_sort_values.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\pandas\\tests\\frame\\methods\\test_sort_values.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 694,
                        "content": "result = df.sort_values(0, key=lambda x: -x, ascending=False)"
                    },
                    {
                        "line_number": 714,
                        "content": "result = df.sort_values(by=[\"a\", \"b\"], key=lambda x: -x, ascending=False)"
                    },
                    {
                        "line_number": 793,
                        "content": "result = df.sort_values(1, key=lambda col: -col, axis=1)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_categorical.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\pandas\\tests\\groupby\\test_categorical.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1008,
                        "content": "exp = res[sorted(res.index, key=lambda x: float(x.split()[0]))]"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_groupby.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\pandas\\tests\\groupby\\test_groupby.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 42,
                        "content": "expected = \"Grouper(key='A', level='B', axis=0, sort=False, dropna=True)\""
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_groupby.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\pandas\\tests\\groupby\\test_groupby.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 42,
                        "content": "expected = \"Grouper(key='A', level='B', axis=0, sort=False, dropna=True)\""
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_grouping.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\pandas\\tests\\groupby\\test_grouping.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 772,
                        "content": "grouper = Grouper(key=\"date\", freq=\"YS\")"
                    },
                    {
                        "line_number": 1186,
                        "content": "gb = df.groupby([Grouper(level=\"a\"), Grouper(key=\"b\")], as_index=False)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_grouping.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\pandas\\tests\\groupby\\test_grouping.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 249,
                        "content": "# Grouper(key=...) may be passed in a list"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_reductions.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\pandas\\tests\\groupby\\test_reductions.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 510,
                        "content": "key = np.array([1, 1], dtype=np.int64)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_timegrouper.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\pandas\\tests\\groupby\\test_timegrouper.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 66,
                        "content": "tdg = Grouper(key=\"Date\", freq=\"5D\")"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_timegrouper.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\pandas\\tests\\groupby\\test_timegrouper.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 317,
                        "content": "[Grouper(freq=\"1ME\", key=\"Date\", level=\"Date\"), \"Buyer\"]"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_aggregate.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\pandas\\tests\\groupby\\aggregate\\test_aggregate.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1199,
                        "content": "# check agg(key=(col, aggfunc)) case"
                    },
                    {
                        "line_number": 1236,
                        "content": "# check agg(key=(col, aggfunc)) case"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_nth.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\pandas\\tests\\groupby\\methods\\test_nth.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 304,
                        "content": "key = [df.index.year, df.index.month]"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_nth.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\pandas\\tests\\groupby\\methods\\test_nth.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 304,
                        "content": "key = [df.index.year, df.index.month]"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_quantile.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\pandas\\tests\\groupby\\methods\\test_quantile.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 76,
                        "content": "key = np.array([0, 0, 1, 1, 1], dtype=np.int64)"
                    },
                    {
                        "line_number": 86,
                        "content": "key = np.array([0, 0, 1, 1], dtype=np.int64)"
                    },
                    {
                        "line_number": 113,
                        "content": "key = np.array([1, 0, 1], dtype=np.int64)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_quantile.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\pandas\\tests\\groupby\\methods\\test_quantile.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 76,
                        "content": "key = np.array([0, 0, 1, 1, 1], dtype=np.int64)"
                    },
                    {
                        "line_number": 86,
                        "content": "key = np.array([0, 0, 1, 1], dtype=np.int64)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_rank.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\pandas\\tests\\groupby\\methods\\test_rank.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 129,
                        "content": "key = np.repeat(grps, len(vals))"
                    },
                    {
                        "line_number": 184,
                        "content": "key = np.repeat(grps, len(vals))"
                    },
                    {
                        "line_number": 435,
                        "content": "key = np.repeat(grps, len(vals))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_rank.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\pandas\\tests\\groupby\\methods\\test_rank.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 129,
                        "content": "key = np.repeat(grps, len(vals))"
                    },
                    {
                        "line_number": 184,
                        "content": "key = np.repeat(grps, len(vals))"
                    },
                    {
                        "line_number": 435,
                        "content": "key = np.repeat(grps, len(vals))"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_transform.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\pandas\\tests\\groupby\\transform\\test_transform.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 65,
                        "content": "key = [\"one\", \"two\", \"one\", \"two\", \"one\"]"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_transform.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\pandas\\tests\\groupby\\transform\\test_transform.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 65,
                        "content": "key = [\"one\", \"two\", \"one\", \"two\", \"one\"]"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_any_index.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\pandas\\tests\\indexes\\test_any_index.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 119,
                        "content": "key = np.array([0, 1], dtype=np.intp)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_indexing.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\pandas\\tests\\indexes\\test_indexing.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 275,
                        "content": "key = slice(None, None, \"foo\")"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_indexing.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\pandas\\tests\\indexes\\datetimes\\test_indexing.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 394,
                        "content": "key = idx[1].as_unit(\"ms\")"
                    },
                    {
                        "line_number": 402,
                        "content": "key = dta[0].as_unit(\"ns\") + pd.Timedelta(1)"
                    },
                    {
                        "line_number": 428,
                        "content": "key = time(15, 11, 30)"
                    },
                    {
                        "line_number": 636,
                        "content": "key = box(year=2000, month=1, day=7)"
                    },
                    {
                        "line_number": 655,
                        "content": "key = box(year=year, month=1, day=7)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_indexing.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\pandas\\tests\\indexes\\datetimes\\test_indexing.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 402,
                        "content": "key = dta[0].as_unit(\"ns\") + pd.Timedelta(1)"
                    },
                    {
                        "line_number": 636,
                        "content": "key = box(year=2000, month=1, day=7)"
                    },
                    {
                        "line_number": 655,
                        "content": "key = box(year=year, month=1, day=7)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_partial_slicing.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\pandas\\tests\\indexes\\datetimes\\test_partial_slicing.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 77,
                        "content": "key = \"2015-5-14 00:00:00\""
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_interval.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\pandas\\tests\\indexes\\interval\\test_interval.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 410,
                        "content": "key = make_key(breaks)"
                    },
                    {
                        "line_number": 431,
                        "content": "key = make_key(breaks)"
                    },
                    {
                        "line_number": 463,
                        "content": "key = make_key(breaks2)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_indexing.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\pandas\\tests\\indexes\\multi\\test_indexing.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 779,
                        "content": "key = ((2, 3, 4), \"foo\")"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_partial_indexing.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\pandas\\tests\\indexes\\multi\\test_partial_indexing.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 51,
                        "content": "key = (\"2016-01-01\", \"a\")"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_indexing.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\pandas\\tests\\indexes\\period\\test_indexing.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 763,
                        "content": "key = \"2017-09-01 00:00:01\""
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_range.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\pandas\\tests\\indexes\\ranges\\test_range.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 609,
                        "content": "result = values.sort_values(key=lambda x: x.map(sort_order))"
                    },
                    {
                        "line_number": 615,
                        "content": "result2 = ser.sort_values(key=lambda x: x.map(sort_order))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_indexing.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\pandas\\tests\\indexes\\timedeltas\\test_indexing.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 77,
                        "content": "key = idx[1].as_unit(\"ms\")"
                    },
                    {
                        "line_number": 84,
                        "content": "key = tdi[0].as_unit(\"ns\") + Timedelta(1)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_indexing.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\pandas\\tests\\indexes\\timedeltas\\test_indexing.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 84,
                        "content": "key = tdi[0].as_unit(\"ns\") + Timedelta(1)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_coercion.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\pandas\\tests\\indexing\\test_coercion.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 768,
                        "content": "key = f\"datetime64[ns, {tz}]\""
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_datetime.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\pandas\\tests\\indexing\\test_datetime.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 23,
                        "content": "key = \"2013-01-01 00:00:00.000000050+0000\""
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_loc.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\pandas\\tests\\indexing\\test_loc.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1707,
                        "content": "key = 0 if (indexer is tm.iloc or len(obj) == 0) else obj.index[0]"
                    },
                    {
                        "line_number": 1731,
                        "content": "key = 0 if (indexer is tm.iloc or len(obj) == 0) else obj.index[0]"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_loc.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\pandas\\tests\\indexing\\test_loc.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 1707,
                        "content": "key = 0 if (indexer is tm.iloc or len(obj) == 0) else obj.index[0]"
                    },
                    {
                        "line_number": 1731,
                        "content": "key = 0 if (indexer is tm.iloc or len(obj) == 0) else obj.index[0]"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_sorted.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\pandas\\tests\\indexing\\multiindex\\test_sorted.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 71,
                        "content": "key=lambda x: x.map(lambda entry: entry[2])"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_compat.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\pandas\\tests\\io\\pytables\\test_compat.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 59,
                        "content": "result = pd.read_hdf(path, key=objname, start=1)"
                    },
                    {
                        "line_number": 73,
                        "content": "result = pd.read_hdf(path, key=objname, start=1, stop=2)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_compat.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\pandas\\tests\\io\\pytables\\test_compat.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 73,
                        "content": "result = pd.read_hdf(path, key=objname, start=1, stop=2)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_complex.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\pandas\\tests\\io\\pytables\\test_complex.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 175,
                        "content": "s.to_hdf(path, key=\"obj\", format=\"t\")"
                    },
                    {
                        "line_number": 178,
                        "content": "s.to_hdf(path, key=\"obj\", format=\"t\", index=False)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_complex.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\pandas\\tests\\io\\pytables\\test_complex.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 178,
                        "content": "s.to_hdf(path, key=\"obj\", format=\"t\", index=False)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_file_handling.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\pandas\\tests\\io\\pytables\\test_file_handling.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 202,
                        "content": "df.to_hdf(tmpfile, key=\"df\", complevel=9)"
                    },
                    {
                        "line_number": 367,
                        "content": "df.to_hdf(path, key=\"df\", mode=\"w\", format=\"table\")"
                    },
                    {
                        "line_number": 448,
                        "content": "df.to_hdf(path, key=\"df\", mode=\"w\", format=\"table\")"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_file_handling.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\pandas\\tests\\io\\pytables\\test_file_handling.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 367,
                        "content": "df.to_hdf(path, key=\"df\", mode=\"w\", format=\"table\")"
                    },
                    {
                        "line_number": 448,
                        "content": "df.to_hdf(path, key=\"df\", mode=\"w\", format=\"table\")"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_put.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\pandas\\tests\\io\\pytables\\test_put.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 372,
                        "content": "df.to_hdf(path, key=\"df\", mode=\"w\", format=format)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_read.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\pandas\\tests\\io\\pytables\\test_read.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 250,
                        "content": "df.to_hdf(path, key=\"df\", mode=\"w\", format=\"table\")"
                    },
                    {
                        "line_number": 267,
                        "content": "df.to_hdf(path, key=\"df\", mode=\"w\", format=\"t\")"
                    },
                    {
                        "line_number": 302,
                        "content": "df.to_hdf(path, key=\"df\", mode=\"a\", format=\"table\")"
                    },
                    {
                        "line_number": 404,
                        "content": "df.to_hdf(path, key=\"data\", format=\"table\")"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_read.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\pandas\\tests\\io\\pytables\\test_read.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 250,
                        "content": "df.to_hdf(path, key=\"df\", mode=\"w\", format=\"table\")"
                    },
                    {
                        "line_number": 267,
                        "content": "df.to_hdf(path, key=\"df\", mode=\"w\", format=\"t\")"
                    },
                    {
                        "line_number": 302,
                        "content": "df.to_hdf(path, key=\"df\", mode=\"a\", format=\"table\")"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_retain_attributes.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\pandas\\tests\\io\\pytables\\test_retain_attributes.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 72,
                        "content": "df.to_hdf(path, key=\"data\", mode=\"w\", append=True)"
                    },
                    {
                        "line_number": 82,
                        "content": "df.to_hdf(path, key=\"data\", mode=\"w\", append=True)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_round_trip.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\pandas\\tests\\io\\pytables\\test_round_trip.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 54,
                        "content": "df.to_hdf(path, key=\"table\", append=True)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_select.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\pandas\\tests\\io\\pytables\\test_select.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 716,
                        "content": "params.to_hdf(pp, key=\"df\", mode=\"w\", format=\"table\", data_columns=[\"A\"])"
                    },
                    {
                        "line_number": 727,
                        "content": "hist.to_hdf(hh, key=\"df\", mode=\"w\", format=\"table\")"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_select.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\pandas\\tests\\io\\pytables\\test_select.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 716,
                        "content": "params.to_hdf(pp, key=\"df\", mode=\"w\", format=\"table\", data_columns=[\"A\"])"
                    },
                    {
                        "line_number": 727,
                        "content": "hist.to_hdf(hh, key=\"df\", mode=\"w\", format=\"table\")"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_store.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\pandas\\tests\\io\\pytables\\test_store.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 401,
                        "content": "ser.to_hdf(path, key=\"table\", format=format, errors=\"surrogatepass\")"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_store.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\pandas\\tests\\io\\pytables\\test_store.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 401,
                        "content": "ser.to_hdf(path, key=\"table\", format=format, errors=\"surrogatepass\")"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_store.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\pandas\\tests\\io\\pytables\\test_store.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 61,
                        "content": "def checksum(filename, hash_factory=hashlib.md5, chunk_num_blocks=128):"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "test_series.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\pandas\\tests\\plotting\\test_series.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 129,
                        "content": "key = \"axes.prop_cycle\""
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_time_grouper.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\pandas\\tests\\resample\\test_time_grouper.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 299,
                        "content": "\"TimeGrouper(key='A', freq=<Hour>, axis=0, sort=True, dropna=True, \""
                    },
                    {
                        "line_number": 307,
                        "content": "\"TimeGrouper(key='A', freq=<Hour>, axis=0, sort=True, dropna=True, \""
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_pivot.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\pandas\\tests\\reshape\\test_pivot.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1543,
                        "content": "index=[Grouper(freq=\"ME\", key=\"Date\"), Grouper(freq=\"ME\", key=\"PayDay\")],"
                    },
                    {
                        "line_number": 1553,
                        "content": "columns=[Grouper(freq=\"ME\", key=\"Date\"), Grouper(freq=\"ME\", key=\"PayDay\")],"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_merge.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\pandas\\tests\\reshape\\merge\\test_merge.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 381,
                        "content": "key = np.array([1, 1, 2, 3, 4, 5], dtype=\"int64\")"
                    },
                    {
                        "line_number": 402,
                        "content": "key = np.array([0, 1, 1, 2, 2, 3], dtype=np.int64)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_merge.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\pandas\\tests\\reshape\\merge\\test_merge.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 381,
                        "content": "key = np.array([1, 1, 2, 3, 4, 5], dtype=\"int64\")"
                    },
                    {
                        "line_number": 402,
                        "content": "key = np.array([0, 1, 1, 2, 2, 3], dtype=np.int64)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_datetime.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\pandas\\tests\\series\\indexing\\test_datetime.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 305,
                        "content": "key = datetime(2000, 1, 6)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_getitem.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\pandas\\tests\\series\\indexing\\test_getitem.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 204,
                        "content": "key = \"6 days, 23:11:12\""
                    },
                    {
                        "line_number": 489,
                        "content": "key = np.array([True, True, False, False])"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_setitem.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\pandas\\tests\\series\\indexing\\test_setitem.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 506,
                        "content": "key = Timestamp(\"2012-01-01\")"
                    },
                    {
                        "line_number": 516,
                        "content": "key = Timestamp(\"2012-01-01\")"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_sort_index.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\pandas\\tests\\series\\methods\\test_sort_index.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 227,
                        "content": "result = s.sort_index(level=\"C\", key=lambda x: x)  # nothing happens"
                    },
                    {
                        "line_number": 238,
                        "content": "result = s.sort_index(level=[\"A\", \"C\"], key=lambda x: x)  # nothing happens"
                    },
                    {
                        "line_number": 248,
                        "content": "result = series.sort_index(key=lambda x: x.str.lower())"
                    },
                    {
                        "line_number": 252,
                        "content": "result = series.sort_index(key=lambda x: x.str.lower(), ascending=False)"
                    },
                    {
                        "line_number": 313,
                        "content": "result = s.sort_index(key=lambda x: x.year)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_sort_index.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\pandas\\tests\\series\\methods\\test_sort_index.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 227,
                        "content": "result = s.sort_index(level=\"C\", key=lambda x: x)  # nothing happens"
                    },
                    {
                        "line_number": 238,
                        "content": "result = s.sort_index(level=[\"A\", \"C\"], key=lambda x: x)  # nothing happens"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_sort_values.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\pandas\\tests\\series\\methods\\test_sort_values.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 229,
                        "content": "result = series.sort_values(axis=0, key=lambda x: x.str.lower())"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_sort_values.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\pandas\\tests\\series\\methods\\test_sort_values.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 244,
                        "content": "result = series.sort_values(axis=0, key=lambda x: -x, ascending=False)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "frequencies.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\pandas\\tseries\\frequencies.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 66,
                        "content": "key = f\"{_prefix}-{_m}\""
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "_decorators.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\pandas\\util\\_decorators.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 316,
                        "content": "new_params.sort(key=lambda p: p.kind)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "config.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\pandas\\_config\\config.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 140,
                        "content": "key = _translate_key(key)"
                    },
                    {
                        "line_number": 146,
                        "content": "key = _get_single_key(pat, silent)"
                    },
                    {
                        "line_number": 167,
                        "content": "key = _get_single_key(k, silent)"
                    },
                    {
                        "line_number": 216,
                        "content": "key = _get_single_key(pat, silent=True)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "config.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\pandas\\_config\\config.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 562,
                        "content": "key=key, defval=defval, doc=doc, validator=validator, cb=cb"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "cache.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\parso\\cache.py",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 265,
                        "content": "file_hash = hashlib.sha256(str(path).encode(\"utf-8\")).hexdigest()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Python",
                "filename": "grammar.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\parso\\grammar.py",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 47,
                        "content": "self._hashed = hashlib.sha256(text.encode(\"utf-8\")).hexdigest()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Python",
                "filename": "IcoImagePlugin.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\PIL\\IcoImagePlugin.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 175,
                        "content": "self.entry = sorted(self.entry, key=lambda x: x[\"color_depth\"])"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "Image.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\PIL\\Image.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 2603,
                        "content": "x / aspect, key=lambda n: 0 if n == 0 else abs(aspect - x / n)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "Image.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\PIL\\Image.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 2600,
                        "content": "x = round_aspect(y * aspect, key=lambda n: abs(aspect - n / y))"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "PngImagePlugin.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\PIL\\PngImagePlugin.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 297,
                        "content": "key = key.encode(\"latin-1\", \"strict\")"
                    },
                    {
                        "line_number": 333,
                        "content": "key = key.encode(\"latin-1\", \"strict\")"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "windows.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\platformdirs\\windows.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 210,
                        "content": "key = winreg.OpenKey(winreg.HKEY_CURRENT_USER, r\"Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders\")"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "cache.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\prompt_toolkit\\cache.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 122,
                        "content": "key = (a, tuple(sorted(kw.items())))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "application.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\prompt_toolkit\\application\\application.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1508,
                        "content": "key = current_window, frozenset(other_controls)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "typeahead.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\prompt_toolkit\\input\\typeahead.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 55,
                        "content": "key = input_obj.typeahead_hash()"
                    },
                    {
                        "line_number": 65,
                        "content": "key = input_obj.typeahead_hash()"
                    },
                    {
                        "line_number": 76,
                        "content": "key = input_obj.typeahead_hash()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "win32.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\prompt_toolkit\\input\\win32.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 429,
                        "content": "result.key = mapping.get(result.key, result.key)"
                    },
                    {
                        "line_number": 448,
                        "content": "result.key = mapping.get(result.key, result.key)"
                    },
                    {
                        "line_number": 466,
                        "content": "result.key = mapping.get(result.key, result.key)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "key_bindings.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\prompt_toolkit\\key_binding\\key_bindings.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 440,
                        "content": "key = KEY_ALIASES.get(key, key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "key_bindings.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\prompt_toolkit\\key_binding\\key_bindings.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 440,
                        "content": "key = KEY_ALIASES.get(key, key)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "key_processor.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\prompt_toolkit\\key_binding\\key_processor.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 59,
                        "content": "return self.key == other.key and self.data == other.data"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "key_processor.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\prompt_toolkit\\key_binding\\key_processor.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 54,
                        "content": "return f\"{self.__class__.__name__}(key={self.key!r}, data={self.data!r})\""
                    },
                    {
                        "line_number": 419,
                        "content": "self.feed(KeyPress(key=Keys.SIGINT), first=True)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "emacs.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\prompt_toolkit\\key_binding\\bindings\\emacs.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 423,
                        "content": "if key == Keys.ShiftDown:"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "containers.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\prompt_toolkit\\layout\\containers.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1548,
                        "content": "key = (margin, get_app().render_counter)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "controls.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\prompt_toolkit\\layout\\controls.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 651,
                        "content": "key = (document.text, self.lexer.invalidation_hash())"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "controls.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\prompt_toolkit\\layout\\controls.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 196,
                        "content": "key = get_app().render_counter, lineno, width, slice_stop"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "_common.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\psutil\\_common.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 441,
                        "content": "key = (args, frozenset(sorted(kwargs.items())))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "_common.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\psutil\\_common.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 441,
                        "content": "key = (args, frozenset(sorted(kwargs.items())))"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "_compat.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\psutil\\_compat.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 296,
                        "content": "key = make_key(args, kwds, typed)"
                    },
                    {
                        "line_number": 310,
                        "content": "key = make_key(args, kwds, typed)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "_pslinux.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\psutil\\_pslinux.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 768,
                        "content": "paths.sort(key=lambda x: int(re.search(r\"[0-9]+\", x).group()))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "_pslinux.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\psutil\\_pslinux.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 768,
                        "content": "paths.sort(key=lambda x: int(re.search(r\"[0-9]+\", x).group()))"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "__init__.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\psutil\\__init__.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 2236,
                        "content": "rawlist.sort(key=lambda x: x[1])  # sort by family"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_linux.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\psutil\\tests\\test_linux.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1604,
                        "content": "tid = sorted(threads, key=lambda x: x.id)[1].id"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "lex.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\pycparser\\ply\\lex.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 726,
                        "content": "s.sort(key=lambda x: len(x[1]), reverse=True)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "lex.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\pycparser\\ply\\lex.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 722,
                        "content": "f.sort(key=lambda x: x[1].__code__.co_firstlineno)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "lexer.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\pygments\\lexer.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 947,
                        "content": "key=lambda x: x[self._prof_sort_index],"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "sphinxext.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\pygments\\sphinxext.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 104,
                        "content": "for classname, data in sorted(LEXERS.items(), key=lambda x: x[1][1].lower()):"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "img.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\pygments\\formatters\\img.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 182,
                        "content": "key = _winreg.OpenKey(*keyname)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "img.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\pygments\\formatters\\img.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 182,
                        "content": "key = _winreg.OpenKey(*keyname)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "lilypond.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\pygments\\lexers\\lilypond.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 193,
                        "content": "# (myAlist.my-key.my-nested-key = \\markup \\spam \\eggs)."
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "lisp.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\pygments\\lexers\\lisp.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1066,
                        "content": "'member-name-key-hash-code', 'member-name-key=?', 'member-name-key?',"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "core.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\pyparsing\\core.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 4191,
                        "content": "fatals.sort(key=lambda e: -e.loc)"
                    },
                    {
                        "line_number": 4507,
                        "content": "fatals.sort(key=lambda e: -e.loc)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "core.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\pyparsing\\core.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 4193,
                        "content": "fatals.sort(key=lambda e: (-e.loc, -len(str(e.parser_element))))"
                    },
                    {
                        "line_number": 4509,
                        "content": "fatals.sort(key=lambda e: (-e.loc, -len(str(e.parser_element))))"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "jsonlogger.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\pythonjsonlogger\\jsonlogger.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 188,
                        "content": "key = self.timestamp if type(self.timestamp) == str else 'timestamp'"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "jsonlogger.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\pythonjsonlogger\\jsonlogger.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 188,
                        "content": "key = self.timestamp if type(self.timestamp) == str else 'timestamp'"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "regedit.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\pythonwin\\pywin\\tools\\regedit.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 367,
                        "content": "key = win32api.RegEnumKey(hkey, keyNum)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "console_widget.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\qtconsole\\console_widget.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 1457,
                        "content": "elif key == QtCore.Qt.Key_Down and not shift_down:"
                    },
                    {
                        "line_number": 1474,
                        "content": "elif key == QtCore.Qt.Key_Left and not shift_down:"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "frontend_widget.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\qtconsole\\frontend_widget.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 192,
                        "content": "key = QtCore.Qt.CTRL | QtCore.Qt.SHIFT | QtCore.Qt.Key_C"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "qtconsoleapp.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\qtconsole\\qtconsoleapp.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 377,
                        "content": "'{name}.{key} = {value!r}'.format(key=key, value=value,"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "auth.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\requests\\auth.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 148,
                        "content": "return hashlib.md5(x).hexdigest()"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "auth.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\requests\\auth.py",
                "vulnerability": "SHA-1",
                "lines": [
                    {
                        "line_number": 156,
                        "content": "return hashlib.sha1(x).hexdigest()"
                    },
                    {
                        "line_number": 205,
                        "content": "cnonce = hashlib.sha1(s).hexdigest()[:16]"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collisions."
            },
            {
                "language": "Python",
                "filename": "auth.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\requests\\auth.py",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 164,
                        "content": "return hashlib.sha256(x).hexdigest()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Python",
                "filename": "models.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\requests\\models.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 989,
                        "content": "key = link.get(\"rel\") or link.get(\"url\")"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "models.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\requests\\models.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 989,
                        "content": "key = link.get(\"rel\") or link.get(\"url\")"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "utils.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\requests\\utils.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 532,
                        "content": "key = param[:index_of_equals].strip(items_to_strip)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "_netcdf.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\scipy\\io\\_netcdf.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 463,
                        "content": "variables = sorted(self.variables, key=sortkey, reverse=True)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "hb.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\scipy\\io\\_harwell_boeing\\hb.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 47,
                        "content": "def from_data(cls, m, title=\"Default title\", key=\"0\", mxtype=None, fmt=None):"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "blas.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\scipy\\linalg\\blas.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 386,
                        "content": "key = (names, dtype, ilp64)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_filter_design.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\scipy\\signal\\tests\\test_filter_design.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 2625,
                        "content": "assert_allclose(sorted(p, key=np.imag), sorted(p2, key=np.imag))"
                    },
                    {
                        "line_number": 2659,
                        "content": "assert_allclose(sorted(z, key=np.imag), sorted(z2, key=np.imag))"
                    },
                    {
                        "line_number": 2660,
                        "content": "assert_allclose(sorted(p, key=np.imag), sorted(p2, key=np.imag))"
                    },
                    {
                        "line_number": 3064,
                        "content": "sorted(z2, key=np.angle), rtol=1e-13)"
                    },
                    {
                        "line_number": 3066,
                        "content": "sorted(p2, key=np.angle), rtol=1e-12)"
                    },
                    {
                        "line_number": 3123,
                        "content": "sorted(z2, key=np.angle), rtol=1e-13)"
                    },
                    {
                        "line_number": 3125,
                        "content": "sorted(p2, key=np.angle), rtol=1e-12)"
                    },
                    {
                        "line_number": 3168,
                        "content": "sorted(z2, key=np.angle), rtol=1e-13)"
                    },
                    {
                        "line_number": 3170,
                        "content": "sorted(p2, key=np.angle), rtol=1e-13)"
                    },
                    {
                        "line_number": 3201,
                        "content": "sorted(z2, key=np.angle), rtol=1e-13)"
                    },
                    {
                        "line_number": 3203,
                        "content": "sorted(p2, key=np.angle), rtol=1e-13)"
                    },
                    {
                        "line_number": 3337,
                        "content": "sorted(z2, key=np.angle), rtol=1e-4)"
                    },
                    {
                        "line_number": 3339,
                        "content": "sorted(p2, key=np.angle), rtol=1e-4)"
                    },
                    {
                        "line_number": 3392,
                        "content": "sorted(z2, key=np.angle), rtol=1e-4)"
                    },
                    {
                        "line_number": 3394,
                        "content": "sorted(p2, key=np.angle), rtol=1e-4)"
                    },
                    {
                        "line_number": 3429,
                        "content": "sorted(z2, key=np.angle), rtol=1e-4)"
                    },
                    {
                        "line_number": 3431,
                        "content": "sorted(p2, key=np.angle), rtol=1e-4)"
                    },
                    {
                        "line_number": 3498,
                        "content": "sorted(z2, key=np.angle), rtol=1e-6)"
                    },
                    {
                        "line_number": 3500,
                        "content": "sorted(p2, key=np.angle), rtol=1e-5)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_filter_design.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\scipy\\signal\\tests\\test_filter_design.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 2625,
                        "content": "assert_allclose(sorted(p, key=np.imag), sorted(p2, key=np.imag))"
                    },
                    {
                        "line_number": 2659,
                        "content": "assert_allclose(sorted(z, key=np.imag), sorted(z2, key=np.imag))"
                    },
                    {
                        "line_number": 2660,
                        "content": "assert_allclose(sorted(p, key=np.imag), sorted(p2, key=np.imag))"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "_gcrotmk.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\scipy\\sparse\\linalg\\_isolve\\_gcrotmk.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 329,
                        "content": "CU.sort(key=lambda cu: cu[0] is not None)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "core.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\stack_data\\core.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 497,
                        "content": "key=lambda item: (-item[1], item[0][0].co_name))"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "formatting.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\stack_data\\formatting.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 221,
                        "content": "for var in sorted(frame_info.variables, key=lambda v: v.name):"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "serializing.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\stack_data\\serializing.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 180,
                        "content": "for var in sorted(frame_info.variables, key=lambda v: v.name):"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "serializing.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\stack_data\\serializing.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 129,
                        "content": "key=lambda item: (-item[1], item[0][0].co_name),"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "utils.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\stack_data\\utils.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 47,
                        "content": "for is_common, group in itertools.groupby(lst, key=lambda x: counts[x] > 3):"
                    },
                    {
                        "line_number": 79,
                        "content": "key=lambda t: t[1][1],"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "baseclasses.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sympy\\categories\\baseclasses.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 608,
                        "content": ">>> premises_keys = sorted(d.premises.keys(), key=default_sort_key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "diagram_drawing.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sympy\\categories\\diagram_drawing.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 684,
                        "content": "DiagramGrid._triangle_objects(tri), key=default_sort_key)"
                    },
                    {
                        "line_number": 693,
                        "content": "candidates = [sorted(e, key=default_sort_key)"
                    },
                    {
                        "line_number": 695,
                        "content": "sorted_candidates = sorted(candidates, key=default_sort_key)"
                    },
                    {
                        "line_number": 698,
                        "content": "return tuple(sorted(sorted_candidates[0], key=default_sort_key))"
                    },
                    {
                        "line_number": 947,
                        "content": "objects = sorted(all_objects, key=default_sort_key)"
                    },
                    {
                        "line_number": 1042,
                        "content": "adjlists[obj].sort(key=default_sort_key)"
                    },
                    {
                        "line_number": 1055,
                        "content": "sorted_objects = sorted(objects, key=default_sort_key)"
                    },
                    {
                        "line_number": 1204,
                        "content": "components = sorted(components, key=default_sort_key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "diagram_drawing.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sympy\\categories\\diagram_drawing.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 755,
                        "content": "key=lambda e: FiniteSet(*e).sort_key())"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "numpy_nodes.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sympy\\codegen\\numpy_nodes.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 42,
                        "content": "return Function.__new__(cls, *sorted(args, key=default_sort_key))"
                    },
                    {
                        "line_number": 84,
                        "content": "return Function.__new__(cls, *sorted(args, key=default_sort_key))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "rewriting.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sympy\\codegen\\rewriting.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 134,
                        "content": "for optim in sorted(optimizations, key=lambda opt: opt.priority, reverse=True):"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "rewriting.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sympy\\codegen\\rewriting.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 134,
                        "content": "for optim in sorted(optimizations, key=lambda opt: opt.priority, reverse=True):"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "partitions.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sympy\\combinatorics\\partitions.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 110,
                        "content": ">>> l.sort(key=default_sort_key); l"
                    },
                    {
                        "line_number": 132,
                        "content": "self._partition = sorted([sorted(p, key=default_sort_key)"
                    },
                    {
                        "line_number": 267,
                        "content": "[i for p in partition for i in p], key=default_sort_key)])"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "pc_groups.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sympy\\combinatorics\\pc_groups.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 264,
                        "content": "key = ((s2, -1), (s1, 1), (s2, 1))"
                    },
                    {
                        "line_number": 265,
                        "content": "key = self.free_group.dtype(key)"
                    },
                    {
                        "line_number": 351,
                        "content": "key = free_group.dtype(key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "pc_groups.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sympy\\combinatorics\\pc_groups.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 264,
                        "content": "key = ((s2, -1), (s1, 1), (s2, 1))"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "permutations.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sympy\\combinatorics\\permutations.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1580,
                        "content": "ic.sort(key=lambda x: key(x[0]))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "perm_groups.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sympy\\combinatorics\\perm_groups.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1025,
                        "content": "orbits.sort(key=lambda x: -len(x))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "perm_groups.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sympy\\combinatorics\\perm_groups.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 821,
                        "content": "key = lambda x: base_ordering[base[l]^x])"
                    },
                    {
                        "line_number": 876,
                        "content": "gamma = sorted(orbits[l], key = lambda y: base_ordering[y^x])[0]"
                    },
                    {
                        "line_number": 4085,
                        "content": "return [min(orbit, key = lambda x: base_ordering[x]) \\"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "polyhedron.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sympy\\combinatorics\\polyhedron.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 388,
                        "content": "faces = [minlex(f, directed=False, key=default_sort_key) for f in faces]"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "polyhedron.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sympy\\combinatorics\\polyhedron.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 388,
                        "content": "faces = [minlex(f, directed=False, key=default_sort_key) for f in faces]"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "testutil.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sympy\\combinatorics\\testutil.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 318,
                        "content": "items.sort(key=lambda x: len(x[1]), reverse=True)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_partitions.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sympy\\combinatorics\\tests\\test_partitions.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 32,
                        "content": "l.sort(key=default_sort_key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "delta.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sympy\\concrete\\delta.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 190,
                        "content": "for arg in sorted(f.args, key=default_sort_key):"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "add.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sympy\\core\\add.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1257,
                        "content": "return tuple(sorted(self.args, key=default_sort_key))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "containers.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sympy\\core\\containers.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 322,
                        "content": "return tuple(sorted(self.args, key=default_sort_key))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "expr.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sympy\\core\\expr.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1202,
                        "content": "gens = sorted(gens, key=default_sort_key)"
                    },
                    {
                        "line_number": 3256,
                        "content": "terms = sorted(Add.make_args(s.removeO()), key=lambda i: int(i.as_coeff_exponent(k)[1]))"
                    },
                    {
                        "line_number": 3678,
                        "content": "for hint in sorted(hints.keys(), key=_expand_hint_key):"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "expr.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sympy\\core\\expr.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 1133,
                        "content": "key = lambda x:not isinstance(x, (Number, NumberSymbol))"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "exprtools.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sympy\\core\\exprtools.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1382,
                        "content": "nc_obj = sorted(nc_obj, key=default_sort_key)"
                    },
                    {
                        "line_number": 1390,
                        "content": "nc_syms.sort(key=default_sort_key)"
                    },
                    {
                        "line_number": 1531,
                        "content": "rep1 = [(n, Dummy()) for n in sorted(nc_symbols, key=default_sort_key)]"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "function.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sympy\\core\\function.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 2189,
                        "content": "pts = sorted(set(point), key=default_sort_key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "kind.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sympy\\core\\kind.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 361,
                        "content": "key = self._dispatcher.funcs[sigs]"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "kind.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sympy\\core\\kind.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 361,
                        "content": "key = self._dispatcher.funcs[sigs]"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "operations.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sympy\\core\\operations.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 698,
                        "content": "key = self._dispatcher.funcs[sigs]"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "operations.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sympy\\core\\operations.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 698,
                        "content": "key = self._dispatcher.funcs[sigs]"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "sorting.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sympy\\core\\sorting.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 60,
                        "content": ">>> sorted(a, key=default_sort_key)"
                    },
                    {
                        "line_number": 66,
                        "content": ">>> a.sort(key=default_sort_key); a[0]"
                    },
                    {
                        "line_number": 68,
                        "content": ">>> min(a, key=default_sort_key)"
                    },
                    {
                        "line_number": 100,
                        "content": ">>> sorted(eq.args, key=default_sort_key)"
                    },
                    {
                        "line_number": 112,
                        "content": ">>> sorted([sin(x)*cos(x), sin(x)], key=default_sort_key)"
                    },
                    {
                        "line_number": 114,
                        "content": ">>> sorted([x, x**2, sqrt(x), x**3], key=default_sort_key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "symbol.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sympy\\core\\symbol.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 923,
                        "content": "key = lambda x:tuple(sorted(x.assumptions0.items()))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "symbol.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sympy\\core\\symbol.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 923,
                        "content": "key = lambda x:tuple(sorted(x.assumptions0.items()))"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "traversal.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sympy\\core\\traversal.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 106,
                        "content": "is given; simply passing key=True will guarantee that the traversal is"
                    },
                    {
                        "line_number": 284,
                        "content": "is given; simply passing key=True will guarantee that the traversal is"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_expr.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sympy\\core\\tests\\test_expr.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1698,
                        "content": "assert sorted(exprs, key=default_sort_key) == exprs"
                    },
                    {
                        "line_number": 1702,
                        "content": "assert sorted(exprs, key=default_sort_key) == exprs"
                    },
                    {
                        "line_number": 1705,
                        "content": "assert sorted(exprs, key=default_sort_key) == exprs"
                    },
                    {
                        "line_number": 1708,
                        "content": "assert sorted(exprs, key=default_sort_key) == exprs"
                    },
                    {
                        "line_number": 1711,
                        "content": "assert sorted(exprs, key=default_sort_key) == exprs"
                    },
                    {
                        "line_number": 1714,
                        "content": "assert sorted(exprs, key=default_sort_key) == exprs"
                    },
                    {
                        "line_number": 1717,
                        "content": "assert sorted(exprs, key=default_sort_key) == exprs"
                    },
                    {
                        "line_number": 1720,
                        "content": "assert sorted(exprs, key=default_sort_key) == exprs"
                    },
                    {
                        "line_number": 1723,
                        "content": "assert sorted(exprs, key=default_sort_key) == exprs"
                    },
                    {
                        "line_number": 1726,
                        "content": "assert sorted(exprs, key=default_sort_key) == exprs"
                    },
                    {
                        "line_number": 1729,
                        "content": "assert sorted(exprs, key=default_sort_key) == exprs"
                    },
                    {
                        "line_number": 1732,
                        "content": "assert sorted(exprs, key=default_sort_key) == exprs"
                    },
                    {
                        "line_number": 1735,
                        "content": "assert sorted([b, a], key=default_sort_key) == exprs"
                    },
                    {
                        "line_number": 1791,
                        "content": "assert sorted([-m, s], key=lambda arg: arg.sort_key()) == [-m, s]"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_expr.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sympy\\core\\tests\\test_expr.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 1791,
                        "content": "assert sorted([-m, s], key=lambda arg: arg.sort_key()) == [-m, s]"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_sorting.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sympy\\core\\tests\\test_sorting.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 9,
                        "content": "assert sorted([func, x, func], key=default_sort_key) == [func, func, x]"
                    },
                    {
                        "line_number": 15,
                        "content": "assert sorted([x, func], key=default_sort_key) == [func, x]"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "crypto.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sympy\\crypto\\crypto.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 171,
                        "content": "key = check_and_join(key, alp, filter=True)"
                    },
                    {
                        "line_number": 269,
                        "content": "key = A[shift:] + A[:shift]"
                    },
                    {
                        "line_number": 726,
                        "content": ">>> key = AZ('gold bug'); n1 = len(key); n2 = len(m)"
                    },
                    {
                        "line_number": 751,
                        "content": "key = [map[c] for c in key]"
                    },
                    {
                        "line_number": 908,
                        "content": ">>> key = Matrix([[1, 1, 1, 2], [0, 1, 1, 0],"
                    },
                    {
                        "line_number": 1261,
                        "content": "key = padded_key(key, bifid5)"
                    },
                    {
                        "line_number": 1308,
                        "content": "key = padded_key(key, bifid5)"
                    },
                    {
                        "line_number": 1335,
                        "content": "key = padded_key(key, bifid5)"
                    },
                    {
                        "line_number": 1372,
                        "content": "key = padded_key(key, bifid6)"
                    },
                    {
                        "line_number": 1415,
                        "content": "key = padded_key(key, bifid6)"
                    },
                    {
                        "line_number": 1445,
                        "content": "key = padded_key(key, bifid6)"
                    },
                    {
                        "line_number": 2359,
                        "content": ">>> key = [F(1), F(0), F(0), F(1)]"
                    },
                    {
                        "line_number": 2420,
                        "content": ">>> key = [F(1), F(0), F(0), F(1)]"
                    },
                    {
                        "line_number": 2467,
                        "content": ">>> key = [F(1), F(0), F(0), F(1)]"
                    },
                    {
                        "line_number": 2472,
                        "content": ">>> key = [F(1), F(1), F(0), F(1)]"
                    },
                    {
                        "line_number": 2477,
                        "content": ">>> key = [F(1), F(1), F(0)]"
                    },
                    {
                        "line_number": 2482,
                        "content": ">>> key = [F(1), F(0), F(1)]"
                    },
                    {
                        "line_number": 3128,
                        "content": "return ''.join(sorted(message, key=lambda i: next(p)))"
                    },
                    {
                        "line_number": 3157,
                        "content": "idx = sorted(range(len(ciphertext)), key=lambda i: next(p))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "crypto.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sympy\\crypto\\crypto.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 171,
                        "content": "key = check_and_join(key, alp, filter=True)"
                    },
                    {
                        "line_number": 726,
                        "content": ">>> key = AZ('gold bug'); n1 = len(key); n2 = len(m)"
                    },
                    {
                        "line_number": 908,
                        "content": ">>> key = Matrix([[1, 1, 1, 2], [0, 1, 1, 0],"
                    },
                    {
                        "line_number": 2137,
                        "content": ">>> key = kid_rsa_public_key(a, b, A, B)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "diffgeom.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sympy\\diffgeom\\diffgeom.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 414,
                        "content": "key = Tuple(self.name, sys.name)"
                    },
                    {
                        "line_number": 504,
                        "content": "min_distance = max(path_dict.values(), key=lambda x:x[0])[0]"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "tensor_functions.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sympy\\functions\\special\\tensor_functions.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 196,
                        "content": "if i != min(i, j, key=default_sort_key):"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "polygon.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sympy\\geometry\\polygon.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 2129,
                        "content": "[nodup[i], nodup[i + 1], nodup[i + 2]], key=default_sort_key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "util.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sympy\\geometry\\util.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 72,
                        "content": "return tuple(sorted(p, key=lambda x: x.args))"
                    },
                    {
                        "line_number": 321,
                        "content": "p.sort(key=lambda x: x.args)"
                    },
                    {
                        "line_number": 451,
                        "content": "p.sort(key=lambda x: x.args)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "deltafunctions.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sympy\\integrals\\deltafunctions.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 53,
                        "content": "sorted_args = sorted(c, key=default_sort_key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "intpoly.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sympy\\integrals\\intpoly.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 979,
                        "content": "power_gens = sorted(power_gens.items(), key=lambda k: str(k[0]))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "laplace.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sympy\\integrals\\laplace.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 240,
                        "content": "conds.sort(key=lambda x: (-x[0], cnt(x[1])))"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "meijerint.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sympy\\integrals\\meijerint.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1667,
                        "content": "for a in sorted(_find_splitting_points(f, x) | {S.Zero}, key=default_sort_key):"
                    },
                    {
                        "line_number": 1838,
                        "content": "for c in sorted(innermost, key=default_sort_key, reverse=True) + [S.Zero]:"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "risch.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sympy\\integrals\\risch.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 431,
                        "content": "logs = sorted(set(logs), key=default_sort_key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "transforms.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sympy\\integrals\\transforms.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 751,
                        "content": "an.sort(key=default_sort_key)"
                    },
                    {
                        "line_number": 752,
                        "content": "ap.sort(key=default_sort_key)"
                    },
                    {
                        "line_number": 753,
                        "content": "bm.sort(key=default_sort_key)"
                    },
                    {
                        "line_number": 754,
                        "content": "bq.sort(key=default_sort_key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "transforms.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sympy\\integrals\\transforms.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 322,
                        "content": "conds.sort(key=lambda x: (x[0] - x[1], count_ops(x[2])))"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_meijerint.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sympy\\integrals\\tests\\test_meijerint.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 346,
                        "content": "for formula, terms, cond, hint in sorted(l, key=default_sort_key):"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "dpll.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sympy\\logic\\algorithms\\dpll.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 37,
                        "content": "symbols = sorted(_find_predicates(expr), key=default_sort_key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "common.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sympy\\matrices\\common.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 3026,
                        "content": "key = _coord_to_index(i, j)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "eigen.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sympy\\matrices\\eigen.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 320,
                        "content": "eigenvals = sorted(eigenvals.items(), key=default_sort_key)"
                    },
                    {
                        "line_number": 700,
                        "content": "eigenvecs = sorted(eigenvecs, key=default_sort_key)"
                    },
                    {
                        "line_number": 1188,
                        "content": "blocks     = sorted(eigs.keys(), key=default_sort_key)"
                    },
                    {
                        "line_number": 1202,
                        "content": "for eig in sorted(eigs.keys(), key=default_sort_key):"
                    },
                    {
                        "line_number": 1245,
                        "content": "for eig in sorted(eigs.keys(), key=default_sort_key):"
                    },
                    {
                        "line_number": 1341,
                        "content": "vals.sort(reverse=True, key=default_sort_key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "matrices.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sympy\\matrices\\matrices.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1157,
                        "content": "i, j = key = self.key2ij(key)"
                    },
                    {
                        "line_number": 1174,
                        "content": "key = (slice(*divmod(i, self.cols)),"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "matrices.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sympy\\matrices\\matrices.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 1174,
                        "content": "key = (slice(*divmod(i, self.cols)),"
                    },
                    {
                        "line_number": 1177,
                        "content": "key = (slice(i, i + value.rows),"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "sparse.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sympy\\matrices\\sparse.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 329,
                        "content": "return [tuple(k + (self[k],)) for k in sorted(self.todok().keys(), key=lambda k: list(reversed(k)))]"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "factor_.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sympy\\ntheory\\factor_.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 187,
                        "content": "key=lambda x: (x[1][k], x[0])))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "mathematica.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sympy\\parsing\\mathematica.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 615,
                        "content": "tokens_escape.sort(key=lambda x: -len(x))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "secondquant.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sympy\\physics\\secondquant.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 2497,
                        "content": "dummies = sorted(dummies, key=default_sort_key)"
                    },
                    {
                        "line_number": 2710,
                        "content": "result = sorted(all_dums, key=lambda x: dumkey[x])"
                    },
                    {
                        "line_number": 2990,
                        "content": "i, j = sorted(map(sympify, (i, j)), key=default_sort_key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "kane.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sympy\\physics\\mechanics\\kane.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 524,
                        "content": "r.sort(key=default_sort_key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "lagrange.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sympy\\physics\\mechanics\\lagrange.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 347,
                        "content": "r.sort(key=default_sort_key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "circuitutils.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sympy\\physics\\quantum\\circuitutils.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 485,
                        "content": "key=default_sort_key)"
                    },
                    {
                        "line_number": 487,
                        "content": "ids.sort(key=default_sort_key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "trace.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sympy\\physics\\quantum\\trace.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 43,
                        "content": "min_item = min(l, key=default_sort_key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "dimensions.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sympy\\physics\\units\\dimensions.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 354,
                        "content": "base_dims.sort(key=default_sort_key)"
                    },
                    {
                        "line_number": 355,
                        "content": "derived_dims.sort(key=default_sort_key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "util.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sympy\\physics\\units\\util.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 243,
                        "content": "deset.add(tuple(sorted(dims, key=default_sort_key)))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "__init__.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sympy\\physics\\units\\__init__.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 268,
                        "content": "return sorted(set(rv), key=lambda x: (len(x), x))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "distributedmodules.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sympy\\polys\\distributedmodules.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 685,
                        "content": "P.sort(key=ourkey, reverse=True)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "factortools.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sympy\\polys\\factortools.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 348,
                        "content": "p, fsqf = min(a, key=lambda x: len(x[1]))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "fglmtools.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sympy\\polys\\fglmtools.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 33,
                        "content": "L.sort(key=lambda k_l: O_to(_incr_k(S[k_l[1]], k_l[0])), reverse=True)"
                    },
                    {
                        "line_number": 59,
                        "content": "L.sort(key=lambda k_l: O_to(_incr_k(S[k_l[1]], k_l[0])), reverse=True)"
                    },
                    {
                        "line_number": 65,
                        "content": "return sorted(G, key=lambda g: O_to(g.LM), reverse=True)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "fglmtools.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sympy\\polys\\fglmtools.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 33,
                        "content": "L.sort(key=lambda k_l: O_to(_incr_k(S[k_l[1]], k_l[0])), reverse=True)"
                    },
                    {
                        "line_number": 59,
                        "content": "L.sort(key=lambda k_l: O_to(_incr_k(S[k_l[1]], k_l[0])), reverse=True)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "groebnertools.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sympy\\polys\\groebnertools.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 223,
                        "content": "h = min([f[x] for x in F], key=lambda f: order(f.LM))"
                    },
                    {
                        "line_number": 237,
                        "content": "G1 = sorted(G, key=lambda g: order(f[g].LM))"
                    },
                    {
                        "line_number": 258,
                        "content": "Gr = sorted(Gr, key=lambda f: order(f.LM), reverse=True)"
                    },
                    {
                        "line_number": 625,
                        "content": "B.sort(key=lambda f: order(Polyn(f).LM), reverse=True)"
                    },
                    {
                        "line_number": 696,
                        "content": "return sorted(H, key=lambda f: order(f.LM), reverse=True)"
                    },
                    {
                        "line_number": 752,
                        "content": "G.sort(key=lambda g: order(g.LM))"
                    },
                    {
                        "line_number": 772,
                        "content": "G.sort(key=lambda g: order(g.LM))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "monomials.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sympy\\polys\\monomials.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 52,
                        "content": ">>> sorted(itermonomials([x, y], 2), key=monomial_key('grlex', [y, x]))"
                    },
                    {
                        "line_number": 55,
                        "content": ">>> sorted(itermonomials([x, y], 3), key=monomial_key('grlex', [y, x]))"
                    },
                    {
                        "line_number": 62,
                        "content": ">>> sorted(itermonomials([x, y], 2, 1), key=monomial_key('grlex', [y, x]))"
                    },
                    {
                        "line_number": 84,
                        "content": ">>> sorted(itermonomials([x, y], [2, 4], [1, 2]), reverse=True, key=monomial_key('lex', [x, y]))"
                    },
                    {
                        "line_number": 173,
                        "content": ">>> sorted(M, key=monomial_key('grlex', [y, x]))"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "multivariate_resultants.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sympy\\polys\\multivariate_resultants.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 182,
                        "content": "key=monomial_key('lex', self.variables))"
                    },
                    {
                        "line_number": 359,
                        "content": "key=monomial_key('lex', self.variables))"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "polyroots.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sympy\\polys\\polyroots.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 492,
                        "content": "ks.sort(key=lambda x: (x, -1) if x <= h else (abs(x - n), 1))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "polytools.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sympy\\polys\\polytools.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 3701,
                        "content": "sorted(roots, key=lambda r: (1 if r.imag else 0, r.real, abs(r.imag), sign(r.imag)))))"
                    },
                    {
                        "line_number": 3708,
                        "content": "sorted(roots, key=lambda r: (1 if r.imag else 0, r.real, abs(r.imag), sign(r.imag)))))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "polyutils.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sympy\\polys\\polyutils.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 46,
                        "content": "key = [(1 if i else 0, r, i) for r, i in key]"
                    },
                    {
                        "line_number": 47,
                        "content": "key = sorted(zip(key, roots))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "polyutils.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sympy\\polys\\polyutils.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 41,
                        "content": "key = [[i.n(2).as_real_imag()[0] for i in r.as_real_imag()] for r in roots]"
                    },
                    {
                        "line_number": 46,
                        "content": "key = [(1 if i else 0, r, i) for r, i in key]"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "rings.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sympy\\polys\\rings.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 1815,
                        "content": "return sorted(seq, key=lambda monom: monom[0], reverse=True)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "ring_series.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sympy\\polys\\ring_series.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1871,
                        "content": "return min(series, key=lambda t: t[i])[i]"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "rootoftools.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sympy\\polys\\rootoftools.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 492,
                        "content": "reals = sorted(reals, key=lambda r: r[0].a)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "domain.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sympy\\polys\\domains\\domain.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 816,
                        "content": "return K0.__class__(max(K0.mod, K1.mod, key=default_sort_key))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "modularinteger.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sympy\\polys\\domains\\modularinteger.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 189,
                        "content": "key = _mod, _dom, _sym"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "dense.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sympy\\polys\\matrices\\dense.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 119,
                        "content": "ip = max(range(i, m), key=lambda ip: abs(a[ip][j]))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_orderings.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sympy\\polys\\tests\\test_orderings.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 112,
                        "content": "assert sorted(M, key=monomial_key('lex', [z, y, x])) == \\"
                    },
                    {
                        "line_number": 114,
                        "content": "assert sorted(M, key=monomial_key('grlex', [z, y, x])) == \\"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_polyroots.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sympy\\polys\\tests\\test_polyroots.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 208,
                        "content": "assert sorted(lhs, key=hash) == sorted(rhs, key=hash)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_polyroots.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sympy\\polys\\tests\\test_polyroots.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 208,
                        "content": "assert sorted(lhs, key=hash) == sorted(rhs, key=hash)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "aesaracode.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sympy\\printing\\aesaracode.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 145,
                        "content": "key = self._get_key(s, name, dtype=dtype, broadcastable=broadcastable)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "aesaracode.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sympy\\printing\\aesaracode.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 145,
                        "content": "key = self._get_key(s, name, dtype=dtype, broadcastable=broadcastable)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "codeprinter.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sympy\\printing\\codeprinter.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 484,
                        "content": "for a in sorted(expr.args, key=default_sort_key))"
                    },
                    {
                        "line_number": 489,
                        "content": "for a in sorted(expr.args, key=default_sort_key))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "lambdarepr.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sympy\\printing\\lambdarepr.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 30,
                        "content": "for arg in sorted(expr.args, key=default_sort_key):"
                    },
                    {
                        "line_number": 39,
                        "content": "for arg in sorted(expr.args, key=default_sort_key):"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "latex.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sympy\\printing\\latex.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1046,
                        "content": "args = sorted(expr.args, key=default_sort_key)"
                    },
                    {
                        "line_number": 1135,
                        "content": "args = sorted(e.args, key=default_sort_key)"
                    },
                    {
                        "line_number": 1139,
                        "content": "args = sorted(e.args, key=default_sort_key)"
                    },
                    {
                        "line_number": 1143,
                        "content": "args = sorted(e.args, key=default_sort_key)"
                    },
                    {
                        "line_number": 1150,
                        "content": "args = sorted(e.args, key=default_sort_key)"
                    },
                    {
                        "line_number": 2049,
                        "content": "keys = sorted(d.keys(), key=default_sort_key)"
                    },
                    {
                        "line_number": 2119,
                        "content": "items = sorted(s.args, key=default_sort_key)"
                    },
                    {
                        "line_number": 2123,
                        "content": "items = sorted(s, key=default_sort_key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "mathematica.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sympy\\printing\\mathematica.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 243,
                        "content": "items = sorted(expr.todok().items(), key=default_sort_key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "mathml.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sympy\\printing\\mathml.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1342,
                        "content": "items = sorted(s, key=default_sort_key)"
                    },
                    {
                        "line_number": 1415,
                        "content": "args = sorted(expr.args, key=default_sort_key)"
                    },
                    {
                        "line_number": 1419,
                        "content": "args = sorted(expr.args, key=default_sort_key)"
                    },
                    {
                        "line_number": 1423,
                        "content": "args = sorted(expr.args, key=default_sort_key)"
                    },
                    {
                        "line_number": 1430,
                        "content": "args = sorted(expr.args, key=default_sort_key)"
                    },
                    {
                        "line_number": 1492,
                        "content": "args = sorted(expr.args, key=default_sort_key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "printer.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sympy\\printing\\printer.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 345,
                        "content": "return sorted(Add.make_args(expr), key=cmp_to_key(Basic._compare_pretty))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "repr.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sympy\\printing\\repr.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 296,
                        "content": "numer_terms.sort(key=frac.field.order, reverse=True)"
                    },
                    {
                        "line_number": 298,
                        "content": "denom_terms.sort(key=frac.field.order, reverse=True)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "repr.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sympy\\printing\\repr.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 291,
                        "content": "terms.sort(key=poly.ring.order, reverse=True)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "str.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sympy\\printing\\str.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 127,
                        "content": "keys = sorted(d.keys(), key=default_sort_key)"
                    },
                    {
                        "line_number": 223,
                        "content": "args = sorted(expr.args, key=default_sort_key)"
                    },
                    {
                        "line_number": 809,
                        "content": "items = sorted(s, key=default_sort_key)"
                    },
                    {
                        "line_number": 818,
                        "content": "items = sorted(s, key=default_sort_key)"
                    },
                    {
                        "line_number": 826,
                        "content": "items = sorted(s, key=default_sort_key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "theanocode.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sympy\\printing\\theanocode.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 144,
                        "content": "key = self._get_key(s, name, dtype=dtype, broadcastable=broadcastable)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "theanocode.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sympy\\printing\\theanocode.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 144,
                        "content": "key = self._get_key(s, name, dtype=dtype, broadcastable=broadcastable)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "pretty.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sympy\\printing\\pretty\\pretty.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 250,
                        "content": "args = sorted(e.args, key=default_sort_key)"
                    },
                    {
                        "line_number": 1126,
                        "content": "inneritems.sort(key = lambda x: x[0].__str__())"
                    },
                    {
                        "line_number": 1597,
                        "content": "args = sorted(args, key=default_sort_key)"
                    },
                    {
                        "line_number": 2132,
                        "content": "items = sorted(s.args, key=default_sort_key)"
                    },
                    {
                        "line_number": 2410,
                        "content": "keys = sorted(d.keys(), key=default_sort_key)"
                    },
                    {
                        "line_number": 2428,
                        "content": "items = sorted(s, key=default_sort_key)"
                    },
                    {
                        "line_number": 2436,
                        "content": "items = sorted(s, key=default_sort_key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "pretty.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sympy\\printing\\pretty\\pretty.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 1992,
                        "content": "args = sorted(args, key=lambda x: isinstance(x, Quantity) or"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "pretty_symbology.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sympy\\printing\\pretty\\pretty_symbology.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 531,
                        "content": "for key in sorted(modifier_dict.keys(), key=lambda k:len(k), reverse=True) :"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "gruntz.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sympy\\series\\gruntz.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 640,
                        "content": "Omega.sort(key=lambda x: nodes[x[1]].ht(), reverse=True)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "gruntz.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sympy\\series\\gruntz.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 640,
                        "content": "Omega.sort(key=lambda x: nodes[x[1]].ht(), reverse=True)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "order.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sympy\\series\\order.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 312,
                        "content": "variables.sort(key=default_sort_key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "cse_main.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sympy\\simplify\\cse_main.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 144,
                        "content": "key=lambda x: -sum([p[s.index(i)].count_ops()"
                    },
                    {
                        "line_number": 394,
                        "content": "funcs = sorted(funcs, key=lambda f: len(f.args))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "cse_opts.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sympy\\simplify\\cse_opts.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 30,
                        "content": "for a in sorted(e.atoms(Add), key=default_sort_key):"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "fu.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sympy\\simplify\\fu.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 1199,
                        "content": "key = cos(a*cc, evaluate=False)"
                    },
                    {
                        "line_number": 1205,
                        "content": "key = cos(a*cc, evaluate=False)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "gammasimp.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sympy\\simplify\\gammasimp.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 331,
                        "content": "keys = sorted(rats, key=default_sort_key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "hyperexpand.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sympy\\simplify\\hyperexpand.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 661,
                        "content": "items.sort(key=lambda x: x - x0, reverse=flip)"
                    },
                    {
                        "line_number": 1597,
                        "content": "for r in sorted(list(abuckets.keys()) + list(bbuckets.keys()), key=default_sort_key):"
                    },
                    {
                        "line_number": 1611,
                        "content": "al, nal, bk, nbk = [sorted(w, key=default_sort_key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "powsimp.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sympy\\simplify\\powsimp.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 288,
                        "content": "bases.sort(key=default_sort_key)  # this makes tie-breaking canonical"
                    },
                    {
                        "line_number": 289,
                        "content": "bases.sort(key=measure, reverse=True)  # handle longest first"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "radsimp.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sympy\\simplify\\radsimp.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1175,
                        "content": "args = sorted(expr.args, key=default_sort_key)"
                    },
                    {
                        "line_number": 1178,
                        "content": "surds.sort(key=default_sort_key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "ratsimp.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sympy\\simplify\\ratsimp.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 213,
                        "content": "c, d = min(newsol, key=lambda x: len(x[0].terms()) + len(x[1].terms()))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "ratsimp.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sympy\\simplify\\ratsimp.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 213,
                        "content": "c, d = min(newsol, key=lambda x: len(x[0].terms()) + len(x[1].terms()))"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "sqrtdenest.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sympy\\simplify\\sqrtdenest.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 38,
                        "content": "return max([sqrt_depth(x) for x in p.args], key=default_sort_key)"
                    },
                    {
                        "line_number": 156,
                        "content": "pargs = sorted(p.args, key=default_sort_key)"
                    },
                    {
                        "line_number": 166,
                        "content": "nmax = max(v, key=default_sort_key)"
                    },
                    {
                        "line_number": 228,
                        "content": "args = sorted(n.base.args, key=default_sort_key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "polysys.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sympy\\solvers\\polysys.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 145,
                        "content": "return sorted(solutions, key=default_sort_key)"
                    },
                    {
                        "line_number": 338,
                        "content": "return sorted(result, key=default_sort_key)"
                    },
                    {
                        "line_number": 440,
                        "content": "return sorted(solutions, key=default_sort_key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "recurr.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sympy\\solvers\\recurr.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 664,
                        "content": "kernel.sort(key=default_sort_key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "solvers.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sympy\\solvers\\solvers.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1251,
                        "content": "solution.sort(key=default_sort_key)"
                    },
                    {
                        "line_number": 2149,
                        "content": "for xi in sorted(symbols, key=default_sort_key):  # canonical order"
                    },
                    {
                        "line_number": 2216,
                        "content": "key=lambda x: (len(x.free_symbols), default_sort_key(x)))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "solvers.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sympy\\solvers\\solvers.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 1763,
                        "content": "subsyms = sorted(subsyms, key = lambda x: sym_indices[x])"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "solveset.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sympy\\solvers\\solveset.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 3058,
                        "content": "unsolved.sort(key=default_sort_key)"
                    },
                    {
                        "line_number": 3489,
                        "content": "_symbols.sort(key=default_sort_key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "diophantine.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sympy\\solvers\\diophantine\\diophantine.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 171,
                        "content": "self.free_symbols.sort(key=default_sort_key)"
                    },
                    {
                        "line_number": 1351,
                        "content": "var.sort(key=default_sort_key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_diophantine.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sympy\\solvers\\diophantine\\tests\\test_diophantine.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 756,
                        "content": "var.sort(key=default_sort_key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "nonhomogeneous.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sympy\\solvers\\ode\\nonhomogeneous.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 264,
                        "content": "collectterms.sort(key=default_sort_key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "ode.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sympy\\solvers\\ode\\ode.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 2383,
                        "content": "maxf = max(fargs, key = lambda x: x.args[0])"
                    },
                    {
                        "line_number": 2391,
                        "content": "maxf = max(fargs, key = lambda x: x.args[0])"
                    },
                    {
                        "line_number": 2392,
                        "content": "minf = min(fargs, key = lambda x: x.args[0])"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "systems.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sympy\\solvers\\ode\\systems.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 646,
                        "content": "eigenchains_iter = sorted(eigenchains.items(), key=default_sort_key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "systems.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sympy\\solvers\\ode\\systems.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 1674,
                        "content": "key=lambda x: Function(Dummy('{}{}0'.format(x.func.__name__, underscores)))(t))"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "joint_rv_types.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sympy\\stats\\joint_rv_types.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 138,
                        "content": "syms = tuple(sorted(syms, key = lambda index: index.args[1]))"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "stochastic_process_types.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sympy\\stats\\stochastic_process_types.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 2028,
                        "content": "args_list = sorted(args_list, key=lambda x: x.args[0].key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "symbolic_probability.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sympy\\stats\\symbolic_probability.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 492,
                        "content": "arg1, arg2 = sorted([arg1, arg2], key=default_sort_key)"
                    },
                    {
                        "line_number": 515,
                        "content": "arg1, arg2 = sorted([arg1, arg2], key=default_sort_key)"
                    },
                    {
                        "line_number": 523,
                        "content": "addends = [a*b*Covariance(*sorted([r1, r2], key=default_sort_key), condition=condition)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "rl.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sympy\\strategies\\rl.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 53,
                        "content": ">>> key     = lambda x: x.as_coeff_Mul()[1]"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "index_methods.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sympy\\tensor\\index_methods.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 344,
                        "content": ">>> sorted(d.keys(), key=default_sort_key)"
                    },
                    {
                        "line_number": 354,
                        "content": ">>> sorted(d[x[i, i]*y[j, j]], key=default_sort_key)"
                    },
                    {
                        "line_number": 363,
                        "content": ">>> sorted(d.keys(), key=default_sort_key)"
                    },
                    {
                        "line_number": 401,
                        "content": "junk, key = _remove_repeated(expr.indices)"
                    },
                    {
                        "line_number": 406,
                        "content": "junk, junk, key = _get_indices_Mul(expr, return_dummies=True)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "index_methods.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sympy\\tensor\\index_methods.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 406,
                        "content": "junk, junk, key = _get_indices_Mul(expr, return_dummies=True)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "tensor.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sympy\\tensor\\tensor.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1622,
                        "content": "return sorted(set(self.index_types), key=lambda x: x.name)"
                    },
                    {
                        "line_number": 2429,
                        "content": "args.sort(key=default_sort_key)"
                    },
                    {
                        "line_number": 3678,
                        "content": "typ1 = sorted(set(cv[j-1].component.index_types), key=lambda x: x.name)"
                    },
                    {
                        "line_number": 3679,
                        "content": "typ2 = sorted(set(cv[j].component.index_types), key=lambda x: x.name)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "from_indexed_to_array.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sympy\\tensor\\array\\expressions\\from_indexed_to_array.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 112,
                        "content": "summation_indices = sorted({subindicessets.get(i, i) for i in summation_indices}, key=default_sort_key)"
                    },
                    {
                        "line_number": 119,
                        "content": "arg_indices = sorted(set(arg.indices), key=default_sort_key)"
                    },
                    {
                        "line_number": 122,
                        "content": "kronecker_indices = sorted(kronecker_indices, key=default_sort_key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "rewrite.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sympy\\unify\\rewrite.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 21,
                        "content": ">>> sorted(rl(z + 3), key=default_sort_key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "codegen.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sympy\\utilities\\codegen.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 715,
                        "content": "output_args.sort(key=lambda x: str(x.name))"
                    },
                    {
                        "line_number": 1372,
                        "content": "output_args.sort(key=lambda x: str(x.name))"
                    },
                    {
                        "line_number": 1811,
                        "content": "output_args.sort(key=lambda x: str(x.name))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "iterables.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sympy\\utilities\\iterables.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 2188,
                        "content": "key = dict(enumerate(ordered(uniq(s))))"
                    },
                    {
                        "line_number": 2346,
                        "content": "take = sorted(ms.items(), key=lambda x:(x[1], x[0]))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "iterables.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sympy\\utilities\\iterables.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 2188,
                        "content": "key = dict(enumerate(ordered(uniq(s))))"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_iterables.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sympy\\utilities\\tests\\test_iterables.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 38,
                        "content": "assert sorted([y, x], key=default_sort_key) == [x, y]"
                    },
                    {
                        "line_number": 660,
                        "content": "assert minlex(('bb', 'aaa', 'c', 'a'), key=len) == ('c', 'a', 'bb', 'aaa')"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_lambdify.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sympy\\utilities\\tests\\test_lambdify.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 303,
                        "content": "a, b = sorted(expr.free_symbols, key=lambda s: s.name)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "integrals.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sympy\\vector\\integrals.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 133,
                        "content": "return topological_sort((V, E), key=default_sort_key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "vector.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\sympy\\vector\\vector.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 518,
                        "content": "expr1, expr2 = sorted([expr1, expr2], key=default_sort_key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "auth.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\tornado\\auth.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 848,
                        "content": "key=handler.settings[\"twitter_consumer_key\"],"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "auth.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\tornado\\auth.py",
                "vulnerability": "SHA-1",
                "lines": [
                    {
                        "line_number": 1206,
                        "content": "hash = hmac.new(key, escape.utf8(base_string), hashlib.sha1)"
                    },
                    {
                        "line_number": 1241,
                        "content": "hash = hmac.new(key, escape.utf8(base_string), hashlib.sha1)"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collisions."
            },
            {
                "language": "Python",
                "filename": "auth.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\tornado\\auth.py",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 1090,
                        "content": "digestmod=hashlib.sha256,"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Python",
                "filename": "web.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\tornado\\web.py",
                "vulnerability": "SHA-1",
                "lines": [
                    {
                        "line_number": 1690,
                        "content": "hasher = hashlib.sha1()"
                    },
                    {
                        "line_number": 3703,
                        "content": "hash = hmac.new(utf8(secret), digestmod=hashlib.sha1)"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collisions."
            },
            {
                "language": "Python",
                "filename": "web.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\tornado\\web.py",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 3710,
                        "content": "hash = hmac.new(utf8(secret), digestmod=hashlib.sha256)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Python",
                "filename": "websocket.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\tornado\\websocket.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1365,
                        "content": "self.key = base64.b64encode(os.urandom(16))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "websocket.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\tornado\\websocket.py",
                "vulnerability": "SHA-1",
                "lines": [
                    {
                        "line_number": 887,
                        "content": "sha1 = hashlib.sha1()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collisions."
            },
            {
                "language": "Python",
                "filename": "auth_test.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\tornado\\test\\auth_test.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 63,
                        "content": "return dict(key=\"asdf\", secret=\"qwer\")"
                    },
                    {
                        "line_number": 81,
                        "content": "if access_token != dict(key=\"uiop\", secret=\"5678\"):"
                    },
                    {
                        "line_number": 108,
                        "content": "return dict(key=\"asdf\", secret=\"qwer\")"
                    },
                    {
                        "line_number": 113,
                        "content": "dict(key=\"uiop\", secret=\"5678\"),"
                    },
                    {
                        "line_number": 230,
                        "content": "access_token=dict(key=\"hjkl\", secret=\"vbnm\"),"
                    },
                    {
                        "line_number": 380,
                        "content": "self.assertEqual(parsed[\"access_token\"], dict(key=\"uiop\", secret=\"5678\"))"
                    },
                    {
                        "line_number": 422,
                        "content": "self.assertEqual(parsed[\"access_token\"], dict(key=\"uiop\", secret=\"5678\"))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "iostream_test.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\tornado\\test\\iostream_test.py",
                "vulnerability": "SHA-1",
                "lines": [
                    {
                        "line_number": 683,
                        "content": "produce_hash = hashlib.sha1()"
                    },
                    {
                        "line_number": 684,
                        "content": "consume_hash = hashlib.sha1()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collisions."
            },
            {
                "language": "Python",
                "filename": "traitlets.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\traitlets\\traitlets.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 4105,
                        "content": "f\"'{self.__class__.__name__}' options must have the form 'key=value', got {s!r}\""
                    },
                    {
                        "line_number": 4111,
                        "content": "key = self._key_trait.from_string(key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "traitlets.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\traitlets\\traitlets.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 551,
                        "content": "key = (\"metadata-tag\", pkg, *sorted(kwargs))"
                    },
                    {
                        "line_number": 4020,
                        "content": "key = key_trait._validate(obj, key)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "application.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\traitlets\\config\\application.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 777,
                        "content": "key = (key,)  # type:ignore[assignment]"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "warnings.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\traitlets\\utils\\warnings.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 31,
                        "content": "key = (package_name, msg)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "_handshake.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\websocket\\_handshake.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 112,
                        "content": "key = options[\"header\"][\"Sec-WebSocket-Key\"]"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "_handshake.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\websocket\\_handshake.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 59,
                        "content": "headers, key = _get_handshake_headers(resource, url, hostname, port, options)"
                    },
                    {
                        "line_number": 112,
                        "content": "key = options[\"header\"][\"Sec-WebSocket-Key\"]"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "_handshake.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\websocket\\_handshake.py",
                "vulnerability": "SHA-1",
                "lines": [
                    {
                        "line_number": 192,
                        "content": "hashed = base64encode(hashlib.sha1(value).digest()).strip().lower()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collisions."
            },
            {
                "language": "Python",
                "filename": "test_websocket.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\websocket\\tests\\test_websocket.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 116,
                        "content": "key = \"c6b8hTg4EeGb2gQMztV1/g==\""
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "socket_server.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\win32\\Demos\\security\\sspi\\socket_server.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 96,
                        "content": "key = _get_msg(request)"
                    },
                    {
                        "line_number": 128,
                        "content": "blob, key = ca.encrypt(data)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "win32timezone.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\win32\\lib\\win32timezone.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 510,
                        "content": "key = _RegKeyDict.open(winreg.HKEY_LOCAL_MACHINE, self.tzRegKey)"
                    },
                    {
                        "line_number": 737,
                        "content": "key = _RegKeyDict.open(winreg.HKEY_LOCAL_MACHINE, TimeZoneInfo.tzRegKey)"
                    },
                    {
                        "line_number": 787,
                        "content": "key = key or (lambda tzi: -tzi.staticInfo.bias)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "win32timezone.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\win32\\lib\\win32timezone.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 510,
                        "content": "key = _RegKeyDict.open(winreg.HKEY_LOCAL_MACHINE, self.tzRegKey)"
                    },
                    {
                        "line_number": 737,
                        "content": "key = _RegKeyDict.open(winreg.HKEY_LOCAL_MACHINE, TimeZoneInfo.tzRegKey)"
                    },
                    {
                        "line_number": 787,
                        "content": "key = key or (lambda tzi: -tzi.staticInfo.bias)"
                    },
                    {
                        "line_number": 983,
                        "content": "key = self._find_first_match_(sorted_keys, item)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_sspi.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\win32\\test\\test_sspi.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 152,
                        "content": "key = sspiclient.sign(data)"
                    },
                    {
                        "line_number": 154,
                        "content": "key = sspiclient.sign(data)"
                    },
                    {
                        "line_number": 160,
                        "content": "key = sspiserver.sign(data)"
                    },
                    {
                        "line_number": 162,
                        "content": "key = sspiserver.sign(data)"
                    },
                    {
                        "line_number": 176,
                        "content": "key = sspiclient.sign(b\"hello\")"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_sspi.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\win32\\test\\test_sspi.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 176,
                        "content": "key = sspiclient.sign(b\"hello\")"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "build.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\win32com\\client\\build.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 519,
                        "content": "meth_list.sort(key=lambda m: m.desc[7])"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "gencache.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\win32com\\client\\gencache.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 578,
                        "content": "key = str(typelibCLSID), lcid, major, minor"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "gencache.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\win32com\\client\\gencache.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 578,
                        "content": "key = str(typelibCLSID), lcid, major, minor"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "genpy.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\win32com\\client\\genpy.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 819,
                        "content": "key = item.python_name"
                    },
                    {
                        "line_number": 837,
                        "content": "key = item.python_name"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "excelAddin.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\win32com\\demos\\excelAddin.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 141,
                        "content": "key = winreg.CreateKey("
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "outlookAddin.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\win32com\\demos\\outlookAddin.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 109,
                        "content": "key = winreg.CreateKey("
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "column_provider.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\win32comext\\shell\\demos\\servers\\column_provider.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 95,
                        "content": "key = winreg.CreateKey("
                    },
                    {
                        "line_number": 107,
                        "content": "key = winreg.DeleteKey("
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "context_menu.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\win32comext\\shell\\demos\\servers\\context_menu.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 92,
                        "content": "key = winreg.CreateKey(winreg.HKEY_CLASSES_ROOT, \"Python.File\\\\shellex\")"
                    },
                    {
                        "line_number": 103,
                        "content": "key = winreg.DeleteKey("
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "context_menu.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\win32comext\\shell\\demos\\servers\\context_menu.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 92,
                        "content": "key = winreg.CreateKey(winreg.HKEY_CLASSES_ROOT, \"Python.File\\\\shellex\")"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "copy_hook.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\win32comext\\shell\\demos\\servers\\copy_hook.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 37,
                        "content": "key = winreg.CreateKey("
                    },
                    {
                        "line_number": 42,
                        "content": "key = winreg.CreateKey("
                    },
                    {
                        "line_number": 54,
                        "content": "key = winreg.DeleteKey("
                    },
                    {
                        "line_number": 64,
                        "content": "key = winreg.DeleteKey("
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "empty_volume_cache.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\win32comext\\shell\\demos\\servers\\empty_volume_cache.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 161,
                        "content": "key = winreg.CreateKey(winreg.HKEY_LOCAL_MACHINE, kn)"
                    },
                    {
                        "line_number": 172,
                        "content": "key = winreg.DeleteKey(winreg.HKEY_LOCAL_MACHINE, kn)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "empty_volume_cache.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\win32comext\\shell\\demos\\servers\\empty_volume_cache.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 161,
                        "content": "key = winreg.CreateKey(winreg.HKEY_LOCAL_MACHINE, kn)"
                    },
                    {
                        "line_number": 172,
                        "content": "key = winreg.DeleteKey(winreg.HKEY_LOCAL_MACHINE, kn)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "folder_view.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\win32comext\\shell\\demos\\servers\\folder_view.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 802,
                        "content": "key = winreg.CreateKey("
                    },
                    {
                        "line_number": 809,
                        "content": "key = winreg.CreateKey("
                    },
                    {
                        "line_number": 825,
                        "content": "key = winreg.CreateKey(winreg.HKEY_CLASSES_ROOT, keypath)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "folder_view.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\win32comext\\shell\\demos\\servers\\folder_view.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 825,
                        "content": "key = winreg.CreateKey(winreg.HKEY_CLASSES_ROOT, keypath)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "icon_handler.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\win32comext\\shell\\demos\\servers\\icon_handler.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 54,
                        "content": "key = winreg.CreateKey(winreg.HKEY_CLASSES_ROOT, \"Python.File\\\\shellex\")"
                    },
                    {
                        "line_number": 64,
                        "content": "key = winreg.DeleteKey("
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "icon_handler.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\win32comext\\shell\\demos\\servers\\icon_handler.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 54,
                        "content": "key = winreg.CreateKey(winreg.HKEY_CLASSES_ROOT, \"Python.File\\\\shellex\")"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "shell_view.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\win32comext\\shell\\demos\\servers\\shell_view.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 925,
                        "content": "key = winreg.CreateKey("
                    },
                    {
                        "line_number": 932,
                        "content": "key = winreg.CreateKey("
                    },
                    {
                        "line_number": 951,
                        "content": "key = winreg.DeleteKey("
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "scanner.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\yaml\\scanner.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 308,
                        "content": "key = SimpleKey(token_number, required,"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "garbage.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Packages\\PythonSoftwareFoundation.Python.3.11_qbz5n2kfra8p0\\LocalCache\\local-packages\\Python311\\site-packages\\zmq\\utils\\garbage.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 51,
                        "content": "key = struct.unpack(fmt, msg)[0]"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "antigravity.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\antigravity.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 15,
                        "content": "h = hashlib.md5(datedow, usedforsecurity=False).hexdigest()"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "configparser.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\configparser.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 749,
                        "content": "key = self.optionxform(str(key))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "configparser.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\configparser.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 749,
                        "content": "key = self.optionxform(str(key))"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "enum.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\enum.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 111,
                        "content": "if key == '_generate_next_value_':"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "functools.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\functools.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 554,
                        "content": "key = make_key(args, kwds, typed)"
                    },
                    {
                        "line_number": 569,
                        "content": "key = make_key(args, kwds, typed)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "gettext.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\gettext.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 598,
                        "content": "key = (class_, os.path.abspath(mofile))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "gettext.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\gettext.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 598,
                        "content": "key = (class_, os.path.abspath(mofile))"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "hashlib.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\hashlib.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 43,
                        "content": ">>> m = hashlib.md5()"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "hashlib.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\hashlib.py",
                "vulnerability": "SHA-224",
                "lines": [
                    {
                        "line_number": 51,
                        "content": ">>> hashlib.sha224(b\"Nobody inspects the spammish repetition\").hexdigest()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-224 provides reduced security compared to larger variants."
            },
            {
                "language": "Python",
                "filename": "hmac.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\hmac.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 98,
                        "content": "key = digest_cons(key).digest()"
                    },
                    {
                        "line_number": 213,
                        "content": "key = digest_cons(key).digest()"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "hmac.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\hmac.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 98,
                        "content": "key = digest_cons(key).digest()"
                    },
                    {
                        "line_number": 104,
                        "content": "key = key.ljust(blocksize, b'\\0')"
                    },
                    {
                        "line_number": 213,
                        "content": "key = digest_cons(key).digest()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "mailbox.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\mailbox.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 1253,
                        "content": "key = _singlefileMailbox.add(self, message)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "mailcap.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\mailcap.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 104,
                        "content": "key = '/'.join(types).lower()"
                    },
                    {
                        "line_number": 159,
                        "content": "def findmatch(caps, MIMEtype, key='view', filename=\"/dev/null\", plist=[]):"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "os.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\os.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 683,
                        "content": "key = self.encodekey(key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "pickle.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\pickle.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 1562,
                        "content": "key = _inverted_registry.get(code)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "poplib.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\poplib.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 335,
                        "content": "digest = hashlib.md5(digest).hexdigest()"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "pyclbr.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\pyclbr.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 291,
                        "content": "objs = sorted(tree.values(), key=lineno_key, reverse=True)"
                    },
                    {
                        "line_number": 303,
                        "content": "key=lineno_key, reverse=True)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "pydoc.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\pydoc.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 2213,
                        "content": "def run(self, callback, key=None, completer=None, onerror=None):"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "pydoc.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\pydoc.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 2543,
                        "content": "'key = %s' % key, '#ffffff', '#ee77aa', '<br>'.join(results))"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "selectors.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\selectors.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 250,
                        "content": "key = self._fd_to_key.pop(self._fileobj_lookup(fileobj))"
                    },
                    {
                        "line_number": 257,
                        "content": "key = self._fd_to_key[self._fileobj_lookup(fileobj)]"
                    },
                    {
                        "line_number": 300,
                        "content": "key = super().register(fileobj, events, data)"
                    },
                    {
                        "line_number": 353,
                        "content": "key = super().register(fileobj, events, data)"
                    },
                    {
                        "line_number": 378,
                        "content": "key = self._fd_to_key[self._fileobj_lookup(fileobj)]"
                    },
                    {
                        "line_number": 518,
                        "content": "key = super().register(fileobj, events, data)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "selectors.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\selectors.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 250,
                        "content": "key = self._fd_to_key.pop(self._fileobj_lookup(fileobj))"
                    },
                    {
                        "line_number": 262,
                        "content": "key = self.register(fileobj, events, data)"
                    },
                    {
                        "line_number": 300,
                        "content": "key = super().register(fileobj, events, data)"
                    },
                    {
                        "line_number": 353,
                        "content": "key = super().register(fileobj, events, data)"
                    },
                    {
                        "line_number": 518,
                        "content": "key = super().register(fileobj, events, data)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "symtable.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\symtable.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 33,
                        "content": "key = table, filename"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "tarfile.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\tarfile.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 2044,
                        "content": "directories.sort(key=lambda a: a.name)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "trace.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\trace.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 556,
                        "content": "key = filename, lineno"
                    },
                    {
                        "line_number": 583,
                        "content": "key = filename, lineno"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "warnings.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\warnings.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 346,
                        "content": "key = (text, category, lineno)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "warnings.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\warnings.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 346,
                        "content": "key = (text, category, lineno)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "weakref.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\weakref.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 639,
                        "content": "L.sort(key=lambda item:item[1].index)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "selector_events.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\asyncio\\selector_events.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 36,
                        "content": "key = selector.get_key(fd)"
                    },
                    {
                        "line_number": 261,
                        "content": "key = self._selector.get_key(fd)"
                    },
                    {
                        "line_number": 277,
                        "content": "key = self._selector.get_key(fd)"
                    },
                    {
                        "line_number": 298,
                        "content": "key = self._selector.get_key(fd)"
                    },
                    {
                        "line_number": 315,
                        "content": "key = self._selector.get_key(fd)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "selector_events.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\asyncio\\selector_events.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 261,
                        "content": "key = self._selector.get_key(fd)"
                    },
                    {
                        "line_number": 277,
                        "content": "key = self._selector.get_key(fd)"
                    },
                    {
                        "line_number": 298,
                        "content": "key = self._selector.get_key(fd)"
                    },
                    {
                        "line_number": 315,
                        "content": "key = self._selector.get_key(fd)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "__init__.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\collections\\__init__.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 115,
                        "content": "link.prev, link.next, link.key = last, root, key"
                    },
                    {
                        "line_number": 598,
                        "content": "return sorted(self.items(), key=_itemgetter(1), reverse=True)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "__init__.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\collections\\__init__.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 598,
                        "content": "return sorted(self.items(), key=_itemgetter(1), reverse=True)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "dumb.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\dbm\\dumb.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 145,
                        "content": "key = key.encode('utf-8')"
                    },
                    {
                        "line_number": 190,
                        "content": "key = key.encode('utf-8')"
                    },
                    {
                        "line_number": 227,
                        "content": "key = key.encode('utf-8')"
                    },
                    {
                        "line_number": 250,
                        "content": "key = key.encode('utf-8')"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "msvc9compiler.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\distutils\\msvc9compiler.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 158,
                        "content": "key = RegEnumKey(h, 0)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "msvccompiler.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\distutils\\msvccompiler.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 138,
                        "content": "key = RegEnumKey(h, 0)"
                    },
                    {
                        "line_number": 598,
                        "content": "key = (r\"%s\\%0.1f\\VC\\VC_OBJECTS_PLATFORM_INFO\\Win32\\Directories\""
                    },
                    {
                        "line_number": 601,
                        "content": "key = (r\"%s\\6.0\\Build System\\Components\\Platforms\""
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "msvccompiler.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\distutils\\msvccompiler.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 601,
                        "content": "key = (r\"%s\\6.0\\Build System\\Components\\Platforms\""
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "_msvccompiler.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\distutils\\_msvccompiler.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 30,
                        "content": "key = winreg.OpenKeyEx("
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "install.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\distutils\\command\\install.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 45,
                        "content": "if key == \"headers\" and key not in sys_scheme:"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "install.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\distutils\\command\\install.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 45,
                        "content": "if key == \"headers\" and key not in sys_scheme:"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "cookiejar.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\http\\cookiejar.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1312,
                        "content": "cookies.sort(key=lambda a: len(a.path), reverse=True)"
                    },
                    {
                        "line_number": 1650,
                        "content": "key = ns_cookie.domain, ns_cookie.path, ns_cookie.name"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "cookies.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\http\\cookies.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 408,
                        "content": "if key == \"expires\" and isinstance(value, int):"
                    },
                    {
                        "line_number": 410,
                        "content": "elif key == \"max-age\" and isinstance(value, int):"
                    },
                    {
                        "line_number": 412,
                        "content": "elif key == \"comment\" and isinstance(value, str):"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "configdialog.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\idlelib\\configdialog.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1484,
                        "content": "key = ' '.join(keyset[bind_name])"
                    },
                    {
                        "line_number": 1489,
                        "content": "key = changes['keys'][keyset_name][bind_name]"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "config_key.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\idlelib\\config_key.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 38,
                        "content": "key = mapping.get(key, key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "debugobj.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\idlelib\\debugobj.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 54,
                        "content": "lambda value, key=key, object=self.object:"
                    },
                    {
                        "line_number": 88,
                        "content": "def setfunction(value, key=key, object=self.object):"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "filelist.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\idlelib\\filelist.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 28,
                        "content": "key = os.path.normcase(filename)"
                    },
                    {
                        "line_number": 61,
                        "content": "key = self.inversedict[edit]"
                    },
                    {
                        "line_number": 74,
                        "content": "key = self.inversedict[edit]"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "stackviewer.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\idlelib\\stackviewer.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 120,
                        "content": "def setfunction(value, key=key, object=self.object):"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "tree.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\idlelib\\tree.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 429,
                        "content": "names.sort(key = os.path.normcase)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_config.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\idlelib\\idle_test\\test_config.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 458,
                        "content": "##        key = ['<Option-Key-2>'] if sys.platform == 'darwin' else ['<Alt-Key-2>']"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_sidebar.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\idlelib\\idle_test\\test_sidebar.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 488,
                        "content": "texts.sort(key=lambda text: canvas.bbox(text)[1])"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "topics.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\pydoc_data\\topics.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 14557,
                        "content": "'      \"key=str.lower\"). The key corresponding to each item in '"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "pandocfilters.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pandocfilters.py",
                "vulnerability": "SHA-1",
                "lines": [
                    {
                        "line_number": 49,
                        "content": "fn = hashlib.sha1(content.encode(sys.getfilesystemencoding())).hexdigest()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collisions."
            },
            {
                "language": "Python",
                "filename": "remote.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\adodbapi\\remote.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 455,
                        "content": "if key == \"remote_cursor\":"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "locales.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\arrow\\locales.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 3163,
                        "content": "key = \"zero\"  # And *never* use 0 in the singular!"
                    },
                    {
                        "line_number": 3173,
                        "content": "key = \"future-singular\""
                    },
                    {
                        "line_number": 3294,
                        "content": "key = \"zero\"  # And *never* use 0 in the singular!"
                    },
                    {
                        "line_number": 3303,
                        "content": "key = \"future-singular\""
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "__init__.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\async_lru\\__init__.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 110,
                        "content": "key = _make_key(args, kwargs, self.__typed)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "__init__.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\async_lru\\__init__.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 110,
                        "content": "key = _make_key(args, kwargs, self.__typed)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "_make.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\attr\\_make.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 535,
                        "content": "sorted(unannotated, key=lambda n: cd.get(n).counter)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "catalog.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\babel\\messages\\catalog.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 665,
                        "content": "key = self._key_for(id, message.context)"
                    },
                    {
                        "line_number": 762,
                        "content": "key = self._key_for(id, context)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "catalog.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\babel\\messages\\catalog.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 879,
                        "content": "key = self._key_for(message.id, message.context)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "__init__.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\bs4\\tests\\__init__.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1111,
                        "content": "<ns2:tag key=\"value\">baz</ns2:tag>"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "cparser.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\cffi\\cparser.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 782,
                        "content": "key = '%s %s' % (kind, name)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "recompiler.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\cffi\\recompiler.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 259,
                        "content": "lst.sort(key=lambda entry: entry.name)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "verifier.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\cffi\\verifier.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 53,
                        "content": "key = '\\x00'.join(['%d.%d' % sys.version_info[:2],"
                    },
                    {
                        "line_number": 58,
                        "content": "key = key.encode('utf-8')"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "verifier.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\cffi\\verifier.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 53,
                        "content": "key = '\\x00'.join(['%d.%d' % sys.version_info[:2],"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "cd.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\charset_normalizer\\cd.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 167,
                        "content": "languages = sorted(languages, key=lambda x: x[1], reverse=True)"
                    },
                    {
                        "line_number": 316,
                        "content": "return sorted(merge, key=lambda x: x[1], reverse=True)"
                    },
                    {
                        "line_number": 394,
                        "content": "filter_alt_coherence_matches(results), key=lambda x: x[1], reverse=True"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "cd.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\charset_normalizer\\cd.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 167,
                        "content": "languages = sorted(languages, key=lambda x: x[1], reverse=True)"
                    },
                    {
                        "line_number": 316,
                        "content": "return sorted(merge, key=lambda x: x[1], reverse=True)"
                    },
                    {
                        "line_number": 394,
                        "content": "filter_alt_coherence_matches(results), key=lambda x: x[1], reverse=True"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "_parser.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\dateutil\\parser\\_parser.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 464,
                        "content": "key = [x for x in ['y', 'm', 'd'] if x not in strids]"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "_parser.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\dateutil\\parser\\_parser.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 464,
                        "content": "key = [x for x in ['y', 'm', 'd'] if x not in strids]"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "_factories.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\dateutil\\tz\\_factories.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 64,
                        "content": "key = (s, posix_offset)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "sessions.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\debugpy\\adapter\\sessions.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 290,
                        "content": "session = sorted(_sessions, key=lambda session: session.id)[0]"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "sessions.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\debugpy\\adapter\\sessions.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 290,
                        "content": "session = sorted(_sessions, key=lambda session: session.id)[0]"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "breakpoint.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\debugpy\\_vendored\\pydevd\\pydevd_attach_to_process\\winappdbg\\breakpoint.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 2268,
                        "content": "key = (dwProcessId, bp.get_address())"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "crash.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\debugpy\\_vendored\\pydevd\\pydevd_attach_to_process\\winappdbg\\crash.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1265,
                        "content": "key = key.decode('hex')"
                    },
                    {
                        "line_number": 1267,
                        "content": "key = zlib.decompress(key)"
                    },
                    {
                        "line_number": 1268,
                        "content": "key = pickle.loads(key)"
                    },
                    {
                        "line_number": 1405,
                        "content": "key  = self.__keys_iter.next()"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "pydevd_comm.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\debugpy\\_vendored\\pydevd\\_pydevd_bundle\\pydevd_comm.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 800,
                        "content": "keys = sorted(keys, key=compare_object_attrs_key)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "pydevd_constants.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\debugpy\\_vendored\\pydevd\\_pydevd_bundle\\pydevd_constants.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 496,
                        "content": "s = sorted(d.items(), key=lambda x:str(x[0]))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "pydevd_process_net_command_json.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\debugpy\\_vendored\\pydevd\\_pydevd_bundle\\pydevd_process_net_command_json.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 110,
                        "content": "key = self._value_to_key[value]"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "pydevd_source_mapping.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\debugpy\\_vendored\\pydevd\\_pydevd_bundle\\pydevd_source_mapping.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 85,
                        "content": "key = (lineno, 'client', runtime_source_filename)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "__main__pydevd_gen_debug_adapter_protocol.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\debugpy\\_vendored\\pydevd\\_pydevd_bundle\\_debug_adapter\\__main__pydevd_gen_debug_adapter_protocol.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 272,
                        "content": "prop_name_and_prop.sort(key=compute_sort_key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "concrete.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\debugpy\\_vendored\\pydevd\\_pydevd_frame_eval\\vendored\\bytecode\\concrete.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 551,
                        "content": "key = const_key(value)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "__init__.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\debugpy\\_vendored\\pydevd\\_pydev_bundle\\fsnotify\\__init__.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 256,
                        "content": "paths = sorted(set(paths), key=lambda path:-len(path))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "pydev_runfiles_parallel.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\debugpy\\_vendored\\pydevd\\_pydev_runfiles\\pydev_runfiles_parallel.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 67,
                        "content": "key = (test.__pydev_pyfile__, test.__pydev_module_name__)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "dnssec.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\dns\\dnssec.py",
                "vulnerability": "SHA-1",
                "lines": [
                    {
                        "line_number": 238,
                        "content": "dshash = hashlib.sha1()"
                    },
                    {
                        "line_number": 798,
                        "content": "digest = hashlib.sha1(domain_encoded + salt_encoded).digest()"
                    },
                    {
                        "line_number": 800,
                        "content": "digest = hashlib.sha1(digest + salt_encoded).digest()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collisions."
            },
            {
                "language": "Python",
                "filename": "dnssec.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\dns\\dnssec.py",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 240,
                        "content": "dshash = hashlib.sha256()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Python",
                "filename": "entropy.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\dns\\entropy.py",
                "vulnerability": "SHA-1",
                "lines": [
                    {
                        "line_number": 37,
                        "content": "self.hash = hashlib.sha1()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collisions."
            },
            {
                "language": "Python",
                "filename": "message.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\dns\\message.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 409,
                        "content": "key = (section_number, name, rdclass, rdtype, covers, deleting)"
                    },
                    {
                        "line_number": 729,
                        "content": "key = keyring[keyname]"
                    },
                    {
                        "line_number": 1209,
                        "content": "key = self.keyring.get(absolute_name)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "message.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\dns\\message.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 409,
                        "content": "key = (section_number, name, rdclass, rdtype, covers, deleting)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "tsig.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\dns\\tsig.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 174,
                        "content": "HMAC_MD5: hashlib.md5,"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "tsig.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\dns\\tsig.py",
                "vulnerability": "SHA-1",
                "lines": [
                    {
                        "line_number": 166,
                        "content": "HMAC_SHA1: hashlib.sha1,"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collisions."
            },
            {
                "language": "Python",
                "filename": "tsig.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\dns\\tsig.py",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 168,
                        "content": "HMAC_SHA256: hashlib.sha256,"
                    },
                    {
                        "line_number": 169,
                        "content": "HMAC_SHA256_128: (hashlib.sha256, 128),"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Python",
                "filename": "tsig.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\dns\\tsig.py",
                "vulnerability": "SHA-224",
                "lines": [
                    {
                        "line_number": 167,
                        "content": "HMAC_SHA224: hashlib.sha224,"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-224 provides reduced security compared to larger variants."
            },
            {
                "language": "Python",
                "filename": "win32util.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\dns\\win32util.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 218,
                        "content": "key = winreg.OpenKey(interfaces, guid)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "zone.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\dns\\zone.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 817,
                        "content": "for rdataset in sorted(node, key=lambda rds: (rds.rdtype, rds.covers)):"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "zone.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\dns\\zone.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 203,
                        "content": "key = self._validate_name(key)"
                    },
                    {
                        "line_number": 207,
                        "content": "key = self._validate_name(key)"
                    },
                    {
                        "line_number": 211,
                        "content": "key = self._validate_name(key)"
                    },
                    {
                        "line_number": 227,
                        "content": "key = self._validate_name(key)"
                    },
                    {
                        "line_number": 231,
                        "content": "key = self._validate_name(key)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "dsa.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\dns\\dnssecalgs\\dsa.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 97,
                        "content": "key=dsa.generate_private_key(key_size=key_size),"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "rsa.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\dns\\dnssecalgs\\rsa.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 74,
                        "content": "key=rsa.generate_private_key("
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "dnskeybase.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\dns\\rdtypes\\dnskeybase.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 48,
                        "content": "self.key = self._as_bytes(key)"
                    },
                    {
                        "line_number": 66,
                        "content": "key = base64.b64decode(b64)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "svcbbase.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\dns\\rdtypes\\svcbbase.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 528,
                        "content": "# 'key=', so next token should be a quoted string without"
                    },
                    {
                        "line_number": 530,
                        "content": "key = token.value[:-1]"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "svcbbase.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\dns\\rdtypes\\svcbbase.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 528,
                        "content": "# 'key=', so next token should be a quoted string without"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "HIP.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\dns\\rdtypes\\ANY\\HIP.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 40,
                        "content": "self.key = self._as_bytes(key, True)"
                    },
                    {
                        "line_number": 45,
                        "content": "key = base64.b64encode(self.key).replace(b\"\\n\", b\"\").decode()"
                    },
                    {
                        "line_number": 60,
                        "content": "key = base64.b64decode(tok.get_string().encode())"
                    },
                    {
                        "line_number": 80,
                        "content": "key = parser.get_bytes(lk)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "HIP.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\dns\\rdtypes\\ANY\\HIP.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 40,
                        "content": "self.key = self._as_bytes(key, True)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "OPENPGPKEY.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\dns\\rdtypes\\ANY\\OPENPGPKEY.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 34,
                        "content": "self.key = self._as_bytes(key)"
                    },
                    {
                        "line_number": 44,
                        "content": "key = base64.b64decode(b64)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "TKEY.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\dns\\rdtypes\\ANY\\TKEY.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 58,
                        "content": "self.key = self._as_bytes(key)"
                    },
                    {
                        "line_number": 86,
                        "content": "key = base64.b64decode(key_b64)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "TKEY.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\dns\\rdtypes\\ANY\\TKEY.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 86,
                        "content": "key = base64.b64decode(key_b64)"
                    },
                    {
                        "line_number": 109,
                        "content": "key = parser.get_counted_bytes(2)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "IPSECKEY.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\dns\\rdtypes\\IN\\IPSECKEY.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 47,
                        "content": "self.key = self._as_bytes(key)"
                    },
                    {
                        "line_number": 70,
                        "content": "key = base64.b64decode(b64)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "fontBuilder.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\fontTools\\fontBuilder.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 785,
                        "content": "bag, key=lambda vorg: bag[vorg], reverse=True"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "fontBuilder.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\fontTools\\fontBuilder.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 785,
                        "content": "bag, key=lambda vorg: bag[vorg], reverse=True"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "width.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\fontTools\\cffLib\\width.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 161,
                        "content": "default = min(ends, key=lambda default: byteCost(widths, default, nominal))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "width.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\fontTools\\cffLib\\width.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 161,
                        "content": "default = min(ends, key=lambda default: byteCost(widths, default, nominal))"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "builder.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\fontTools\\colorLib\\builder.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 492,
                        "content": "key=lambda t: (t[1] - t[0], t[1], t[0]),"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "statNames.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\fontTools\\designspaceLib\\statNames.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 148,
                        "content": "key=lambda a: a.axisOrdering,"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "builder.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\fontTools\\feaLib\\builder.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 254,
                        "content": "key = (script, lang, feature_name)"
                    },
                    {
                        "line_number": 1097,
                        "content": "key = (self.script_, language, self.cur_feature_name_)"
                    },
                    {
                        "line_number": 1106,
                        "content": "key = (self.script_, language)"
                    },
                    {
                        "line_number": 1242,
                        "content": "key = (script, lang, self.cur_feature_name_)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "builder.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\fontTools\\feaLib\\builder.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 1097,
                        "content": "key = (self.script_, language, self.cur_feature_name_)"
                    },
                    {
                        "line_number": 1106,
                        "content": "key = (self.script_, language)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "parser.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\fontTools\\feaLib\\parser.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1133,
                        "content": "key = self.cur_token_.lower()"
                    },
                    {
                        "line_number": 1160,
                        "content": "key = self.cur_token_.lower()"
                    },
                    {
                        "line_number": 1349,
                        "content": "key = self.cur_token_.lower()"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "variableScalar.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\fontTools\\feaLib\\variableScalar.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 71,
                        "content": "key = Location({ax.axisTag: ax.defaultValue for ax in self.axes})"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "classifyTools.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\fontTools\\misc\\classifyTools.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 77,
                        "content": "self._sets = sorted(self._sets, key=lambda s: (-len(s), sorted(s)))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "__init__.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\fontTools\\mtiLib\\__init__.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 172,
                        "content": "script.Script.LangSysRecord, key=lambda rec: rec.LangSysTag"
                    },
                    {
                        "line_number": 174,
                        "content": "self.ScriptRecord = sorted(records, key=lambda rec: rec.ScriptTag)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "builder.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\fontTools\\otlLib\\builder.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1361,
                        "content": "key = (glyph1, glyph2)"
                    },
                    {
                        "line_number": 2677,
                        "content": "result = sorted(self.classes_, key=lambda s: (len(s), s), reverse=True)"
                    },
                    {
                        "line_number": 2887,
                        "content": "axisValueRecords.sort(key=lambda avr: avr.AxisIndex)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "__init__.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\fontTools\\subset\\__init__.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 3472,
                        "content": "tags = sorted(font.keys(), key=lambda tag: tagOrder.get(tag, 0))"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "F__e_a_t.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\fontTools\\ttLib\\tables\\F__e_a_t.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 98,
                        "content": "v.settings.items(), key=lambda x: (-1, x[1]) if x[0] == v.default else x"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "F__e_a_t.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\fontTools\\ttLib\\tables\\F__e_a_t.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 98,
                        "content": "v.settings.items(), key=lambda x: (-1, x[1]) if x[0] == v.default else x"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "grUtils.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\fontTools\\ttLib\\tables\\grUtils.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 59,
                        "content": "g = _entries(sorted(attributes.items(), key=lambda x: int(x[0])), sameval)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "G__l_a_t.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\fontTools\\ttLib\\tables\\G__l_a_t.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 165,
                        "content": "self.attributes.items(), key=lambda x: ttFont.getGlyphID(x[0])"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "otTables.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\fontTools\\ttLib\\tables\\otTables.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 305,
                        "content": "for a in sorted(actions, key=lambda x: (-len(x), x)):"
                    },
                    {
                        "line_number": 494,
                        "content": "for action in sorted(actions, key=lambda x: (-len(x), x)):"
                    },
                    {
                        "line_number": 1310,
                        "content": "self.BaseGlyphRecord, key=lambda rec: font.getGlyphID(rec.BaseGlyph)"
                    },
                    {
                        "line_number": 1318,
                        "content": "self.BaseGlyphPaintRecord, key=lambda rec: font.getGlyphID(rec.BaseGlyph)"
                    },
                    {
                        "line_number": 1396,
                        "content": "key = clipBox.as_tuple()"
                    },
                    {
                        "line_number": 1450,
                        "content": "self.groups().items(), key=lambda item: min(item[0])"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "otTables.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\fontTools\\ttLib\\tables\\otTables.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 1140,
                        "content": "ligatures.items(), key=lambda item: (-len(item[0]), item[0])"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "S__i_l_f.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\fontTools\\ttLib\\tables\\S__i_l_f.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 929,
                        "content": "self.colMap.items(), key=lambda x: ttFont.getGlyphID(x[0])"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "TupleVariation.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\fontTools\\ttLib\\tables\\TupleVariation.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 636,
                        "content": "key=lambda item: (-item[1], item[0]),"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "_c_m_a_p.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\fontTools\\ttLib\\tables\\_c_m_a_p.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 1412,
                        "content": "uvList.sort(key=lambda item: (item[1] is not None, item[0], item[1]))"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "_n_a_m_e.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\fontTools\\ttLib\\tables\\_n_a_m_e.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 313,
                        "content": "key = (name.toUnicode(), name.platformID, name.platEncID, name.langID)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "_n_a_m_e.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\fontTools\\ttLib\\tables\\_n_a_m_e.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 313,
                        "content": "key = (name.toUnicode(), name.platformID, name.platEncID, name.langID)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "cff.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\fontTools\\varLib\\cff.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 438,
                        "content": "key = tuple(v is not None for v in all_cs)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "cff.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\fontTools\\varLib\\cff.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 438,
                        "content": "key = tuple(v is not None for v in all_cs)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "featureVars.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\fontTools\\varLib\\featureVars.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 161,
                        "content": "key=lambda d: tuple(sorted(d.items())),"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "featureVars.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\fontTools\\varLib\\featureVars.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 161,
                        "content": "key=lambda d: tuple(sorted(d.items())),"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "interpolatable.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\fontTools\\varLib\\interpolatable.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 458,
                        "content": "for loc in sorted(locs, key=lambda v: (len(v), v)):"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "merger.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\fontTools\\varLib\\merger.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 227,
                        "content": "if not all(sorted(vs, key=sortKey) == vs for vs in lst):"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "models.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\fontTools\\varLib\\models.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 276,
                        "content": "key = tuple(v is not None for v in items)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "models.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\fontTools\\varLib\\models.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 276,
                        "content": "key = tuple(v is not None for v in items)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "varStore.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\fontTools\\varLib\\varStore.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 64,
                        "content": "key = _getLocationKey(region)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "varStore.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\fontTools\\varLib\\varStore.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 620,
                        "content": "encodings.sort(key=_Encoding.width_sort_key)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "names.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\fontTools\\varLib\\instancer\\names.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 171,
                        "content": "key=lambda v: len(v.AxisValueRecord),"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "voltToFea.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\fontTools\\voltLib\\voltToFea.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 132,
                        "content": "for statement in sorted(groups, key=lambda x: Group(x)):"
                    },
                    {
                        "line_number": 194,
                        "content": "stags = sorted(scripts, key=lambda k: 0 if k == \"DFLT\" else 1)"
                    },
                    {
                        "line_number": 197,
                        "content": "ltags = sorted(scripts[stag], key=lambda k: 0 if k == \"dflt\" else 1)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "_auth.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\httpx\\_auth.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 174,
                        "content": "\"MD5\": hashlib.md5,"
                    },
                    {
                        "line_number": 175,
                        "content": "\"MD5-SESS\": hashlib.md5,"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "_auth.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\httpx\\_auth.py",
                "vulnerability": "SHA-1",
                "lines": [
                    {
                        "line_number": 176,
                        "content": "\"SHA\": hashlib.sha1,"
                    },
                    {
                        "line_number": 177,
                        "content": "\"SHA-SESS\": hashlib.sha1,"
                    },
                    {
                        "line_number": 306,
                        "content": "return hashlib.sha1(s).hexdigest()[:16].encode()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collisions."
            },
            {
                "language": "Python",
                "filename": "_auth.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\httpx\\_auth.py",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 178,
                        "content": "\"SHA-256\": hashlib.sha256,"
                    },
                    {
                        "line_number": 179,
                        "content": "\"SHA-256-SESS\": hashlib.sha256,"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Python",
                "filename": "wsgi.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\httpx\\_transports\\wsgi.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 111,
                        "content": "key = header_key.decode(\"ascii\").upper().replace(\"-\", \"_\")"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "kernelapp.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\ipykernel\\kernelapp.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 267,
                        "content": "key=self.session.key,"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "compilerop.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\IPython\\core\\compilerop.py",
                "vulnerability": "SHA-1",
                "lines": [
                    {
                        "line_number": 59,
                        "content": "hash_digest = hashlib.sha1(code.encode(\"utf-8\")).hexdigest()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collisions."
            },
            {
                "language": "Python",
                "filename": "formatters.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\IPython\\core\\formatters.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 503,
                        "content": "key = (type_module, type_name)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "shellapp.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\IPython\\core\\shellapp.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 238,
                        "content": "key = self.matplotlib"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "autoreload.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\IPython\\extensions\\autoreload.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 432,
                        "content": "key = (module.__name__, name)"
                    },
                    {
                        "line_number": 457,
                        "content": "key = (module.__name__, name)"
                    },
                    {
                        "line_number": 483,
                        "content": "key = (module.__name__, name)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "pretty.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\IPython\\lib\\pretty.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 871,
                        "content": "key = (type_module, type_name)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "threaded_extension.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\isapi\\threaded_extension.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 42,
                        "content": "if key == ISAPI_SHUTDOWN and overlapped is None:"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "parsing.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\isoduration\\parser\\parsing.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 68,
                        "content": "key = parse_designator(date_designators, ch)"
                    },
                    {
                        "line_number": 111,
                        "content": "key = parse_designator(time_designators, ch)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "cache.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\jedi\\cache.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 85,
                        "content": "key = (args, frozenset(kwargs.items()))"
                    },
                    {
                        "line_number": 108,
                        "content": "key = (args, frozenset(kwargs.items()))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "cache.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\jedi\\cache.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 85,
                        "content": "key = (args, frozenset(kwargs.items()))"
                    },
                    {
                        "line_number": 108,
                        "content": "key = (args, frozenset(kwargs.items()))"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "classes.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\jedi\\api\\classes.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 157,
                        "content": ">>> defs = sorted(defs, key=lambda d: d.line)"
                    },
                    {
                        "line_number": 338,
                        "content": ">>> defs = sorted(defs, key=lambda d: d.line)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "classes.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\jedi\\api\\classes.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 37,
                        "content": "return sorted(names, key=lambda s: s.start_pos or (0, 0))"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "environment.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\jedi\\api\\environment.py",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 166,
                        "content": "sha256 = hashlib.sha256()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Python",
                "filename": "file_name.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\jedi\\api\\file_name.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 40,
                        "content": "listed = sorted(os.scandir(base_path), key=lambda e: e.name)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "helpers.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\jedi\\api\\helpers.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 47,
                        "content": "return sorted(defs, key=lambda x: (str(x.module_path or ''),"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "strings.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\jedi\\api\\strings.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 56,
                        "content": "for dict_key in sorted(_get_python_keys(dicts), key=lambda x: repr(x)):"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "__init__.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\jedi\\api\\__init__.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 540,
                        "content": "return sorted(set(ana), key=lambda x: x.line)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "type_var.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\jedi\\inference\\gradual\\type_var.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 64,
                        "content": "elif key == 'contravariant':"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "bccache.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\jinja2\\bccache.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 175,
                        "content": "key = self.get_cache_key(name, filename)"
                    },
                    {
                        "line_number": 396,
                        "content": "key = self.prefix + bucket.key"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "lexer.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\jinja2\\lexer.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 144,
                        "content": "f\"({'|'.join(re.escape(x) for x in sorted(operators, key=lambda x: -len(x)))})\""
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "commands.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\jupyterlab\\commands.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 2524,
                        "content": "key = (*key, v.major, v.minor, v.patch)"
                    },
                    {
                        "line_number": 2527,
                        "content": "key = (*key, 0) if v.prerelease else (1,)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "commands.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\jupyterlab\\commands.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 2524,
                        "content": "key = (*key, v.major, v.minor, v.patch)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "semver.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\jupyterlab\\semver.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 608,
                        "content": "key = key + tuple(v.prerelease)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "announcements.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\jupyterlab\\handlers\\announcements.py",
                "vulnerability": "SHA-1",
                "lines": [
                    {
                        "line_number": 174,
                        "content": "hash_ = hashlib.sha1(message.encode()).hexdigest()  # noqa: S324"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collisions."
            },
            {
                "language": "Python",
                "filename": "test_announcements.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\jupyterlab\\tests\\test_announcements.py",
                "vulnerability": "SHA-1",
                "lines": [
                    {
                        "line_number": 69,
                        "content": "\"data\": {\"id\": hashlib.sha1(message.encode()).hexdigest(), \"tags\": [\"update\"]}  # noqa: S324"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collisions."
            },
            {
                "language": "Python",
                "filename": "workspaces_handler.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\jupyterlab_server\\workspaces_handler.py",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 83,
                        "content": "signature = \"-\" + hashlib.sha256(data.encode(\"utf-8\")).hexdigest()[:4]"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Python",
                "filename": "connect.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\jupyter_client\\connect.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 504,
                        "content": "key=self.session.key,"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "kernelspecapp.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\jupyter_client\\kernelspecapp.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 53,
                        "content": "name_len = len(sorted(paths, key=lambda name: len(name))[-1])"
                    },
                    {
                        "line_number": 295,
                        "content": "name_len = len(sorted(provisioners, key=lambda name: len(name))[-1])"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "session.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\jupyter_client\\session.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 428,
                        "content": "key = CBytes(config=True, help=\"\"\"execution key, for signing messages.\"\"\")"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "session.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\jupyter_client\\session.py",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 459,
                        "content": "return hashlib.sha256"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Python",
                "filename": "logger.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\jupyter_events\\logger.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 149,
                        "content": "key = event_schema.id"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "bash_language_server.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\jupyter_lsp\\specs\\bash_language_server.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 7,
                        "content": "node_module = key = \"bash-language-server\""
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "javascript_typescript_langserver.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\jupyter_lsp\\specs\\javascript_typescript_langserver.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 5,
                        "content": "node_module = key = \"javascript-typescript-langserver\""
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "julia_language_server.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\jupyter_lsp\\specs\\julia_language_server.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 6,
                        "content": "key = \"julia-language-server\""
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "unified_language_server.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\jupyter_lsp\\specs\\unified_language_server.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 5,
                        "content": "node_module = key = \"unified-language-server\""
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "yaml_language_server.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\jupyter_lsp\\specs\\yaml_language_server.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 6,
                        "content": "node_module = key = \"yaml-language-server\""
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "serverapp.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\jupyter_server\\serverapp.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1061,
                        "content": "key = encodebytes(os.urandom(32))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "serverapp.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\jupyter_server\\serverapp.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 1061,
                        "content": "key = encodebytes(os.urandom(32))"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "serverapp.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\jupyter_server\\serverapp.py",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 1063,
                        "content": "h = hmac.new(key, digestmod=hashlib.sha256)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Python",
                "filename": "figure.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\matplotlib\\figure.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 107,
                        "content": "return max(self._axes, key=self._axes.__getitem__, default=None)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "mlab.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\matplotlib\\mlab.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 108,
                        "content": "return detrend(x, key=detrend_linear, axis=axis)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "texmanager.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\matplotlib\\texmanager.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 333,
                        "content": "key = cls._get_tex_source(tex, fontsize), dpi"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "texmanager.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\matplotlib\\texmanager.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 174,
                        "content": "filehash = hashlib.md5(src.encode('utf-8')).hexdigest()"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "text.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\matplotlib\\text.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1945,
                        "content": "x, relposx = min(xpos, key=lambda v: abs(v[0] - x1))"
                    },
                    {
                        "line_number": 1946,
                        "content": "y, relposy = min(ypos, key=lambda v: abs(v[0] - y1))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "_fontconfig_pattern.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\matplotlib\\_fontconfig_pattern.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 117,
                        "content": "# are necessarily scalar) are given as key=value, skipping Nones."
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "__init__.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\matplotlib\\__init__.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 769,
                        "content": "elif key == \"backend\" and self is globals().get(\"rcParams\"):"
                    },
                    {
                        "line_number": 932,
                        "content": "dict(key=key, fname=fname, line_no=line_no,"
                    },
                    {
                        "line_number": 997,
                        "content": "key: [(rcsetup._auto_backend_sentinel if key == \"backend\" else"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "__init__.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\matplotlib\\__init__.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 769,
                        "content": "elif key == \"backend\" and self is globals().get(\"rcParams\"):"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "backend_svg.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\matplotlib\\backends\\backend_svg.py",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 470,
                        "content": "m = hashlib.sha256()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Python",
                "filename": "backend_webagg_core.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\matplotlib\\backends\\backend_webagg_core.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 77,
                        "content": "key = key[:key.index('k')] + value"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "backend_webagg_core.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\matplotlib\\backends\\backend_webagg_core.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 77,
                        "content": "key = key[:key.index('k')] + value"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "mathmpl.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\matplotlib\\sphinxext\\mathmpl.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 149,
                        "content": "hashlib.md5(f'{latex}{fontset}{fontsize}'.encode()).hexdigest()[-10:])"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "compare.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\matplotlib\\testing\\compare.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 331,
                        "content": "cache_stat, key=lambda path: cache_stat[path].st_atime,"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "compare.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\matplotlib\\testing\\compare.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 48,
                        "content": "md5 = hashlib.md5()"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "decorators.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\matplotlib\\testing\\decorators.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 96,
                        "content": "key=lambda manager: manager.num)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "decorators.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\matplotlib\\testing\\decorators.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 96,
                        "content": "key=lambda manager: manager.num)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_dviread.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\matplotlib\\tests\\test_dviread.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 16,
                        "content": "key = b'TeXfont%d' % n"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_mlab.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\matplotlib\\tests\\test_mlab.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 95,
                        "content": "mlab.detrend(input.T, key=\"constant\", axis=None), target.T)"
                    },
                    {
                        "line_number": 108,
                        "content": "self.allclose(mlab.detrend(input, key=\"default\", axis=1), target)"
                    },
                    {
                        "line_number": 161,
                        "content": "mlab.detrend(input.T, key=\"linear\", axis=0), target.T)"
                    },
                    {
                        "line_number": 165,
                        "content": "mlab.detrend(input, key=\"linear\", axis=1), target)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_mlab.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\matplotlib\\tests\\test_mlab.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 95,
                        "content": "mlab.detrend(input.T, key=\"constant\", axis=None), target.T)"
                    },
                    {
                        "line_number": 109,
                        "content": "self.allclose(mlab.detrend(input.T, key=\"mean\", axis=0), target.T)"
                    },
                    {
                        "line_number": 111,
                        "content": "mlab.detrend(input.T, key=mlab.detrend_mean, axis=0), target.T)"
                    },
                    {
                        "line_number": 138,
                        "content": "assert mlab.detrend(5.5, key=mlab.detrend_linear) == 0."
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "util.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\mistune\\util.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 49,
                        "content": "key = ' '.join(s.split()).strip()"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "footnotes.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\mistune\\plugins\\footnotes.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 22,
                        "content": "key = unikey(m.group('footnote_key'))"
                    },
                    {
                        "line_number": 46,
                        "content": "key = unikey(m.group('footnote_key'))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "art3d.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\mpl_toolkits\\mplot3d\\art3d.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1035,
                        "content": "key=lambda x: x[0], reverse=True)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "art3d.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\mpl_toolkits\\mplot3d\\art3d.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 1035,
                        "content": "key=lambda x: x[0], reverse=True)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "ctx_base.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\mpmath\\ctx_base.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 481,
                        "content": "key = args, tuple(kwargs.items())"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "ctx_mp.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\mpmath\\ctx_mp.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 668,
                        "content": "key = p, q, flags, 'R'"
                    },
                    {
                        "line_number": 671,
                        "content": "key = p, q, flags, 'C'"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "polynomials.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\mpmath\\calculus\\polynomials.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 207,
                        "content": "roots.sort(key=lambda x: (abs(ctx._im(x)), ctx._re(x)))"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "quadrature.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\mpmath\\calculus\\quadrature.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 54,
                        "content": "key = (a, b, degree, prec)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "csshtmlheader.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\nbconvert\\preprocessors\\csshtmlheader.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 90,
                        "content": "md5 = hashlib.md5()  # noqa: S324"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "test_array_object.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\numpy\\array_api\\tests\\test_array_object.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 393,
                        "content": "key = ones((0, 0), dtype=bool_)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "einsumfunc.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\numpy\\core\\einsumfunc.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 204,
                        "content": "path = min(full_results, key=lambda x: x[0])[1]"
                    },
                    {
                        "line_number": 212,
                        "content": "path = min(full_results, key=lambda x: x[0])[1]"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "getlimits.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\numpy\\core\\getlimits.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 336,
                        "content": "key = (ftype(-1.0) / ftype(10.)).newbyteorder('<').tobytes()"
                    },
                    {
                        "line_number": 692,
                        "content": "self.key = \"%s%d\" % (self.kind, self.bits)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "getlimits.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\numpy\\core\\getlimits.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 336,
                        "content": "key = (ftype(-1.0) / ftype(10.)).newbyteorder('<').tobytes()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "numerictypes.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\numpy\\core\\numerictypes.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 521,
                        "content": "ScalarType += sorted(_concrete_types, key=_scalar_type_key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "system_info.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\numpy\\distutils\\system_info.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1781,
                        "content": "key = (tuple(libraries), tuple(library_dirs))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "system_info.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\numpy\\distutils\\system_info.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 1781,
                        "content": "key = (tuple(libraries), tuple(library_dirs))"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "gnu.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\numpy\\distutils\\fcompiler\\gnu.py",
                "vulnerability": "SHA-1",
                "lines": [
                    {
                        "line_number": 402,
                        "content": "h = hashlib.sha1()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collisions."
            },
            {
                "language": "Python",
                "filename": "test_system_info.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\numpy\\distutils\\tests\\test_system_info.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 222,
                        "content": "assert_equal(tsi.get_runtime_lib_dirs(key='rpath'), [self._dir2])"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "cb_rules.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\numpy\\f2py\\cb_rules.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 60,
                        "content": "char *key = \"__f2py_cb_#name#\";"
                    },
                    {
                        "line_number": 65,
                        "content": "char *key = \"__f2py_cb_#name#\";"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "crackfortran.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\numpy\\f2py\\crackfortran.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 3502,
                        "content": "elif key == 'callstatement':"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "npyio.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\numpy\\lib\\npyio.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 2093,
                        "content": "key = names.index(key)"
                    },
                    {
                        "line_number": 2144,
                        "content": "key = names.index(key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "recfunctions.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\numpy\\lib\\recfunctions.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1406,
                        "content": "a, key=None, ignoremask=None, return_index=None):"
                    },
                    {
                        "line_number": 1411,
                        "content": "def find_duplicates(a, key=None, ignoremask=True, return_index=False):"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_direct.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\numpy\\random\\tests\\test_direct.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 373,
                        "content": "key=state['state']['key'])"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_generator_mt19937.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\numpy\\random\\tests\\test_generator_mt19937.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 2623,
                        "content": "key = mt19937.state[\"state\"][\"key\"]"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_generator_mt19937.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\numpy\\random\\tests\\test_generator_mt19937.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 2623,
                        "content": "key = mt19937.state[\"state\"][\"key\"]"
                    },
                    {
                        "line_number": 2631,
                        "content": "key = jumped.state[\"state\"][\"key\"]"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_generator_mt19937.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\numpy\\random\\tests\\test_generator_mt19937.py",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 516,
                        "content": "res = hashlib.sha256(val).hexdigest()"
                    },
                    {
                        "line_number": 523,
                        "content": "res = hashlib.sha256(val).hexdigest()"
                    },
                    {
                        "line_number": 931,
                        "content": "res = hashlib.sha256(actual.view(np.int8)).hexdigest()"
                    },
                    {
                        "line_number": 2626,
                        "content": "sha256 = hashlib.sha256(key)"
                    },
                    {
                        "line_number": 2634,
                        "content": "sha256 = hashlib.sha256(key)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Python",
                "filename": "test_random.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\numpy\\random\\tests\\test_random.py",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 238,
                        "content": "res = hashlib.sha256(val.view(np.int8)).hexdigest()"
                    },
                    {
                        "line_number": 244,
                        "content": "res = hashlib.sha256(val).hexdigest()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Python",
                "filename": "test_randomstate.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\numpy\\random\\tests\\test_randomstate.py",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 360,
                        "content": "res = hashlib.sha256(val.view(np.int8)).hexdigest()"
                    },
                    {
                        "line_number": 366,
                        "content": "res = hashlib.sha256(val).hexdigest()"
                    },
                    {
                        "line_number": 2029,
                        "content": "res = hashlib.sha256(val.view(np.int8)).hexdigest()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Python",
                "filename": "frame.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pandas\\core\\frame.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 7107,
                        "content": ">>> df.sort_values(by='col4', key=lambda col: col.str.lower())"
                    },
                    {
                        "line_number": 7359,
                        "content": ">>> df.sort_index(key=lambda x: x.str.lower())"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "frame.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pandas\\core\\frame.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 4137,
                        "content": "key = check_bool_indexer(self.index, key)"
                    },
                    {
                        "line_number": 4316,
                        "content": "key = check_bool_indexer(self.index, key)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "generic.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pandas\\core\\generic.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 616,
                        "content": "key = f\"{prefix}level_{i}\""
                    },
                    {
                        "line_number": 5202,
                        "content": ">>> df.sort_values(by='col4', key=lambda col: col.str.lower())"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "indexing.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pandas\\core\\indexing.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 850,
                        "content": "key = key[column_axis]"
                    },
                    {
                        "line_number": 902,
                        "content": "key = tuple(list(x) if is_iterator(x) else x for x in key)"
                    },
                    {
                        "line_number": 1180,
                        "content": "key = tuple(list(x) if is_iterator(x) else x for x in key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "indexing.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pandas\\core\\indexing.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 757,
                        "content": "key = _tupleize_axis_indexer(self.ndim, self.axis, key)"
                    },
                    {
                        "line_number": 1779,
                        "content": "key = _tupleize_axis_indexer(self.ndim, self.axis, key)"
                    },
                    {
                        "line_number": 2537,
                        "content": "key = _tuplify(self.ndim, key)"
                    },
                    {
                        "line_number": 2538,
                        "content": "key = list(self._convert_key(key))"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "resample.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pandas\\core\\resample.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 490,
                        "content": "groupby=groupby, key=key, parent=self, include_groups=include_groups"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "resample.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pandas\\core\\resample.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 2208,
                        "content": "super().__init__(freq=freq, key=key, axis=axis, **kwargs)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "series.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pandas\\core\\series.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1141,
                        "content": "key = np.asarray(key, dtype=bool)"
                    },
                    {
                        "line_number": 1330,
                        "content": "key = np.asarray(key, dtype=bool)"
                    },
                    {
                        "line_number": 3800,
                        "content": ">>> s.sort_values(key=lambda x: x.str.lower())"
                    },
                    {
                        "line_number": 4052,
                        "content": ">>> s.sort_index(key=lambda x : x.str.lower())"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "series.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pandas\\core\\series.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 1140,
                        "content": "key = check_bool_indexer(self.index, key)"
                    },
                    {
                        "line_number": 1329,
                        "content": "key = check_bool_indexer(self.index, key)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "datetimelike.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pandas\\core\\arrays\\datetimelike.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 398,
                        "content": "key = check_array_indexer(self, key)  # maybe ndarray[bool] -> slice"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "interval.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pandas\\core\\arrays\\interval.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 718,
                        "content": "key = check_array_indexer(self, key)"
                    },
                    {
                        "line_number": 738,
                        "content": "key = check_array_indexer(self, key)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "masked.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pandas\\core\\arrays\\masked.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 308,
                        "content": "key = check_array_indexer(self, key)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "string_.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pandas\\core\\arrays\\string_.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 451,
                        "content": "key = check_array_indexer(self, key)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "_mixins.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pandas\\core\\arrays\\_mixins.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 260,
                        "content": "key = check_array_indexer(self, key)"
                    },
                    {
                        "line_number": 292,
                        "content": "key = check_array_indexer(self, key)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "accessors.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pandas\\core\\arrays\\arrow\\accessors.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 154,
                        "content": "#     key = pc.add(key, pc.list_value_length(self._pa_array))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "array.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pandas\\core\\arrays\\arrow\\array.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1856,
                        "content": "key = np.asarray(key, dtype=np.bool_)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "array.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pandas\\core\\arrays\\arrow\\array.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 1827,
                        "content": "key = check_array_indexer(self, key)"
                    },
                    {
                        "line_number": 1856,
                        "content": "key = np.asarray(key, dtype=np.bool_)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "array.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pandas\\core\\arrays\\sparse\\array.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1021,
                        "content": "key = cast(np.ndarray, key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "array.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pandas\\core\\arrays\\sparse\\array.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 1017,
                        "content": "key = check_array_indexer(self, key)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "generic.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pandas\\core\\groupby\\generic.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 361,
                        "content": "key = base.OutputKey(label=name, position=idx)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "grouper.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pandas\\core\\groupby\\grouper.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 130,
                        "content": "``df.groupby(pd.Grouper(key=\"Animal\"))`` is equivalent to ``df.groupby('Animal')``"
                    },
                    {
                        "line_number": 171,
                        "content": ">>> df.groupby(pd.Grouper(key=\"Publish date\", freq=\"1W\")).mean()"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "grouper.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pandas\\core\\groupby\\grouper.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 171,
                        "content": ">>> df.groupby(pd.Grouper(key=\"Publish date\", freq=\"1W\")).mean()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "base.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pandas\\core\\indexes\\base.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 4743,
                        "content": "ldrop_names = sorted(self_names - overlap, key=self_names_order)"
                    },
                    {
                        "line_number": 5404,
                        "content": "key = np.asarray(key, dtype=bool)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "base.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pandas\\core\\indexes\\base.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 5388,
                        "content": "key = com.cast_scalar_indexer(key)"
                    },
                    {
                        "line_number": 5402,
                        "content": "key = key.to_numpy(dtype=bool, na_value=False)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "interval.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pandas\\core\\indexes\\interval.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 544,
                        "content": "key = ensure_index(key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "multi.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pandas\\core\\indexes\\multi.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 2199,
                        "content": "key = np.asarray(key, dtype=bool)"
                    },
                    {
                        "line_number": 3075,
                        "content": "# e.g. test_groupby_example key = ((0, 0, 1, 2), \"new_col\")"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "multi.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pandas\\core\\indexes\\multi.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 2185,
                        "content": "key = com.cast_scalar_indexer(key)"
                    },
                    {
                        "line_number": 3075,
                        "content": "# e.g. test_groupby_example key = ((0, 0, 1, 2), \"new_col\")"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "merge.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pandas\\core\\reshape\\merge.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 2419,
                        "content": "Left (resp. right if called with `key='right'`) labels, as enumerated type."
                    },
                    {
                        "line_number": 2421,
                        "content": "Right (resp. left if called with `key='right'`) labels, as enumerated type."
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "stata.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pandas\\io\\stata.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 872,
                        "content": "key = struct.unpack(\"<f\", float32_base)[0]"
                    },
                    {
                        "line_number": 882,
                        "content": "key = struct.unpack(\"<d\", float64_base)[0]"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "stata.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pandas\\io\\stata.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 3129,
                        "content": "key = gso_table.get(val, None)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "_odswriter.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pandas\\io\\excel\\_odswriter.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 130,
                        "content": "for cell in sorted(cells, key=lambda cell: (cell.row, cell.col)):"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "printing.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pandas\\io\\formats\\printing.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 154,
                        "content": "key=pprint_thing(k, _nest_lvl + 1, max_seq_items=max_seq_items, **kwds),"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "_misc.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pandas\\plotting\\_misc.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 641,
                        "content": "key = self._get_canonical_key(key)"
                    },
                    {
                        "line_number": 647,
                        "content": "key = self._get_canonical_key(key)"
                    },
                    {
                        "line_number": 651,
                        "content": "key = self._get_canonical_key(key)"
                    },
                    {
                        "line_number": 657,
                        "content": "key = self._get_canonical_key(key)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_algos.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pandas\\tests\\test_algos.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 218,
                        "content": "key = np.array([1, 2, 1, np.nan], dtype=\"O\")"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_downstream.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pandas\\tests\\test_downstream.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 106,
                        "content": "key = cftime.DatetimeGregorian(2000, 1, 1)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_numpy.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pandas\\tests\\extension\\test_numpy.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 405,
                        "content": "key = full_indexer(df)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "setitem.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pandas\\tests\\extension\\base\\setitem.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 363,
                        "content": "key = full_indexer(df)"
                    },
                    {
                        "line_number": 389,
                        "content": "key = full_indexer(ser)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "array.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pandas\\tests\\extension\\decimal\\array.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 206,
                        "content": "key = check_array_indexer(self, key)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_stack_unstack.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pandas\\tests\\frame\\test_stack_unstack.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1061,
                        "content": "key = r[\"1st\"], (col, r[\"2nd\"], r[\"3rd\"])"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_indexing.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pandas\\tests\\frame\\indexing\\test_indexing.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 912,
                        "content": "key = (f.index[slice(None, 2)], [\"A\", \"B\"])"
                    },
                    {
                        "line_number": 924,
                        "content": "key = (f.index[slice(None, 2)], [\"A\", \"B\"])"
                    },
                    {
                        "line_number": 935,
                        "content": "key = (f.index[slice(-2, None)], [\"A\", \"B\"])"
                    },
                    {
                        "line_number": 944,
                        "content": "key = (f.index[slice(-2, None)], [\"A\", \"B\"])"
                    },
                    {
                        "line_number": 1741,
                        "content": "key = (df.index[2], df.columns[0])"
                    },
                    {
                        "line_number": 1793,
                        "content": "key = (slice(2, 4), 0)"
                    },
                    {
                        "line_number": 1822,
                        "content": "key = (slice(2, 4), 0)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_indexing.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pandas\\tests\\frame\\indexing\\test_indexing.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 935,
                        "content": "key = (f.index[slice(-2, None)], [\"A\", \"B\"])"
                    },
                    {
                        "line_number": 944,
                        "content": "key = (f.index[slice(-2, None)], [\"A\", \"B\"])"
                    },
                    {
                        "line_number": 1741,
                        "content": "key = (df.index[2], df.columns[0])"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_sort_index.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pandas\\tests\\frame\\methods\\test_sort_index.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 859,
                        "content": "result = df.sort_index(key=lambda x: x.str.lower())"
                    },
                    {
                        "line_number": 863,
                        "content": "result = df.sort_index(key=lambda x: x.str.lower(), ascending=False)"
                    },
                    {
                        "line_number": 886,
                        "content": "result = df.sort_index(level=\"a\", key=lambda x: x.str.lower())"
                    },
                    {
                        "line_number": 895,
                        "content": "key=lambda x: x.str.lower() if x.name in [\"a\", \"c\"] else -x,"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_sort_index.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pandas\\tests\\frame\\methods\\test_sort_index.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 895,
                        "content": "key=lambda x: x.str.lower() if x.name in [\"a\", \"c\"] else -x,"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_sort_values.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pandas\\tests\\frame\\methods\\test_sort_values.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 755,
                        "content": "result = df.sort_values([0, 1], key=lambda col: col.str.lower())"
                    },
                    {
                        "line_number": 759,
                        "content": "[0, 1], key=lambda col: col.str.lower(), ascending=False"
                    },
                    {
                        "line_number": 761,
                        "content": "expected = df.sort_values(1, key=lambda col: col.str.lower(), ascending=False)"
                    },
                    {
                        "line_number": 778,
                        "content": "result = df.sort_values(0, key=lambda col: col.str.lower())"
                    },
                    {
                        "line_number": 782,
                        "content": "result = df.sort_values(1, key=lambda col: -col)"
                    },
                    {
                        "line_number": 789,
                        "content": "result = df.sort_values(0, key=lambda col: col.str.lower(), axis=1)"
                    },
                    {
                        "line_number": 793,
                        "content": "result = df.sort_values(1, key=lambda col: -col, axis=1)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_sort_values.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pandas\\tests\\frame\\methods\\test_sort_values.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 694,
                        "content": "result = df.sort_values(0, key=lambda x: -x, ascending=False)"
                    },
                    {
                        "line_number": 714,
                        "content": "result = df.sort_values(by=[\"a\", \"b\"], key=lambda x: -x, ascending=False)"
                    },
                    {
                        "line_number": 793,
                        "content": "result = df.sort_values(1, key=lambda col: -col, axis=1)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_categorical.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pandas\\tests\\groupby\\test_categorical.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1008,
                        "content": "exp = res[sorted(res.index, key=lambda x: float(x.split()[0]))]"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_groupby.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pandas\\tests\\groupby\\test_groupby.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 42,
                        "content": "expected = \"Grouper(key='A', level='B', axis=0, sort=False, dropna=True)\""
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_groupby.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pandas\\tests\\groupby\\test_groupby.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 42,
                        "content": "expected = \"Grouper(key='A', level='B', axis=0, sort=False, dropna=True)\""
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_grouping.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pandas\\tests\\groupby\\test_grouping.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 772,
                        "content": "grouper = Grouper(key=\"date\", freq=\"YS\")"
                    },
                    {
                        "line_number": 1186,
                        "content": "gb = df.groupby([Grouper(level=\"a\"), Grouper(key=\"b\")], as_index=False)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_grouping.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pandas\\tests\\groupby\\test_grouping.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 249,
                        "content": "# Grouper(key=...) may be passed in a list"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_reductions.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pandas\\tests\\groupby\\test_reductions.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 510,
                        "content": "key = np.array([1, 1], dtype=np.int64)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_timegrouper.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pandas\\tests\\groupby\\test_timegrouper.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 66,
                        "content": "tdg = Grouper(key=\"Date\", freq=\"5D\")"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_timegrouper.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pandas\\tests\\groupby\\test_timegrouper.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 317,
                        "content": "[Grouper(freq=\"1ME\", key=\"Date\", level=\"Date\"), \"Buyer\"]"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_aggregate.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pandas\\tests\\groupby\\aggregate\\test_aggregate.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1199,
                        "content": "# check agg(key=(col, aggfunc)) case"
                    },
                    {
                        "line_number": 1236,
                        "content": "# check agg(key=(col, aggfunc)) case"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_nth.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pandas\\tests\\groupby\\methods\\test_nth.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 304,
                        "content": "key = [df.index.year, df.index.month]"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_nth.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pandas\\tests\\groupby\\methods\\test_nth.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 304,
                        "content": "key = [df.index.year, df.index.month]"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_quantile.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pandas\\tests\\groupby\\methods\\test_quantile.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 76,
                        "content": "key = np.array([0, 0, 1, 1, 1], dtype=np.int64)"
                    },
                    {
                        "line_number": 86,
                        "content": "key = np.array([0, 0, 1, 1], dtype=np.int64)"
                    },
                    {
                        "line_number": 113,
                        "content": "key = np.array([1, 0, 1], dtype=np.int64)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_quantile.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pandas\\tests\\groupby\\methods\\test_quantile.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 76,
                        "content": "key = np.array([0, 0, 1, 1, 1], dtype=np.int64)"
                    },
                    {
                        "line_number": 86,
                        "content": "key = np.array([0, 0, 1, 1], dtype=np.int64)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_rank.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pandas\\tests\\groupby\\methods\\test_rank.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 129,
                        "content": "key = np.repeat(grps, len(vals))"
                    },
                    {
                        "line_number": 184,
                        "content": "key = np.repeat(grps, len(vals))"
                    },
                    {
                        "line_number": 435,
                        "content": "key = np.repeat(grps, len(vals))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_rank.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pandas\\tests\\groupby\\methods\\test_rank.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 129,
                        "content": "key = np.repeat(grps, len(vals))"
                    },
                    {
                        "line_number": 184,
                        "content": "key = np.repeat(grps, len(vals))"
                    },
                    {
                        "line_number": 435,
                        "content": "key = np.repeat(grps, len(vals))"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_transform.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pandas\\tests\\groupby\\transform\\test_transform.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 65,
                        "content": "key = [\"one\", \"two\", \"one\", \"two\", \"one\"]"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_transform.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pandas\\tests\\groupby\\transform\\test_transform.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 65,
                        "content": "key = [\"one\", \"two\", \"one\", \"two\", \"one\"]"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_any_index.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pandas\\tests\\indexes\\test_any_index.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 119,
                        "content": "key = np.array([0, 1], dtype=np.intp)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_indexing.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pandas\\tests\\indexes\\test_indexing.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 275,
                        "content": "key = slice(None, None, \"foo\")"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_indexing.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pandas\\tests\\indexes\\datetimes\\test_indexing.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 394,
                        "content": "key = idx[1].as_unit(\"ms\")"
                    },
                    {
                        "line_number": 402,
                        "content": "key = dta[0].as_unit(\"ns\") + pd.Timedelta(1)"
                    },
                    {
                        "line_number": 428,
                        "content": "key = time(15, 11, 30)"
                    },
                    {
                        "line_number": 636,
                        "content": "key = box(year=2000, month=1, day=7)"
                    },
                    {
                        "line_number": 655,
                        "content": "key = box(year=year, month=1, day=7)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_indexing.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pandas\\tests\\indexes\\datetimes\\test_indexing.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 402,
                        "content": "key = dta[0].as_unit(\"ns\") + pd.Timedelta(1)"
                    },
                    {
                        "line_number": 636,
                        "content": "key = box(year=2000, month=1, day=7)"
                    },
                    {
                        "line_number": 655,
                        "content": "key = box(year=year, month=1, day=7)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_partial_slicing.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pandas\\tests\\indexes\\datetimes\\test_partial_slicing.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 77,
                        "content": "key = \"2015-5-14 00:00:00\""
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_interval.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pandas\\tests\\indexes\\interval\\test_interval.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 410,
                        "content": "key = make_key(breaks)"
                    },
                    {
                        "line_number": 431,
                        "content": "key = make_key(breaks)"
                    },
                    {
                        "line_number": 463,
                        "content": "key = make_key(breaks2)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_indexing.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pandas\\tests\\indexes\\multi\\test_indexing.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 779,
                        "content": "key = ((2, 3, 4), \"foo\")"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_partial_indexing.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pandas\\tests\\indexes\\multi\\test_partial_indexing.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 51,
                        "content": "key = (\"2016-01-01\", \"a\")"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_indexing.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pandas\\tests\\indexes\\period\\test_indexing.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 763,
                        "content": "key = \"2017-09-01 00:00:01\""
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_range.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pandas\\tests\\indexes\\ranges\\test_range.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 609,
                        "content": "result = values.sort_values(key=lambda x: x.map(sort_order))"
                    },
                    {
                        "line_number": 615,
                        "content": "result2 = ser.sort_values(key=lambda x: x.map(sort_order))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_indexing.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pandas\\tests\\indexes\\timedeltas\\test_indexing.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 77,
                        "content": "key = idx[1].as_unit(\"ms\")"
                    },
                    {
                        "line_number": 84,
                        "content": "key = tdi[0].as_unit(\"ns\") + Timedelta(1)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_indexing.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pandas\\tests\\indexes\\timedeltas\\test_indexing.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 84,
                        "content": "key = tdi[0].as_unit(\"ns\") + Timedelta(1)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_coercion.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pandas\\tests\\indexing\\test_coercion.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 768,
                        "content": "key = f\"datetime64[ns, {tz}]\""
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_datetime.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pandas\\tests\\indexing\\test_datetime.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 23,
                        "content": "key = \"2013-01-01 00:00:00.000000050+0000\""
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_loc.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pandas\\tests\\indexing\\test_loc.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1707,
                        "content": "key = 0 if (indexer is tm.iloc or len(obj) == 0) else obj.index[0]"
                    },
                    {
                        "line_number": 1731,
                        "content": "key = 0 if (indexer is tm.iloc or len(obj) == 0) else obj.index[0]"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_loc.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pandas\\tests\\indexing\\test_loc.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 1707,
                        "content": "key = 0 if (indexer is tm.iloc or len(obj) == 0) else obj.index[0]"
                    },
                    {
                        "line_number": 1731,
                        "content": "key = 0 if (indexer is tm.iloc or len(obj) == 0) else obj.index[0]"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_sorted.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pandas\\tests\\indexing\\multiindex\\test_sorted.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 71,
                        "content": "key=lambda x: x.map(lambda entry: entry[2])"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_compat.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pandas\\tests\\io\\pytables\\test_compat.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 59,
                        "content": "result = pd.read_hdf(path, key=objname, start=1)"
                    },
                    {
                        "line_number": 73,
                        "content": "result = pd.read_hdf(path, key=objname, start=1, stop=2)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_compat.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pandas\\tests\\io\\pytables\\test_compat.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 73,
                        "content": "result = pd.read_hdf(path, key=objname, start=1, stop=2)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_complex.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pandas\\tests\\io\\pytables\\test_complex.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 175,
                        "content": "s.to_hdf(path, key=\"obj\", format=\"t\")"
                    },
                    {
                        "line_number": 178,
                        "content": "s.to_hdf(path, key=\"obj\", format=\"t\", index=False)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_complex.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pandas\\tests\\io\\pytables\\test_complex.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 178,
                        "content": "s.to_hdf(path, key=\"obj\", format=\"t\", index=False)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_file_handling.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pandas\\tests\\io\\pytables\\test_file_handling.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 202,
                        "content": "df.to_hdf(tmpfile, key=\"df\", complevel=9)"
                    },
                    {
                        "line_number": 367,
                        "content": "df.to_hdf(path, key=\"df\", mode=\"w\", format=\"table\")"
                    },
                    {
                        "line_number": 448,
                        "content": "df.to_hdf(path, key=\"df\", mode=\"w\", format=\"table\")"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_file_handling.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pandas\\tests\\io\\pytables\\test_file_handling.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 367,
                        "content": "df.to_hdf(path, key=\"df\", mode=\"w\", format=\"table\")"
                    },
                    {
                        "line_number": 448,
                        "content": "df.to_hdf(path, key=\"df\", mode=\"w\", format=\"table\")"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_put.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pandas\\tests\\io\\pytables\\test_put.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 372,
                        "content": "df.to_hdf(path, key=\"df\", mode=\"w\", format=format)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_read.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pandas\\tests\\io\\pytables\\test_read.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 250,
                        "content": "df.to_hdf(path, key=\"df\", mode=\"w\", format=\"table\")"
                    },
                    {
                        "line_number": 267,
                        "content": "df.to_hdf(path, key=\"df\", mode=\"w\", format=\"t\")"
                    },
                    {
                        "line_number": 302,
                        "content": "df.to_hdf(path, key=\"df\", mode=\"a\", format=\"table\")"
                    },
                    {
                        "line_number": 404,
                        "content": "df.to_hdf(path, key=\"data\", format=\"table\")"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_read.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pandas\\tests\\io\\pytables\\test_read.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 250,
                        "content": "df.to_hdf(path, key=\"df\", mode=\"w\", format=\"table\")"
                    },
                    {
                        "line_number": 267,
                        "content": "df.to_hdf(path, key=\"df\", mode=\"w\", format=\"t\")"
                    },
                    {
                        "line_number": 302,
                        "content": "df.to_hdf(path, key=\"df\", mode=\"a\", format=\"table\")"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_retain_attributes.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pandas\\tests\\io\\pytables\\test_retain_attributes.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 72,
                        "content": "df.to_hdf(path, key=\"data\", mode=\"w\", append=True)"
                    },
                    {
                        "line_number": 82,
                        "content": "df.to_hdf(path, key=\"data\", mode=\"w\", append=True)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_round_trip.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pandas\\tests\\io\\pytables\\test_round_trip.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 54,
                        "content": "df.to_hdf(path, key=\"table\", append=True)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_select.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pandas\\tests\\io\\pytables\\test_select.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 716,
                        "content": "params.to_hdf(pp, key=\"df\", mode=\"w\", format=\"table\", data_columns=[\"A\"])"
                    },
                    {
                        "line_number": 727,
                        "content": "hist.to_hdf(hh, key=\"df\", mode=\"w\", format=\"table\")"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_select.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pandas\\tests\\io\\pytables\\test_select.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 716,
                        "content": "params.to_hdf(pp, key=\"df\", mode=\"w\", format=\"table\", data_columns=[\"A\"])"
                    },
                    {
                        "line_number": 727,
                        "content": "hist.to_hdf(hh, key=\"df\", mode=\"w\", format=\"table\")"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_store.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pandas\\tests\\io\\pytables\\test_store.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 401,
                        "content": "ser.to_hdf(path, key=\"table\", format=format, errors=\"surrogatepass\")"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_store.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pandas\\tests\\io\\pytables\\test_store.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 401,
                        "content": "ser.to_hdf(path, key=\"table\", format=format, errors=\"surrogatepass\")"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_store.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pandas\\tests\\io\\pytables\\test_store.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 61,
                        "content": "def checksum(filename, hash_factory=hashlib.md5, chunk_num_blocks=128):"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "test_series.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pandas\\tests\\plotting\\test_series.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 129,
                        "content": "key = \"axes.prop_cycle\""
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_time_grouper.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pandas\\tests\\resample\\test_time_grouper.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 299,
                        "content": "\"TimeGrouper(key='A', freq=<Hour>, axis=0, sort=True, dropna=True, \""
                    },
                    {
                        "line_number": 307,
                        "content": "\"TimeGrouper(key='A', freq=<Hour>, axis=0, sort=True, dropna=True, \""
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_pivot.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pandas\\tests\\reshape\\test_pivot.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1543,
                        "content": "index=[Grouper(freq=\"ME\", key=\"Date\"), Grouper(freq=\"ME\", key=\"PayDay\")],"
                    },
                    {
                        "line_number": 1553,
                        "content": "columns=[Grouper(freq=\"ME\", key=\"Date\"), Grouper(freq=\"ME\", key=\"PayDay\")],"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_merge.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pandas\\tests\\reshape\\merge\\test_merge.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 381,
                        "content": "key = np.array([1, 1, 2, 3, 4, 5], dtype=\"int64\")"
                    },
                    {
                        "line_number": 402,
                        "content": "key = np.array([0, 1, 1, 2, 2, 3], dtype=np.int64)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_merge.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pandas\\tests\\reshape\\merge\\test_merge.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 381,
                        "content": "key = np.array([1, 1, 2, 3, 4, 5], dtype=\"int64\")"
                    },
                    {
                        "line_number": 402,
                        "content": "key = np.array([0, 1, 1, 2, 2, 3], dtype=np.int64)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_datetime.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pandas\\tests\\series\\indexing\\test_datetime.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 305,
                        "content": "key = datetime(2000, 1, 6)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_getitem.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pandas\\tests\\series\\indexing\\test_getitem.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 204,
                        "content": "key = \"6 days, 23:11:12\""
                    },
                    {
                        "line_number": 489,
                        "content": "key = np.array([True, True, False, False])"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_setitem.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pandas\\tests\\series\\indexing\\test_setitem.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 506,
                        "content": "key = Timestamp(\"2012-01-01\")"
                    },
                    {
                        "line_number": 516,
                        "content": "key = Timestamp(\"2012-01-01\")"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_sort_index.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pandas\\tests\\series\\methods\\test_sort_index.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 227,
                        "content": "result = s.sort_index(level=\"C\", key=lambda x: x)  # nothing happens"
                    },
                    {
                        "line_number": 238,
                        "content": "result = s.sort_index(level=[\"A\", \"C\"], key=lambda x: x)  # nothing happens"
                    },
                    {
                        "line_number": 248,
                        "content": "result = series.sort_index(key=lambda x: x.str.lower())"
                    },
                    {
                        "line_number": 252,
                        "content": "result = series.sort_index(key=lambda x: x.str.lower(), ascending=False)"
                    },
                    {
                        "line_number": 313,
                        "content": "result = s.sort_index(key=lambda x: x.year)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_sort_index.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pandas\\tests\\series\\methods\\test_sort_index.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 227,
                        "content": "result = s.sort_index(level=\"C\", key=lambda x: x)  # nothing happens"
                    },
                    {
                        "line_number": 238,
                        "content": "result = s.sort_index(level=[\"A\", \"C\"], key=lambda x: x)  # nothing happens"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_sort_values.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pandas\\tests\\series\\methods\\test_sort_values.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 229,
                        "content": "result = series.sort_values(axis=0, key=lambda x: x.str.lower())"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_sort_values.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pandas\\tests\\series\\methods\\test_sort_values.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 244,
                        "content": "result = series.sort_values(axis=0, key=lambda x: -x, ascending=False)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "frequencies.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pandas\\tseries\\frequencies.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 66,
                        "content": "key = f\"{_prefix}-{_m}\""
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "_decorators.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pandas\\util\\_decorators.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 316,
                        "content": "new_params.sort(key=lambda p: p.kind)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "config.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pandas\\_config\\config.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 140,
                        "content": "key = _translate_key(key)"
                    },
                    {
                        "line_number": 146,
                        "content": "key = _get_single_key(pat, silent)"
                    },
                    {
                        "line_number": 167,
                        "content": "key = _get_single_key(k, silent)"
                    },
                    {
                        "line_number": 216,
                        "content": "key = _get_single_key(pat, silent=True)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "config.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pandas\\_config\\config.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 562,
                        "content": "key=key, defval=defval, doc=doc, validator=validator, cb=cb"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "cache.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\parso\\cache.py",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 265,
                        "content": "file_hash = hashlib.sha256(str(path).encode(\"utf-8\")).hexdigest()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Python",
                "filename": "grammar.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\parso\\grammar.py",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 47,
                        "content": "self._hashed = hashlib.sha256(text.encode(\"utf-8\")).hexdigest()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Python",
                "filename": "IcoImagePlugin.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\PIL\\IcoImagePlugin.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 175,
                        "content": "self.entry = sorted(self.entry, key=lambda x: x[\"color_depth\"])"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "Image.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\PIL\\Image.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 2578,
                        "content": "x / aspect, key=lambda n: 0 if n == 0 else abs(aspect - x / n)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "Image.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\PIL\\Image.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 2575,
                        "content": "x = round_aspect(y * aspect, key=lambda n: abs(aspect - n / y))"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "PngImagePlugin.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\PIL\\PngImagePlugin.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 297,
                        "content": "key = key.encode(\"latin-1\", \"strict\")"
                    },
                    {
                        "line_number": 333,
                        "content": "key = key.encode(\"latin-1\", \"strict\")"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "cache.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pip\\_internal\\cache.py",
                "vulnerability": "SHA-224",
                "lines": [
                    {
                        "line_number": 29,
                        "content": "return hashlib.sha224(s.encode(\"ascii\")).hexdigest()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-224 provides reduced security compared to larger variants."
            },
            {
                "language": "Python",
                "filename": "configuration.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pip\\_internal\\configuration.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 146,
                        "content": "key = _normalize_name(key)"
                    },
                    {
                        "line_number": 157,
                        "content": "key = _normalize_name(key)"
                    },
                    {
                        "line_number": 177,
                        "content": "key = _normalize_name(key)"
                    },
                    {
                        "line_number": 314,
                        "content": "key = section + \".\" + _normalize_name(name)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "self_outdated_check.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pip\\_internal\\self_outdated_check.py",
                "vulnerability": "SHA-224",
                "lines": [
                    {
                        "line_number": 38,
                        "content": "name = hashlib.sha224(key_bytes).hexdigest()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-224 provides reduced security compared to larger variants."
            },
            {
                "language": "Python",
                "filename": "parser.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pip\\_internal\\cli\\parser.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 197,
                        "content": "section, key = section_key.split(\".\", 1)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "configuration.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pip\\_internal\\commands\\configuration.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 178,
                        "content": "key = self._get_n_args(args, \"get [name]\", n=1)"
                    },
                    {
                        "line_number": 190,
                        "content": "key = self._get_n_args(args, \"unset [name]\", n=1)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "configuration.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pip\\_internal\\commands\\configuration.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 178,
                        "content": "key = self._get_n_args(args, \"get [name]\", n=1)"
                    },
                    {
                        "line_number": 190,
                        "content": "key = self._get_n_args(args, \"unset [name]\", n=1)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "_json.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pip\\_internal\\metadata\\_json.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 64,
                        "content": "key = json_name(field)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "auth.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pip\\_internal\\network\\auth.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 325,
                        "content": "key=lambda candidate: commonprefix("
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "freeze.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pip\\_internal\\operations\\freeze.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 142,
                        "content": "for installation in sorted(installations.values(), key=lambda x: x.name.lower()):"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "build_tracker.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pip\\_internal\\operations\\build\\build_tracker.py",
                "vulnerability": "SHA-224",
                "lines": [
                    {
                        "line_number": 84,
                        "content": "hashed = hashlib.sha224(key.encode()).hexdigest()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-224 provides reduced security compared to larger variants."
            },
            {
                "language": "Python",
                "filename": "wheel.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pip\\_internal\\operations\\install\\wheel.py",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 81,
                        "content": "\"\"\"Return (encoded_digest, length) for path using hashlib.sha256()\"\"\""
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Python",
                "filename": "factory.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pip\\_internal\\resolution\\resolvelib\\factory.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 559,
                        "content": "collected.requirements.sort(key=lambda r: r.name != r.project_name)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "resolver.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pip\\_internal\\resolution\\resolvelib\\resolver.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 112,
                        "content": "result.mapping.values(), key=lambda c: c.name != c.project_name"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "misc.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pip\\_internal\\utils\\misc.py",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 622,
                        "content": "\"\"\"Return (hash, length) for path using hashlib.sha256()\"\"\""
                    },
                    {
                        "line_number": 624,
                        "content": "h = hashlib.sha256()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Python",
                "filename": "file_cache.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pip\\_vendor\\cachecontrol\\caches\\file_cache.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 181,
                        "content": "key = CacheController.cache_url(url)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "file_cache.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pip\\_vendor\\cachecontrol\\caches\\file_cache.py",
                "vulnerability": "SHA-224",
                "lines": [
                    {
                        "line_number": 96,
                        "content": "return hashlib.sha224(x.encode()).hexdigest()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-224 provides reduced security compared to larger variants."
            },
            {
                "language": "Python",
                "filename": "compat.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pip\\_vendor\\distlib\\compat.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 705,
                        "content": "link_prev, link_next, key = self.__map.pop(key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "database.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pip\\_vendor\\distlib\\database.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 353,
                        "content": "self.key = self.name.lower()  # for case-insensitive comparisons"
                    },
                    {
                        "line_number": 880,
                        "content": "s.key = n.lower()  # for case-insensitive comparisons"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "database.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pip\\_vendor\\distlib\\database.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 353,
                        "content": "self.key = self.name.lower()  # for case-insensitive comparisons"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "database.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pip\\_vendor\\distlib\\database.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 528,
                        "content": "hasher = hashlib.md5"
                    },
                    {
                        "line_number": 1032,
                        "content": "return hashlib.md5(content).hexdigest()"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "index.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pip\\_vendor\\distlib\\index.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 269,
                        "content": "md5_digest = hashlib.md5(file_data).hexdigest()"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "index.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pip\\_vendor\\distlib\\index.py",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 270,
                        "content": "sha256_digest = hashlib.sha256(file_data).hexdigest()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Python",
                "filename": "locators.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pip\\_vendor\\distlib\\locators.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 582,
                        "content": "result = sorted(result, key=lambda t: t[0], reverse=True)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "locators.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pip\\_vendor\\distlib\\locators.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 582,
                        "content": "result = sorted(result, key=lambda t: t[0], reverse=True)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "version.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pip\\_vendor\\distlib\\version.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 108,
                        "content": "self.key = self.name.lower()    # for case-insensitive comparisons"
                    },
                    {
                        "line_number": 163,
                        "content": "return self.key == other.key and self._parts == other._parts"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "version.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pip\\_vendor\\distlib\\version.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 108,
                        "content": "self.key = self.name.lower()    # for case-insensitive comparisons"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "wheel.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pip\\_vendor\\distlib\\wheel.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 416,
                        "content": "if key == 'scripts' and not p.endswith('.exe'):"
                    },
                    {
                        "line_number": 911,
                        "content": "key = '%s/PKG-INFO' % info_dir"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "wheel.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pip\\_vendor\\distlib\\wheel.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 911,
                        "content": "key = '%s/PKG-INFO' % info_dir"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "__init__.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pip\\_vendor\\pkg_resources\\__init__.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 2970,
                        "content": "self._key = key = self.project_name.lower()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "windows.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pip\\_vendor\\platformdirs\\windows.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 208,
                        "content": "key = winreg.OpenKey(winreg.HKEY_CURRENT_USER, r\"Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders\")"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "lexer.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pip\\_vendor\\pygments\\lexer.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 951,
                        "content": "key=lambda x: x[self._prof_sort_index],"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "sphinxext.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pip\\_vendor\\pygments\\sphinxext.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 106,
                        "content": "for classname, data in sorted(LEXERS.items(), key=lambda x: x[1][1].lower()):"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "img.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pip\\_vendor\\pygments\\formatters\\img.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 179,
                        "content": "key = _winreg.OpenKey(*keyname)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "img.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pip\\_vendor\\pygments\\formatters\\img.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 179,
                        "content": "key = _winreg.OpenKey(*keyname)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "auth.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pip\\_vendor\\requests\\auth.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 148,
                        "content": "return hashlib.md5(x).hexdigest()"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "auth.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pip\\_vendor\\requests\\auth.py",
                "vulnerability": "SHA-1",
                "lines": [
                    {
                        "line_number": 156,
                        "content": "return hashlib.sha1(x).hexdigest()"
                    },
                    {
                        "line_number": 205,
                        "content": "cnonce = hashlib.sha1(s).hexdigest()[:16]"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collisions."
            },
            {
                "language": "Python",
                "filename": "auth.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pip\\_vendor\\requests\\auth.py",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 164,
                        "content": "return hashlib.sha256(x).hexdigest()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Python",
                "filename": "models.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pip\\_vendor\\requests\\models.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 992,
                        "content": "key = link.get(\"rel\") or link.get(\"url\")"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "models.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pip\\_vendor\\requests\\models.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 992,
                        "content": "key = link.get(\"rel\") or link.get(\"url\")"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "utils.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pip\\_vendor\\requests\\utils.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 533,
                        "content": "key = param[:index_of_equals].strip(items_to_strip)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "scope.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pip\\_vendor\\rich\\scope.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 46,
                        "content": "items = sorted(scope.items(), key=sort_items) if sort_keys else scope.items()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "_parser.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pip\\_vendor\\tomli\\_parser.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 287,
                        "content": "pos, key = parse_key(src, pos)"
                    },
                    {
                        "line_number": 305,
                        "content": "pos, key = parse_key(src, pos)"
                    },
                    {
                        "line_number": 360,
                        "content": "pos, key = parse_key(src, pos)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "__init__.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pkg_resources\\__init__.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 2640,
                        "content": "self._key = key = self.project_name.lower()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "appdirs.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pkg_resources\\_vendor\\appdirs.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 471,
                        "content": "key = _winreg.OpenKey("
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "windows.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\platformdirs\\windows.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 210,
                        "content": "key = winreg.OpenKey(winreg.HKEY_CURRENT_USER, r\"Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders\")"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "cache.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\prompt_toolkit\\cache.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 122,
                        "content": "key = (a, tuple(sorted(kw.items())))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "application.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\prompt_toolkit\\application\\application.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1508,
                        "content": "key = current_window, frozenset(other_controls)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "typeahead.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\prompt_toolkit\\input\\typeahead.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 55,
                        "content": "key = input_obj.typeahead_hash()"
                    },
                    {
                        "line_number": 65,
                        "content": "key = input_obj.typeahead_hash()"
                    },
                    {
                        "line_number": 76,
                        "content": "key = input_obj.typeahead_hash()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "win32.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\prompt_toolkit\\input\\win32.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 429,
                        "content": "result.key = mapping.get(result.key, result.key)"
                    },
                    {
                        "line_number": 448,
                        "content": "result.key = mapping.get(result.key, result.key)"
                    },
                    {
                        "line_number": 466,
                        "content": "result.key = mapping.get(result.key, result.key)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "key_bindings.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\prompt_toolkit\\key_binding\\key_bindings.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 440,
                        "content": "key = KEY_ALIASES.get(key, key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "key_bindings.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\prompt_toolkit\\key_binding\\key_bindings.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 440,
                        "content": "key = KEY_ALIASES.get(key, key)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "key_processor.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\prompt_toolkit\\key_binding\\key_processor.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 59,
                        "content": "return self.key == other.key and self.data == other.data"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "key_processor.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\prompt_toolkit\\key_binding\\key_processor.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 54,
                        "content": "return f\"{self.__class__.__name__}(key={self.key!r}, data={self.data!r})\""
                    },
                    {
                        "line_number": 419,
                        "content": "self.feed(KeyPress(key=Keys.SIGINT), first=True)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "emacs.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\prompt_toolkit\\key_binding\\bindings\\emacs.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 423,
                        "content": "if key == Keys.ShiftDown:"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "containers.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\prompt_toolkit\\layout\\containers.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1548,
                        "content": "key = (margin, get_app().render_counter)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "controls.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\prompt_toolkit\\layout\\controls.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 651,
                        "content": "key = (document.text, self.lexer.invalidation_hash())"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "controls.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\prompt_toolkit\\layout\\controls.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 196,
                        "content": "key = get_app().render_counter, lineno, width, slice_stop"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "_common.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\psutil\\_common.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 441,
                        "content": "key = (args, frozenset(sorted(kwargs.items())))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "_common.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\psutil\\_common.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 441,
                        "content": "key = (args, frozenset(sorted(kwargs.items())))"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "_compat.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\psutil\\_compat.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 296,
                        "content": "key = make_key(args, kwds, typed)"
                    },
                    {
                        "line_number": 310,
                        "content": "key = make_key(args, kwds, typed)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "_pslinux.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\psutil\\_pslinux.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 768,
                        "content": "paths.sort(key=lambda x: int(re.search(r\"[0-9]+\", x).group()))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "_pslinux.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\psutil\\_pslinux.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 768,
                        "content": "paths.sort(key=lambda x: int(re.search(r\"[0-9]+\", x).group()))"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "__init__.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\psutil\\__init__.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 2236,
                        "content": "rawlist.sort(key=lambda x: x[1])  # sort by family"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_linux.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\psutil\\tests\\test_linux.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1604,
                        "content": "tid = sorted(threads, key=lambda x: x.id)[1].id"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "lex.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pycparser\\ply\\lex.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 726,
                        "content": "s.sort(key=lambda x: len(x[1]), reverse=True)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "lex.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pycparser\\ply\\lex.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 722,
                        "content": "f.sort(key=lambda x: x[1].__code__.co_firstlineno)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "sysfont.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pygame\\sysfont.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 70,
                        "content": "key = _winreg.OpenKey(domain, font_dir)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "sysfont.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pygame\\sysfont.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 70,
                        "content": "key = _winreg.OpenKey(domain, font_dir)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "__init__.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pygame\\__init__.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 148,
                        "content": "key = MissingModule(\"key\", urgent=1)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "midi.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pygame\\examples\\midi.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 816,
                        "content": "key = self._keys[note]"
                    },
                    {
                        "line_number": 834,
                        "content": "key = self._keys[note]"
                    },
                    {
                        "line_number": 840,
                        "content": "key = self._keys[note]"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "midi.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pygame\\examples\\midi.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 776,
                        "content": "key = self.WhiteKey(ident, (x, y), prev_white_key)"
                    },
                    {
                        "line_number": 778,
                        "content": "key = self.WhiteKeyLeft(ident, (x, y), prev_white_key)"
                    },
                    {
                        "line_number": 781,
                        "content": "key = self.WhiteKeyRight(ident, (x, y), prev_white_key)"
                    },
                    {
                        "line_number": 788,
                        "content": "key = self.BlackKey(ident, (x - black_offset, y), prev_white_key)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "textinput.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pygame\\examples\\textinput.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 82,
                        "content": "if event.key == pg.K_BACKSPACE:"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "event_test.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pygame\\tests\\event_test.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 411,
                        "content": "pygame.event.Event(pygame.KEYDOWN, key=pygame.K_y, mod=activemodkeys),"
                    },
                    {
                        "line_number": 414,
                        "content": "pygame.event.Event(pygame.KEYDOWN, key=pygame.K_m, mod=None, window=None),"
                    },
                    {
                        "line_number": 416,
                        "content": "pygame.KEYDOWN, key=pygame.K_e, mod=activemodkeys, unicode=\"e\""
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "event_test.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pygame\\tests\\event_test.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 413,
                        "content": "pygame.event.Event(pygame.KEYDOWN, key=pygame.K_a, unicode=None),"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "surface_test.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pygame\\tests\\surface_test.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1189,
                        "content": "#             key = ((dest_r, dest_b, dest_a), (src_r, src_b, src_a))"
                    },
                    {
                        "line_number": 1280,
                        "content": "key = ((dst_r, dst_b, dst_a), (src_r, src_b, src_a))"
                    },
                    {
                        "line_number": 1300,
                        "content": "#             key = ((dest_r, dest_b, dest_a), (src_r, src_b, src_a))"
                    },
                    {
                        "line_number": 1391,
                        "content": "key = ((dst_r, dst_b, dst_a), (src_r, src_b, src_a))"
                    },
                    {
                        "line_number": 1489,
                        "content": "key = ((dst_r, dst_b, dst_a), (src_r, src_b, src_a))"
                    },
                    {
                        "line_number": 1591,
                        "content": "key = ((dst_r, dst_b, dst_a), (src_r, src_b, src_a))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "surface_test.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pygame\\tests\\surface_test.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 1189,
                        "content": "#             key = ((dest_r, dest_b, dest_a), (src_r, src_b, src_a))"
                    },
                    {
                        "line_number": 1300,
                        "content": "#             key = ((dest_r, dest_b, dest_a), (src_r, src_b, src_a))"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "png.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pygame\\tests\\test_utils\\png.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 2721,
                        "content": "d = hashlib.md5(seqtobytes(pixel)).digest()"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "test_machinery.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pygame\\tests\\test_utils\\test_machinery.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 58,
                        "content": "key = (parent_class, meth.__name__)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "lexer.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pygments\\lexer.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 947,
                        "content": "key=lambda x: x[self._prof_sort_index],"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "sphinxext.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pygments\\sphinxext.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 104,
                        "content": "for classname, data in sorted(LEXERS.items(), key=lambda x: x[1][1].lower()):"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "img.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pygments\\formatters\\img.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 182,
                        "content": "key = _winreg.OpenKey(*keyname)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "img.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pygments\\formatters\\img.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 182,
                        "content": "key = _winreg.OpenKey(*keyname)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "lilypond.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pygments\\lexers\\lilypond.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 193,
                        "content": "# (myAlist.my-key.my-nested-key = \\markup \\spam \\eggs)."
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "lisp.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pygments\\lexers\\lisp.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1066,
                        "content": "'member-name-key-hash-code', 'member-name-key=?', 'member-name-key?',"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "message.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pymongo\\message.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1310,
                        "content": "key = str(idx).encode(\"utf8\")"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "server_selectors.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pymongo\\server_selectors.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 72,
                        "content": "secondaries.server_descriptions, key=lambda sd: cast(float, sd.last_write_date)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "uri_parser.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pymongo\\uri_parser.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 360,
                        "content": "raise InvalidURI(\"MongoDB URI options are key=value pairs.\") from None"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "_client_bulk_shared.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pymongo\\_client_bulk_shared.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 66,
                        "content": "full_result[\"writeErrors\"].sort(key=lambda error: error[\"idx\"])"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "auth.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pymongo\\asynchronous\\auth.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 340,
                        "content": "key = _auth_key(nonce, username, password)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "auth.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pymongo\\asynchronous\\auth.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 165,
                        "content": "md5hash = hashlib.md5()  # noqa: S324"
                    },
                    {
                        "line_number": 174,
                        "content": "md5hash = hashlib.md5()  # noqa: S324"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "auth.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pymongo\\asynchronous\\auth.py",
                "vulnerability": "SHA-1",
                "lines": [
                    {
                        "line_number": 82,
                        "content": "digestmod = hashlib.sha1"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collisions."
            },
            {
                "language": "Python",
                "filename": "auth.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pymongo\\asynchronous\\auth.py",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 78,
                        "content": "digestmod = hashlib.sha256"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Python",
                "filename": "cursor.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pymongo\\asynchronous\\cursor.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 1003,
                        "content": "key = copy.deepcopy(key, memo)  # noqa: PLW2901"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "auth.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pymongo\\synchronous\\auth.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 337,
                        "content": "key = _auth_key(nonce, username, password)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "auth.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pymongo\\synchronous\\auth.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 162,
                        "content": "md5hash = hashlib.md5()  # noqa: S324"
                    },
                    {
                        "line_number": 171,
                        "content": "md5hash = hashlib.md5()  # noqa: S324"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "auth.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pymongo\\synchronous\\auth.py",
                "vulnerability": "SHA-1",
                "lines": [
                    {
                        "line_number": 79,
                        "content": "digestmod = hashlib.sha1"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collisions."
            },
            {
                "language": "Python",
                "filename": "auth.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pymongo\\synchronous\\auth.py",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 75,
                        "content": "digestmod = hashlib.sha256"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Python",
                "filename": "cursor.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pymongo\\synchronous\\cursor.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 1001,
                        "content": "key = copy.deepcopy(key, memo)  # noqa: PLW2901"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "core.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pyparsing\\core.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 4191,
                        "content": "fatals.sort(key=lambda e: -e.loc)"
                    },
                    {
                        "line_number": 4507,
                        "content": "fatals.sort(key=lambda e: -e.loc)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "core.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pyparsing\\core.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 4193,
                        "content": "fatals.sort(key=lambda e: (-e.loc, -len(str(e.parser_element))))"
                    },
                    {
                        "line_number": 4509,
                        "content": "fatals.sort(key=lambda e: (-e.loc, -len(str(e.parser_element))))"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "jsonlogger.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pythonjsonlogger\\jsonlogger.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 188,
                        "content": "key = self.timestamp if type(self.timestamp) == str else 'timestamp'"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "jsonlogger.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pythonjsonlogger\\jsonlogger.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 188,
                        "content": "key = self.timestamp if type(self.timestamp) == str else 'timestamp'"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "regedit.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\pythonwin\\pywin\\tools\\regedit.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 367,
                        "content": "key = win32api.RegEnumKey(hkey, keyNum)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "auth.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\requests\\auth.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 148,
                        "content": "return hashlib.md5(x).hexdigest()"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "auth.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\requests\\auth.py",
                "vulnerability": "SHA-1",
                "lines": [
                    {
                        "line_number": 156,
                        "content": "return hashlib.sha1(x).hexdigest()"
                    },
                    {
                        "line_number": 205,
                        "content": "cnonce = hashlib.sha1(s).hexdigest()[:16]"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collisions."
            },
            {
                "language": "Python",
                "filename": "auth.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\requests\\auth.py",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 164,
                        "content": "return hashlib.sha256(x).hexdigest()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Python",
                "filename": "models.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\requests\\models.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 989,
                        "content": "key = link.get(\"rel\") or link.get(\"url\")"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "models.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\requests\\models.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 989,
                        "content": "key = link.get(\"rel\") or link.get(\"url\")"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "utils.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\requests\\utils.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 532,
                        "content": "key = param[:index_of_equals].strip(items_to_strip)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "_netcdf.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\scipy\\io\\_netcdf.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 463,
                        "content": "variables = sorted(self.variables, key=sortkey, reverse=True)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "hb.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\scipy\\io\\_harwell_boeing\\hb.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 47,
                        "content": "def from_data(cls, m, title=\"Default title\", key=\"0\", mxtype=None, fmt=None):"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "blas.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\scipy\\linalg\\blas.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 386,
                        "content": "key = (names, dtype, ilp64)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_filter_design.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\scipy\\signal\\tests\\test_filter_design.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 2625,
                        "content": "assert_allclose(sorted(p, key=np.imag), sorted(p2, key=np.imag))"
                    },
                    {
                        "line_number": 2659,
                        "content": "assert_allclose(sorted(z, key=np.imag), sorted(z2, key=np.imag))"
                    },
                    {
                        "line_number": 2660,
                        "content": "assert_allclose(sorted(p, key=np.imag), sorted(p2, key=np.imag))"
                    },
                    {
                        "line_number": 3064,
                        "content": "sorted(z2, key=np.angle), rtol=1e-13)"
                    },
                    {
                        "line_number": 3066,
                        "content": "sorted(p2, key=np.angle), rtol=1e-12)"
                    },
                    {
                        "line_number": 3123,
                        "content": "sorted(z2, key=np.angle), rtol=1e-13)"
                    },
                    {
                        "line_number": 3125,
                        "content": "sorted(p2, key=np.angle), rtol=1e-12)"
                    },
                    {
                        "line_number": 3168,
                        "content": "sorted(z2, key=np.angle), rtol=1e-13)"
                    },
                    {
                        "line_number": 3170,
                        "content": "sorted(p2, key=np.angle), rtol=1e-13)"
                    },
                    {
                        "line_number": 3201,
                        "content": "sorted(z2, key=np.angle), rtol=1e-13)"
                    },
                    {
                        "line_number": 3203,
                        "content": "sorted(p2, key=np.angle), rtol=1e-13)"
                    },
                    {
                        "line_number": 3337,
                        "content": "sorted(z2, key=np.angle), rtol=1e-4)"
                    },
                    {
                        "line_number": 3339,
                        "content": "sorted(p2, key=np.angle), rtol=1e-4)"
                    },
                    {
                        "line_number": 3392,
                        "content": "sorted(z2, key=np.angle), rtol=1e-4)"
                    },
                    {
                        "line_number": 3394,
                        "content": "sorted(p2, key=np.angle), rtol=1e-4)"
                    },
                    {
                        "line_number": 3429,
                        "content": "sorted(z2, key=np.angle), rtol=1e-4)"
                    },
                    {
                        "line_number": 3431,
                        "content": "sorted(p2, key=np.angle), rtol=1e-4)"
                    },
                    {
                        "line_number": 3498,
                        "content": "sorted(z2, key=np.angle), rtol=1e-6)"
                    },
                    {
                        "line_number": 3500,
                        "content": "sorted(p2, key=np.angle), rtol=1e-5)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_filter_design.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\scipy\\signal\\tests\\test_filter_design.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 2625,
                        "content": "assert_allclose(sorted(p, key=np.imag), sorted(p2, key=np.imag))"
                    },
                    {
                        "line_number": 2659,
                        "content": "assert_allclose(sorted(z, key=np.imag), sorted(z2, key=np.imag))"
                    },
                    {
                        "line_number": 2660,
                        "content": "assert_allclose(sorted(p, key=np.imag), sorted(p2, key=np.imag))"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "_gcrotmk.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\scipy\\sparse\\linalg\\_isolve\\_gcrotmk.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 329,
                        "content": "CU.sort(key=lambda cu: cu[0] is not None)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "dist.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\setuptools\\dist.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 436,
                        "content": "key = pkg_resources.safe_name(str(attrs['name'])).lower()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "msvc.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\setuptools\\msvc.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 88,
                        "content": "key = vc_base % ('', version)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "msvc.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\setuptools\\msvc.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 95,
                        "content": "key = vc_base % ('Wow6432Node\\\\', version)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "egg_info.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\setuptools\\command\\egg_info.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 241,
                        "content": "if pd is not None and pd.key == self.egg_name.lower():"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "msvc9compiler.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\setuptools\\_distutils\\msvc9compiler.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 158,
                        "content": "key = RegEnumKey(h, 0)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "msvccompiler.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\setuptools\\_distutils\\msvccompiler.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 138,
                        "content": "key = RegEnumKey(h, 0)"
                    },
                    {
                        "line_number": 598,
                        "content": "key = (r\"%s\\%0.1f\\VC\\VC_OBJECTS_PLATFORM_INFO\\Win32\\Directories\""
                    },
                    {
                        "line_number": 601,
                        "content": "key = (r\"%s\\6.0\\Build System\\Components\\Platforms\""
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "msvccompiler.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\setuptools\\_distutils\\msvccompiler.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 601,
                        "content": "key = (r\"%s\\6.0\\Build System\\Components\\Platforms\""
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "_msvccompiler.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\setuptools\\_distutils\\_msvccompiler.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 34,
                        "content": "key = winreg.OpenKeyEx("
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "more.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\setuptools\\_vendor\\more_itertools\\more.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 413,
                        "content": ">>> key = lambda s: int(s)  # Sort by numeric value, not by string"
                    },
                    {
                        "line_number": 877,
                        "content": ">>> key = lambda x: x % 10  # Bucket by last digit"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "more.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\setuptools\\_vendor\\more_itertools\\more.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 413,
                        "content": ">>> key = lambda s: int(s)  # Sort by numeric value, not by string"
                    },
                    {
                        "line_number": 879,
                        "content": ">>> s = bucket(it, key=key, validator=validator)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "recipes.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\setuptools\\_vendor\\more_itertools\\recipes.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 400,
                        "content": "``key=frozenset``. For ``dict`` objects,"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "core.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\stack_data\\core.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 497,
                        "content": "key=lambda item: (-item[1], item[0][0].co_name))"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "formatting.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\stack_data\\formatting.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 221,
                        "content": "for var in sorted(frame_info.variables, key=lambda v: v.name):"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "serializing.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\stack_data\\serializing.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 180,
                        "content": "for var in sorted(frame_info.variables, key=lambda v: v.name):"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "serializing.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\stack_data\\serializing.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 129,
                        "content": "key=lambda item: (-item[1], item[0][0].co_name),"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "utils.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\stack_data\\utils.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 47,
                        "content": "for is_common, group in itertools.groupby(lst, key=lambda x: counts[x] > 3):"
                    },
                    {
                        "line_number": 79,
                        "content": "key=lambda t: t[1][1],"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "baseclasses.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\sympy\\categories\\baseclasses.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 608,
                        "content": ">>> premises_keys = sorted(d.premises.keys(), key=default_sort_key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "diagram_drawing.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\sympy\\categories\\diagram_drawing.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 684,
                        "content": "DiagramGrid._triangle_objects(tri), key=default_sort_key)"
                    },
                    {
                        "line_number": 693,
                        "content": "candidates = [sorted(e, key=default_sort_key)"
                    },
                    {
                        "line_number": 695,
                        "content": "sorted_candidates = sorted(candidates, key=default_sort_key)"
                    },
                    {
                        "line_number": 698,
                        "content": "return tuple(sorted(sorted_candidates[0], key=default_sort_key))"
                    },
                    {
                        "line_number": 947,
                        "content": "objects = sorted(all_objects, key=default_sort_key)"
                    },
                    {
                        "line_number": 1042,
                        "content": "adjlists[obj].sort(key=default_sort_key)"
                    },
                    {
                        "line_number": 1055,
                        "content": "sorted_objects = sorted(objects, key=default_sort_key)"
                    },
                    {
                        "line_number": 1204,
                        "content": "components = sorted(components, key=default_sort_key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "diagram_drawing.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\sympy\\categories\\diagram_drawing.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 755,
                        "content": "key=lambda e: FiniteSet(*e).sort_key())"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "numpy_nodes.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\sympy\\codegen\\numpy_nodes.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 42,
                        "content": "return Function.__new__(cls, *sorted(args, key=default_sort_key))"
                    },
                    {
                        "line_number": 84,
                        "content": "return Function.__new__(cls, *sorted(args, key=default_sort_key))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "rewriting.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\sympy\\codegen\\rewriting.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 134,
                        "content": "for optim in sorted(optimizations, key=lambda opt: opt.priority, reverse=True):"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "rewriting.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\sympy\\codegen\\rewriting.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 134,
                        "content": "for optim in sorted(optimizations, key=lambda opt: opt.priority, reverse=True):"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "partitions.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\sympy\\combinatorics\\partitions.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 110,
                        "content": ">>> l.sort(key=default_sort_key); l"
                    },
                    {
                        "line_number": 132,
                        "content": "self._partition = sorted([sorted(p, key=default_sort_key)"
                    },
                    {
                        "line_number": 267,
                        "content": "[i for p in partition for i in p], key=default_sort_key)])"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "pc_groups.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\sympy\\combinatorics\\pc_groups.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 264,
                        "content": "key = ((s2, -1), (s1, 1), (s2, 1))"
                    },
                    {
                        "line_number": 265,
                        "content": "key = self.free_group.dtype(key)"
                    },
                    {
                        "line_number": 351,
                        "content": "key = free_group.dtype(key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "pc_groups.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\sympy\\combinatorics\\pc_groups.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 264,
                        "content": "key = ((s2, -1), (s1, 1), (s2, 1))"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "permutations.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\sympy\\combinatorics\\permutations.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1580,
                        "content": "ic.sort(key=lambda x: key(x[0]))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "perm_groups.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\sympy\\combinatorics\\perm_groups.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1025,
                        "content": "orbits.sort(key=lambda x: -len(x))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "perm_groups.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\sympy\\combinatorics\\perm_groups.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 821,
                        "content": "key = lambda x: base_ordering[base[l]^x])"
                    },
                    {
                        "line_number": 876,
                        "content": "gamma = sorted(orbits[l], key = lambda y: base_ordering[y^x])[0]"
                    },
                    {
                        "line_number": 4085,
                        "content": "return [min(orbit, key = lambda x: base_ordering[x]) \\"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "polyhedron.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\sympy\\combinatorics\\polyhedron.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 388,
                        "content": "faces = [minlex(f, directed=False, key=default_sort_key) for f in faces]"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "polyhedron.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\sympy\\combinatorics\\polyhedron.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 388,
                        "content": "faces = [minlex(f, directed=False, key=default_sort_key) for f in faces]"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "testutil.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\sympy\\combinatorics\\testutil.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 318,
                        "content": "items.sort(key=lambda x: len(x[1]), reverse=True)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_partitions.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\sympy\\combinatorics\\tests\\test_partitions.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 32,
                        "content": "l.sort(key=default_sort_key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "delta.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\sympy\\concrete\\delta.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 190,
                        "content": "for arg in sorted(f.args, key=default_sort_key):"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "add.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\sympy\\core\\add.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1257,
                        "content": "return tuple(sorted(self.args, key=default_sort_key))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "containers.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\sympy\\core\\containers.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 322,
                        "content": "return tuple(sorted(self.args, key=default_sort_key))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "expr.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\sympy\\core\\expr.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1202,
                        "content": "gens = sorted(gens, key=default_sort_key)"
                    },
                    {
                        "line_number": 3256,
                        "content": "terms = sorted(Add.make_args(s.removeO()), key=lambda i: int(i.as_coeff_exponent(k)[1]))"
                    },
                    {
                        "line_number": 3678,
                        "content": "for hint in sorted(hints.keys(), key=_expand_hint_key):"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "expr.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\sympy\\core\\expr.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 1133,
                        "content": "key = lambda x:not isinstance(x, (Number, NumberSymbol))"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "exprtools.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\sympy\\core\\exprtools.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1382,
                        "content": "nc_obj = sorted(nc_obj, key=default_sort_key)"
                    },
                    {
                        "line_number": 1390,
                        "content": "nc_syms.sort(key=default_sort_key)"
                    },
                    {
                        "line_number": 1531,
                        "content": "rep1 = [(n, Dummy()) for n in sorted(nc_symbols, key=default_sort_key)]"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "function.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\sympy\\core\\function.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 2189,
                        "content": "pts = sorted(set(point), key=default_sort_key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "kind.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\sympy\\core\\kind.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 361,
                        "content": "key = self._dispatcher.funcs[sigs]"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "kind.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\sympy\\core\\kind.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 361,
                        "content": "key = self._dispatcher.funcs[sigs]"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "operations.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\sympy\\core\\operations.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 698,
                        "content": "key = self._dispatcher.funcs[sigs]"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "operations.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\sympy\\core\\operations.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 698,
                        "content": "key = self._dispatcher.funcs[sigs]"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "sorting.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\sympy\\core\\sorting.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 60,
                        "content": ">>> sorted(a, key=default_sort_key)"
                    },
                    {
                        "line_number": 66,
                        "content": ">>> a.sort(key=default_sort_key); a[0]"
                    },
                    {
                        "line_number": 68,
                        "content": ">>> min(a, key=default_sort_key)"
                    },
                    {
                        "line_number": 100,
                        "content": ">>> sorted(eq.args, key=default_sort_key)"
                    },
                    {
                        "line_number": 112,
                        "content": ">>> sorted([sin(x)*cos(x), sin(x)], key=default_sort_key)"
                    },
                    {
                        "line_number": 114,
                        "content": ">>> sorted([x, x**2, sqrt(x), x**3], key=default_sort_key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "symbol.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\sympy\\core\\symbol.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 923,
                        "content": "key = lambda x:tuple(sorted(x.assumptions0.items()))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "symbol.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\sympy\\core\\symbol.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 923,
                        "content": "key = lambda x:tuple(sorted(x.assumptions0.items()))"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "traversal.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\sympy\\core\\traversal.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 106,
                        "content": "is given; simply passing key=True will guarantee that the traversal is"
                    },
                    {
                        "line_number": 284,
                        "content": "is given; simply passing key=True will guarantee that the traversal is"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_expr.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\sympy\\core\\tests\\test_expr.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1698,
                        "content": "assert sorted(exprs, key=default_sort_key) == exprs"
                    },
                    {
                        "line_number": 1702,
                        "content": "assert sorted(exprs, key=default_sort_key) == exprs"
                    },
                    {
                        "line_number": 1705,
                        "content": "assert sorted(exprs, key=default_sort_key) == exprs"
                    },
                    {
                        "line_number": 1708,
                        "content": "assert sorted(exprs, key=default_sort_key) == exprs"
                    },
                    {
                        "line_number": 1711,
                        "content": "assert sorted(exprs, key=default_sort_key) == exprs"
                    },
                    {
                        "line_number": 1714,
                        "content": "assert sorted(exprs, key=default_sort_key) == exprs"
                    },
                    {
                        "line_number": 1717,
                        "content": "assert sorted(exprs, key=default_sort_key) == exprs"
                    },
                    {
                        "line_number": 1720,
                        "content": "assert sorted(exprs, key=default_sort_key) == exprs"
                    },
                    {
                        "line_number": 1723,
                        "content": "assert sorted(exprs, key=default_sort_key) == exprs"
                    },
                    {
                        "line_number": 1726,
                        "content": "assert sorted(exprs, key=default_sort_key) == exprs"
                    },
                    {
                        "line_number": 1729,
                        "content": "assert sorted(exprs, key=default_sort_key) == exprs"
                    },
                    {
                        "line_number": 1732,
                        "content": "assert sorted(exprs, key=default_sort_key) == exprs"
                    },
                    {
                        "line_number": 1735,
                        "content": "assert sorted([b, a], key=default_sort_key) == exprs"
                    },
                    {
                        "line_number": 1791,
                        "content": "assert sorted([-m, s], key=lambda arg: arg.sort_key()) == [-m, s]"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_expr.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\sympy\\core\\tests\\test_expr.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 1791,
                        "content": "assert sorted([-m, s], key=lambda arg: arg.sort_key()) == [-m, s]"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_sorting.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\sympy\\core\\tests\\test_sorting.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 9,
                        "content": "assert sorted([func, x, func], key=default_sort_key) == [func, func, x]"
                    },
                    {
                        "line_number": 15,
                        "content": "assert sorted([x, func], key=default_sort_key) == [func, x]"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "crypto.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\sympy\\crypto\\crypto.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 171,
                        "content": "key = check_and_join(key, alp, filter=True)"
                    },
                    {
                        "line_number": 269,
                        "content": "key = A[shift:] + A[:shift]"
                    },
                    {
                        "line_number": 726,
                        "content": ">>> key = AZ('gold bug'); n1 = len(key); n2 = len(m)"
                    },
                    {
                        "line_number": 751,
                        "content": "key = [map[c] for c in key]"
                    },
                    {
                        "line_number": 908,
                        "content": ">>> key = Matrix([[1, 1, 1, 2], [0, 1, 1, 0],"
                    },
                    {
                        "line_number": 1261,
                        "content": "key = padded_key(key, bifid5)"
                    },
                    {
                        "line_number": 1308,
                        "content": "key = padded_key(key, bifid5)"
                    },
                    {
                        "line_number": 1335,
                        "content": "key = padded_key(key, bifid5)"
                    },
                    {
                        "line_number": 1372,
                        "content": "key = padded_key(key, bifid6)"
                    },
                    {
                        "line_number": 1415,
                        "content": "key = padded_key(key, bifid6)"
                    },
                    {
                        "line_number": 1445,
                        "content": "key = padded_key(key, bifid6)"
                    },
                    {
                        "line_number": 2359,
                        "content": ">>> key = [F(1), F(0), F(0), F(1)]"
                    },
                    {
                        "line_number": 2420,
                        "content": ">>> key = [F(1), F(0), F(0), F(1)]"
                    },
                    {
                        "line_number": 2467,
                        "content": ">>> key = [F(1), F(0), F(0), F(1)]"
                    },
                    {
                        "line_number": 2472,
                        "content": ">>> key = [F(1), F(1), F(0), F(1)]"
                    },
                    {
                        "line_number": 2477,
                        "content": ">>> key = [F(1), F(1), F(0)]"
                    },
                    {
                        "line_number": 2482,
                        "content": ">>> key = [F(1), F(0), F(1)]"
                    },
                    {
                        "line_number": 3128,
                        "content": "return ''.join(sorted(message, key=lambda i: next(p)))"
                    },
                    {
                        "line_number": 3157,
                        "content": "idx = sorted(range(len(ciphertext)), key=lambda i: next(p))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "crypto.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\sympy\\crypto\\crypto.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 171,
                        "content": "key = check_and_join(key, alp, filter=True)"
                    },
                    {
                        "line_number": 726,
                        "content": ">>> key = AZ('gold bug'); n1 = len(key); n2 = len(m)"
                    },
                    {
                        "line_number": 908,
                        "content": ">>> key = Matrix([[1, 1, 1, 2], [0, 1, 1, 0],"
                    },
                    {
                        "line_number": 2137,
                        "content": ">>> key = kid_rsa_public_key(a, b, A, B)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "diffgeom.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\sympy\\diffgeom\\diffgeom.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 414,
                        "content": "key = Tuple(self.name, sys.name)"
                    },
                    {
                        "line_number": 504,
                        "content": "min_distance = max(path_dict.values(), key=lambda x:x[0])[0]"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "tensor_functions.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\sympy\\functions\\special\\tensor_functions.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 196,
                        "content": "if i != min(i, j, key=default_sort_key):"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "polygon.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\sympy\\geometry\\polygon.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 2129,
                        "content": "[nodup[i], nodup[i + 1], nodup[i + 2]], key=default_sort_key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "util.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\sympy\\geometry\\util.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 72,
                        "content": "return tuple(sorted(p, key=lambda x: x.args))"
                    },
                    {
                        "line_number": 321,
                        "content": "p.sort(key=lambda x: x.args)"
                    },
                    {
                        "line_number": 451,
                        "content": "p.sort(key=lambda x: x.args)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "deltafunctions.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\sympy\\integrals\\deltafunctions.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 53,
                        "content": "sorted_args = sorted(c, key=default_sort_key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "intpoly.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\sympy\\integrals\\intpoly.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 979,
                        "content": "power_gens = sorted(power_gens.items(), key=lambda k: str(k[0]))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "laplace.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\sympy\\integrals\\laplace.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 240,
                        "content": "conds.sort(key=lambda x: (-x[0], cnt(x[1])))"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "meijerint.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\sympy\\integrals\\meijerint.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1667,
                        "content": "for a in sorted(_find_splitting_points(f, x) | {S.Zero}, key=default_sort_key):"
                    },
                    {
                        "line_number": 1838,
                        "content": "for c in sorted(innermost, key=default_sort_key, reverse=True) + [S.Zero]:"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "risch.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\sympy\\integrals\\risch.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 431,
                        "content": "logs = sorted(set(logs), key=default_sort_key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "transforms.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\sympy\\integrals\\transforms.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 751,
                        "content": "an.sort(key=default_sort_key)"
                    },
                    {
                        "line_number": 752,
                        "content": "ap.sort(key=default_sort_key)"
                    },
                    {
                        "line_number": 753,
                        "content": "bm.sort(key=default_sort_key)"
                    },
                    {
                        "line_number": 754,
                        "content": "bq.sort(key=default_sort_key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "transforms.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\sympy\\integrals\\transforms.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 322,
                        "content": "conds.sort(key=lambda x: (x[0] - x[1], count_ops(x[2])))"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_meijerint.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\sympy\\integrals\\tests\\test_meijerint.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 346,
                        "content": "for formula, terms, cond, hint in sorted(l, key=default_sort_key):"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "dpll.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\sympy\\logic\\algorithms\\dpll.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 37,
                        "content": "symbols = sorted(_find_predicates(expr), key=default_sort_key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "common.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\sympy\\matrices\\common.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 3026,
                        "content": "key = _coord_to_index(i, j)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "eigen.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\sympy\\matrices\\eigen.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 320,
                        "content": "eigenvals = sorted(eigenvals.items(), key=default_sort_key)"
                    },
                    {
                        "line_number": 700,
                        "content": "eigenvecs = sorted(eigenvecs, key=default_sort_key)"
                    },
                    {
                        "line_number": 1188,
                        "content": "blocks     = sorted(eigs.keys(), key=default_sort_key)"
                    },
                    {
                        "line_number": 1202,
                        "content": "for eig in sorted(eigs.keys(), key=default_sort_key):"
                    },
                    {
                        "line_number": 1245,
                        "content": "for eig in sorted(eigs.keys(), key=default_sort_key):"
                    },
                    {
                        "line_number": 1341,
                        "content": "vals.sort(reverse=True, key=default_sort_key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "matrices.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\sympy\\matrices\\matrices.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1157,
                        "content": "i, j = key = self.key2ij(key)"
                    },
                    {
                        "line_number": 1174,
                        "content": "key = (slice(*divmod(i, self.cols)),"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "matrices.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\sympy\\matrices\\matrices.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 1174,
                        "content": "key = (slice(*divmod(i, self.cols)),"
                    },
                    {
                        "line_number": 1177,
                        "content": "key = (slice(i, i + value.rows),"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "sparse.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\sympy\\matrices\\sparse.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 329,
                        "content": "return [tuple(k + (self[k],)) for k in sorted(self.todok().keys(), key=lambda k: list(reversed(k)))]"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "factor_.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\sympy\\ntheory\\factor_.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 187,
                        "content": "key=lambda x: (x[1][k], x[0])))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "mathematica.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\sympy\\parsing\\mathematica.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 615,
                        "content": "tokens_escape.sort(key=lambda x: -len(x))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "secondquant.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\sympy\\physics\\secondquant.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 2497,
                        "content": "dummies = sorted(dummies, key=default_sort_key)"
                    },
                    {
                        "line_number": 2710,
                        "content": "result = sorted(all_dums, key=lambda x: dumkey[x])"
                    },
                    {
                        "line_number": 2990,
                        "content": "i, j = sorted(map(sympify, (i, j)), key=default_sort_key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "kane.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\sympy\\physics\\mechanics\\kane.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 524,
                        "content": "r.sort(key=default_sort_key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "lagrange.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\sympy\\physics\\mechanics\\lagrange.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 347,
                        "content": "r.sort(key=default_sort_key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "circuitutils.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\sympy\\physics\\quantum\\circuitutils.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 485,
                        "content": "key=default_sort_key)"
                    },
                    {
                        "line_number": 487,
                        "content": "ids.sort(key=default_sort_key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "trace.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\sympy\\physics\\quantum\\trace.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 43,
                        "content": "min_item = min(l, key=default_sort_key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "dimensions.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\sympy\\physics\\units\\dimensions.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 354,
                        "content": "base_dims.sort(key=default_sort_key)"
                    },
                    {
                        "line_number": 355,
                        "content": "derived_dims.sort(key=default_sort_key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "util.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\sympy\\physics\\units\\util.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 243,
                        "content": "deset.add(tuple(sorted(dims, key=default_sort_key)))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "__init__.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\sympy\\physics\\units\\__init__.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 268,
                        "content": "return sorted(set(rv), key=lambda x: (len(x), x))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "distributedmodules.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\sympy\\polys\\distributedmodules.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 685,
                        "content": "P.sort(key=ourkey, reverse=True)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "factortools.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\sympy\\polys\\factortools.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 348,
                        "content": "p, fsqf = min(a, key=lambda x: len(x[1]))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "fglmtools.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\sympy\\polys\\fglmtools.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 33,
                        "content": "L.sort(key=lambda k_l: O_to(_incr_k(S[k_l[1]], k_l[0])), reverse=True)"
                    },
                    {
                        "line_number": 59,
                        "content": "L.sort(key=lambda k_l: O_to(_incr_k(S[k_l[1]], k_l[0])), reverse=True)"
                    },
                    {
                        "line_number": 65,
                        "content": "return sorted(G, key=lambda g: O_to(g.LM), reverse=True)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "fglmtools.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\sympy\\polys\\fglmtools.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 33,
                        "content": "L.sort(key=lambda k_l: O_to(_incr_k(S[k_l[1]], k_l[0])), reverse=True)"
                    },
                    {
                        "line_number": 59,
                        "content": "L.sort(key=lambda k_l: O_to(_incr_k(S[k_l[1]], k_l[0])), reverse=True)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "groebnertools.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\sympy\\polys\\groebnertools.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 223,
                        "content": "h = min([f[x] for x in F], key=lambda f: order(f.LM))"
                    },
                    {
                        "line_number": 237,
                        "content": "G1 = sorted(G, key=lambda g: order(f[g].LM))"
                    },
                    {
                        "line_number": 258,
                        "content": "Gr = sorted(Gr, key=lambda f: order(f.LM), reverse=True)"
                    },
                    {
                        "line_number": 625,
                        "content": "B.sort(key=lambda f: order(Polyn(f).LM), reverse=True)"
                    },
                    {
                        "line_number": 696,
                        "content": "return sorted(H, key=lambda f: order(f.LM), reverse=True)"
                    },
                    {
                        "line_number": 752,
                        "content": "G.sort(key=lambda g: order(g.LM))"
                    },
                    {
                        "line_number": 772,
                        "content": "G.sort(key=lambda g: order(g.LM))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "monomials.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\sympy\\polys\\monomials.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 52,
                        "content": ">>> sorted(itermonomials([x, y], 2), key=monomial_key('grlex', [y, x]))"
                    },
                    {
                        "line_number": 55,
                        "content": ">>> sorted(itermonomials([x, y], 3), key=monomial_key('grlex', [y, x]))"
                    },
                    {
                        "line_number": 62,
                        "content": ">>> sorted(itermonomials([x, y], 2, 1), key=monomial_key('grlex', [y, x]))"
                    },
                    {
                        "line_number": 84,
                        "content": ">>> sorted(itermonomials([x, y], [2, 4], [1, 2]), reverse=True, key=monomial_key('lex', [x, y]))"
                    },
                    {
                        "line_number": 173,
                        "content": ">>> sorted(M, key=monomial_key('grlex', [y, x]))"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "multivariate_resultants.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\sympy\\polys\\multivariate_resultants.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 182,
                        "content": "key=monomial_key('lex', self.variables))"
                    },
                    {
                        "line_number": 359,
                        "content": "key=monomial_key('lex', self.variables))"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "polyroots.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\sympy\\polys\\polyroots.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 492,
                        "content": "ks.sort(key=lambda x: (x, -1) if x <= h else (abs(x - n), 1))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "polytools.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\sympy\\polys\\polytools.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 3701,
                        "content": "sorted(roots, key=lambda r: (1 if r.imag else 0, r.real, abs(r.imag), sign(r.imag)))))"
                    },
                    {
                        "line_number": 3708,
                        "content": "sorted(roots, key=lambda r: (1 if r.imag else 0, r.real, abs(r.imag), sign(r.imag)))))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "polyutils.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\sympy\\polys\\polyutils.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 46,
                        "content": "key = [(1 if i else 0, r, i) for r, i in key]"
                    },
                    {
                        "line_number": 47,
                        "content": "key = sorted(zip(key, roots))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "polyutils.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\sympy\\polys\\polyutils.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 41,
                        "content": "key = [[i.n(2).as_real_imag()[0] for i in r.as_real_imag()] for r in roots]"
                    },
                    {
                        "line_number": 46,
                        "content": "key = [(1 if i else 0, r, i) for r, i in key]"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "rings.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\sympy\\polys\\rings.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 1815,
                        "content": "return sorted(seq, key=lambda monom: monom[0], reverse=True)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "ring_series.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\sympy\\polys\\ring_series.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1871,
                        "content": "return min(series, key=lambda t: t[i])[i]"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "rootoftools.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\sympy\\polys\\rootoftools.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 492,
                        "content": "reals = sorted(reals, key=lambda r: r[0].a)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "domain.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\sympy\\polys\\domains\\domain.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 816,
                        "content": "return K0.__class__(max(K0.mod, K1.mod, key=default_sort_key))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "modularinteger.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\sympy\\polys\\domains\\modularinteger.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 189,
                        "content": "key = _mod, _dom, _sym"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "dense.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\sympy\\polys\\matrices\\dense.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 119,
                        "content": "ip = max(range(i, m), key=lambda ip: abs(a[ip][j]))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_orderings.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\sympy\\polys\\tests\\test_orderings.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 112,
                        "content": "assert sorted(M, key=monomial_key('lex', [z, y, x])) == \\"
                    },
                    {
                        "line_number": 114,
                        "content": "assert sorted(M, key=monomial_key('grlex', [z, y, x])) == \\"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_polyroots.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\sympy\\polys\\tests\\test_polyroots.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 208,
                        "content": "assert sorted(lhs, key=hash) == sorted(rhs, key=hash)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_polyroots.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\sympy\\polys\\tests\\test_polyroots.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 208,
                        "content": "assert sorted(lhs, key=hash) == sorted(rhs, key=hash)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "aesaracode.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\sympy\\printing\\aesaracode.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 145,
                        "content": "key = self._get_key(s, name, dtype=dtype, broadcastable=broadcastable)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "aesaracode.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\sympy\\printing\\aesaracode.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 145,
                        "content": "key = self._get_key(s, name, dtype=dtype, broadcastable=broadcastable)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "codeprinter.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\sympy\\printing\\codeprinter.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 484,
                        "content": "for a in sorted(expr.args, key=default_sort_key))"
                    },
                    {
                        "line_number": 489,
                        "content": "for a in sorted(expr.args, key=default_sort_key))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "lambdarepr.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\sympy\\printing\\lambdarepr.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 30,
                        "content": "for arg in sorted(expr.args, key=default_sort_key):"
                    },
                    {
                        "line_number": 39,
                        "content": "for arg in sorted(expr.args, key=default_sort_key):"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "latex.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\sympy\\printing\\latex.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1046,
                        "content": "args = sorted(expr.args, key=default_sort_key)"
                    },
                    {
                        "line_number": 1135,
                        "content": "args = sorted(e.args, key=default_sort_key)"
                    },
                    {
                        "line_number": 1139,
                        "content": "args = sorted(e.args, key=default_sort_key)"
                    },
                    {
                        "line_number": 1143,
                        "content": "args = sorted(e.args, key=default_sort_key)"
                    },
                    {
                        "line_number": 1150,
                        "content": "args = sorted(e.args, key=default_sort_key)"
                    },
                    {
                        "line_number": 2049,
                        "content": "keys = sorted(d.keys(), key=default_sort_key)"
                    },
                    {
                        "line_number": 2119,
                        "content": "items = sorted(s.args, key=default_sort_key)"
                    },
                    {
                        "line_number": 2123,
                        "content": "items = sorted(s, key=default_sort_key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "mathematica.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\sympy\\printing\\mathematica.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 243,
                        "content": "items = sorted(expr.todok().items(), key=default_sort_key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "mathml.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\sympy\\printing\\mathml.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1342,
                        "content": "items = sorted(s, key=default_sort_key)"
                    },
                    {
                        "line_number": 1415,
                        "content": "args = sorted(expr.args, key=default_sort_key)"
                    },
                    {
                        "line_number": 1419,
                        "content": "args = sorted(expr.args, key=default_sort_key)"
                    },
                    {
                        "line_number": 1423,
                        "content": "args = sorted(expr.args, key=default_sort_key)"
                    },
                    {
                        "line_number": 1430,
                        "content": "args = sorted(expr.args, key=default_sort_key)"
                    },
                    {
                        "line_number": 1492,
                        "content": "args = sorted(expr.args, key=default_sort_key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "printer.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\sympy\\printing\\printer.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 345,
                        "content": "return sorted(Add.make_args(expr), key=cmp_to_key(Basic._compare_pretty))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "repr.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\sympy\\printing\\repr.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 296,
                        "content": "numer_terms.sort(key=frac.field.order, reverse=True)"
                    },
                    {
                        "line_number": 298,
                        "content": "denom_terms.sort(key=frac.field.order, reverse=True)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "repr.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\sympy\\printing\\repr.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 291,
                        "content": "terms.sort(key=poly.ring.order, reverse=True)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "str.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\sympy\\printing\\str.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 127,
                        "content": "keys = sorted(d.keys(), key=default_sort_key)"
                    },
                    {
                        "line_number": 223,
                        "content": "args = sorted(expr.args, key=default_sort_key)"
                    },
                    {
                        "line_number": 809,
                        "content": "items = sorted(s, key=default_sort_key)"
                    },
                    {
                        "line_number": 818,
                        "content": "items = sorted(s, key=default_sort_key)"
                    },
                    {
                        "line_number": 826,
                        "content": "items = sorted(s, key=default_sort_key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "theanocode.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\sympy\\printing\\theanocode.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 144,
                        "content": "key = self._get_key(s, name, dtype=dtype, broadcastable=broadcastable)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "theanocode.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\sympy\\printing\\theanocode.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 144,
                        "content": "key = self._get_key(s, name, dtype=dtype, broadcastable=broadcastable)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "pretty.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\sympy\\printing\\pretty\\pretty.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 250,
                        "content": "args = sorted(e.args, key=default_sort_key)"
                    },
                    {
                        "line_number": 1126,
                        "content": "inneritems.sort(key = lambda x: x[0].__str__())"
                    },
                    {
                        "line_number": 1597,
                        "content": "args = sorted(args, key=default_sort_key)"
                    },
                    {
                        "line_number": 2132,
                        "content": "items = sorted(s.args, key=default_sort_key)"
                    },
                    {
                        "line_number": 2410,
                        "content": "keys = sorted(d.keys(), key=default_sort_key)"
                    },
                    {
                        "line_number": 2428,
                        "content": "items = sorted(s, key=default_sort_key)"
                    },
                    {
                        "line_number": 2436,
                        "content": "items = sorted(s, key=default_sort_key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "pretty.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\sympy\\printing\\pretty\\pretty.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 1992,
                        "content": "args = sorted(args, key=lambda x: isinstance(x, Quantity) or"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "pretty_symbology.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\sympy\\printing\\pretty\\pretty_symbology.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 531,
                        "content": "for key in sorted(modifier_dict.keys(), key=lambda k:len(k), reverse=True) :"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "gruntz.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\sympy\\series\\gruntz.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 640,
                        "content": "Omega.sort(key=lambda x: nodes[x[1]].ht(), reverse=True)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "gruntz.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\sympy\\series\\gruntz.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 640,
                        "content": "Omega.sort(key=lambda x: nodes[x[1]].ht(), reverse=True)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "order.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\sympy\\series\\order.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 312,
                        "content": "variables.sort(key=default_sort_key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "cse_main.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\sympy\\simplify\\cse_main.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 144,
                        "content": "key=lambda x: -sum([p[s.index(i)].count_ops()"
                    },
                    {
                        "line_number": 394,
                        "content": "funcs = sorted(funcs, key=lambda f: len(f.args))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "cse_opts.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\sympy\\simplify\\cse_opts.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 30,
                        "content": "for a in sorted(e.atoms(Add), key=default_sort_key):"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "fu.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\sympy\\simplify\\fu.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 1199,
                        "content": "key = cos(a*cc, evaluate=False)"
                    },
                    {
                        "line_number": 1205,
                        "content": "key = cos(a*cc, evaluate=False)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "gammasimp.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\sympy\\simplify\\gammasimp.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 331,
                        "content": "keys = sorted(rats, key=default_sort_key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "hyperexpand.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\sympy\\simplify\\hyperexpand.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 661,
                        "content": "items.sort(key=lambda x: x - x0, reverse=flip)"
                    },
                    {
                        "line_number": 1597,
                        "content": "for r in sorted(list(abuckets.keys()) + list(bbuckets.keys()), key=default_sort_key):"
                    },
                    {
                        "line_number": 1611,
                        "content": "al, nal, bk, nbk = [sorted(w, key=default_sort_key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "powsimp.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\sympy\\simplify\\powsimp.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 288,
                        "content": "bases.sort(key=default_sort_key)  # this makes tie-breaking canonical"
                    },
                    {
                        "line_number": 289,
                        "content": "bases.sort(key=measure, reverse=True)  # handle longest first"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "radsimp.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\sympy\\simplify\\radsimp.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1175,
                        "content": "args = sorted(expr.args, key=default_sort_key)"
                    },
                    {
                        "line_number": 1178,
                        "content": "surds.sort(key=default_sort_key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "ratsimp.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\sympy\\simplify\\ratsimp.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 213,
                        "content": "c, d = min(newsol, key=lambda x: len(x[0].terms()) + len(x[1].terms()))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "ratsimp.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\sympy\\simplify\\ratsimp.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 213,
                        "content": "c, d = min(newsol, key=lambda x: len(x[0].terms()) + len(x[1].terms()))"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "sqrtdenest.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\sympy\\simplify\\sqrtdenest.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 38,
                        "content": "return max([sqrt_depth(x) for x in p.args], key=default_sort_key)"
                    },
                    {
                        "line_number": 156,
                        "content": "pargs = sorted(p.args, key=default_sort_key)"
                    },
                    {
                        "line_number": 166,
                        "content": "nmax = max(v, key=default_sort_key)"
                    },
                    {
                        "line_number": 228,
                        "content": "args = sorted(n.base.args, key=default_sort_key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "polysys.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\sympy\\solvers\\polysys.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 145,
                        "content": "return sorted(solutions, key=default_sort_key)"
                    },
                    {
                        "line_number": 338,
                        "content": "return sorted(result, key=default_sort_key)"
                    },
                    {
                        "line_number": 440,
                        "content": "return sorted(solutions, key=default_sort_key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "recurr.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\sympy\\solvers\\recurr.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 664,
                        "content": "kernel.sort(key=default_sort_key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "solvers.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\sympy\\solvers\\solvers.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1251,
                        "content": "solution.sort(key=default_sort_key)"
                    },
                    {
                        "line_number": 2149,
                        "content": "for xi in sorted(symbols, key=default_sort_key):  # canonical order"
                    },
                    {
                        "line_number": 2216,
                        "content": "key=lambda x: (len(x.free_symbols), default_sort_key(x)))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "solvers.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\sympy\\solvers\\solvers.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 1763,
                        "content": "subsyms = sorted(subsyms, key = lambda x: sym_indices[x])"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "solveset.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\sympy\\solvers\\solveset.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 3058,
                        "content": "unsolved.sort(key=default_sort_key)"
                    },
                    {
                        "line_number": 3489,
                        "content": "_symbols.sort(key=default_sort_key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "diophantine.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\sympy\\solvers\\diophantine\\diophantine.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 171,
                        "content": "self.free_symbols.sort(key=default_sort_key)"
                    },
                    {
                        "line_number": 1351,
                        "content": "var.sort(key=default_sort_key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_diophantine.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\sympy\\solvers\\diophantine\\tests\\test_diophantine.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 756,
                        "content": "var.sort(key=default_sort_key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "nonhomogeneous.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\sympy\\solvers\\ode\\nonhomogeneous.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 264,
                        "content": "collectterms.sort(key=default_sort_key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "ode.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\sympy\\solvers\\ode\\ode.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 2383,
                        "content": "maxf = max(fargs, key = lambda x: x.args[0])"
                    },
                    {
                        "line_number": 2391,
                        "content": "maxf = max(fargs, key = lambda x: x.args[0])"
                    },
                    {
                        "line_number": 2392,
                        "content": "minf = min(fargs, key = lambda x: x.args[0])"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "systems.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\sympy\\solvers\\ode\\systems.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 646,
                        "content": "eigenchains_iter = sorted(eigenchains.items(), key=default_sort_key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "systems.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\sympy\\solvers\\ode\\systems.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 1674,
                        "content": "key=lambda x: Function(Dummy('{}{}0'.format(x.func.__name__, underscores)))(t))"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "joint_rv_types.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\sympy\\stats\\joint_rv_types.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 138,
                        "content": "syms = tuple(sorted(syms, key = lambda index: index.args[1]))"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "stochastic_process_types.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\sympy\\stats\\stochastic_process_types.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 2028,
                        "content": "args_list = sorted(args_list, key=lambda x: x.args[0].key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "symbolic_probability.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\sympy\\stats\\symbolic_probability.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 492,
                        "content": "arg1, arg2 = sorted([arg1, arg2], key=default_sort_key)"
                    },
                    {
                        "line_number": 515,
                        "content": "arg1, arg2 = sorted([arg1, arg2], key=default_sort_key)"
                    },
                    {
                        "line_number": 523,
                        "content": "addends = [a*b*Covariance(*sorted([r1, r2], key=default_sort_key), condition=condition)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "rl.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\sympy\\strategies\\rl.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 53,
                        "content": ">>> key     = lambda x: x.as_coeff_Mul()[1]"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "index_methods.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\sympy\\tensor\\index_methods.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 344,
                        "content": ">>> sorted(d.keys(), key=default_sort_key)"
                    },
                    {
                        "line_number": 354,
                        "content": ">>> sorted(d[x[i, i]*y[j, j]], key=default_sort_key)"
                    },
                    {
                        "line_number": 363,
                        "content": ">>> sorted(d.keys(), key=default_sort_key)"
                    },
                    {
                        "line_number": 401,
                        "content": "junk, key = _remove_repeated(expr.indices)"
                    },
                    {
                        "line_number": 406,
                        "content": "junk, junk, key = _get_indices_Mul(expr, return_dummies=True)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "index_methods.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\sympy\\tensor\\index_methods.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 406,
                        "content": "junk, junk, key = _get_indices_Mul(expr, return_dummies=True)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "tensor.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\sympy\\tensor\\tensor.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1622,
                        "content": "return sorted(set(self.index_types), key=lambda x: x.name)"
                    },
                    {
                        "line_number": 2429,
                        "content": "args.sort(key=default_sort_key)"
                    },
                    {
                        "line_number": 3678,
                        "content": "typ1 = sorted(set(cv[j-1].component.index_types), key=lambda x: x.name)"
                    },
                    {
                        "line_number": 3679,
                        "content": "typ2 = sorted(set(cv[j].component.index_types), key=lambda x: x.name)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "from_indexed_to_array.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\sympy\\tensor\\array\\expressions\\from_indexed_to_array.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 112,
                        "content": "summation_indices = sorted({subindicessets.get(i, i) for i in summation_indices}, key=default_sort_key)"
                    },
                    {
                        "line_number": 119,
                        "content": "arg_indices = sorted(set(arg.indices), key=default_sort_key)"
                    },
                    {
                        "line_number": 122,
                        "content": "kronecker_indices = sorted(kronecker_indices, key=default_sort_key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "rewrite.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\sympy\\unify\\rewrite.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 21,
                        "content": ">>> sorted(rl(z + 3), key=default_sort_key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "codegen.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\sympy\\utilities\\codegen.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 715,
                        "content": "output_args.sort(key=lambda x: str(x.name))"
                    },
                    {
                        "line_number": 1372,
                        "content": "output_args.sort(key=lambda x: str(x.name))"
                    },
                    {
                        "line_number": 1811,
                        "content": "output_args.sort(key=lambda x: str(x.name))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "iterables.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\sympy\\utilities\\iterables.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 2188,
                        "content": "key = dict(enumerate(ordered(uniq(s))))"
                    },
                    {
                        "line_number": 2346,
                        "content": "take = sorted(ms.items(), key=lambda x:(x[1], x[0]))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "iterables.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\sympy\\utilities\\iterables.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 2188,
                        "content": "key = dict(enumerate(ordered(uniq(s))))"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_iterables.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\sympy\\utilities\\tests\\test_iterables.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 38,
                        "content": "assert sorted([y, x], key=default_sort_key) == [x, y]"
                    },
                    {
                        "line_number": 660,
                        "content": "assert minlex(('bb', 'aaa', 'c', 'a'), key=len) == ('c', 'a', 'bb', 'aaa')"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_lambdify.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\sympy\\utilities\\tests\\test_lambdify.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 303,
                        "content": "a, b = sorted(expr.free_symbols, key=lambda s: s.name)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "integrals.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\sympy\\vector\\integrals.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 133,
                        "content": "return topological_sort((V, E), key=default_sort_key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "vector.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\sympy\\vector\\vector.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 518,
                        "content": "expr1, expr2 = sorted([expr1, expr2], key=default_sort_key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "_parser.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\tomli\\_parser.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 287,
                        "content": "pos, key = parse_key(src, pos)"
                    },
                    {
                        "line_number": 305,
                        "content": "pos, key = parse_key(src, pos)"
                    },
                    {
                        "line_number": 360,
                        "content": "pos, key = parse_key(src, pos)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "auth.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\tornado\\auth.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 848,
                        "content": "key=handler.settings[\"twitter_consumer_key\"],"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "auth.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\tornado\\auth.py",
                "vulnerability": "SHA-1",
                "lines": [
                    {
                        "line_number": 1206,
                        "content": "hash = hmac.new(key, escape.utf8(base_string), hashlib.sha1)"
                    },
                    {
                        "line_number": 1241,
                        "content": "hash = hmac.new(key, escape.utf8(base_string), hashlib.sha1)"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collisions."
            },
            {
                "language": "Python",
                "filename": "auth.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\tornado\\auth.py",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 1090,
                        "content": "digestmod=hashlib.sha256,"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Python",
                "filename": "web.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\tornado\\web.py",
                "vulnerability": "SHA-1",
                "lines": [
                    {
                        "line_number": 1690,
                        "content": "hasher = hashlib.sha1()"
                    },
                    {
                        "line_number": 3703,
                        "content": "hash = hmac.new(utf8(secret), digestmod=hashlib.sha1)"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collisions."
            },
            {
                "language": "Python",
                "filename": "web.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\tornado\\web.py",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 3710,
                        "content": "hash = hmac.new(utf8(secret), digestmod=hashlib.sha256)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Python",
                "filename": "websocket.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\tornado\\websocket.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1365,
                        "content": "self.key = base64.b64encode(os.urandom(16))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "websocket.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\tornado\\websocket.py",
                "vulnerability": "SHA-1",
                "lines": [
                    {
                        "line_number": 887,
                        "content": "sha1 = hashlib.sha1()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collisions."
            },
            {
                "language": "Python",
                "filename": "auth_test.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\tornado\\test\\auth_test.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 63,
                        "content": "return dict(key=\"asdf\", secret=\"qwer\")"
                    },
                    {
                        "line_number": 81,
                        "content": "if access_token != dict(key=\"uiop\", secret=\"5678\"):"
                    },
                    {
                        "line_number": 108,
                        "content": "return dict(key=\"asdf\", secret=\"qwer\")"
                    },
                    {
                        "line_number": 113,
                        "content": "dict(key=\"uiop\", secret=\"5678\"),"
                    },
                    {
                        "line_number": 230,
                        "content": "access_token=dict(key=\"hjkl\", secret=\"vbnm\"),"
                    },
                    {
                        "line_number": 380,
                        "content": "self.assertEqual(parsed[\"access_token\"], dict(key=\"uiop\", secret=\"5678\"))"
                    },
                    {
                        "line_number": 422,
                        "content": "self.assertEqual(parsed[\"access_token\"], dict(key=\"uiop\", secret=\"5678\"))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "iostream_test.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\tornado\\test\\iostream_test.py",
                "vulnerability": "SHA-1",
                "lines": [
                    {
                        "line_number": 683,
                        "content": "produce_hash = hashlib.sha1()"
                    },
                    {
                        "line_number": 684,
                        "content": "consume_hash = hashlib.sha1()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collisions."
            },
            {
                "language": "Python",
                "filename": "traitlets.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\traitlets\\traitlets.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 4105,
                        "content": "f\"'{self.__class__.__name__}' options must have the form 'key=value', got {s!r}\""
                    },
                    {
                        "line_number": 4111,
                        "content": "key = self._key_trait.from_string(key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "traitlets.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\traitlets\\traitlets.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 551,
                        "content": "key = (\"metadata-tag\", pkg, *sorted(kwargs))"
                    },
                    {
                        "line_number": 4020,
                        "content": "key = key_trait._validate(obj, key)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "application.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\traitlets\\config\\application.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 777,
                        "content": "key = (key,)  # type:ignore[assignment]"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "warnings.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\traitlets\\utils\\warnings.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 31,
                        "content": "key = (package_name, msg)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "_handshake.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\websocket\\_handshake.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 112,
                        "content": "key = options[\"header\"][\"Sec-WebSocket-Key\"]"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "_handshake.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\websocket\\_handshake.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 59,
                        "content": "headers, key = _get_handshake_headers(resource, url, hostname, port, options)"
                    },
                    {
                        "line_number": 112,
                        "content": "key = options[\"header\"][\"Sec-WebSocket-Key\"]"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "_handshake.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\websocket\\_handshake.py",
                "vulnerability": "SHA-1",
                "lines": [
                    {
                        "line_number": 192,
                        "content": "hashed = base64encode(hashlib.sha1(value).digest()).strip().lower()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collisions."
            },
            {
                "language": "Python",
                "filename": "test_websocket.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\websocket\\tests\\test_websocket.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 116,
                        "content": "key = \"c6b8hTg4EeGb2gQMztV1/g==\""
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "socket_server.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\win32\\Demos\\security\\sspi\\socket_server.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 96,
                        "content": "key = _get_msg(request)"
                    },
                    {
                        "line_number": 128,
                        "content": "blob, key = ca.encrypt(data)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "win32timezone.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\win32\\lib\\win32timezone.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 510,
                        "content": "key = _RegKeyDict.open(winreg.HKEY_LOCAL_MACHINE, self.tzRegKey)"
                    },
                    {
                        "line_number": 737,
                        "content": "key = _RegKeyDict.open(winreg.HKEY_LOCAL_MACHINE, TimeZoneInfo.tzRegKey)"
                    },
                    {
                        "line_number": 787,
                        "content": "key = key or (lambda tzi: -tzi.staticInfo.bias)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "win32timezone.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\win32\\lib\\win32timezone.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 510,
                        "content": "key = _RegKeyDict.open(winreg.HKEY_LOCAL_MACHINE, self.tzRegKey)"
                    },
                    {
                        "line_number": 737,
                        "content": "key = _RegKeyDict.open(winreg.HKEY_LOCAL_MACHINE, TimeZoneInfo.tzRegKey)"
                    },
                    {
                        "line_number": 787,
                        "content": "key = key or (lambda tzi: -tzi.staticInfo.bias)"
                    },
                    {
                        "line_number": 983,
                        "content": "key = self._find_first_match_(sorted_keys, item)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_sspi.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\win32\\test\\test_sspi.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 152,
                        "content": "key = sspiclient.sign(data)"
                    },
                    {
                        "line_number": 154,
                        "content": "key = sspiclient.sign(data)"
                    },
                    {
                        "line_number": 160,
                        "content": "key = sspiserver.sign(data)"
                    },
                    {
                        "line_number": 162,
                        "content": "key = sspiserver.sign(data)"
                    },
                    {
                        "line_number": 176,
                        "content": "key = sspiclient.sign(b\"hello\")"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_sspi.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\win32\\test\\test_sspi.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 176,
                        "content": "key = sspiclient.sign(b\"hello\")"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "build.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\win32com\\client\\build.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 519,
                        "content": "meth_list.sort(key=lambda m: m.desc[7])"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "gencache.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\win32com\\client\\gencache.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 578,
                        "content": "key = str(typelibCLSID), lcid, major, minor"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "gencache.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\win32com\\client\\gencache.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 578,
                        "content": "key = str(typelibCLSID), lcid, major, minor"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "genpy.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\win32com\\client\\genpy.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 819,
                        "content": "key = item.python_name"
                    },
                    {
                        "line_number": 837,
                        "content": "key = item.python_name"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "excelAddin.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\win32com\\demos\\excelAddin.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 141,
                        "content": "key = winreg.CreateKey("
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "outlookAddin.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\win32com\\demos\\outlookAddin.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 109,
                        "content": "key = winreg.CreateKey("
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "column_provider.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\win32comext\\shell\\demos\\servers\\column_provider.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 95,
                        "content": "key = winreg.CreateKey("
                    },
                    {
                        "line_number": 107,
                        "content": "key = winreg.DeleteKey("
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "context_menu.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\win32comext\\shell\\demos\\servers\\context_menu.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 92,
                        "content": "key = winreg.CreateKey(winreg.HKEY_CLASSES_ROOT, \"Python.File\\\\shellex\")"
                    },
                    {
                        "line_number": 103,
                        "content": "key = winreg.DeleteKey("
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "context_menu.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\win32comext\\shell\\demos\\servers\\context_menu.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 92,
                        "content": "key = winreg.CreateKey(winreg.HKEY_CLASSES_ROOT, \"Python.File\\\\shellex\")"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "copy_hook.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\win32comext\\shell\\demos\\servers\\copy_hook.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 37,
                        "content": "key = winreg.CreateKey("
                    },
                    {
                        "line_number": 42,
                        "content": "key = winreg.CreateKey("
                    },
                    {
                        "line_number": 54,
                        "content": "key = winreg.DeleteKey("
                    },
                    {
                        "line_number": 64,
                        "content": "key = winreg.DeleteKey("
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "empty_volume_cache.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\win32comext\\shell\\demos\\servers\\empty_volume_cache.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 161,
                        "content": "key = winreg.CreateKey(winreg.HKEY_LOCAL_MACHINE, kn)"
                    },
                    {
                        "line_number": 172,
                        "content": "key = winreg.DeleteKey(winreg.HKEY_LOCAL_MACHINE, kn)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "empty_volume_cache.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\win32comext\\shell\\demos\\servers\\empty_volume_cache.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 161,
                        "content": "key = winreg.CreateKey(winreg.HKEY_LOCAL_MACHINE, kn)"
                    },
                    {
                        "line_number": 172,
                        "content": "key = winreg.DeleteKey(winreg.HKEY_LOCAL_MACHINE, kn)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "folder_view.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\win32comext\\shell\\demos\\servers\\folder_view.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 802,
                        "content": "key = winreg.CreateKey("
                    },
                    {
                        "line_number": 809,
                        "content": "key = winreg.CreateKey("
                    },
                    {
                        "line_number": 825,
                        "content": "key = winreg.CreateKey(winreg.HKEY_CLASSES_ROOT, keypath)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "folder_view.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\win32comext\\shell\\demos\\servers\\folder_view.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 825,
                        "content": "key = winreg.CreateKey(winreg.HKEY_CLASSES_ROOT, keypath)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "icon_handler.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\win32comext\\shell\\demos\\servers\\icon_handler.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 54,
                        "content": "key = winreg.CreateKey(winreg.HKEY_CLASSES_ROOT, \"Python.File\\\\shellex\")"
                    },
                    {
                        "line_number": 64,
                        "content": "key = winreg.DeleteKey("
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "icon_handler.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\win32comext\\shell\\demos\\servers\\icon_handler.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 54,
                        "content": "key = winreg.CreateKey(winreg.HKEY_CLASSES_ROOT, \"Python.File\\\\shellex\")"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "shell_view.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\win32comext\\shell\\demos\\servers\\shell_view.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 925,
                        "content": "key = winreg.CreateKey("
                    },
                    {
                        "line_number": 932,
                        "content": "key = winreg.CreateKey("
                    },
                    {
                        "line_number": 951,
                        "content": "key = winreg.DeleteKey("
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "scanner.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\yaml\\scanner.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 308,
                        "content": "key = SimpleKey(token_number, required,"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "garbage.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\site-packages\\zmq\\utils\\garbage.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 51,
                        "content": "key = struct.unpack(fmt, msg)[0]"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "make_ssl_certs.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\test\\make_ssl_certs.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 228,
                        "content": "cert, key = make_cert_key('localhost', ext='req_x509_extensions_simple')"
                    },
                    {
                        "line_number": 246,
                        "content": "cert, key = make_cert_key('fakehostname', ext='req_x509_extensions_simple')"
                    },
                    {
                        "line_number": 251,
                        "content": "cert, key = make_cert_key('localhost', sign=True)"
                    },
                    {
                        "line_number": 256,
                        "content": "cert, key = make_cert_key('fakehostname', sign=True)"
                    },
                    {
                        "line_number": 262,
                        "content": "'localhost-ecc', sign=True, key='param:secp384r1.pem'"
                    },
                    {
                        "line_number": 282,
                        "content": "cert, key = make_cert_key('allsans', sign=True, extra_san='\\n'.join(extra_san))"
                    },
                    {
                        "line_number": 299,
                        "content": "cert, key = make_cert_key('idnsans', sign=True, extra_san='\\n'.join(extra_san))"
                    },
                    {
                        "line_number": 304,
                        "content": "cert, key = make_cert_key('nosan', sign=True, ext='req_x509_extensions_nosan')"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "make_ssl_certs.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\test\\make_ssl_certs.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 228,
                        "content": "cert, key = make_cert_key('localhost', ext='req_x509_extensions_simple')"
                    },
                    {
                        "line_number": 251,
                        "content": "cert, key = make_cert_key('localhost', sign=True)"
                    },
                    {
                        "line_number": 304,
                        "content": "cert, key = make_cert_key('nosan', sign=True, ext='req_x509_extensions_nosan')"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "pythoninfo.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\test\\pythoninfo.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 599,
                        "content": "key = getattr(resource, name)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_builtin.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\test\\test_builtin.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 1050,
                        "content": "self.assertEqual(max((1,), key=neg), 1)     # one elem iterable"
                    },
                    {
                        "line_number": 1052,
                        "content": "self.assertEqual(max(1, 2, key=neg), 1)     # two elems"
                    },
                    {
                        "line_number": 1109,
                        "content": "self.assertEqual(min((1,), key=neg), 1)     # one elem iterable"
                    },
                    {
                        "line_number": 1111,
                        "content": "self.assertEqual(min(1, 2, key=neg), 2)     # two elems"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_context.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\test\\test_context.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 805,
                        "content": "key = HashKey(i, str(i))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_datetime.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\test\\test_datetime.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 37,
                        "content": "test_classes = sorted(set(test_classes), key=lambda cls: cls.__qualname__)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_dbm_gnu.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\test\\test_dbm_gnu.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 47,
                        "content": "key = self.g.firstkey()"
                    },
                    {
                        "line_number": 51,
                        "content": "key = self.g.nextkey(key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_dtrace.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\test\\test_dtrace.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 32,
                        "content": "result.sort(key=lambda row: int(row[0]))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_functools.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\test\\test_functools.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 868,
                        "content": "key = self.cmp_to_key(cmp1)"
                    },
                    {
                        "line_number": 875,
                        "content": "key = self.cmp_to_key(cmp2)"
                    },
                    {
                        "line_number": 884,
                        "content": "key = self.cmp_to_key(mycmp=cmp1)"
                    },
                    {
                        "line_number": 892,
                        "content": "key = self.cmp_to_key()             # too few args"
                    },
                    {
                        "line_number": 894,
                        "content": "key = self.cmp_to_key(cmp1, None)   # too many args"
                    },
                    {
                        "line_number": 895,
                        "content": "key = self.cmp_to_key(cmp1)"
                    },
                    {
                        "line_number": 904,
                        "content": "key = self.cmp_to_key(cmp1)"
                    },
                    {
                        "line_number": 919,
                        "content": "key = self.cmp_to_key(mycmp=cmp1)"
                    },
                    {
                        "line_number": 925,
                        "content": "self.assertEqual(sorted(range(5), key=self.cmp_to_key(mycmp)),"
                    },
                    {
                        "line_number": 933,
                        "content": "values = sorted(values, key=self.cmp_to_key(mycmp))"
                    },
                    {
                        "line_number": 940,
                        "content": "key = self.cmp_to_key(mycmp)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_grammar.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\test\\test_grammar.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1620,
                        "content": "L.sort(key=lambda x: (type(x).__name__, x))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_hashlib.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\test\\test_hashlib.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 615,
                        "content": "key = b'a' * (key_size + 1)"
                    },
                    {
                        "line_number": 688,
                        "content": "keyed = constructor(indata, key=key, digest_size=outlen)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_hashlib.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\test\\test_hashlib.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 226,
                        "content": "hashlib.md5(usedforsecurity=True)"
                    },
                    {
                        "line_number": 237,
                        "content": "hashlib.md5(usedforsecurity=False)"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "test_hashlib.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\test\\test_hashlib.py",
                "vulnerability": "SHA-1",
                "lines": [
                    {
                        "line_number": 871,
                        "content": "hasher = hashlib.sha1()"
                    },
                    {
                        "line_number": 875,
                        "content": "expected_hash = hashlib.sha1(data*num_threads).hexdigest()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collisions."
            },
            {
                "language": "Python",
                "filename": "test_hashlib.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\test\\test_hashlib.py",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 848,
                        "content": "m = hashlib.sha256()"
                    },
                    {
                        "line_number": 857,
                        "content": "m = hashlib.sha256(b'1' + b'#' * gil_minsize + b'1')"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Python",
                "filename": "test_hmac.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\test\\test_hmac.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 271,
                        "content": "hmactest(key = bytes(x for x in range(0x01, 0x19+1)),"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_hmac.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\test\\test_hmac.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 271,
                        "content": "hmactest(key = bytes(x for x in range(0x01, 0x19+1)),"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_hmac.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\test\\test_hmac.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 132,
                        "content": "hashfunc=hashlib.md5,"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "test_hmac.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\test\\test_hmac.py",
                "vulnerability": "SHA-1",
                "lines": [
                    {
                        "line_number": 172,
                        "content": "hashfunc=hashlib.sha1,"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collisions."
            },
            {
                "language": "Python",
                "filename": "test_hmac.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\test\\test_hmac.py",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 225,
                        "content": "hashlib.sha256: 'b0344c61d8db38535ca8afceaf0bf12b'"
                    },
                    {
                        "line_number": 242,
                        "content": "hashlib.sha256: '5bdcc146bf60754e6a042426089575c7'"
                    },
                    {
                        "line_number": 259,
                        "content": "hashlib.sha256: '773ea91e36800e46854db8ebd09181a7'"
                    },
                    {
                        "line_number": 276,
                        "content": "hashlib.sha256: '82558a389a443c0ea4cc819899f2083a'"
                    },
                    {
                        "line_number": 294,
                        "content": "hashlib.sha256: '60e431591ee0b67f0d8a26aacbf5b77f'"
                    },
                    {
                        "line_number": 315,
                        "content": "hashlib.sha256: '9b09ffa71b942fcb27635fbcd5b0e944'"
                    },
                    {
                        "line_number": 332,
                        "content": "self._rfc4231_test_cases(hashlib.sha256, 'sha256', 32, 64)"
                    },
                    {
                        "line_number": 347,
                        "content": "self._x = hashlib.sha256(*args)"
                    },
                    {
                        "line_number": 435,
                        "content": "h = hmac.HMAC(b\"key\", b\"\", hashlib.sha256)"
                    },
                    {
                        "line_number": 437,
                        "content": "self.fail(\"Constructor call with hashlib.sha256 raised exception.\")"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Python",
                "filename": "test_hmac.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\test\\test_hmac.py",
                "vulnerability": "SHA-224",
                "lines": [
                    {
                        "line_number": 223,
                        "content": "hashlib.sha224: '896fb1128abbdf196832107cd49df33f'"
                    },
                    {
                        "line_number": 240,
                        "content": "hashlib.sha224: 'a30e01098bc6dbbf45690f3a7e9e6d0f'"
                    },
                    {
                        "line_number": 257,
                        "content": "hashlib.sha224: '7fb3cb3588c6c1f6ffa9694d7d6ad264'"
                    },
                    {
                        "line_number": 274,
                        "content": "hashlib.sha224: '6c11506874013cac6a2abc1bb382627c'"
                    },
                    {
                        "line_number": 292,
                        "content": "hashlib.sha224: '95e9a0db962095adaebe9b2d6f0dbce2'"
                    },
                    {
                        "line_number": 313,
                        "content": "hashlib.sha224: '3a854166ac5d9f023f54d517d0b39dbd'"
                    },
                    {
                        "line_number": 328,
                        "content": "self._rfc4231_test_cases(hashlib.sha224, 'sha224', 28, 64)"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-224 provides reduced security compared to larger variants."
            },
            {
                "language": "Python",
                "filename": "test_http_cookies.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\test\\test_http_cookies.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 458,
                        "content": "'<Morsel: key=coded_val; Comment=foo; Domain=example.com; '"
                    },
                    {
                        "line_number": 461,
                        "content": "'Set-Cookie: key=coded_val; Comment=foo; Domain=example.com; '"
                    },
                    {
                        "line_number": 466,
                        "content": "'<Morsel: key=coded_val; Comment=foo; Domain=example.com; '"
                    },
                    {
                        "line_number": 469,
                        "content": "'Set-Cookie: key=coded_val; Comment=foo; Domain=example.com; '"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_mailbox.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\test\\test_mailbox.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 150,
                        "content": "key = self._box.add(f)"
                    },
                    {
                        "line_number": 158,
                        "content": "key = self._box.add(f)"
                    },
                    {
                        "line_number": 167,
                        "content": "key = self._box.add(f)"
                    },
                    {
                        "line_number": 173,
                        "content": "key = self._box.add(io.StringIO(self._template % \"0\"))"
                    },
                    {
                        "line_number": 1020,
                        "content": "key = self._box.add('From foo@bar blah\\nFrom: foo\\n\\n0\\n')"
                    },
                    {
                        "line_number": 1026,
                        "content": "key = self._box.add(b'From foo@bar blah\\nFrom: foo\\n\\n0\\n')"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_mailbox.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\test\\test_mailbox.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 1020,
                        "content": "key = self._box.add('From foo@bar blah\\nFrom: foo\\n\\n0\\n')"
                    },
                    {
                        "line_number": 1026,
                        "content": "key = self._box.add(b'From foo@bar blah\\nFrom: foo\\n\\n0\\n')"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_mailcap.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\test\\test_mailcap.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 191,
                        "content": "#   keyword args: key=\"view\", filename=\"/dev/null\", plist=[]"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_os.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\test\\test_os.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 3311,
                        "content": "cls.key = threading_helper.threading_setup()"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_pydoc.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\test\\test_pydoc.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1369,
                        "content": "(\"get?key=\", \"Pydoc: Index of Modules\"),"
                    },
                    {
                        "line_number": 1374,
                        "content": "(\"get?key=pydoc\", \"Pydoc: module pydoc\"),"
                    },
                    {
                        "line_number": 1375,
                        "content": "(\"search?key=pydoc\", \"Pydoc: Search Results\"),"
                    },
                    {
                        "line_number": 1377,
                        "content": "(\"topic?key=STRINGS\", \"Pydoc: TOPIC STRINGS\"),"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_pydoc.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\test\\test_pydoc.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 1377,
                        "content": "(\"topic?key=STRINGS\", \"Pydoc: TOPIC STRINGS\"),"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_selectors.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\test\\test_selectors.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 66,
                        "content": "key = s.register(rd, selectors.EVENT_READ, \"data\")"
                    },
                    {
                        "line_number": 148,
                        "content": "key = s.register(rd, selectors.EVENT_READ)"
                    },
                    {
                        "line_number": 161,
                        "content": "key = s.register(rd, selectors.EVENT_READ, d1)"
                    },
                    {
                        "line_number": 229,
                        "content": "key = s.register(rd, selectors.EVENT_READ, \"data\")"
                    },
                    {
                        "line_number": 245,
                        "content": "key = s.register(rd, selectors.EVENT_READ, \"data\")"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_selectors.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\test\\test_selectors.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 66,
                        "content": "key = s.register(rd, selectors.EVENT_READ, \"data\")"
                    },
                    {
                        "line_number": 148,
                        "content": "key = s.register(rd, selectors.EVENT_READ)"
                    },
                    {
                        "line_number": 161,
                        "content": "key = s.register(rd, selectors.EVENT_READ, d1)"
                    },
                    {
                        "line_number": 229,
                        "content": "key = s.register(rd, selectors.EVENT_READ, \"data\")"
                    },
                    {
                        "line_number": 245,
                        "content": "key = s.register(rd, selectors.EVENT_READ, \"data\")"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_set.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\test\\test_set.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 438,
                        "content": "key = self.thetype([3, 4])"
                    },
                    {
                        "line_number": 1676,
                        "content": "self.assertEqual(sorted(cons(g(s)), key=repr), sorted(g(s), key=repr))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_set.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\test\\test_set.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 1676,
                        "content": "self.assertEqual(sorted(cons(g(s)), key=repr), sorted(g(s), key=repr))"
                    },
                    {
                        "line_number": 1691,
                        "content": "self.assertEqual(sorted(actual, key=repr), sorted(expected, key=repr))"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_smtplib.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\test\\test_smtplib.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 1196,
                        "content": "hashlib.md5()"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "test_socket.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\test\\test_socket.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 6265,
                        "content": "key = bytes.fromhex('06a9214036b8a15b512e03d534120006')"
                    },
                    {
                        "line_number": 6306,
                        "content": "key = bytes.fromhex('c939cc13397c1d37de6ae0e1cb7c423c')"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_sort.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\test\\test_sort.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 259,
                        "content": "copy2.sort(key=lambda x: x[0], reverse=True)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_sort.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\test\\test_sort.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 189,
                        "content": "data.sort(key=lambda t: t[0])   # sort on the random first field"
                    },
                    {
                        "line_number": 259,
                        "content": "copy2.sort(key=lambda x: x[0], reverse=True)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_stringprep.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\test\\test_stringprep.py",
                "vulnerability": "SHA-1",
                "lines": [
                    {
                        "line_number": 87,
                        "content": "#     h = hashlib.sha1()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collisions."
            },
            {
                "language": "Python",
                "filename": "test_thread.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\test\\test_thread.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 36,
                        "content": "key = threading_helper.threading_setup()"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_unicodedata.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\test\\test_unicodedata.py",
                "vulnerability": "SHA-1",
                "lines": [
                    {
                        "line_number": 25,
                        "content": "h = hashlib.sha1()"
                    },
                    {
                        "line_number": 79,
                        "content": "h = hashlib.sha1()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collisions."
            },
            {
                "language": "Python",
                "filename": "test_urllib2_localnet.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\test\\test_urllib2_localnet.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 104,
                        "content": "nonce = hashlib.md5(str(self._request_num).encode(\"ascii\")).hexdigest()"
                    },
                    {
                        "line_number": 132,
                        "content": "HA1 = hashlib.md5(HA1_str.encode(\"ascii\")).hexdigest()"
                    },
                    {
                        "line_number": 134,
                        "content": "HA2 = hashlib.md5(HA2_str.encode(\"ascii\")).hexdigest()"
                    },
                    {
                        "line_number": 139,
                        "content": "response = hashlib.md5(response_str.encode(\"ascii\")).hexdigest()"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "test_winreg.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\test\\test_winreg.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 124,
                        "content": "key = OpenKey(root_key, test_key_name)"
                    },
                    {
                        "line_number": 159,
                        "content": "key = OpenKey(root_key, test_key_name, 0, KEY_ALL_ACCESS)"
                    },
                    {
                        "line_number": 183,
                        "content": "key = OpenKey(root_key, test_key_name)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_xml_etree.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\test\\test_xml_etree.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 338,
                        "content": "self.serialize_check(element, '<tag key=\"value\" />') # 1"
                    },
                    {
                        "line_number": 348,
                        "content": "self.serialize_check(element, '<tag key=\"value\" />') # 5"
                    },
                    {
                        "line_number": 352,
                        "content": "self.serialize_check(element, '<tag key=\"value\" />') # 6"
                    },
                    {
                        "line_number": 753,
                        "content": "<a:element key='value'>text</a:element>"
                    },
                    {
                        "line_number": 1219,
                        "content": "'<ns0:tag xmlns:ns0=\"uri\" ns0:key=\"value\" />') # 2.1"
                    },
                    {
                        "line_number": 1224,
                        "content": "'<ns0:tag xmlns:ns0=\"uri\" ns0:key=\"value\" />') # 2.2"
                    },
                    {
                        "line_number": 3679,
                        "content": "\"<tag key=\\\"&lt;&amp;&quot;'&gt;\\\" />\" % enc).encode(enc))"
                    },
                    {
                        "line_number": 3695,
                        "content": "self.assertEqual(serialize(elem), '<tag key=\"\\xe5\\xf6\\xf6&lt;&gt;\" />')"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_xml_etree.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\test\\test_xml_etree.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 493,
                        "content": "'   <element key=\"value\">text</element>\\n'"
                    },
                    {
                        "line_number": 515,
                        "content": "'   <element key=\"value\">text</element>\\n'"
                    },
                    {
                        "line_number": 525,
                        "content": "'   <element key=\"value\">text</element>\\n'"
                    },
                    {
                        "line_number": 1431,
                        "content": "self._feed(parser, \"<root>\\n  <element key='value'>text</element>\\n\")"
                    },
                    {
                        "line_number": 1786,
                        "content": "'   <element key=\"value\">text</element>\\n'"
                    },
                    {
                        "line_number": 3699,
                        "content": "b'<tag key=\"&#229;&#246;&#246;&lt;&gt;\" />')"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "_test_embed_set_config.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\test\\_test_embed_set_config.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 145,
                        "content": "with self.subTest(key=key, value=value, exc_type=exc_type):"
                    },
                    {
                        "line_number": 160,
                        "content": "with self.subTest(sys=sys_attr, key=key, value=value):"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "threading_helper.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\test\\support\\threading_helper.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 60,
                        "content": "key = threading_setup()"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_windows.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\test\\test_importlib\\test_windows.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 73,
                        "content": "key = os.path.dirname(key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_zoneinfo.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\test\\test_zoneinfo\\test_zoneinfo.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 170,
                        "content": "key = next(iter(self.zones()))"
                    },
                    {
                        "line_number": 192,
                        "content": "key = next(iter(self.zones()))"
                    },
                    {
                        "line_number": 254,
                        "content": "key = next(iter(self.zones()))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "request.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\urllib\\request.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1606,
                        "content": "key = user, host, port, '/'.join(dirs), timeout"
                    },
                    {
                        "line_number": 2066,
                        "content": "key = user, host, port, '/'.join(dirs)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "request.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\urllib\\request.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 1422,
                        "content": "\"\"\"Parse list of key=value strings where keys are not duplicated.\"\"\""
                    },
                    {
                        "line_number": 2329,
                        "content": "key = realm + '@' + host.lower()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "request.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\urllib\\request.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 1211,
                        "content": "H = lambda x: hashlib.md5(x.encode(\"ascii\")).hexdigest()"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "request.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\urllib\\request.py",
                "vulnerability": "SHA-1",
                "lines": [
                    {
                        "line_number": 1143,
                        "content": "dig = hashlib.sha1(b).hexdigest()"
                    },
                    {
                        "line_number": 1213,
                        "content": "H = lambda x: hashlib.sha1(x.encode(\"ascii\")).hexdigest()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collisions."
            },
            {
                "language": "Python",
                "filename": "minidom.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\xml\\dom\\minidom.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1584,
                        "content": "key = element.tagName"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "ElementTree.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\xml\\etree\\ElementTree.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 893,
                        "content": "key=lambda x: x[1]):  # sort on prefix"
                    },
                    {
                        "line_number": 949,
                        "content": "key=lambda x: x[1]):  # sort on prefix"
                    },
                    {
                        "line_number": 1954,
                        "content": "qnames, key=lambda n: n.split('}', 1))}"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "_tzpath.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\zoneinfo\\_tzpath.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 152,
                        "content": "key = os.path.relpath(fpath, start=tz_root)"
                    },
                    {
                        "line_number": 154,
                        "content": "key = key.replace(os.sep, \"/\")"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "_tzpath.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Lib\\zoneinfo\\_tzpath.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 152,
                        "content": "key = os.path.relpath(fpath, start=tz_root)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "analyze_dxp.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Tools\\scripts\\analyze_dxp.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 92,
                        "content": "result.sort(key=operator.itemgetter(2), reverse=True)"
                    },
                    {
                        "line_number": 112,
                        "content": "result.sort(key=operator.itemgetter(2), reverse=True)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "finddiv.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Tools\\scripts\\finddiv.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 81,
                        "content": "files.sort(key=os.path.normcase)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "texi2html.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python310\\Tools\\scripts\\texi2html.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1912,
                        "content": "key = self.codeexpand(key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "antigravity.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python38-32\\Lib\\antigravity.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 15,
                        "content": "h = hashlib.md5(datedow).hexdigest()"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "configparser.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python38-32\\Lib\\configparser.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 748,
                        "content": "key = self.optionxform(str(key))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "configparser.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python38-32\\Lib\\configparser.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 748,
                        "content": "key = self.optionxform(str(key))"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "enum.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python38-32\\Lib\\enum.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 79,
                        "content": "if key == '_generate_next_value_':"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "functools.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python38-32\\Lib\\functools.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 560,
                        "content": "key = make_key(args, kwds, typed)"
                    },
                    {
                        "line_number": 575,
                        "content": "key = make_key(args, kwds, typed)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "gettext.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python38-32\\Lib\\gettext.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 594,
                        "content": "key = (class_, os.path.abspath(mofile))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "gettext.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python38-32\\Lib\\gettext.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 594,
                        "content": "key = (class_, os.path.abspath(mofile))"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "hashlib.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python38-32\\Lib\\hashlib.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 43,
                        "content": ">>> m = hashlib.md5()"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "hashlib.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python38-32\\Lib\\hashlib.py",
                "vulnerability": "SHA-224",
                "lines": [
                    {
                        "line_number": 51,
                        "content": ">>> hashlib.sha224(b\"Nobody inspects the spammish repetition\").hexdigest()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-224 provides reduced security compared to larger variants."
            },
            {
                "language": "Python",
                "filename": "hmac.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python38-32\\Lib\\hmac.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 82,
                        "content": "key = self.digest_cons(key).digest()"
                    },
                    {
                        "line_number": 180,
                        "content": "key = digest_cons(key).digest()"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "hmac.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python38-32\\Lib\\hmac.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 84,
                        "content": "key = key.ljust(blocksize, b'\\0')"
                    },
                    {
                        "line_number": 180,
                        "content": "key = digest_cons(key).digest()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "mailbox.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python38-32\\Lib\\mailbox.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 1250,
                        "content": "key = _singlefileMailbox.add(self, message)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "mailcap.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python38-32\\Lib\\mailcap.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 104,
                        "content": "key = '/'.join(types).lower()"
                    },
                    {
                        "line_number": 159,
                        "content": "def findmatch(caps, MIMEtype, key='view', filename=\"/dev/null\", plist=[]):"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "os.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python38-32\\Lib\\os.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 679,
                        "content": "key = self.encodekey(key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "pickle.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python38-32\\Lib\\pickle.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 1559,
                        "content": "key = _inverted_registry.get(code)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "poplib.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python38-32\\Lib\\poplib.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 333,
                        "content": "digest = hashlib.md5(digest).hexdigest()"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "pyclbr.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python38-32\\Lib\\pyclbr.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 381,
                        "content": "objs = sorted(tree.values(), key=lineno_key, reverse=True)"
                    },
                    {
                        "line_number": 393,
                        "content": "key=lineno_key, reverse=True)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "pydoc.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python38-32\\Lib\\pydoc.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 2119,
                        "content": "def run(self, callback, key=None, completer=None, onerror=None):"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "pydoc.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python38-32\\Lib\\pydoc.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 2368,
                        "content": "return '<a href=\"getfile?key=%s\">%s</a>' % (url, path)"
                    },
                    {
                        "line_number": 2452,
                        "content": "'key = %s' % key, '#ffffff', '#ee77aa', '<br>'.join(results))"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "selectors.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python38-32\\Lib\\selectors.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 249,
                        "content": "key = self._fd_to_key.pop(self._fileobj_lookup(fileobj))"
                    },
                    {
                        "line_number": 256,
                        "content": "key = self._fd_to_key[self._fileobj_lookup(fileobj)]"
                    },
                    {
                        "line_number": 299,
                        "content": "key = super().register(fileobj, events, data)"
                    },
                    {
                        "line_number": 352,
                        "content": "key = super().register(fileobj, events, data)"
                    },
                    {
                        "line_number": 377,
                        "content": "key = self._fd_to_key[self._fileobj_lookup(fileobj)]"
                    },
                    {
                        "line_number": 517,
                        "content": "key = super().register(fileobj, events, data)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "selectors.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python38-32\\Lib\\selectors.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 249,
                        "content": "key = self._fd_to_key.pop(self._fileobj_lookup(fileobj))"
                    },
                    {
                        "line_number": 261,
                        "content": "key = self.register(fileobj, events, data)"
                    },
                    {
                        "line_number": 299,
                        "content": "key = super().register(fileobj, events, data)"
                    },
                    {
                        "line_number": 352,
                        "content": "key = super().register(fileobj, events, data)"
                    },
                    {
                        "line_number": 517,
                        "content": "key = super().register(fileobj, events, data)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "symtable.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python38-32\\Lib\\symtable.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 28,
                        "content": "key = table, filename"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "tarfile.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python38-32\\Lib\\tarfile.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 2028,
                        "content": "directories.sort(key=lambda a: a.name)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "trace.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python38-32\\Lib\\trace.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 571,
                        "content": "key = filename, lineno"
                    },
                    {
                        "line_number": 598,
                        "content": "key = filename, lineno"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "warnings.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python38-32\\Lib\\warnings.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 346,
                        "content": "key = (text, category, lineno)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "warnings.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python38-32\\Lib\\warnings.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 346,
                        "content": "key = (text, category, lineno)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "weakref.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python38-32\\Lib\\weakref.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 614,
                        "content": "L.sort(key=lambda item:item[1].index)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "selector_events.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python38-32\\Lib\\asyncio\\selector_events.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 36,
                        "content": "key = selector.get_key(fd)"
                    },
                    {
                        "line_number": 259,
                        "content": "key = self._selector.get_key(fd)"
                    },
                    {
                        "line_number": 274,
                        "content": "key = self._selector.get_key(fd)"
                    },
                    {
                        "line_number": 295,
                        "content": "key = self._selector.get_key(fd)"
                    },
                    {
                        "line_number": 311,
                        "content": "key = self._selector.get_key(fd)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "selector_events.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python38-32\\Lib\\asyncio\\selector_events.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 259,
                        "content": "key = self._selector.get_key(fd)"
                    },
                    {
                        "line_number": 274,
                        "content": "key = self._selector.get_key(fd)"
                    },
                    {
                        "line_number": 295,
                        "content": "key = self._selector.get_key(fd)"
                    },
                    {
                        "line_number": 311,
                        "content": "key = self._selector.get_key(fd)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "__init__.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python38-32\\Lib\\collections\\__init__.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 118,
                        "content": "link.prev, link.next, link.key = last, root, key"
                    },
                    {
                        "line_number": 569,
                        "content": "return sorted(self.items(), key=_itemgetter(1), reverse=True)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "__init__.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python38-32\\Lib\\collections\\__init__.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 569,
                        "content": "return sorted(self.items(), key=_itemgetter(1), reverse=True)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "dumb.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python38-32\\Lib\\dbm\\dumb.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 145,
                        "content": "key = key.encode('utf-8')"
                    },
                    {
                        "line_number": 190,
                        "content": "key = key.encode('utf-8')"
                    },
                    {
                        "line_number": 227,
                        "content": "key = key.encode('utf-8')"
                    },
                    {
                        "line_number": 250,
                        "content": "key = key.encode('utf-8')"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "msvc9compiler.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python38-32\\Lib\\distutils\\msvc9compiler.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 159,
                        "content": "key = RegEnumKey(h, 0)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "msvccompiler.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python38-32\\Lib\\distutils\\msvccompiler.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 138,
                        "content": "key = RegEnumKey(h, 0)"
                    },
                    {
                        "line_number": 598,
                        "content": "key = (r\"%s\\%0.1f\\VC\\VC_OBJECTS_PLATFORM_INFO\\Win32\\Directories\""
                    },
                    {
                        "line_number": 601,
                        "content": "key = (r\"%s\\6.0\\Build System\\Components\\Platforms\""
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "msvccompiler.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python38-32\\Lib\\distutils\\msvccompiler.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 601,
                        "content": "key = (r\"%s\\6.0\\Build System\\Components\\Platforms\""
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "_msvccompiler.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python38-32\\Lib\\distutils\\_msvccompiler.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 32,
                        "content": "key = winreg.OpenKeyEx("
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "upload.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python38-32\\Lib\\distutils\\command\\upload.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 105,
                        "content": "'md5_digest': hashlib.md5(content).hexdigest(),"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "cookiejar.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python38-32\\Lib\\http\\cookiejar.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1304,
                        "content": "cookies.sort(key=lambda a: len(a.path), reverse=True)"
                    },
                    {
                        "line_number": 1642,
                        "content": "key = ns_cookie.domain, ns_cookie.path, ns_cookie.name"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "cookies.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python38-32\\Lib\\http\\cookies.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 407,
                        "content": "if key == \"expires\" and isinstance(value, int):"
                    },
                    {
                        "line_number": 409,
                        "content": "elif key == \"max-age\" and isinstance(value, int):"
                    },
                    {
                        "line_number": 411,
                        "content": "elif key == \"comment\" and isinstance(value, str):"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "configdialog.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python38-32\\Lib\\idlelib\\configdialog.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1710,
                        "content": "key = ' '.join(keyset[bind_name])"
                    },
                    {
                        "line_number": 1715,
                        "content": "key = changes['keys'][keyset_name][bind_name]"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "config_key.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python38-32\\Lib\\idlelib\\config_key.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 37,
                        "content": "key = mapping.get(key, key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "debugobj.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python38-32\\Lib\\idlelib\\debugobj.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 54,
                        "content": "lambda value, key=key, object=self.object:"
                    },
                    {
                        "line_number": 88,
                        "content": "def setfunction(value, key=key, object=self.object):"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "filelist.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python38-32\\Lib\\idlelib\\filelist.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 28,
                        "content": "key = os.path.normcase(filename)"
                    },
                    {
                        "line_number": 61,
                        "content": "key = self.inversedict[edit]"
                    },
                    {
                        "line_number": 74,
                        "content": "key = self.inversedict[edit]"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "stackviewer.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python38-32\\Lib\\idlelib\\stackviewer.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 120,
                        "content": "def setfunction(value, key=key, object=self.object):"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "tree.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python38-32\\Lib\\idlelib\\tree.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 429,
                        "content": "names.sort(key = os.path.normcase)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_config.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python38-32\\Lib\\idlelib\\idle_test\\test_config.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 458,
                        "content": "##        key = ['<Option-Key-2>'] if sys.platform == 'darwin' else ['<Alt-Key-2>']"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "topics.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python38-32\\Lib\\pydoc_data\\topics.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 13176,
                        "content": "'      \"key=str.lower\"). The key corresponding to each item in '"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "cache.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python38-32\\Lib\\site-packages\\pip\\_internal\\cache.py",
                "vulnerability": "SHA-224",
                "lines": [
                    {
                        "line_number": 63,
                        "content": "hashed = hashlib.sha224(key_url.encode()).hexdigest()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-224 provides reduced security compared to larger variants."
            },
            {
                "language": "Python",
                "filename": "configuration.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python38-32\\Lib\\site-packages\\pip\\_internal\\configuration.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 352,
                        "content": "key = section + \".\" + _normalize_name(name)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "wheel.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python38-32\\Lib\\site-packages\\pip\\_internal\\wheel.py",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 72,
                        "content": "\"\"\"Return (hash, length) for path using hashlib.sha256()\"\"\""
                    },
                    {
                        "line_number": 73,
                        "content": "h = hashlib.sha256()"
                    },
                    {
                        "line_number": 84,
                        "content": "\"\"\"Return (encoded_digest, length) for path using hashlib.sha256()\"\"\""
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Python",
                "filename": "parser.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python38-32\\Lib\\site-packages\\pip\\_internal\\cli\\parser.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 167,
                        "content": "section, key = section_key.split(\".\", 1)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "configuration.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python38-32\\Lib\\site-packages\\pip\\_internal\\commands\\configuration.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 191,
                        "content": "key = self._get_n_args(args, \"get [name]\", n=1)"
                    },
                    {
                        "line_number": 203,
                        "content": "key = self._get_n_args(args, \"unset [name]\", n=1)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "configuration.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python38-32\\Lib\\site-packages\\pip\\_internal\\commands\\configuration.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 191,
                        "content": "key = self._get_n_args(args, \"get [name]\", n=1)"
                    },
                    {
                        "line_number": 203,
                        "content": "key = self._get_n_args(args, \"unset [name]\", n=1)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "link.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python38-32\\Lib\\site-packages\\pip\\_internal\\models\\link.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 60,
                        "content": "super(Link, self).__init__(key=url, defining_class=Link)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "freeze.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python38-32\\Lib\\site-packages\\pip\\_internal\\operations\\freeze.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 165,
                        "content": "installations.values(), key=lambda x: x.name.lower()):"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "req_set.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python38-32\\Lib\\site-packages\\pip\\_internal\\req\\req_set.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 40,
                        "content": "reqs.sort(key=lambda req: req.name.lower())"
                    },
                    {
                        "line_number": 46,
                        "content": "reqs.sort(key=lambda req: req.name.lower())"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "req_tracker.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python38-32\\Lib\\site-packages\\pip\\_internal\\req\\req_tracker.py",
                "vulnerability": "SHA-224",
                "lines": [
                    {
                        "line_number": 51,
                        "content": "hashed = hashlib.sha224(link.url_without_fragment.encode()).hexdigest()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-224 provides reduced security compared to larger variants."
            },
            {
                "language": "Python",
                "filename": "appdirs.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python38-32\\Lib\\site-packages\\pip\\_internal\\utils\\appdirs.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 211,
                        "content": "key = _winreg.OpenKey("
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "appdirs.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python38-32\\Lib\\site-packages\\pip\\_vendor\\appdirs.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 471,
                        "content": "key = _winreg.OpenKey("
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "file_cache.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python38-32\\Lib\\site-packages\\pip\\_vendor\\cachecontrol\\caches\\file_cache.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 145,
                        "content": "key = CacheController.cache_url(url)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "file_cache.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python38-32\\Lib\\site-packages\\pip\\_vendor\\cachecontrol\\caches\\file_cache.py",
                "vulnerability": "SHA-224",
                "lines": [
                    {
                        "line_number": 99,
                        "content": "return hashlib.sha224(x.encode()).hexdigest()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-224 provides reduced security compared to larger variants."
            },
            {
                "language": "Python",
                "filename": "compat.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python38-32\\Lib\\site-packages\\pip\\_vendor\\distlib\\compat.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 692,
                        "content": "link_prev, link_next, key = self.__map.pop(key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "database.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python38-32\\Lib\\site-packages\\pip\\_vendor\\distlib\\database.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 343,
                        "content": "self.key = self.name.lower()    # for case-insensitive comparisons"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "database.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python38-32\\Lib\\site-packages\\pip\\_vendor\\distlib\\database.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 343,
                        "content": "self.key = self.name.lower()    # for case-insensitive comparisons"
                    },
                    {
                        "line_number": 869,
                        "content": "s.key = n.lower()   # for case-insensitive comparisons"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "database.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python38-32\\Lib\\site-packages\\pip\\_vendor\\distlib\\database.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 519,
                        "content": "hasher = hashlib.md5"
                    },
                    {
                        "line_number": 1017,
                        "content": "return hashlib.md5(content).hexdigest()"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "index.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python38-32\\Lib\\site-packages\\pip\\_vendor\\distlib\\index.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 276,
                        "content": "md5_digest = hashlib.md5(file_data).hexdigest()"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "index.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python38-32\\Lib\\site-packages\\pip\\_vendor\\distlib\\index.py",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 277,
                        "content": "sha256_digest = hashlib.sha256(file_data).hexdigest()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Python",
                "filename": "locators.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python38-32\\Lib\\site-packages\\pip\\_vendor\\distlib\\locators.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 575,
                        "content": "result = sorted(result, key=lambda t: t[0], reverse=True)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "locators.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python38-32\\Lib\\site-packages\\pip\\_vendor\\distlib\\locators.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 575,
                        "content": "result = sorted(result, key=lambda t: t[0], reverse=True)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "version.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python38-32\\Lib\\site-packages\\pip\\_vendor\\distlib\\version.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 108,
                        "content": "self.key = self.name.lower()    # for case-insensitive comparisons"
                    },
                    {
                        "line_number": 163,
                        "content": "return self.key == other.key and self._parts == other._parts"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "version.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python38-32\\Lib\\site-packages\\pip\\_vendor\\distlib\\version.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 108,
                        "content": "self.key = self.name.lower()    # for case-insensitive comparisons"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "wheel.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python38-32\\Lib\\site-packages\\pip\\_vendor\\distlib\\wheel.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 376,
                        "content": "if key == 'scripts' and not p.endswith('.exe'):"
                    },
                    {
                        "line_number": 847,
                        "content": "key = '%s/PKG-INFO' % info_dir"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "wheel.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python38-32\\Lib\\site-packages\\pip\\_vendor\\distlib\\wheel.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 847,
                        "content": "key = '%s/PKG-INFO' % info_dir"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "tarfile.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python38-32\\Lib\\site-packages\\pip\\_vendor\\distlib\\_backport\\tarfile.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 2148,
                        "content": "directories.sort(key=lambda a: a.name)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "__init__.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python38-32\\Lib\\site-packages\\pip\\_vendor\\pkg_resources\\__init__.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 2633,
                        "content": "self._key = key = self.project_name.lower()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "auth.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python38-32\\Lib\\site-packages\\pip\\_vendor\\requests\\auth.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 148,
                        "content": "return hashlib.md5(x).hexdigest()"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "auth.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python38-32\\Lib\\site-packages\\pip\\_vendor\\requests\\auth.py",
                "vulnerability": "SHA-1",
                "lines": [
                    {
                        "line_number": 154,
                        "content": "return hashlib.sha1(x).hexdigest()"
                    },
                    {
                        "line_number": 198,
                        "content": "cnonce = (hashlib.sha1(s).hexdigest()[:16])"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collisions."
            },
            {
                "language": "Python",
                "filename": "auth.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python38-32\\Lib\\site-packages\\pip\\_vendor\\requests\\auth.py",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 160,
                        "content": "return hashlib.sha256(x).hexdigest()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Python",
                "filename": "models.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python38-32\\Lib\\site-packages\\pip\\_vendor\\requests\\models.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 912,
                        "content": "key = link.get('rel') or link.get('url')"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "models.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python38-32\\Lib\\site-packages\\pip\\_vendor\\requests\\models.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 912,
                        "content": "key = link.get('rel') or link.get('url')"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "utils.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python38-32\\Lib\\site-packages\\pip\\_vendor\\requests\\utils.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 469,
                        "content": "key = param[:index_of_equals].strip(items_to_strip)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "__init__.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python38-32\\Lib\\site-packages\\pkg_resources\\__init__.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 2642,
                        "content": "self._key = key = self.project_name.lower()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "appdirs.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python38-32\\Lib\\site-packages\\pkg_resources\\_vendor\\appdirs.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 471,
                        "content": "key = _winreg.OpenKey("
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "dist.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python38-32\\Lib\\site-packages\\setuptools\\dist.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 422,
                        "content": "key = pkg_resources.safe_name(str(attrs['name'])).lower()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "msvc.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python38-32\\Lib\\site-packages\\setuptools\\msvc.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 86,
                        "content": "key = VC_BASE % ('', version)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "msvc.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python38-32\\Lib\\site-packages\\setuptools\\msvc.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 93,
                        "content": "key = VC_BASE % ('Wow6432Node\\\\', version)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "egg_info.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python38-32\\Lib\\site-packages\\setuptools\\command\\egg_info.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 237,
                        "content": "if pd is not None and pd.key == self.egg_name.lower():"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "upload.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python38-32\\Lib\\site-packages\\setuptools\\command\\upload.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 86,
                        "content": "'md5_digest': hashlib.md5(content).hexdigest(),"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "make_ssl_certs.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python38-32\\Lib\\test\\make_ssl_certs.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 203,
                        "content": "cert, key = make_cert_key('localhost', ext='req_x509_extensions_simple')"
                    },
                    {
                        "line_number": 221,
                        "content": "cert, key = make_cert_key('fakehostname', ext='req_x509_extensions_simple')"
                    },
                    {
                        "line_number": 226,
                        "content": "cert, key = make_cert_key('localhost', True)"
                    },
                    {
                        "line_number": 231,
                        "content": "cert, key = make_cert_key('fakehostname', True)"
                    },
                    {
                        "line_number": 237,
                        "content": "'localhost-ecc', True, key='param:secp384r1.pem'"
                    },
                    {
                        "line_number": 257,
                        "content": "cert, key = make_cert_key('allsans', extra_san='\\n'.join(extra_san))"
                    },
                    {
                        "line_number": 274,
                        "content": "cert, key = make_cert_key('idnsans', True, extra_san='\\n'.join(extra_san))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "make_ssl_certs.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python38-32\\Lib\\test\\make_ssl_certs.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 203,
                        "content": "cert, key = make_cert_key('localhost', ext='req_x509_extensions_simple')"
                    },
                    {
                        "line_number": 226,
                        "content": "cert, key = make_cert_key('localhost', True)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "pythoninfo.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python38-32\\Lib\\test\\pythoninfo.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 593,
                        "content": "key = getattr(resource, name)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_builtin.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python38-32\\Lib\\test\\test_builtin.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 1021,
                        "content": "self.assertEqual(max((1,), key=neg), 1)     # one elem iterable"
                    },
                    {
                        "line_number": 1023,
                        "content": "self.assertEqual(max(1, 2, key=neg), 1)     # two elems"
                    },
                    {
                        "line_number": 1075,
                        "content": "self.assertEqual(min((1,), key=neg), 1)     # one elem iterable"
                    },
                    {
                        "line_number": 1077,
                        "content": "self.assertEqual(min(1, 2, key=neg), 2)     # two elems"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_context.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python38-32\\Lib\\test\\test_context.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 809,
                        "content": "key = HashKey(i, str(i))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_datetime.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python38-32\\Lib\\test\\test_datetime.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 35,
                        "content": "test_classes = sorted(set(test_classes), key=lambda cls: cls.__qualname__)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_dbm_gnu.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python38-32\\Lib\\test\\test_dbm_gnu.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 40,
                        "content": "key = self.g.firstkey()"
                    },
                    {
                        "line_number": 44,
                        "content": "key = self.g.nextkey(key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_dtrace.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python38-32\\Lib\\test\\test_dtrace.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 32,
                        "content": "result.sort(key=lambda row: int(row[0]))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_functools.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python38-32\\Lib\\test\\test_functools.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 862,
                        "content": "key = self.cmp_to_key(cmp1)"
                    },
                    {
                        "line_number": 869,
                        "content": "key = self.cmp_to_key(cmp2)"
                    },
                    {
                        "line_number": 878,
                        "content": "key = self.cmp_to_key(mycmp=cmp1)"
                    },
                    {
                        "line_number": 886,
                        "content": "key = self.cmp_to_key()             # too few args"
                    },
                    {
                        "line_number": 888,
                        "content": "key = self.cmp_to_key(cmp1, None)   # too many args"
                    },
                    {
                        "line_number": 889,
                        "content": "key = self.cmp_to_key(cmp1)"
                    },
                    {
                        "line_number": 898,
                        "content": "key = self.cmp_to_key(cmp1)"
                    },
                    {
                        "line_number": 913,
                        "content": "key = self.cmp_to_key(mycmp=cmp1)"
                    },
                    {
                        "line_number": 919,
                        "content": "self.assertEqual(sorted(range(5), key=self.cmp_to_key(mycmp)),"
                    },
                    {
                        "line_number": 927,
                        "content": "values = sorted(values, key=self.cmp_to_key(mycmp))"
                    },
                    {
                        "line_number": 934,
                        "content": "key = self.cmp_to_key(mycmp)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_grammar.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python38-32\\Lib\\test\\test_grammar.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1468,
                        "content": "L.sort(key=lambda x: (type(x).__name__, x))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_hashlib.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python38-32\\Lib\\test\\test_hashlib.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 568,
                        "content": "key = b'a' * (key_size + 1)"
                    },
                    {
                        "line_number": 641,
                        "content": "keyed = constructor(indata, key=key, digest_size=outlen)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_hashlib.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python38-32\\Lib\\test\\test_hashlib.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 813,
                        "content": "m = hashlib.md5()"
                    },
                    {
                        "line_number": 819,
                        "content": "m = hashlib.md5(b'x' * gil_minsize)"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "test_hashlib.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python38-32\\Lib\\test\\test_hashlib.py",
                "vulnerability": "SHA-1",
                "lines": [
                    {
                        "line_number": 830,
                        "content": "hasher = hashlib.sha1()"
                    },
                    {
                        "line_number": 834,
                        "content": "expected_hash = hashlib.sha1(data*num_threads).hexdigest()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collisions."
            },
            {
                "language": "Python",
                "filename": "test_hmac.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python38-32\\Lib\\test\\test_hmac.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 220,
                        "content": "hmactest(key = bytes(x for x in range(0x01, 0x19+1)),"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_hmac.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python38-32\\Lib\\test\\test_hmac.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 220,
                        "content": "hmactest(key = bytes(x for x in range(0x01, 0x19+1)),"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_hmac.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python38-32\\Lib\\test\\test_hmac.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 29,
                        "content": "h = hmac.HMAC(key, data, digestmod=hashlib.md5)"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "test_hmac.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python38-32\\Lib\\test\\test_hmac.py",
                "vulnerability": "SHA-1",
                "lines": [
                    {
                        "line_number": 85,
                        "content": "h = hmac.HMAC(key, data, digestmod=hashlib.sha1)"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collisions."
            },
            {
                "language": "Python",
                "filename": "test_hmac.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python38-32\\Lib\\test\\test_hmac.py",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 174,
                        "content": "hashlib.sha256: 'b0344c61d8db38535ca8afceaf0bf12b'"
                    },
                    {
                        "line_number": 191,
                        "content": "hashlib.sha256: '5bdcc146bf60754e6a042426089575c7'"
                    },
                    {
                        "line_number": 208,
                        "content": "hashlib.sha256: '773ea91e36800e46854db8ebd09181a7'"
                    },
                    {
                        "line_number": 225,
                        "content": "hashlib.sha256: '82558a389a443c0ea4cc819899f2083a'"
                    },
                    {
                        "line_number": 243,
                        "content": "hashlib.sha256: '60e431591ee0b67f0d8a26aacbf5b77f'"
                    },
                    {
                        "line_number": 264,
                        "content": "hashlib.sha256: '9b09ffa71b942fcb27635fbcd5b0e944'"
                    },
                    {
                        "line_number": 281,
                        "content": "self._rfc4231_test_cases(hashlib.sha256, 'sha256', 32, 64)"
                    },
                    {
                        "line_number": 296,
                        "content": "self._x = hashlib.sha256(*args)"
                    },
                    {
                        "line_number": 384,
                        "content": "h = hmac.HMAC(b\"key\", b\"\", hashlib.sha256)"
                    },
                    {
                        "line_number": 386,
                        "content": "self.fail(\"Constructor call with hashlib.sha256 raised exception.\")"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Python",
                "filename": "test_hmac.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python38-32\\Lib\\test\\test_hmac.py",
                "vulnerability": "SHA-224",
                "lines": [
                    {
                        "line_number": 172,
                        "content": "hashlib.sha224: '896fb1128abbdf196832107cd49df33f'"
                    },
                    {
                        "line_number": 189,
                        "content": "hashlib.sha224: 'a30e01098bc6dbbf45690f3a7e9e6d0f'"
                    },
                    {
                        "line_number": 206,
                        "content": "hashlib.sha224: '7fb3cb3588c6c1f6ffa9694d7d6ad264'"
                    },
                    {
                        "line_number": 223,
                        "content": "hashlib.sha224: '6c11506874013cac6a2abc1bb382627c'"
                    },
                    {
                        "line_number": 241,
                        "content": "hashlib.sha224: '95e9a0db962095adaebe9b2d6f0dbce2'"
                    },
                    {
                        "line_number": 262,
                        "content": "hashlib.sha224: '3a854166ac5d9f023f54d517d0b39dbd'"
                    },
                    {
                        "line_number": 277,
                        "content": "self._rfc4231_test_cases(hashlib.sha224, 'sha224', 28, 64)"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-224 provides reduced security compared to larger variants."
            },
            {
                "language": "Python",
                "filename": "test_http_cookies.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python38-32\\Lib\\test\\test_http_cookies.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 458,
                        "content": "'<Morsel: key=coded_val; Comment=foo; Domain=example.com; '"
                    },
                    {
                        "line_number": 461,
                        "content": "'Set-Cookie: key=coded_val; Comment=foo; Domain=example.com; '"
                    },
                    {
                        "line_number": 466,
                        "content": "'<Morsel: key=coded_val; Comment=foo; Domain=example.com; '"
                    },
                    {
                        "line_number": 469,
                        "content": "'Set-Cookie: key=coded_val; Comment=foo; Domain=example.com; '"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_mailbox.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python38-32\\Lib\\test\\test_mailbox.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 149,
                        "content": "key = self._box.add(f)"
                    },
                    {
                        "line_number": 157,
                        "content": "key = self._box.add(f)"
                    },
                    {
                        "line_number": 166,
                        "content": "key = self._box.add(f)"
                    },
                    {
                        "line_number": 172,
                        "content": "key = self._box.add(io.StringIO(self._template % \"0\"))"
                    },
                    {
                        "line_number": 1019,
                        "content": "key = self._box.add('From foo@bar blah\\nFrom: foo\\n\\n0\\n')"
                    },
                    {
                        "line_number": 1025,
                        "content": "key = self._box.add(b'From foo@bar blah\\nFrom: foo\\n\\n0\\n')"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_mailbox.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python38-32\\Lib\\test\\test_mailbox.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 1019,
                        "content": "key = self._box.add('From foo@bar blah\\nFrom: foo\\n\\n0\\n')"
                    },
                    {
                        "line_number": 1025,
                        "content": "key = self._box.add(b'From foo@bar blah\\nFrom: foo\\n\\n0\\n')"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_mailcap.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python38-32\\Lib\\test\\test_mailcap.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 189,
                        "content": "#   keyword args: key=\"view\", filename=\"/dev/null\", plist=[]"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_os.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python38-32\\Lib\\test\\test_os.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 3025,
                        "content": "cls.key = support.threading_setup()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_parser.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python38-32\\Lib\\test\\test_parser.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 107,
                        "content": "self.check_expr(\"foo(key=value, *args, **kw)\")"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_pydoc.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python38-32\\Lib\\test\\test_pydoc.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1353,
                        "content": "(\"get?key=\", \"Pydoc: Index of Modules\"),"
                    },
                    {
                        "line_number": 1358,
                        "content": "(\"get?key=pydoc\", \"Pydoc: module pydoc\"),"
                    },
                    {
                        "line_number": 1359,
                        "content": "(\"search?key=pydoc\", \"Pydoc: Search Results\"),"
                    },
                    {
                        "line_number": 1361,
                        "content": "(\"topic?key=STRINGS\", \"Pydoc: TOPIC STRINGS\"),"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_pydoc.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python38-32\\Lib\\test\\test_pydoc.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 1361,
                        "content": "(\"topic?key=STRINGS\", \"Pydoc: TOPIC STRINGS\"),"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_selectors.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python38-32\\Lib\\test\\test_selectors.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 64,
                        "content": "key = s.register(rd, selectors.EVENT_READ, \"data\")"
                    },
                    {
                        "line_number": 146,
                        "content": "key = s.register(rd, selectors.EVENT_READ)"
                    },
                    {
                        "line_number": 159,
                        "content": "key = s.register(rd, selectors.EVENT_READ, d1)"
                    },
                    {
                        "line_number": 227,
                        "content": "key = s.register(rd, selectors.EVENT_READ, \"data\")"
                    },
                    {
                        "line_number": 243,
                        "content": "key = s.register(rd, selectors.EVENT_READ, \"data\")"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_selectors.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python38-32\\Lib\\test\\test_selectors.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 64,
                        "content": "key = s.register(rd, selectors.EVENT_READ, \"data\")"
                    },
                    {
                        "line_number": 146,
                        "content": "key = s.register(rd, selectors.EVENT_READ)"
                    },
                    {
                        "line_number": 159,
                        "content": "key = s.register(rd, selectors.EVENT_READ, d1)"
                    },
                    {
                        "line_number": 227,
                        "content": "key = s.register(rd, selectors.EVENT_READ, \"data\")"
                    },
                    {
                        "line_number": 243,
                        "content": "key = s.register(rd, selectors.EVENT_READ, \"data\")"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_set.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python38-32\\Lib\\test\\test_set.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 451,
                        "content": "key = self.thetype([3, 4])"
                    },
                    {
                        "line_number": 1709,
                        "content": "self.assertEqual(sorted(cons(g(s)), key=repr), sorted(g(s), key=repr))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_set.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python38-32\\Lib\\test\\test_set.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 1709,
                        "content": "self.assertEqual(sorted(cons(g(s)), key=repr), sorted(g(s), key=repr))"
                    },
                    {
                        "line_number": 1724,
                        "content": "self.assertEqual(sorted(actual, key=repr), sorted(expected, key=repr))"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_smtplib.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python38-32\\Lib\\test\\test_smtplib.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 1033,
                        "content": "hashlib.md5()"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "test_socket.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python38-32\\Lib\\test\\test_socket.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 5920,
                        "content": "key = bytes.fromhex('06a9214036b8a15b512e03d534120006')"
                    },
                    {
                        "line_number": 5961,
                        "content": "key = bytes.fromhex('c939cc13397c1d37de6ae0e1cb7c423c')"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_sort.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python38-32\\Lib\\test\\test_sort.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 259,
                        "content": "copy2.sort(key=lambda x: x[0], reverse=True)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_sort.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python38-32\\Lib\\test\\test_sort.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 189,
                        "content": "data.sort(key=lambda t: t[0])   # sort on the random first field"
                    },
                    {
                        "line_number": 259,
                        "content": "copy2.sort(key=lambda x: x[0], reverse=True)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_stringprep.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python38-32\\Lib\\test\\test_stringprep.py",
                "vulnerability": "SHA-1",
                "lines": [
                    {
                        "line_number": 87,
                        "content": "#     h = hashlib.sha1()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collisions."
            },
            {
                "language": "Python",
                "filename": "test_thread.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python38-32\\Lib\\test\\test_thread.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 35,
                        "content": "key = support.threading_setup()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_unicodedata.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python38-32\\Lib\\test\\test_unicodedata.py",
                "vulnerability": "SHA-1",
                "lines": [
                    {
                        "line_number": 26,
                        "content": "h = hashlib.sha1()"
                    },
                    {
                        "line_number": 86,
                        "content": "h = hashlib.sha1()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collisions."
            },
            {
                "language": "Python",
                "filename": "test_urllib2_localnet.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python38-32\\Lib\\test\\test_urllib2_localnet.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 102,
                        "content": "nonce = hashlib.md5(str(self._request_num).encode(\"ascii\")).hexdigest()"
                    },
                    {
                        "line_number": 130,
                        "content": "HA1 = hashlib.md5(HA1_str.encode(\"ascii\")).hexdigest()"
                    },
                    {
                        "line_number": 132,
                        "content": "HA2 = hashlib.md5(HA2_str.encode(\"ascii\")).hexdigest()"
                    },
                    {
                        "line_number": 137,
                        "content": "response = hashlib.md5(response_str.encode(\"ascii\")).hexdigest()"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "test_winreg.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python38-32\\Lib\\test\\test_winreg.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 123,
                        "content": "key = OpenKey(root_key, test_key_name)"
                    },
                    {
                        "line_number": 158,
                        "content": "key = OpenKey(root_key, test_key_name, 0, KEY_ALL_ACCESS)"
                    },
                    {
                        "line_number": 182,
                        "content": "key = OpenKey(root_key, test_key_name)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_xml_etree.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python38-32\\Lib\\test\\test_xml_etree.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 319,
                        "content": "self.serialize_check(element, '<tag key=\"value\" />') # 1"
                    },
                    {
                        "line_number": 329,
                        "content": "self.serialize_check(element, '<tag key=\"value\" />') # 5"
                    },
                    {
                        "line_number": 333,
                        "content": "self.serialize_check(element, '<tag key=\"value\" />') # 6"
                    },
                    {
                        "line_number": 733,
                        "content": "<a:element key='value'>text</a:element>"
                    },
                    {
                        "line_number": 1086,
                        "content": "'<ns0:tag xmlns:ns0=\"uri\" ns0:key=\"value\" />') # 2.1"
                    },
                    {
                        "line_number": 1091,
                        "content": "'<ns0:tag xmlns:ns0=\"uri\" ns0:key=\"value\" />') # 2.2"
                    },
                    {
                        "line_number": 3424,
                        "content": "\"<tag key=\\\"&lt;&amp;&quot;'&gt;\\\" />\" % enc).encode(enc))"
                    },
                    {
                        "line_number": 3440,
                        "content": "self.assertEqual(serialize(elem), '<tag key=\"\\xe5\\xf6\\xf6&lt;&gt;\" />')"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_xml_etree.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python38-32\\Lib\\test\\test_xml_etree.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 473,
                        "content": "'   <element key=\"value\">text</element>\\n'"
                    },
                    {
                        "line_number": 495,
                        "content": "'   <element key=\"value\">text</element>\\n'"
                    },
                    {
                        "line_number": 505,
                        "content": "'   <element key=\"value\">text</element>\\n'"
                    },
                    {
                        "line_number": 1292,
                        "content": "self._feed(parser, \"<root>\\n  <element key='value'>text</element>\\n\")"
                    },
                    {
                        "line_number": 1611,
                        "content": "'   <element key=\"value\">text</element>\\n'"
                    },
                    {
                        "line_number": 3444,
                        "content": "b'<tag key=\"&#229;&#246;&#246;&lt;&gt;\" />')"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "__init__.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python38-32\\Lib\\test\\support\\__init__.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 2286,
                        "content": "key = threading_setup()"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_windows.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python38-32\\Lib\\test\\test_importlib\\test_windows.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 53,
                        "content": "key = os.path.dirname(key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "request.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python38-32\\Lib\\urllib\\request.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1608,
                        "content": "key = user, host, port, '/'.join(dirs), timeout"
                    },
                    {
                        "line_number": 2068,
                        "content": "key = user, host, port, '/'.join(dirs)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "request.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python38-32\\Lib\\urllib\\request.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 1424,
                        "content": "\"\"\"Parse list of key=value strings where keys are not duplicated.\"\"\""
                    },
                    {
                        "line_number": 2331,
                        "content": "key = realm + '@' + host.lower()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "request.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python38-32\\Lib\\urllib\\request.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 1213,
                        "content": "H = lambda x: hashlib.md5(x.encode(\"ascii\")).hexdigest()"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "request.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python38-32\\Lib\\urllib\\request.py",
                "vulnerability": "SHA-1",
                "lines": [
                    {
                        "line_number": 1145,
                        "content": "dig = hashlib.sha1(b).hexdigest()"
                    },
                    {
                        "line_number": 1215,
                        "content": "H = lambda x: hashlib.sha1(x.encode(\"ascii\")).hexdigest()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collisions."
            },
            {
                "language": "Python",
                "filename": "minidom.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python38-32\\Lib\\xml\\dom\\minidom.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1560,
                        "content": "key = element.tagName"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "ElementTree.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python38-32\\Lib\\xml\\etree\\ElementTree.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 917,
                        "content": "key=lambda x: x[1]):  # sort on prefix"
                    },
                    {
                        "line_number": 973,
                        "content": "key=lambda x: x[1]):  # sort on prefix"
                    },
                    {
                        "line_number": 1924,
                        "content": "qnames, key=lambda n: n.split('}', 1))}"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "analyze_dxp.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python38-32\\Tools\\scripts\\analyze_dxp.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 92,
                        "content": "result.sort(key=operator.itemgetter(2), reverse=True)"
                    },
                    {
                        "line_number": 112,
                        "content": "result.sort(key=operator.itemgetter(2), reverse=True)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "finddiv.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python38-32\\Tools\\scripts\\finddiv.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 81,
                        "content": "files.sort(key=os.path.normcase)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "texi2html.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\Programs\\Python\\Python38-32\\Tools\\scripts\\texi2html.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1912,
                        "content": "key = self.codeexpand(key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "_virtualenv.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\unzip\\20.24.5\\_virtualenv.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 29,
                        "content": "key = f\"install_{base}\""
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "_virtualenv.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\unzip\\20.4.7\\_virtualenv.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 27,
                        "content": "key = \"install_{}\".format(base)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "cache.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.10\\image\\1\\CopyPipInstall\\pip-21.1.2-py3-none-any\\pip\\_internal\\cache.py",
                "vulnerability": "SHA-224",
                "lines": [
                    {
                        "line_number": 27,
                        "content": "return hashlib.sha224(s.encode(\"ascii\")).hexdigest()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-224 provides reduced security compared to larger variants."
            },
            {
                "language": "Python",
                "filename": "configuration.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.10\\image\\1\\CopyPipInstall\\pip-21.1.2-py3-none-any\\pip\\_internal\\configuration.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 330,
                        "content": "key = section + \".\" + _normalize_name(name)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "self_outdated_check.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.10\\image\\1\\CopyPipInstall\\pip-21.1.2-py3-none-any\\pip\\_internal\\self_outdated_check.py",
                "vulnerability": "SHA-224",
                "lines": [
                    {
                        "line_number": 29,
                        "content": "name = hashlib.sha224(key_bytes).hexdigest()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-224 provides reduced security compared to larger variants."
            },
            {
                "language": "Python",
                "filename": "parser.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.10\\image\\1\\CopyPipInstall\\pip-21.1.2-py3-none-any\\pip\\_internal\\cli\\parser.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 205,
                        "content": "section, key = section_key.split(\".\", 1)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "configuration.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.10\\image\\1\\CopyPipInstall\\pip-21.1.2-py3-none-any\\pip\\_internal\\commands\\configuration.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 173,
                        "content": "key = self._get_n_args(args, \"get [name]\", n=1)"
                    },
                    {
                        "line_number": 187,
                        "content": "key = self._get_n_args(args, \"unset [name]\", n=1)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "configuration.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.10\\image\\1\\CopyPipInstall\\pip-21.1.2-py3-none-any\\pip\\_internal\\commands\\configuration.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 173,
                        "content": "key = self._get_n_args(args, \"get [name]\", n=1)"
                    },
                    {
                        "line_number": 187,
                        "content": "key = self._get_n_args(args, \"unset [name]\", n=1)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "candidate.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.10\\image\\1\\CopyPipInstall\\pip-21.1.2-py3-none-any\\pip\\_internal\\models\\candidate.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 20,
                        "content": "key=(self.name, self.version, self.link),"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "candidate.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.10\\image\\1\\CopyPipInstall\\pip-21.1.2-py3-none-any\\pip\\_internal\\models\\candidate.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 20,
                        "content": "key=(self.name, self.version, self.link),"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "link.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.10\\image\\1\\CopyPipInstall\\pip-21.1.2-py3-none-any\\pip\\_internal\\models\\link.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 77,
                        "content": "super().__init__(key=url, defining_class=Link)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "freeze.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.10\\image\\1\\CopyPipInstall\\pip-21.1.2-py3-none-any\\pip\\_internal\\operations\\freeze.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 163,
                        "content": "installations.values(), key=lambda x: x.name.lower()):"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "wheel.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.10\\image\\1\\CopyPipInstall\\pip-21.1.2-py3-none-any\\pip\\_internal\\operations\\install\\wheel.py",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 79,
                        "content": "\"\"\"Return (encoded_digest, length) for path using hashlib.sha256()\"\"\""
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Python",
                "filename": "req_tracker.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.10\\image\\1\\CopyPipInstall\\pip-21.1.2-py3-none-any\\pip\\_internal\\req\\req_tracker.py",
                "vulnerability": "SHA-224",
                "lines": [
                    {
                        "line_number": 82,
                        "content": "hashed = hashlib.sha224(link.url_without_fragment.encode()).hexdigest()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-224 provides reduced security compared to larger variants."
            },
            {
                "language": "Python",
                "filename": "misc.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.10\\image\\1\\CopyPipInstall\\pip-21.1.2-py3-none-any\\pip\\_internal\\utils\\misc.py",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 773,
                        "content": "\"\"\"Return (hash, length) for path using hashlib.sha256()\"\"\""
                    },
                    {
                        "line_number": 775,
                        "content": "h = hashlib.sha256()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Python",
                "filename": "appdirs.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.10\\image\\1\\CopyPipInstall\\pip-21.1.2-py3-none-any\\pip\\_vendor\\appdirs.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 482,
                        "content": "key = _winreg.OpenKey("
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "file_cache.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.10\\image\\1\\CopyPipInstall\\pip-21.1.2-py3-none-any\\pip\\_vendor\\cachecontrol\\caches\\file_cache.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 145,
                        "content": "key = CacheController.cache_url(url)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "file_cache.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.10\\image\\1\\CopyPipInstall\\pip-21.1.2-py3-none-any\\pip\\_vendor\\cachecontrol\\caches\\file_cache.py",
                "vulnerability": "SHA-224",
                "lines": [
                    {
                        "line_number": 99,
                        "content": "return hashlib.sha224(x.encode()).hexdigest()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-224 provides reduced security compared to larger variants."
            },
            {
                "language": "Python",
                "filename": "__init__.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.10\\image\\1\\CopyPipInstall\\pip-21.1.2-py3-none-any\\pip\\_vendor\\chardet\\__init__.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 81,
                        "content": "return sorted(results, key=lambda result: -result['confidence'])"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "__init__.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.10\\image\\1\\CopyPipInstall\\pip-21.1.2-py3-none-any\\pip\\_vendor\\chardet\\__init__.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 81,
                        "content": "return sorted(results, key=lambda result: -result['confidence'])"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "compat.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.10\\image\\1\\CopyPipInstall\\pip-21.1.2-py3-none-any\\pip\\_vendor\\distlib\\compat.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 692,
                        "content": "link_prev, link_next, key = self.__map.pop(key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "database.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.10\\image\\1\\CopyPipInstall\\pip-21.1.2-py3-none-any\\pip\\_vendor\\distlib\\database.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 343,
                        "content": "self.key = self.name.lower()    # for case-insensitive comparisons"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "database.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.10\\image\\1\\CopyPipInstall\\pip-21.1.2-py3-none-any\\pip\\_vendor\\distlib\\database.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 343,
                        "content": "self.key = self.name.lower()    # for case-insensitive comparisons"
                    },
                    {
                        "line_number": 869,
                        "content": "s.key = n.lower()   # for case-insensitive comparisons"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "database.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.10\\image\\1\\CopyPipInstall\\pip-21.1.2-py3-none-any\\pip\\_vendor\\distlib\\database.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 519,
                        "content": "hasher = hashlib.md5"
                    },
                    {
                        "line_number": 1017,
                        "content": "return hashlib.md5(content).hexdigest()"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "index.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.10\\image\\1\\CopyPipInstall\\pip-21.1.2-py3-none-any\\pip\\_vendor\\distlib\\index.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 276,
                        "content": "md5_digest = hashlib.md5(file_data).hexdigest()"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "index.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.10\\image\\1\\CopyPipInstall\\pip-21.1.2-py3-none-any\\pip\\_vendor\\distlib\\index.py",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 277,
                        "content": "sha256_digest = hashlib.sha256(file_data).hexdigest()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Python",
                "filename": "locators.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.10\\image\\1\\CopyPipInstall\\pip-21.1.2-py3-none-any\\pip\\_vendor\\distlib\\locators.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 582,
                        "content": "result = sorted(result, key=lambda t: t[0], reverse=True)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "locators.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.10\\image\\1\\CopyPipInstall\\pip-21.1.2-py3-none-any\\pip\\_vendor\\distlib\\locators.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 582,
                        "content": "result = sorted(result, key=lambda t: t[0], reverse=True)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "version.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.10\\image\\1\\CopyPipInstall\\pip-21.1.2-py3-none-any\\pip\\_vendor\\distlib\\version.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 108,
                        "content": "self.key = self.name.lower()    # for case-insensitive comparisons"
                    },
                    {
                        "line_number": 163,
                        "content": "return self.key == other.key and self._parts == other._parts"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "version.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.10\\image\\1\\CopyPipInstall\\pip-21.1.2-py3-none-any\\pip\\_vendor\\distlib\\version.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 108,
                        "content": "self.key = self.name.lower()    # for case-insensitive comparisons"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "wheel.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.10\\image\\1\\CopyPipInstall\\pip-21.1.2-py3-none-any\\pip\\_vendor\\distlib\\wheel.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 378,
                        "content": "if key == 'scripts' and not p.endswith('.exe'):"
                    },
                    {
                        "line_number": 861,
                        "content": "key = '%s/PKG-INFO' % info_dir"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "wheel.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.10\\image\\1\\CopyPipInstall\\pip-21.1.2-py3-none-any\\pip\\_vendor\\distlib\\wheel.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 861,
                        "content": "key = '%s/PKG-INFO' % info_dir"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "tarfile.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.10\\image\\1\\CopyPipInstall\\pip-21.1.2-py3-none-any\\pip\\_vendor\\distlib\\_backport\\tarfile.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 2148,
                        "content": "directories.sort(key=lambda a: a.name)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "__init__.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.10\\image\\1\\CopyPipInstall\\pip-21.1.2-py3-none-any\\pip\\_vendor\\pkg_resources\\__init__.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 2642,
                        "content": "self._key = key = self.project_name.lower()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "auth.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.10\\image\\1\\CopyPipInstall\\pip-21.1.2-py3-none-any\\pip\\_vendor\\requests\\auth.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 148,
                        "content": "return hashlib.md5(x).hexdigest()"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "auth.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.10\\image\\1\\CopyPipInstall\\pip-21.1.2-py3-none-any\\pip\\_vendor\\requests\\auth.py",
                "vulnerability": "SHA-1",
                "lines": [
                    {
                        "line_number": 154,
                        "content": "return hashlib.sha1(x).hexdigest()"
                    },
                    {
                        "line_number": 198,
                        "content": "cnonce = (hashlib.sha1(s).hexdigest()[:16])"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collisions."
            },
            {
                "language": "Python",
                "filename": "auth.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.10\\image\\1\\CopyPipInstall\\pip-21.1.2-py3-none-any\\pip\\_vendor\\requests\\auth.py",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 160,
                        "content": "return hashlib.sha256(x).hexdigest()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Python",
                "filename": "models.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.10\\image\\1\\CopyPipInstall\\pip-21.1.2-py3-none-any\\pip\\_vendor\\requests\\models.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 915,
                        "content": "key = link.get('rel') or link.get('url')"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "models.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.10\\image\\1\\CopyPipInstall\\pip-21.1.2-py3-none-any\\pip\\_vendor\\requests\\models.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 915,
                        "content": "key = link.get('rel') or link.get('url')"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "utils.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.10\\image\\1\\CopyPipInstall\\pip-21.1.2-py3-none-any\\pip\\_vendor\\requests\\utils.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 480,
                        "content": "key = param[:index_of_equals].strip(items_to_strip)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "__init__.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.10\\image\\1\\CopyPipInstall\\setuptools-57.0.0-py3-none-any\\pkg_resources\\__init__.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 2640,
                        "content": "self._key = key = self.project_name.lower()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "appdirs.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.10\\image\\1\\CopyPipInstall\\setuptools-57.0.0-py3-none-any\\pkg_resources\\_vendor\\appdirs.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 471,
                        "content": "key = _winreg.OpenKey("
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "dist.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.10\\image\\1\\CopyPipInstall\\setuptools-57.0.0-py3-none-any\\setuptools\\dist.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 436,
                        "content": "key = pkg_resources.safe_name(str(attrs['name'])).lower()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "msvc.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.10\\image\\1\\CopyPipInstall\\setuptools-57.0.0-py3-none-any\\setuptools\\msvc.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 88,
                        "content": "key = vc_base % ('', version)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "msvc.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.10\\image\\1\\CopyPipInstall\\setuptools-57.0.0-py3-none-any\\setuptools\\msvc.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 95,
                        "content": "key = vc_base % ('Wow6432Node\\\\', version)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "egg_info.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.10\\image\\1\\CopyPipInstall\\setuptools-57.0.0-py3-none-any\\setuptools\\command\\egg_info.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 241,
                        "content": "if pd is not None and pd.key == self.egg_name.lower():"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "msvc9compiler.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.10\\image\\1\\CopyPipInstall\\setuptools-57.0.0-py3-none-any\\setuptools\\_distutils\\msvc9compiler.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 158,
                        "content": "key = RegEnumKey(h, 0)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "msvccompiler.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.10\\image\\1\\CopyPipInstall\\setuptools-57.0.0-py3-none-any\\setuptools\\_distutils\\msvccompiler.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 138,
                        "content": "key = RegEnumKey(h, 0)"
                    },
                    {
                        "line_number": 598,
                        "content": "key = (r\"%s\\%0.1f\\VC\\VC_OBJECTS_PLATFORM_INFO\\Win32\\Directories\""
                    },
                    {
                        "line_number": 601,
                        "content": "key = (r\"%s\\6.0\\Build System\\Components\\Platforms\""
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "msvccompiler.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.10\\image\\1\\CopyPipInstall\\setuptools-57.0.0-py3-none-any\\setuptools\\_distutils\\msvccompiler.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 601,
                        "content": "key = (r\"%s\\6.0\\Build System\\Components\\Platforms\""
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "_msvccompiler.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.10\\image\\1\\CopyPipInstall\\setuptools-57.0.0-py3-none-any\\setuptools\\_distutils\\_msvccompiler.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 34,
                        "content": "key = winreg.OpenKeyEx("
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "more.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.10\\image\\1\\CopyPipInstall\\setuptools-57.0.0-py3-none-any\\setuptools\\_vendor\\more_itertools\\more.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 413,
                        "content": ">>> key = lambda s: int(s)  # Sort by numeric value, not by string"
                    },
                    {
                        "line_number": 877,
                        "content": ">>> key = lambda x: x % 10  # Bucket by last digit"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "more.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.10\\image\\1\\CopyPipInstall\\setuptools-57.0.0-py3-none-any\\setuptools\\_vendor\\more_itertools\\more.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 413,
                        "content": ">>> key = lambda s: int(s)  # Sort by numeric value, not by string"
                    },
                    {
                        "line_number": 879,
                        "content": ">>> s = bucket(it, key=key, validator=validator)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "recipes.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.10\\image\\1\\CopyPipInstall\\setuptools-57.0.0-py3-none-any\\setuptools\\_vendor\\more_itertools\\recipes.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 400,
                        "content": "``key=frozenset``. For ``dict`` objects,"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "wheelfile.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.10\\image\\1\\CopyPipInstall\\wheel-0.36.2-py2.py3-none-any\\wheel\\wheelfile.py",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 36,
                        "content": "_default_algorithm = hashlib.sha256"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Python",
                "filename": "cache.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.11\\image\\1\\CopyPipInstall\\pip-23.2.1-py3-none-any\\pip\\_internal\\cache.py",
                "vulnerability": "SHA-224",
                "lines": [
                    {
                        "line_number": 29,
                        "content": "return hashlib.sha224(s.encode(\"ascii\")).hexdigest()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-224 provides reduced security compared to larger variants."
            },
            {
                "language": "Python",
                "filename": "configuration.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.11\\image\\1\\CopyPipInstall\\pip-23.2.1-py3-none-any\\pip\\_internal\\configuration.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 146,
                        "content": "key = _normalize_name(key)"
                    },
                    {
                        "line_number": 157,
                        "content": "key = _normalize_name(key)"
                    },
                    {
                        "line_number": 177,
                        "content": "key = _normalize_name(key)"
                    },
                    {
                        "line_number": 314,
                        "content": "key = section + \".\" + _normalize_name(name)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "self_outdated_check.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.11\\image\\1\\CopyPipInstall\\pip-23.2.1-py3-none-any\\pip\\_internal\\self_outdated_check.py",
                "vulnerability": "SHA-224",
                "lines": [
                    {
                        "line_number": 39,
                        "content": "name = hashlib.sha224(key_bytes).hexdigest()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-224 provides reduced security compared to larger variants."
            },
            {
                "language": "Python",
                "filename": "parser.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.11\\image\\1\\CopyPipInstall\\pip-23.2.1-py3-none-any\\pip\\_internal\\cli\\parser.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 197,
                        "content": "section, key = section_key.split(\".\", 1)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "configuration.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.11\\image\\1\\CopyPipInstall\\pip-23.2.1-py3-none-any\\pip\\_internal\\commands\\configuration.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 178,
                        "content": "key = self._get_n_args(args, \"get [name]\", n=1)"
                    },
                    {
                        "line_number": 190,
                        "content": "key = self._get_n_args(args, \"unset [name]\", n=1)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "configuration.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.11\\image\\1\\CopyPipInstall\\pip-23.2.1-py3-none-any\\pip\\_internal\\commands\\configuration.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 178,
                        "content": "key = self._get_n_args(args, \"get [name]\", n=1)"
                    },
                    {
                        "line_number": 190,
                        "content": "key = self._get_n_args(args, \"unset [name]\", n=1)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "_json.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.11\\image\\1\\CopyPipInstall\\pip-23.2.1-py3-none-any\\pip\\_internal\\metadata\\_json.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 64,
                        "content": "key = json_name(field)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "candidate.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.11\\image\\1\\CopyPipInstall\\pip-23.2.1-py3-none-any\\pip\\_internal\\models\\candidate.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 18,
                        "content": "key=(self.name, self.version, self.link),"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "candidate.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.11\\image\\1\\CopyPipInstall\\pip-23.2.1-py3-none-any\\pip\\_internal\\models\\candidate.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 18,
                        "content": "key=(self.name, self.version, self.link),"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "link.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.11\\image\\1\\CopyPipInstall\\pip-23.2.1-py3-none-any\\pip\\_internal\\models\\link.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 257,
                        "content": "super().__init__(key=url, defining_class=Link)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "auth.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.11\\image\\1\\CopyPipInstall\\pip-23.2.1-py3-none-any\\pip\\_internal\\network\\auth.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 320,
                        "content": "key=lambda candidate: commonprefix("
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "freeze.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.11\\image\\1\\CopyPipInstall\\pip-23.2.1-py3-none-any\\pip\\_internal\\operations\\freeze.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 142,
                        "content": "for installation in sorted(installations.values(), key=lambda x: x.name.lower()):"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "build_tracker.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.11\\image\\1\\CopyPipInstall\\pip-23.2.1-py3-none-any\\pip\\_internal\\operations\\build\\build_tracker.py",
                "vulnerability": "SHA-224",
                "lines": [
                    {
                        "line_number": 73,
                        "content": "hashed = hashlib.sha224(link.url_without_fragment.encode()).hexdigest()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-224 provides reduced security compared to larger variants."
            },
            {
                "language": "Python",
                "filename": "wheel.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.11\\image\\1\\CopyPipInstall\\pip-23.2.1-py3-none-any\\pip\\_internal\\operations\\install\\wheel.py",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 81,
                        "content": "\"\"\"Return (encoded_digest, length) for path using hashlib.sha256()\"\"\""
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Python",
                "filename": "misc.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.11\\image\\1\\CopyPipInstall\\pip-23.2.1-py3-none-any\\pip\\_internal\\utils\\misc.py",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 612,
                        "content": "\"\"\"Return (hash, length) for path using hashlib.sha256()\"\"\""
                    },
                    {
                        "line_number": 614,
                        "content": "h = hashlib.sha256()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Python",
                "filename": "file_cache.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.11\\image\\1\\CopyPipInstall\\pip-23.2.1-py3-none-any\\pip\\_vendor\\cachecontrol\\caches\\file_cache.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 187,
                        "content": "key = CacheController.cache_url(url)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "file_cache.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.11\\image\\1\\CopyPipInstall\\pip-23.2.1-py3-none-any\\pip\\_vendor\\cachecontrol\\caches\\file_cache.py",
                "vulnerability": "SHA-224",
                "lines": [
                    {
                        "line_number": 104,
                        "content": "return hashlib.sha224(x.encode()).hexdigest()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-224 provides reduced security compared to larger variants."
            },
            {
                "language": "Python",
                "filename": "__init__.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.11\\image\\1\\CopyPipInstall\\pip-23.2.1-py3-none-any\\pip\\_vendor\\chardet\\__init__.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 113,
                        "content": "return sorted(results, key=lambda result: -result[\"confidence\"])"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "__init__.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.11\\image\\1\\CopyPipInstall\\pip-23.2.1-py3-none-any\\pip\\_vendor\\chardet\\__init__.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 113,
                        "content": "return sorted(results, key=lambda result: -result[\"confidence\"])"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "compat.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.11\\image\\1\\CopyPipInstall\\pip-23.2.1-py3-none-any\\pip\\_vendor\\distlib\\compat.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 688,
                        "content": "link_prev, link_next, key = self.__map.pop(key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "database.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.11\\image\\1\\CopyPipInstall\\pip-23.2.1-py3-none-any\\pip\\_vendor\\distlib\\database.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 349,
                        "content": "self.key = self.name.lower()    # for case-insensitive comparisons"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "database.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.11\\image\\1\\CopyPipInstall\\pip-23.2.1-py3-none-any\\pip\\_vendor\\distlib\\database.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 349,
                        "content": "self.key = self.name.lower()    # for case-insensitive comparisons"
                    },
                    {
                        "line_number": 876,
                        "content": "s.key = n.lower()   # for case-insensitive comparisons"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "database.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.11\\image\\1\\CopyPipInstall\\pip-23.2.1-py3-none-any\\pip\\_vendor\\distlib\\database.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 526,
                        "content": "hasher = hashlib.md5"
                    },
                    {
                        "line_number": 1024,
                        "content": "return hashlib.md5(content).hexdigest()"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "index.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.11\\image\\1\\CopyPipInstall\\pip-23.2.1-py3-none-any\\pip\\_vendor\\distlib\\index.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 268,
                        "content": "md5_digest = hashlib.md5(file_data).hexdigest()"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "index.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.11\\image\\1\\CopyPipInstall\\pip-23.2.1-py3-none-any\\pip\\_vendor\\distlib\\index.py",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 269,
                        "content": "sha256_digest = hashlib.sha256(file_data).hexdigest()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Python",
                "filename": "locators.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.11\\image\\1\\CopyPipInstall\\pip-23.2.1-py3-none-any\\pip\\_vendor\\distlib\\locators.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 582,
                        "content": "result = sorted(result, key=lambda t: t[0], reverse=True)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "locators.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.11\\image\\1\\CopyPipInstall\\pip-23.2.1-py3-none-any\\pip\\_vendor\\distlib\\locators.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 582,
                        "content": "result = sorted(result, key=lambda t: t[0], reverse=True)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "version.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.11\\image\\1\\CopyPipInstall\\pip-23.2.1-py3-none-any\\pip\\_vendor\\distlib\\version.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 108,
                        "content": "self.key = self.name.lower()    # for case-insensitive comparisons"
                    },
                    {
                        "line_number": 163,
                        "content": "return self.key == other.key and self._parts == other._parts"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "version.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.11\\image\\1\\CopyPipInstall\\pip-23.2.1-py3-none-any\\pip\\_vendor\\distlib\\version.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 108,
                        "content": "self.key = self.name.lower()    # for case-insensitive comparisons"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "wheel.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.11\\image\\1\\CopyPipInstall\\pip-23.2.1-py3-none-any\\pip\\_vendor\\distlib\\wheel.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 407,
                        "content": "if key == 'scripts' and not p.endswith('.exe'):"
                    },
                    {
                        "line_number": 897,
                        "content": "key = '%s/PKG-INFO' % info_dir"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "wheel.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.11\\image\\1\\CopyPipInstall\\pip-23.2.1-py3-none-any\\pip\\_vendor\\distlib\\wheel.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 897,
                        "content": "key = '%s/PKG-INFO' % info_dir"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "__init__.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.11\\image\\1\\CopyPipInstall\\pip-23.2.1-py3-none-any\\pip\\_vendor\\pkg_resources\\__init__.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 2722,
                        "content": "self._key = key = self.project_name.lower()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "windows.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.11\\image\\1\\CopyPipInstall\\pip-23.2.1-py3-none-any\\pip\\_vendor\\platformdirs\\windows.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 199,
                        "content": "key = winreg.OpenKey(winreg.HKEY_CURRENT_USER, r\"Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders\")"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "lexer.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.11\\image\\1\\CopyPipInstall\\pip-23.2.1-py3-none-any\\pip\\_vendor\\pygments\\lexer.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 931,
                        "content": "key=lambda x: x[self._prof_sort_index],"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "sphinxext.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.11\\image\\1\\CopyPipInstall\\pip-23.2.1-py3-none-any\\pip\\_vendor\\pygments\\sphinxext.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 104,
                        "content": "for classname, data in sorted(LEXERS.items(), key=lambda x: x[1][1].lower()):"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "img.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.11\\image\\1\\CopyPipInstall\\pip-23.2.1-py3-none-any\\pip\\_vendor\\pygments\\formatters\\img.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 174,
                        "content": "key = _winreg.OpenKey(*keyname)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "img.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.11\\image\\1\\CopyPipInstall\\pip-23.2.1-py3-none-any\\pip\\_vendor\\pygments\\formatters\\img.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 174,
                        "content": "key = _winreg.OpenKey(*keyname)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "core.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.11\\image\\1\\CopyPipInstall\\pip-23.2.1-py3-none-any\\pip\\_vendor\\pyparsing\\core.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 4170,
                        "content": "fatals.sort(key=lambda e: -e.loc)"
                    },
                    {
                        "line_number": 4486,
                        "content": "fatals.sort(key=lambda e: -e.loc)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "core.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.11\\image\\1\\CopyPipInstall\\pip-23.2.1-py3-none-any\\pip\\_vendor\\pyparsing\\core.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 4172,
                        "content": "fatals.sort(key=lambda e: (-e.loc, -len(str(e.parser_element))))"
                    },
                    {
                        "line_number": 4488,
                        "content": "fatals.sort(key=lambda e: (-e.loc, -len(str(e.parser_element))))"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "auth.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.11\\image\\1\\CopyPipInstall\\pip-23.2.1-py3-none-any\\pip\\_vendor\\requests\\auth.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 148,
                        "content": "return hashlib.md5(x).hexdigest()"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "auth.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.11\\image\\1\\CopyPipInstall\\pip-23.2.1-py3-none-any\\pip\\_vendor\\requests\\auth.py",
                "vulnerability": "SHA-1",
                "lines": [
                    {
                        "line_number": 156,
                        "content": "return hashlib.sha1(x).hexdigest()"
                    },
                    {
                        "line_number": 205,
                        "content": "cnonce = hashlib.sha1(s).hexdigest()[:16]"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collisions."
            },
            {
                "language": "Python",
                "filename": "auth.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.11\\image\\1\\CopyPipInstall\\pip-23.2.1-py3-none-any\\pip\\_vendor\\requests\\auth.py",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 164,
                        "content": "return hashlib.sha256(x).hexdigest()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Python",
                "filename": "models.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.11\\image\\1\\CopyPipInstall\\pip-23.2.1-py3-none-any\\pip\\_vendor\\requests\\models.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 989,
                        "content": "key = link.get(\"rel\") or link.get(\"url\")"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "models.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.11\\image\\1\\CopyPipInstall\\pip-23.2.1-py3-none-any\\pip\\_vendor\\requests\\models.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 989,
                        "content": "key = link.get(\"rel\") or link.get(\"url\")"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "utils.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.11\\image\\1\\CopyPipInstall\\pip-23.2.1-py3-none-any\\pip\\_vendor\\requests\\utils.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 532,
                        "content": "key = param[:index_of_equals].strip(items_to_strip)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "scope.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.11\\image\\1\\CopyPipInstall\\pip-23.2.1-py3-none-any\\pip\\_vendor\\rich\\scope.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 46,
                        "content": "items = sorted(scope.items(), key=sort_items) if sort_keys else scope.items()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "_parser.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.11\\image\\1\\CopyPipInstall\\pip-23.2.1-py3-none-any\\pip\\_vendor\\tomli\\_parser.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 287,
                        "content": "pos, key = parse_key(src, pos)"
                    },
                    {
                        "line_number": 305,
                        "content": "pos, key = parse_key(src, pos)"
                    },
                    {
                        "line_number": 360,
                        "content": "pos, key = parse_key(src, pos)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "__init__.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.11\\image\\1\\CopyPipInstall\\setuptools-68.2.0-py3-none-any\\pkg_resources\\__init__.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 2722,
                        "content": "self._key = key = self.project_name.lower()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "more.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.11\\image\\1\\CopyPipInstall\\setuptools-68.2.0-py3-none-any\\pkg_resources\\_vendor\\more_itertools\\more.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 937,
                        "content": ">>> key = lambda x: x % 10  # Bucket by last digit"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "more.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.11\\image\\1\\CopyPipInstall\\setuptools-68.2.0-py3-none-any\\pkg_resources\\_vendor\\more_itertools\\more.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 939,
                        "content": ">>> s = bucket(it, key=key, validator=validator)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "recipes.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.11\\image\\1\\CopyPipInstall\\setuptools-68.2.0-py3-none-any\\pkg_resources\\_vendor\\more_itertools\\recipes.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 490,
                        "content": "``key=frozenset``. For ``dict`` objects,"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "windows.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.11\\image\\1\\CopyPipInstall\\setuptools-68.2.0-py3-none-any\\pkg_resources\\_vendor\\platformdirs\\windows.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 140,
                        "content": "key = winreg.OpenKey(winreg.HKEY_CURRENT_USER, r\"Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders\")"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "egg_info.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.11\\image\\1\\CopyPipInstall\\setuptools-68.2.0-py3-none-any\\setuptools\\command\\egg_info.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 255,
                        "content": "key = getattr(pd, \"key\", None) or getattr(pd, \"name\", None)"
                    },
                    {
                        "line_number": 256,
                        "content": "if pd is not None and key == self.egg_name.lower():"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "egg_info.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.11\\image\\1\\CopyPipInstall\\setuptools-68.2.0-py3-none-any\\setuptools\\command\\egg_info.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 255,
                        "content": "key = getattr(pd, \"key\", None) or getattr(pd, \"name\", None)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "_apply_pyprojecttoml.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.11\\image\\1\\CopyPipInstall\\setuptools-68.2.0-py3-none-any\\setuptools\\config\\_apply_pyprojecttoml.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 250,
                        "content": "key = json_compatible_key(key)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "msvc9compiler.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.11\\image\\1\\CopyPipInstall\\setuptools-68.2.0-py3-none-any\\setuptools\\_distutils\\msvc9compiler.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 177,
                        "content": "key = RegEnumKey(h, 0)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "msvccompiler.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.11\\image\\1\\CopyPipInstall\\setuptools-68.2.0-py3-none-any\\setuptools\\_distutils\\msvccompiler.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 161,
                        "content": "key = RegEnumKey(h, 0)"
                    },
                    {
                        "line_number": 640,
                        "content": "key = r\"{}\\{:0.1f}\\VC\\VC_OBJECTS_PLATFORM_INFO\\Win32\\Directories\".format("
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "_collections.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.11\\image\\1\\CopyPipInstall\\setuptools-68.2.0-py3-none-any\\setuptools\\_distutils\\_collections.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 159,
                        "content": "key = self._find_first_match_(sorted_keys, item)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "_msvccompiler.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.11\\image\\1\\CopyPipInstall\\setuptools-68.2.0-py3-none-any\\setuptools\\_distutils\\_msvccompiler.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 41,
                        "content": "key = winreg.OpenKeyEx("
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "install.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.11\\image\\1\\CopyPipInstall\\setuptools-68.2.0-py3-none-any\\setuptools\\_distutils\\command\\install.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 143,
                        "content": "os_name, sep, key = name.partition('_')"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "more.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.11\\image\\1\\CopyPipInstall\\setuptools-68.2.0-py3-none-any\\setuptools\\_vendor\\more_itertools\\more.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 412,
                        "content": ">>> key = lambda s: int(s)  # Sort by numeric value, not by string"
                    },
                    {
                        "line_number": 876,
                        "content": ">>> key = lambda x: x % 10  # Bucket by last digit"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "more.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.11\\image\\1\\CopyPipInstall\\setuptools-68.2.0-py3-none-any\\setuptools\\_vendor\\more_itertools\\more.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 412,
                        "content": ">>> key = lambda s: int(s)  # Sort by numeric value, not by string"
                    },
                    {
                        "line_number": 878,
                        "content": ">>> s = bucket(it, key=key, validator=validator)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "recipes.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.11\\image\\1\\CopyPipInstall\\setuptools-68.2.0-py3-none-any\\setuptools\\_vendor\\more_itertools\\recipes.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 400,
                        "content": "``key=frozenset``. For ``dict`` objects,"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "_parser.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.11\\image\\1\\CopyPipInstall\\setuptools-68.2.0-py3-none-any\\setuptools\\_vendor\\tomli\\_parser.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 287,
                        "content": "pos, key = parse_key(src, pos)"
                    },
                    {
                        "line_number": 305,
                        "content": "pos, key = parse_key(src, pos)"
                    },
                    {
                        "line_number": 360,
                        "content": "pos, key = parse_key(src, pos)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "wheelfile.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.11\\image\\1\\CopyPipInstall\\wheel-0.41.2-py3-none-any\\wheel\\wheelfile.py",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 38,
                        "content": "_default_algorithm = hashlib.sha256"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Python",
                "filename": "cache.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.8\\image\\1\\CopyPipInstall\\pip-21.1.2-py3-none-any\\pip\\_internal\\cache.py",
                "vulnerability": "SHA-224",
                "lines": [
                    {
                        "line_number": 27,
                        "content": "return hashlib.sha224(s.encode(\"ascii\")).hexdigest()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-224 provides reduced security compared to larger variants."
            },
            {
                "language": "Python",
                "filename": "configuration.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.8\\image\\1\\CopyPipInstall\\pip-21.1.2-py3-none-any\\pip\\_internal\\configuration.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 330,
                        "content": "key = section + \".\" + _normalize_name(name)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "self_outdated_check.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.8\\image\\1\\CopyPipInstall\\pip-21.1.2-py3-none-any\\pip\\_internal\\self_outdated_check.py",
                "vulnerability": "SHA-224",
                "lines": [
                    {
                        "line_number": 29,
                        "content": "name = hashlib.sha224(key_bytes).hexdigest()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-224 provides reduced security compared to larger variants."
            },
            {
                "language": "Python",
                "filename": "parser.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.8\\image\\1\\CopyPipInstall\\pip-21.1.2-py3-none-any\\pip\\_internal\\cli\\parser.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 205,
                        "content": "section, key = section_key.split(\".\", 1)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "configuration.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.8\\image\\1\\CopyPipInstall\\pip-21.1.2-py3-none-any\\pip\\_internal\\commands\\configuration.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 173,
                        "content": "key = self._get_n_args(args, \"get [name]\", n=1)"
                    },
                    {
                        "line_number": 187,
                        "content": "key = self._get_n_args(args, \"unset [name]\", n=1)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "configuration.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.8\\image\\1\\CopyPipInstall\\pip-21.1.2-py3-none-any\\pip\\_internal\\commands\\configuration.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 173,
                        "content": "key = self._get_n_args(args, \"get [name]\", n=1)"
                    },
                    {
                        "line_number": 187,
                        "content": "key = self._get_n_args(args, \"unset [name]\", n=1)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "candidate.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.8\\image\\1\\CopyPipInstall\\pip-21.1.2-py3-none-any\\pip\\_internal\\models\\candidate.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 20,
                        "content": "key=(self.name, self.version, self.link),"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "candidate.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.8\\image\\1\\CopyPipInstall\\pip-21.1.2-py3-none-any\\pip\\_internal\\models\\candidate.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 20,
                        "content": "key=(self.name, self.version, self.link),"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "link.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.8\\image\\1\\CopyPipInstall\\pip-21.1.2-py3-none-any\\pip\\_internal\\models\\link.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 77,
                        "content": "super().__init__(key=url, defining_class=Link)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "freeze.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.8\\image\\1\\CopyPipInstall\\pip-21.1.2-py3-none-any\\pip\\_internal\\operations\\freeze.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 163,
                        "content": "installations.values(), key=lambda x: x.name.lower()):"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "wheel.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.8\\image\\1\\CopyPipInstall\\pip-21.1.2-py3-none-any\\pip\\_internal\\operations\\install\\wheel.py",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 79,
                        "content": "\"\"\"Return (encoded_digest, length) for path using hashlib.sha256()\"\"\""
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Python",
                "filename": "req_tracker.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.8\\image\\1\\CopyPipInstall\\pip-21.1.2-py3-none-any\\pip\\_internal\\req\\req_tracker.py",
                "vulnerability": "SHA-224",
                "lines": [
                    {
                        "line_number": 82,
                        "content": "hashed = hashlib.sha224(link.url_without_fragment.encode()).hexdigest()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-224 provides reduced security compared to larger variants."
            },
            {
                "language": "Python",
                "filename": "misc.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.8\\image\\1\\CopyPipInstall\\pip-21.1.2-py3-none-any\\pip\\_internal\\utils\\misc.py",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 773,
                        "content": "\"\"\"Return (hash, length) for path using hashlib.sha256()\"\"\""
                    },
                    {
                        "line_number": 775,
                        "content": "h = hashlib.sha256()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Python",
                "filename": "appdirs.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.8\\image\\1\\CopyPipInstall\\pip-21.1.2-py3-none-any\\pip\\_vendor\\appdirs.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 482,
                        "content": "key = _winreg.OpenKey("
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "file_cache.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.8\\image\\1\\CopyPipInstall\\pip-21.1.2-py3-none-any\\pip\\_vendor\\cachecontrol\\caches\\file_cache.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 145,
                        "content": "key = CacheController.cache_url(url)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "file_cache.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.8\\image\\1\\CopyPipInstall\\pip-21.1.2-py3-none-any\\pip\\_vendor\\cachecontrol\\caches\\file_cache.py",
                "vulnerability": "SHA-224",
                "lines": [
                    {
                        "line_number": 99,
                        "content": "return hashlib.sha224(x.encode()).hexdigest()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-224 provides reduced security compared to larger variants."
            },
            {
                "language": "Python",
                "filename": "__init__.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.8\\image\\1\\CopyPipInstall\\pip-21.1.2-py3-none-any\\pip\\_vendor\\chardet\\__init__.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 81,
                        "content": "return sorted(results, key=lambda result: -result['confidence'])"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "__init__.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.8\\image\\1\\CopyPipInstall\\pip-21.1.2-py3-none-any\\pip\\_vendor\\chardet\\__init__.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 81,
                        "content": "return sorted(results, key=lambda result: -result['confidence'])"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "compat.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.8\\image\\1\\CopyPipInstall\\pip-21.1.2-py3-none-any\\pip\\_vendor\\distlib\\compat.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 692,
                        "content": "link_prev, link_next, key = self.__map.pop(key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "database.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.8\\image\\1\\CopyPipInstall\\pip-21.1.2-py3-none-any\\pip\\_vendor\\distlib\\database.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 343,
                        "content": "self.key = self.name.lower()    # for case-insensitive comparisons"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "database.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.8\\image\\1\\CopyPipInstall\\pip-21.1.2-py3-none-any\\pip\\_vendor\\distlib\\database.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 343,
                        "content": "self.key = self.name.lower()    # for case-insensitive comparisons"
                    },
                    {
                        "line_number": 869,
                        "content": "s.key = n.lower()   # for case-insensitive comparisons"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "database.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.8\\image\\1\\CopyPipInstall\\pip-21.1.2-py3-none-any\\pip\\_vendor\\distlib\\database.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 519,
                        "content": "hasher = hashlib.md5"
                    },
                    {
                        "line_number": 1017,
                        "content": "return hashlib.md5(content).hexdigest()"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "index.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.8\\image\\1\\CopyPipInstall\\pip-21.1.2-py3-none-any\\pip\\_vendor\\distlib\\index.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 276,
                        "content": "md5_digest = hashlib.md5(file_data).hexdigest()"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "index.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.8\\image\\1\\CopyPipInstall\\pip-21.1.2-py3-none-any\\pip\\_vendor\\distlib\\index.py",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 277,
                        "content": "sha256_digest = hashlib.sha256(file_data).hexdigest()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Python",
                "filename": "locators.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.8\\image\\1\\CopyPipInstall\\pip-21.1.2-py3-none-any\\pip\\_vendor\\distlib\\locators.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 582,
                        "content": "result = sorted(result, key=lambda t: t[0], reverse=True)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "locators.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.8\\image\\1\\CopyPipInstall\\pip-21.1.2-py3-none-any\\pip\\_vendor\\distlib\\locators.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 582,
                        "content": "result = sorted(result, key=lambda t: t[0], reverse=True)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "version.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.8\\image\\1\\CopyPipInstall\\pip-21.1.2-py3-none-any\\pip\\_vendor\\distlib\\version.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 108,
                        "content": "self.key = self.name.lower()    # for case-insensitive comparisons"
                    },
                    {
                        "line_number": 163,
                        "content": "return self.key == other.key and self._parts == other._parts"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "version.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.8\\image\\1\\CopyPipInstall\\pip-21.1.2-py3-none-any\\pip\\_vendor\\distlib\\version.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 108,
                        "content": "self.key = self.name.lower()    # for case-insensitive comparisons"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "wheel.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.8\\image\\1\\CopyPipInstall\\pip-21.1.2-py3-none-any\\pip\\_vendor\\distlib\\wheel.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 378,
                        "content": "if key == 'scripts' and not p.endswith('.exe'):"
                    },
                    {
                        "line_number": 861,
                        "content": "key = '%s/PKG-INFO' % info_dir"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "wheel.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.8\\image\\1\\CopyPipInstall\\pip-21.1.2-py3-none-any\\pip\\_vendor\\distlib\\wheel.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 861,
                        "content": "key = '%s/PKG-INFO' % info_dir"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "tarfile.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.8\\image\\1\\CopyPipInstall\\pip-21.1.2-py3-none-any\\pip\\_vendor\\distlib\\_backport\\tarfile.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 2148,
                        "content": "directories.sort(key=lambda a: a.name)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "__init__.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.8\\image\\1\\CopyPipInstall\\pip-21.1.2-py3-none-any\\pip\\_vendor\\pkg_resources\\__init__.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 2642,
                        "content": "self._key = key = self.project_name.lower()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "auth.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.8\\image\\1\\CopyPipInstall\\pip-21.1.2-py3-none-any\\pip\\_vendor\\requests\\auth.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 148,
                        "content": "return hashlib.md5(x).hexdigest()"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "auth.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.8\\image\\1\\CopyPipInstall\\pip-21.1.2-py3-none-any\\pip\\_vendor\\requests\\auth.py",
                "vulnerability": "SHA-1",
                "lines": [
                    {
                        "line_number": 154,
                        "content": "return hashlib.sha1(x).hexdigest()"
                    },
                    {
                        "line_number": 198,
                        "content": "cnonce = (hashlib.sha1(s).hexdigest()[:16])"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collisions."
            },
            {
                "language": "Python",
                "filename": "auth.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.8\\image\\1\\CopyPipInstall\\pip-21.1.2-py3-none-any\\pip\\_vendor\\requests\\auth.py",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 160,
                        "content": "return hashlib.sha256(x).hexdigest()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Python",
                "filename": "models.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.8\\image\\1\\CopyPipInstall\\pip-21.1.2-py3-none-any\\pip\\_vendor\\requests\\models.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 915,
                        "content": "key = link.get('rel') or link.get('url')"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "models.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.8\\image\\1\\CopyPipInstall\\pip-21.1.2-py3-none-any\\pip\\_vendor\\requests\\models.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 915,
                        "content": "key = link.get('rel') or link.get('url')"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "utils.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.8\\image\\1\\CopyPipInstall\\pip-21.1.2-py3-none-any\\pip\\_vendor\\requests\\utils.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 480,
                        "content": "key = param[:index_of_equals].strip(items_to_strip)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "cache.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.8\\image\\1\\CopyPipInstall\\pip-23.2.1-py3-none-any\\pip\\_internal\\cache.py",
                "vulnerability": "SHA-224",
                "lines": [
                    {
                        "line_number": 29,
                        "content": "return hashlib.sha224(s.encode(\"ascii\")).hexdigest()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-224 provides reduced security compared to larger variants."
            },
            {
                "language": "Python",
                "filename": "configuration.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.8\\image\\1\\CopyPipInstall\\pip-23.2.1-py3-none-any\\pip\\_internal\\configuration.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 146,
                        "content": "key = _normalize_name(key)"
                    },
                    {
                        "line_number": 157,
                        "content": "key = _normalize_name(key)"
                    },
                    {
                        "line_number": 177,
                        "content": "key = _normalize_name(key)"
                    },
                    {
                        "line_number": 314,
                        "content": "key = section + \".\" + _normalize_name(name)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "self_outdated_check.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.8\\image\\1\\CopyPipInstall\\pip-23.2.1-py3-none-any\\pip\\_internal\\self_outdated_check.py",
                "vulnerability": "SHA-224",
                "lines": [
                    {
                        "line_number": 39,
                        "content": "name = hashlib.sha224(key_bytes).hexdigest()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-224 provides reduced security compared to larger variants."
            },
            {
                "language": "Python",
                "filename": "parser.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.8\\image\\1\\CopyPipInstall\\pip-23.2.1-py3-none-any\\pip\\_internal\\cli\\parser.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 197,
                        "content": "section, key = section_key.split(\".\", 1)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "configuration.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.8\\image\\1\\CopyPipInstall\\pip-23.2.1-py3-none-any\\pip\\_internal\\commands\\configuration.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 178,
                        "content": "key = self._get_n_args(args, \"get [name]\", n=1)"
                    },
                    {
                        "line_number": 190,
                        "content": "key = self._get_n_args(args, \"unset [name]\", n=1)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "configuration.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.8\\image\\1\\CopyPipInstall\\pip-23.2.1-py3-none-any\\pip\\_internal\\commands\\configuration.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 178,
                        "content": "key = self._get_n_args(args, \"get [name]\", n=1)"
                    },
                    {
                        "line_number": 190,
                        "content": "key = self._get_n_args(args, \"unset [name]\", n=1)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "_json.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.8\\image\\1\\CopyPipInstall\\pip-23.2.1-py3-none-any\\pip\\_internal\\metadata\\_json.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 64,
                        "content": "key = json_name(field)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "candidate.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.8\\image\\1\\CopyPipInstall\\pip-23.2.1-py3-none-any\\pip\\_internal\\models\\candidate.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 18,
                        "content": "key=(self.name, self.version, self.link),"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "candidate.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.8\\image\\1\\CopyPipInstall\\pip-23.2.1-py3-none-any\\pip\\_internal\\models\\candidate.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 18,
                        "content": "key=(self.name, self.version, self.link),"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "link.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.8\\image\\1\\CopyPipInstall\\pip-23.2.1-py3-none-any\\pip\\_internal\\models\\link.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 257,
                        "content": "super().__init__(key=url, defining_class=Link)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "auth.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.8\\image\\1\\CopyPipInstall\\pip-23.2.1-py3-none-any\\pip\\_internal\\network\\auth.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 320,
                        "content": "key=lambda candidate: commonprefix("
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "freeze.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.8\\image\\1\\CopyPipInstall\\pip-23.2.1-py3-none-any\\pip\\_internal\\operations\\freeze.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 142,
                        "content": "for installation in sorted(installations.values(), key=lambda x: x.name.lower()):"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "build_tracker.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.8\\image\\1\\CopyPipInstall\\pip-23.2.1-py3-none-any\\pip\\_internal\\operations\\build\\build_tracker.py",
                "vulnerability": "SHA-224",
                "lines": [
                    {
                        "line_number": 73,
                        "content": "hashed = hashlib.sha224(link.url_without_fragment.encode()).hexdigest()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-224 provides reduced security compared to larger variants."
            },
            {
                "language": "Python",
                "filename": "wheel.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.8\\image\\1\\CopyPipInstall\\pip-23.2.1-py3-none-any\\pip\\_internal\\operations\\install\\wheel.py",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 81,
                        "content": "\"\"\"Return (encoded_digest, length) for path using hashlib.sha256()\"\"\""
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Python",
                "filename": "misc.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.8\\image\\1\\CopyPipInstall\\pip-23.2.1-py3-none-any\\pip\\_internal\\utils\\misc.py",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 612,
                        "content": "\"\"\"Return (hash, length) for path using hashlib.sha256()\"\"\""
                    },
                    {
                        "line_number": 614,
                        "content": "h = hashlib.sha256()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Python",
                "filename": "file_cache.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.8\\image\\1\\CopyPipInstall\\pip-23.2.1-py3-none-any\\pip\\_vendor\\cachecontrol\\caches\\file_cache.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 187,
                        "content": "key = CacheController.cache_url(url)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "file_cache.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.8\\image\\1\\CopyPipInstall\\pip-23.2.1-py3-none-any\\pip\\_vendor\\cachecontrol\\caches\\file_cache.py",
                "vulnerability": "SHA-224",
                "lines": [
                    {
                        "line_number": 104,
                        "content": "return hashlib.sha224(x.encode()).hexdigest()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-224 provides reduced security compared to larger variants."
            },
            {
                "language": "Python",
                "filename": "__init__.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.8\\image\\1\\CopyPipInstall\\pip-23.2.1-py3-none-any\\pip\\_vendor\\chardet\\__init__.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 113,
                        "content": "return sorted(results, key=lambda result: -result[\"confidence\"])"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "__init__.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.8\\image\\1\\CopyPipInstall\\pip-23.2.1-py3-none-any\\pip\\_vendor\\chardet\\__init__.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 113,
                        "content": "return sorted(results, key=lambda result: -result[\"confidence\"])"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "compat.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.8\\image\\1\\CopyPipInstall\\pip-23.2.1-py3-none-any\\pip\\_vendor\\distlib\\compat.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 688,
                        "content": "link_prev, link_next, key = self.__map.pop(key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "database.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.8\\image\\1\\CopyPipInstall\\pip-23.2.1-py3-none-any\\pip\\_vendor\\distlib\\database.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 349,
                        "content": "self.key = self.name.lower()    # for case-insensitive comparisons"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "database.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.8\\image\\1\\CopyPipInstall\\pip-23.2.1-py3-none-any\\pip\\_vendor\\distlib\\database.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 349,
                        "content": "self.key = self.name.lower()    # for case-insensitive comparisons"
                    },
                    {
                        "line_number": 876,
                        "content": "s.key = n.lower()   # for case-insensitive comparisons"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "database.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.8\\image\\1\\CopyPipInstall\\pip-23.2.1-py3-none-any\\pip\\_vendor\\distlib\\database.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 526,
                        "content": "hasher = hashlib.md5"
                    },
                    {
                        "line_number": 1024,
                        "content": "return hashlib.md5(content).hexdigest()"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "index.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.8\\image\\1\\CopyPipInstall\\pip-23.2.1-py3-none-any\\pip\\_vendor\\distlib\\index.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 268,
                        "content": "md5_digest = hashlib.md5(file_data).hexdigest()"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "index.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.8\\image\\1\\CopyPipInstall\\pip-23.2.1-py3-none-any\\pip\\_vendor\\distlib\\index.py",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 269,
                        "content": "sha256_digest = hashlib.sha256(file_data).hexdigest()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Python",
                "filename": "locators.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.8\\image\\1\\CopyPipInstall\\pip-23.2.1-py3-none-any\\pip\\_vendor\\distlib\\locators.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 582,
                        "content": "result = sorted(result, key=lambda t: t[0], reverse=True)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "locators.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.8\\image\\1\\CopyPipInstall\\pip-23.2.1-py3-none-any\\pip\\_vendor\\distlib\\locators.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 582,
                        "content": "result = sorted(result, key=lambda t: t[0], reverse=True)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "version.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.8\\image\\1\\CopyPipInstall\\pip-23.2.1-py3-none-any\\pip\\_vendor\\distlib\\version.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 108,
                        "content": "self.key = self.name.lower()    # for case-insensitive comparisons"
                    },
                    {
                        "line_number": 163,
                        "content": "return self.key == other.key and self._parts == other._parts"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "version.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.8\\image\\1\\CopyPipInstall\\pip-23.2.1-py3-none-any\\pip\\_vendor\\distlib\\version.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 108,
                        "content": "self.key = self.name.lower()    # for case-insensitive comparisons"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "wheel.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.8\\image\\1\\CopyPipInstall\\pip-23.2.1-py3-none-any\\pip\\_vendor\\distlib\\wheel.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 407,
                        "content": "if key == 'scripts' and not p.endswith('.exe'):"
                    },
                    {
                        "line_number": 897,
                        "content": "key = '%s/PKG-INFO' % info_dir"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "wheel.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.8\\image\\1\\CopyPipInstall\\pip-23.2.1-py3-none-any\\pip\\_vendor\\distlib\\wheel.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 897,
                        "content": "key = '%s/PKG-INFO' % info_dir"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "__init__.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.8\\image\\1\\CopyPipInstall\\pip-23.2.1-py3-none-any\\pip\\_vendor\\pkg_resources\\__init__.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 2722,
                        "content": "self._key = key = self.project_name.lower()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "windows.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.8\\image\\1\\CopyPipInstall\\pip-23.2.1-py3-none-any\\pip\\_vendor\\platformdirs\\windows.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 199,
                        "content": "key = winreg.OpenKey(winreg.HKEY_CURRENT_USER, r\"Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders\")"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "lexer.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.8\\image\\1\\CopyPipInstall\\pip-23.2.1-py3-none-any\\pip\\_vendor\\pygments\\lexer.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 931,
                        "content": "key=lambda x: x[self._prof_sort_index],"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "sphinxext.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.8\\image\\1\\CopyPipInstall\\pip-23.2.1-py3-none-any\\pip\\_vendor\\pygments\\sphinxext.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 104,
                        "content": "for classname, data in sorted(LEXERS.items(), key=lambda x: x[1][1].lower()):"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "img.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.8\\image\\1\\CopyPipInstall\\pip-23.2.1-py3-none-any\\pip\\_vendor\\pygments\\formatters\\img.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 174,
                        "content": "key = _winreg.OpenKey(*keyname)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "img.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.8\\image\\1\\CopyPipInstall\\pip-23.2.1-py3-none-any\\pip\\_vendor\\pygments\\formatters\\img.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 174,
                        "content": "key = _winreg.OpenKey(*keyname)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "core.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.8\\image\\1\\CopyPipInstall\\pip-23.2.1-py3-none-any\\pip\\_vendor\\pyparsing\\core.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 4170,
                        "content": "fatals.sort(key=lambda e: -e.loc)"
                    },
                    {
                        "line_number": 4486,
                        "content": "fatals.sort(key=lambda e: -e.loc)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "core.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.8\\image\\1\\CopyPipInstall\\pip-23.2.1-py3-none-any\\pip\\_vendor\\pyparsing\\core.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 4172,
                        "content": "fatals.sort(key=lambda e: (-e.loc, -len(str(e.parser_element))))"
                    },
                    {
                        "line_number": 4488,
                        "content": "fatals.sort(key=lambda e: (-e.loc, -len(str(e.parser_element))))"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "auth.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.8\\image\\1\\CopyPipInstall\\pip-23.2.1-py3-none-any\\pip\\_vendor\\requests\\auth.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 148,
                        "content": "return hashlib.md5(x).hexdigest()"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "auth.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.8\\image\\1\\CopyPipInstall\\pip-23.2.1-py3-none-any\\pip\\_vendor\\requests\\auth.py",
                "vulnerability": "SHA-1",
                "lines": [
                    {
                        "line_number": 156,
                        "content": "return hashlib.sha1(x).hexdigest()"
                    },
                    {
                        "line_number": 205,
                        "content": "cnonce = hashlib.sha1(s).hexdigest()[:16]"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collisions."
            },
            {
                "language": "Python",
                "filename": "auth.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.8\\image\\1\\CopyPipInstall\\pip-23.2.1-py3-none-any\\pip\\_vendor\\requests\\auth.py",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 164,
                        "content": "return hashlib.sha256(x).hexdigest()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Python",
                "filename": "models.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.8\\image\\1\\CopyPipInstall\\pip-23.2.1-py3-none-any\\pip\\_vendor\\requests\\models.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 989,
                        "content": "key = link.get(\"rel\") or link.get(\"url\")"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "models.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.8\\image\\1\\CopyPipInstall\\pip-23.2.1-py3-none-any\\pip\\_vendor\\requests\\models.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 989,
                        "content": "key = link.get(\"rel\") or link.get(\"url\")"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "utils.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.8\\image\\1\\CopyPipInstall\\pip-23.2.1-py3-none-any\\pip\\_vendor\\requests\\utils.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 532,
                        "content": "key = param[:index_of_equals].strip(items_to_strip)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "scope.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.8\\image\\1\\CopyPipInstall\\pip-23.2.1-py3-none-any\\pip\\_vendor\\rich\\scope.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 46,
                        "content": "items = sorted(scope.items(), key=sort_items) if sort_keys else scope.items()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "_parser.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.8\\image\\1\\CopyPipInstall\\pip-23.2.1-py3-none-any\\pip\\_vendor\\tomli\\_parser.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 287,
                        "content": "pos, key = parse_key(src, pos)"
                    },
                    {
                        "line_number": 305,
                        "content": "pos, key = parse_key(src, pos)"
                    },
                    {
                        "line_number": 360,
                        "content": "pos, key = parse_key(src, pos)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "__init__.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.8\\image\\1\\CopyPipInstall\\setuptools-57.0.0-py3-none-any\\pkg_resources\\__init__.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 2640,
                        "content": "self._key = key = self.project_name.lower()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "appdirs.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.8\\image\\1\\CopyPipInstall\\setuptools-57.0.0-py3-none-any\\pkg_resources\\_vendor\\appdirs.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 471,
                        "content": "key = _winreg.OpenKey("
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "dist.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.8\\image\\1\\CopyPipInstall\\setuptools-57.0.0-py3-none-any\\setuptools\\dist.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 436,
                        "content": "key = pkg_resources.safe_name(str(attrs['name'])).lower()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "msvc.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.8\\image\\1\\CopyPipInstall\\setuptools-57.0.0-py3-none-any\\setuptools\\msvc.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 88,
                        "content": "key = vc_base % ('', version)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "msvc.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.8\\image\\1\\CopyPipInstall\\setuptools-57.0.0-py3-none-any\\setuptools\\msvc.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 95,
                        "content": "key = vc_base % ('Wow6432Node\\\\', version)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "egg_info.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.8\\image\\1\\CopyPipInstall\\setuptools-57.0.0-py3-none-any\\setuptools\\command\\egg_info.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 241,
                        "content": "if pd is not None and pd.key == self.egg_name.lower():"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "msvc9compiler.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.8\\image\\1\\CopyPipInstall\\setuptools-57.0.0-py3-none-any\\setuptools\\_distutils\\msvc9compiler.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 158,
                        "content": "key = RegEnumKey(h, 0)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "msvccompiler.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.8\\image\\1\\CopyPipInstall\\setuptools-57.0.0-py3-none-any\\setuptools\\_distutils\\msvccompiler.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 138,
                        "content": "key = RegEnumKey(h, 0)"
                    },
                    {
                        "line_number": 598,
                        "content": "key = (r\"%s\\%0.1f\\VC\\VC_OBJECTS_PLATFORM_INFO\\Win32\\Directories\""
                    },
                    {
                        "line_number": 601,
                        "content": "key = (r\"%s\\6.0\\Build System\\Components\\Platforms\""
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "msvccompiler.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.8\\image\\1\\CopyPipInstall\\setuptools-57.0.0-py3-none-any\\setuptools\\_distutils\\msvccompiler.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 601,
                        "content": "key = (r\"%s\\6.0\\Build System\\Components\\Platforms\""
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "_msvccompiler.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.8\\image\\1\\CopyPipInstall\\setuptools-57.0.0-py3-none-any\\setuptools\\_distutils\\_msvccompiler.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 34,
                        "content": "key = winreg.OpenKeyEx("
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "more.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.8\\image\\1\\CopyPipInstall\\setuptools-57.0.0-py3-none-any\\setuptools\\_vendor\\more_itertools\\more.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 413,
                        "content": ">>> key = lambda s: int(s)  # Sort by numeric value, not by string"
                    },
                    {
                        "line_number": 877,
                        "content": ">>> key = lambda x: x % 10  # Bucket by last digit"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "more.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.8\\image\\1\\CopyPipInstall\\setuptools-57.0.0-py3-none-any\\setuptools\\_vendor\\more_itertools\\more.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 413,
                        "content": ">>> key = lambda s: int(s)  # Sort by numeric value, not by string"
                    },
                    {
                        "line_number": 879,
                        "content": ">>> s = bucket(it, key=key, validator=validator)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "recipes.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.8\\image\\1\\CopyPipInstall\\setuptools-57.0.0-py3-none-any\\setuptools\\_vendor\\more_itertools\\recipes.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 400,
                        "content": "``key=frozenset``. For ``dict`` objects,"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "__init__.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.8\\image\\1\\CopyPipInstall\\setuptools-68.2.0-py3-none-any\\pkg_resources\\__init__.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 2722,
                        "content": "self._key = key = self.project_name.lower()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "more.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.8\\image\\1\\CopyPipInstall\\setuptools-68.2.0-py3-none-any\\pkg_resources\\_vendor\\more_itertools\\more.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 937,
                        "content": ">>> key = lambda x: x % 10  # Bucket by last digit"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "more.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.8\\image\\1\\CopyPipInstall\\setuptools-68.2.0-py3-none-any\\pkg_resources\\_vendor\\more_itertools\\more.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 939,
                        "content": ">>> s = bucket(it, key=key, validator=validator)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "recipes.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.8\\image\\1\\CopyPipInstall\\setuptools-68.2.0-py3-none-any\\pkg_resources\\_vendor\\more_itertools\\recipes.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 490,
                        "content": "``key=frozenset``. For ``dict`` objects,"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "windows.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.8\\image\\1\\CopyPipInstall\\setuptools-68.2.0-py3-none-any\\pkg_resources\\_vendor\\platformdirs\\windows.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 140,
                        "content": "key = winreg.OpenKey(winreg.HKEY_CURRENT_USER, r\"Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders\")"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "egg_info.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.8\\image\\1\\CopyPipInstall\\setuptools-68.2.0-py3-none-any\\setuptools\\command\\egg_info.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 255,
                        "content": "key = getattr(pd, \"key\", None) or getattr(pd, \"name\", None)"
                    },
                    {
                        "line_number": 256,
                        "content": "if pd is not None and key == self.egg_name.lower():"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "egg_info.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.8\\image\\1\\CopyPipInstall\\setuptools-68.2.0-py3-none-any\\setuptools\\command\\egg_info.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 255,
                        "content": "key = getattr(pd, \"key\", None) or getattr(pd, \"name\", None)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "_apply_pyprojecttoml.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.8\\image\\1\\CopyPipInstall\\setuptools-68.2.0-py3-none-any\\setuptools\\config\\_apply_pyprojecttoml.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 250,
                        "content": "key = json_compatible_key(key)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "msvc9compiler.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.8\\image\\1\\CopyPipInstall\\setuptools-68.2.0-py3-none-any\\setuptools\\_distutils\\msvc9compiler.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 177,
                        "content": "key = RegEnumKey(h, 0)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "msvccompiler.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.8\\image\\1\\CopyPipInstall\\setuptools-68.2.0-py3-none-any\\setuptools\\_distutils\\msvccompiler.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 161,
                        "content": "key = RegEnumKey(h, 0)"
                    },
                    {
                        "line_number": 640,
                        "content": "key = r\"{}\\{:0.1f}\\VC\\VC_OBJECTS_PLATFORM_INFO\\Win32\\Directories\".format("
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "_collections.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.8\\image\\1\\CopyPipInstall\\setuptools-68.2.0-py3-none-any\\setuptools\\_distutils\\_collections.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 159,
                        "content": "key = self._find_first_match_(sorted_keys, item)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "_msvccompiler.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.8\\image\\1\\CopyPipInstall\\setuptools-68.2.0-py3-none-any\\setuptools\\_distutils\\_msvccompiler.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 41,
                        "content": "key = winreg.OpenKeyEx("
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "install.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.8\\image\\1\\CopyPipInstall\\setuptools-68.2.0-py3-none-any\\setuptools\\_distutils\\command\\install.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 143,
                        "content": "os_name, sep, key = name.partition('_')"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "more.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.8\\image\\1\\CopyPipInstall\\setuptools-68.2.0-py3-none-any\\setuptools\\_vendor\\more_itertools\\more.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 412,
                        "content": ">>> key = lambda s: int(s)  # Sort by numeric value, not by string"
                    },
                    {
                        "line_number": 876,
                        "content": ">>> key = lambda x: x % 10  # Bucket by last digit"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "more.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.8\\image\\1\\CopyPipInstall\\setuptools-68.2.0-py3-none-any\\setuptools\\_vendor\\more_itertools\\more.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 412,
                        "content": ">>> key = lambda s: int(s)  # Sort by numeric value, not by string"
                    },
                    {
                        "line_number": 878,
                        "content": ">>> s = bucket(it, key=key, validator=validator)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "recipes.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.8\\image\\1\\CopyPipInstall\\setuptools-68.2.0-py3-none-any\\setuptools\\_vendor\\more_itertools\\recipes.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 400,
                        "content": "``key=frozenset``. For ``dict`` objects,"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "_parser.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.8\\image\\1\\CopyPipInstall\\setuptools-68.2.0-py3-none-any\\setuptools\\_vendor\\tomli\\_parser.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 287,
                        "content": "pos, key = parse_key(src, pos)"
                    },
                    {
                        "line_number": 305,
                        "content": "pos, key = parse_key(src, pos)"
                    },
                    {
                        "line_number": 360,
                        "content": "pos, key = parse_key(src, pos)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "wheelfile.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.8\\image\\1\\CopyPipInstall\\wheel-0.36.2-py2.py3-none-any\\wheel\\wheelfile.py",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 36,
                        "content": "_default_algorithm = hashlib.sha256"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Python",
                "filename": "wheelfile.py",
                "path": "C:/Users\\alexa\\AppData\\Local\\pypa\\virtualenv\\wheel\\3.8\\image\\1\\CopyPipInstall\\wheel-0.41.2-py3-none-any\\wheel\\wheelfile.py",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 38,
                        "content": "_default_algorithm = hashlib.sha256"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Java",
                "filename": "f37e.java",
                "path": "C:/Users\\alexa\\AppData\\Roaming\\Code\\User\\History\\-10d7a86\\f37e.java",
                "vulnerability": "SHA-1",
                "lines": [
                    {
                        "line_number": 8,
                        "content": "MessageDigest sha1 = MessageDigest.getInstance(\"SHA-1\");"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collisions."
            },
            {
                "language": "Java",
                "filename": "Qez3.java",
                "path": "C:/Users\\alexa\\AppData\\Roaming\\Code\\User\\History\\-10d7a86\\Qez3.java",
                "vulnerability": "SHA-1",
                "lines": [
                    {
                        "line_number": 8,
                        "content": "MessageDigest sha1 = MessageDigest.getInstance(\"SHA-1\");"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collisions."
            },
            {
                "language": "C",
                "filename": "K6Ha.c",
                "path": "C:/Users\\alexa\\AppData\\Roaming\\Code\\User\\History\\-2463ab59\\K6Ha.c",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 12,
                        "content": "EVP_EncryptInit_ex(ctx, EVP_aes_128_cbc(), NULL, key, iv);  // Static IV used here"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "QKNa.py",
                "path": "C:/Users\\alexa\\AppData\\Roaming\\Code\\User\\History\\-27b357d8\\QKNa.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 5,
                        "content": "key = get_random_bytes(24)  # AES-192: 192-bit (24 bytes)"
                    },
                    {
                        "line_number": 6,
                        "content": "cipher = AES.new(key, AES.MODE_ECB)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "QKNa.py",
                "path": "C:/Users\\alexa\\AppData\\Roaming\\Code\\User\\History\\-27b357d8\\QKNa.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 5,
                        "content": "key = get_random_bytes(24)  # AES-192: 192-bit (24 bytes)"
                    },
                    {
                        "line_number": 6,
                        "content": "cipher = AES.new(key, AES.MODE_ECB)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Java",
                "filename": "1u2x.java",
                "path": "C:/Users\\alexa\\AppData\\Roaming\\Code\\User\\History\\-348df99d\\1u2x.java",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 8,
                        "content": "MessageDigest md5 = MessageDigest.getInstance(\"MD5\");"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "9JY2.py",
                "path": "C:/Users\\alexa\\AppData\\Roaming\\Code\\User\\History\\-35c03080\\9JY2.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 2,
                        "content": "key = b\"12345678\"  # Key for RC4"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "9JY2.py",
                "path": "C:/Users\\alexa\\AppData\\Roaming\\Code\\User\\History\\-35c03080\\9JY2.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 2,
                        "content": "key = b\"12345678\"  # Key for RC4"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Java",
                "filename": "8Ozr.java",
                "path": "C:/Users\\alexa\\AppData\\Roaming\\Code\\User\\History\\-3661b558\\8Ozr.java",
                "vulnerability": "DES",
                "lines": [
                    {
                        "line_number": 18,
                        "content": "SecretKey desKey = new SecretKeySpec(\"8bytekey\".getBytes(), \"DES\");"
                    },
                    {
                        "line_number": 19,
                        "content": "Cipher desCipher = Cipher.getInstance(\"DES/ECB/PKCS5Padding\");"
                    }
                ],
                "severity": "Very High",
                "explanation": "DES is insecure due to its 56-bit key size, making it vulnerable to brute-force attacks."
            },
            {
                "language": "Java",
                "filename": "8Ozr.java",
                "path": "C:/Users\\alexa\\AppData\\Roaming\\Code\\User\\History\\-3661b558\\8Ozr.java",
                "vulnerability": "ECB_Mode",
                "lines": [
                    {
                        "line_number": 12,
                        "content": "Cipher aesCipher = Cipher.getInstance(\"AES/ECB/PKCS5Padding\");"
                    },
                    {
                        "line_number": 19,
                        "content": "Cipher desCipher = Cipher.getInstance(\"DES/ECB/PKCS5Padding\");"
                    }
                ],
                "severity": "High",
                "explanation": "ECB mode leaks plaintext patterns."
            },
            {
                "language": "Java",
                "filename": "KE8f.java",
                "path": "C:/Users\\alexa\\AppData\\Roaming\\Code\\User\\History\\-3661b558\\KE8f.java",
                "vulnerability": "DES",
                "lines": [
                    {
                        "line_number": 18,
                        "content": "SecretKey desKey = new SecretKeySpec(\"8bytekey\".getBytes(), \"DES\");"
                    },
                    {
                        "line_number": 19,
                        "content": "Cipher desCipher = Cipher.getInstance(\"DES/ECB/PKCS5Padding\");"
                    }
                ],
                "severity": "Very High",
                "explanation": "DES is insecure due to its 56-bit key size, making it vulnerable to brute-force attacks."
            },
            {
                "language": "Java",
                "filename": "KE8f.java",
                "path": "C:/Users\\alexa\\AppData\\Roaming\\Code\\User\\History\\-3661b558\\KE8f.java",
                "vulnerability": "ECB_Mode",
                "lines": [
                    {
                        "line_number": 12,
                        "content": "Cipher aesCipher = Cipher.getInstance(\"AES/ECB/PKCS5Padding\");"
                    },
                    {
                        "line_number": 19,
                        "content": "Cipher desCipher = Cipher.getInstance(\"DES/ECB/PKCS5Padding\");"
                    }
                ],
                "severity": "High",
                "explanation": "ECB mode leaks plaintext patterns."
            },
            {
                "language": "C",
                "filename": "M0D6.c",
                "path": "C:/Users\\alexa\\AppData\\Roaming\\Code\\User\\History\\-3e0c3e\\M0D6.c",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 9,
                        "content": "MD5_Init(&ctx);                       // Initialize MD5"
                    },
                    {
                        "line_number": 10,
                        "content": "MD5_Update(&ctx, input, strlen(input)); // Update with data"
                    },
                    {
                        "line_number": 11,
                        "content": "MD5_Final(digest, &ctx);              // Finalize hash"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "0kJG.py",
                "path": "C:/Users\\alexa\\AppData\\Roaming\\Code\\User\\History\\-4a5aadfc\\0kJG.py",
                "vulnerability": "DES",
                "lines": [
                    {
                        "line_number": 9,
                        "content": "des_ecb = DES.new(b\"8bytekey\", DES.MODE_ECB)"
                    }
                ],
                "severity": "Very High",
                "explanation": "DES is insecure due to its 56-bit key size, making it vulnerable to brute-force attacks."
            },
            {
                "language": "Python",
                "filename": "0kJG.py",
                "path": "C:/Users\\alexa\\AppData\\Roaming\\Code\\User\\History\\-4a5aadfc\\0kJG.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 4,
                        "content": "aes_ecb = AES.new(b\"Sixteen byte key\", AES.MODE_ECB)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "0kJG.py",
                "path": "C:/Users\\alexa\\AppData\\Roaming\\Code\\User\\History\\-4a5aadfc\\0kJG.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 4,
                        "content": "aes_ecb = AES.new(b\"Sixteen byte key\", AES.MODE_ECB)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "08a2.py",
                "path": "C:/Users\\alexa\\AppData\\Roaming\\Code\\User\\History\\-58ac1bb8\\08a2.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 4,
                        "content": "key = b\"shortkey\"  # 8 bytes (64 bits)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "08a2.py",
                "path": "C:/Users\\alexa\\AppData\\Roaming\\Code\\User\\History\\-58ac1bb8\\08a2.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 4,
                        "content": "key = b\"shortkey\"  # 8 bytes (64 bits)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "08a2.py",
                "path": "C:/Users\\alexa\\AppData\\Roaming\\Code\\User\\History\\-58ac1bb8\\08a2.py",
                "vulnerability": "Blowfish_Short_Key",
                "lines": [
                    {
                        "line_number": 1,
                        "content": "from Crypto.Cipher import Blowfish"
                    }
                ],
                "severity": "High",
                "explanation": "Short key sizes are inadequate for modern security standards."
            },
            {
                "language": "Java",
                "filename": "oVkj.java",
                "path": "C:/Users\\alexa\\AppData\\Roaming\\Code\\User\\History\\-5e8b6346\\oVkj.java",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 8,
                        "content": "MessageDigest sha256 = MessageDigest.getInstance(\"SHA-256\");"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Java",
                "filename": "XIW8.java",
                "path": "C:/Users\\alexa\\AppData\\Roaming\\Code\\User\\History\\-5e8b6346\\XIW8.java",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 8,
                        "content": "MessageDigest sha256 = MessageDigest.getInstance(\"SHA-256\");"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Java",
                "filename": "fuA9.java",
                "path": "C:/Users\\alexa\\AppData\\Roaming\\Code\\User\\History\\-616a6350\\fuA9.java",
                "vulnerability": "DES",
                "lines": [
                    {
                        "line_number": 22,
                        "content": "SecretKey desKey = new javax.crypto.spec.SecretKeySpec(\"8bytekey\".getBytes(), \"DES\");"
                    },
                    {
                        "line_number": 25,
                        "content": "Cipher desCipher = Cipher.getInstance(\"DES/CBC/PKCS5Padding\");"
                    }
                ],
                "severity": "Very High",
                "explanation": "DES is insecure due to its 56-bit key size, making it vulnerable to brute-force attacks."
            },
            {
                "language": "Java",
                "filename": "fuA9.java",
                "path": "C:/Users\\alexa\\AppData\\Roaming\\Code\\User\\History\\-616a6350\\fuA9.java",
                "vulnerability": "CBC_Static_IV",
                "lines": [
                    {
                        "line_number": 16,
                        "content": "Cipher aesCipher = Cipher.getInstance(\"AES/CBC/PKCS5Padding\");"
                    },
                    {
                        "line_number": 25,
                        "content": "Cipher desCipher = Cipher.getInstance(\"DES/CBC/PKCS5Padding\");"
                    }
                ],
                "severity": "High",
                "explanation": "Static IVs in CBC mode weaken security and allow chosen-plaintext attacks."
            },
            {
                "language": "Java",
                "filename": "RDJ8.java",
                "path": "C:/Users\\alexa\\AppData\\Roaming\\Code\\User\\History\\-64caedf\\RDJ8.java",
                "vulnerability": "ECB_Mode",
                "lines": [
                    {
                        "line_number": 10,
                        "content": "Cipher cipher = Cipher.getInstance(\"AES/ECB/PKCS5Padding\");"
                    }
                ],
                "severity": "High",
                "explanation": "ECB mode leaks plaintext patterns."
            },
            {
                "language": "Python",
                "filename": "yYP2.py",
                "path": "C:/Users\\alexa\\AppData\\Roaming\\Code\\User\\History\\-6811bdbb\\yYP2.py",
                "vulnerability": "DES",
                "lines": [
                    {
                        "line_number": 14,
                        "content": "cipher = DES.new(key, DES.MODE_CBC, iv)"
                    }
                ],
                "severity": "Very High",
                "explanation": "DES is insecure due to its 56-bit key size, making it vulnerable to brute-force attacks."
            },
            {
                "language": "Python",
                "filename": "yYP2.py",
                "path": "C:/Users\\alexa\\AppData\\Roaming\\Code\\User\\History\\-6811bdbb\\yYP2.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 5,
                        "content": "key = b\"Sixteen byte key\""
                    },
                    {
                        "line_number": 7,
                        "content": "cipher = AES.new(key, AES.MODE_CBC, iv)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "yYP2.py",
                "path": "C:/Users\\alexa\\AppData\\Roaming\\Code\\User\\History\\-6811bdbb\\yYP2.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 7,
                        "content": "cipher = AES.new(key, AES.MODE_CBC, iv)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "C",
                "filename": "J5cM.c",
                "path": "C:/Users\\alexa\\AppData\\Roaming\\Code\\User\\History\\-6e3719bc\\J5cM.c",
                "vulnerability": "Blowfish_Short_Key",
                "lines": [
                    {
                        "line_number": 11,
                        "content": "BF_set_key(&bf_key, 8, key);  // Setting a short key"
                    }
                ],
                "severity": "High",
                "explanation": "Short key sizes are inadequate for modern security standards."
            },
            {
                "language": "Python",
                "filename": "Bs3T.py",
                "path": "C:/Users\\alexa\\AppData\\Roaming\\Code\\User\\History\\-7837976\\Bs3T.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 4,
                        "content": "md5_hash = hashlib.md5(b\"test\").hexdigest()"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Java",
                "filename": "KCVA.java",
                "path": "C:/Users\\alexa\\AppData\\Roaming\\Code\\User\\History\\-7e9a5cdf\\KCVA.java",
                "vulnerability": "ECDH",
                "lines": [
                    {
                        "line_number": 15,
                        "content": "KeyAgreement ka = KeyAgreement.getInstance(\"ECDH\");"
                    }
                ],
                "severity": "Low",
                "explanation": "ECDH is not quantum-safe; quantum computers can break its security."
            },
            {
                "language": "C",
                "filename": "rjBW.c",
                "path": "C:/Users\\alexa\\AppData\\Roaming\\Code\\User\\History\\-82106da\\rjBW.c",
                "vulnerability": "SHA-1",
                "lines": [
                    {
                        "line_number": 9,
                        "content": "SHA1_Init(&ctx);                      // Initialize SHA-1"
                    },
                    {
                        "line_number": 10,
                        "content": "SHA1_Update(&ctx, input, strlen(input)); // Update with data"
                    },
                    {
                        "line_number": 11,
                        "content": "SHA1_Final(digest, &ctx);             // Finalize hash"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collisions."
            },
            {
                "language": "Java",
                "filename": "QGhC.java",
                "path": "C:/Users\\alexa\\AppData\\Roaming\\Code\\User\\History\\-83fc77f\\QGhC.java",
                "vulnerability": "ECB_Mode",
                "lines": [
                    {
                        "line_number": 10,
                        "content": "Cipher cipher = Cipher.getInstance(\"AES/ECB/PKCS5Padding\");"
                    }
                ],
                "severity": "High",
                "explanation": "ECB mode leaks plaintext patterns."
            },
            {
                "language": "C",
                "filename": "8kAE.c",
                "path": "C:/Users\\alexa\\AppData\\Roaming\\Code\\User\\History\\1237e6aa\\8kAE.c",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 9,
                        "content": "SHA256_Init(&ctx);                    // Initialize SHA-256"
                    },
                    {
                        "line_number": 10,
                        "content": "SHA256_Update(&ctx, input, strlen(input)); // Update with data"
                    },
                    {
                        "line_number": 11,
                        "content": "SHA256_Final(digest, &ctx);           // Finalize hash"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Java",
                "filename": "oYjg.java",
                "path": "C:/Users\\alexa\\AppData\\Roaming\\Code\\User\\History\\13e8c05f\\oYjg.java",
                "vulnerability": "RSA_512_1024",
                "lines": [
                    {
                        "line_number": 5,
                        "content": "KeyPairGenerator keyPairGen = KeyPairGenerator.getInstance(\"RSA\");"
                    }
                ],
                "severity": "High",
                "explanation": "RSA with short keys (512, 1024 bits) is easily breakable."
            },
            {
                "language": "Java",
                "filename": "oYjg.java",
                "path": "C:/Users\\alexa\\AppData\\Roaming\\Code\\User\\History\\13e8c05f\\oYjg.java",
                "vulnerability": "RSA_2048_3072",
                "lines": [
                    {
                        "line_number": 5,
                        "content": "KeyPairGenerator keyPairGen = KeyPairGenerator.getInstance(\"RSA\");"
                    }
                ],
                "severity": "Very Low",
                "explanation": "RSA with 2048 or 3072 bits is secure against classical attacks but not quantum-resistant."
            },
            {
                "language": "Python",
                "filename": "qWkI.py",
                "path": "C:/Users\\alexa\\AppData\\Roaming\\Code\\User\\History\\1f6d68c8\\qWkI.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 5,
                        "content": "key = get_random_bytes(16)  # AES-128: 128-bit (16 bytes)"
                    },
                    {
                        "line_number": 6,
                        "content": "cipher = AES.new(key, AES.MODE_ECB)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "qWkI.py",
                "path": "C:/Users\\alexa\\AppData\\Roaming\\Code\\User\\History\\1f6d68c8\\qWkI.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 5,
                        "content": "key = get_random_bytes(16)  # AES-128: 128-bit (16 bytes)"
                    },
                    {
                        "line_number": 6,
                        "content": "cipher = AES.new(key, AES.MODE_ECB)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Java",
                "filename": "kzsW.java",
                "path": "C:/Users\\alexa\\AppData\\Roaming\\Code\\User\\History\\1f86d0c6\\kzsW.java",
                "vulnerability": "DH_KE_Weak_Parameters",
                "lines": [
                    {
                        "line_number": 6,
                        "content": "KeyPairGenerator keyPairGenWeak = KeyPairGenerator.getInstance(\"DH\");"
                    },
                    {
                        "line_number": 12,
                        "content": "KeyPairGenerator keyPairGenQuantum = KeyPairGenerator.getInstance(\"DH\");"
                    }
                ],
                "severity": "High",
                "explanation": "Small modulus sizes (<2048 bits) in DH are easily attacked."
            },
            {
                "language": "Java",
                "filename": "kzsW.java",
                "path": "C:/Users\\alexa\\AppData\\Roaming\\Code\\User\\History\\1f86d0c6\\kzsW.java",
                "vulnerability": "DH_KE_Quantum_Threat",
                "lines": [
                    {
                        "line_number": 6,
                        "content": "KeyPairGenerator keyPairGenWeak = KeyPairGenerator.getInstance(\"DH\");"
                    },
                    {
                        "line_number": 12,
                        "content": "KeyPairGenerator keyPairGenQuantum = KeyPairGenerator.getInstance(\"DH\");"
                    }
                ],
                "severity": "Very High",
                "explanation": "DH is not secure against quantum computers."
            },
            {
                "language": "Java",
                "filename": "xgJq.java",
                "path": "C:/Users\\alexa\\AppData\\Roaming\\Code\\User\\History\\1f86d0c6\\xgJq.java",
                "vulnerability": "DH_KE_Weak_Parameters",
                "lines": [
                    {
                        "line_number": 6,
                        "content": "KeyPairGenerator keyPairGenWeak = KeyPairGenerator.getInstance(\"DH\");"
                    },
                    {
                        "line_number": 12,
                        "content": "KeyPairGenerator keyPairGenQuantum = KeyPairGenerator.getInstance(\"DH\");"
                    }
                ],
                "severity": "High",
                "explanation": "Small modulus sizes (<2048 bits) in DH are easily attacked."
            },
            {
                "language": "Java",
                "filename": "xgJq.java",
                "path": "C:/Users\\alexa\\AppData\\Roaming\\Code\\User\\History\\1f86d0c6\\xgJq.java",
                "vulnerability": "DH_KE_Quantum_Threat",
                "lines": [
                    {
                        "line_number": 6,
                        "content": "KeyPairGenerator keyPairGenWeak = KeyPairGenerator.getInstance(\"DH\");"
                    },
                    {
                        "line_number": 12,
                        "content": "KeyPairGenerator keyPairGenQuantum = KeyPairGenerator.getInstance(\"DH\");"
                    }
                ],
                "severity": "Very High",
                "explanation": "DH is not secure against quantum computers."
            },
            {
                "language": "Python",
                "filename": "0Swa.py",
                "path": "C:/Users\\alexa\\AppData\\Roaming\\Code\\User\\History\\21f94b44\\0Swa.py",
                "vulnerability": "SHA-1",
                "lines": [
                    {
                        "line_number": 18,
                        "content": "'passwordHash': hashlib.sha1(password.encode()).hexdigest(),"
                    },
                    {
                        "line_number": 114,
                        "content": "'passwordHash': hashlib.sha1(password.encode()).hexdigest()"
                    },
                    {
                        "line_number": 134,
                        "content": "'passwordHash': hashlib.sha1(password.encode()).hexdigest()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collisions."
            },
            {
                "language": "Python",
                "filename": "3LZa.py",
                "path": "C:/Users\\alexa\\AppData\\Roaming\\Code\\User\\History\\21f94b44\\3LZa.py",
                "vulnerability": "SHA-1",
                "lines": [
                    {
                        "line_number": 18,
                        "content": "'passwordHash': hashlib.sha1(password.encode()).hexdigest(),"
                    },
                    {
                        "line_number": 110,
                        "content": "'passwordHash': hashlib.sha1(password.encode()).hexdigest()"
                    },
                    {
                        "line_number": 130,
                        "content": "'passwordHash': hashlib.sha1(password.encode()).hexdigest()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collisions."
            },
            {
                "language": "Python",
                "filename": "5Eml.py",
                "path": "C:/Users\\alexa\\AppData\\Roaming\\Code\\User\\History\\21f94b44\\5Eml.py",
                "vulnerability": "SHA-1",
                "lines": [
                    {
                        "line_number": 18,
                        "content": "'passwordHash': hashlib.sha1(password.encode()).hexdigest(),"
                    },
                    {
                        "line_number": 110,
                        "content": "'passwordHash': hashlib.sha1(password.encode()).hexdigest()"
                    },
                    {
                        "line_number": 130,
                        "content": "'passwordHash': hashlib.sha1(password.encode()).hexdigest()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collisions."
            },
            {
                "language": "Python",
                "filename": "B6wW.py",
                "path": "C:/Users\\alexa\\AppData\\Roaming\\Code\\User\\History\\21f94b44\\B6wW.py",
                "vulnerability": "SHA-1",
                "lines": [
                    {
                        "line_number": 18,
                        "content": "'passwordHash': hashlib.sha1(password.encode()).hexdigest(),"
                    },
                    {
                        "line_number": 110,
                        "content": "'passwordHash': hashlib.sha1(password.encode()).hexdigest()"
                    },
                    {
                        "line_number": 130,
                        "content": "'passwordHash': hashlib.sha1(password.encode()).hexdigest()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collisions."
            },
            {
                "language": "Python",
                "filename": "EGqT.py",
                "path": "C:/Users\\alexa\\AppData\\Roaming\\Code\\User\\History\\21f94b44\\EGqT.py",
                "vulnerability": "SHA-1",
                "lines": [
                    {
                        "line_number": 18,
                        "content": "'passwordHash': hashlib.sha1(password.encode()).hexdigest(),"
                    },
                    {
                        "line_number": 112,
                        "content": "'passwordHash': hashlib.sha1(password.encode()).hexdigest()"
                    },
                    {
                        "line_number": 132,
                        "content": "'passwordHash': hashlib.sha1(password.encode()).hexdigest()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collisions."
            },
            {
                "language": "Python",
                "filename": "EOJh.py",
                "path": "C:/Users\\alexa\\AppData\\Roaming\\Code\\User\\History\\21f94b44\\EOJh.py",
                "vulnerability": "SHA-1",
                "lines": [
                    {
                        "line_number": 18,
                        "content": "'passwordHash': hashlib.sha1(password.encode()).hexdigest(),"
                    },
                    {
                        "line_number": 110,
                        "content": "'passwordHash': hashlib.sha1(password.encode()).hexdigest()"
                    },
                    {
                        "line_number": 130,
                        "content": "'passwordHash': hashlib.sha1(password.encode()).hexdigest()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collisions."
            },
            {
                "language": "Python",
                "filename": "K07m.py",
                "path": "C:/Users\\alexa\\AppData\\Roaming\\Code\\User\\History\\21f94b44\\K07m.py",
                "vulnerability": "SHA-1",
                "lines": [
                    {
                        "line_number": 18,
                        "content": "'passwordHash': hashlib.sha1(password.encode()).hexdigest(),"
                    },
                    {
                        "line_number": 110,
                        "content": "'passwordHash': hashlib.sha1(password.encode()).hexdigest()"
                    },
                    {
                        "line_number": 130,
                        "content": "'passwordHash': hashlib.sha1(password.encode()).hexdigest()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collisions."
            },
            {
                "language": "Python",
                "filename": "kVEw.py",
                "path": "C:/Users\\alexa\\AppData\\Roaming\\Code\\User\\History\\21f94b44\\kVEw.py",
                "vulnerability": "SHA-1",
                "lines": [
                    {
                        "line_number": 18,
                        "content": "'passwordHash': hashlib.sha1(password.encode()).hexdigest(),"
                    },
                    {
                        "line_number": 110,
                        "content": "'passwordHash': hashlib.sha1(password.encode()).hexdigest()"
                    },
                    {
                        "line_number": 130,
                        "content": "'passwordHash': hashlib.sha1(password.encode()).hexdigest()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collisions."
            },
            {
                "language": "Python",
                "filename": "mnAy.py",
                "path": "C:/Users\\alexa\\AppData\\Roaming\\Code\\User\\History\\21f94b44\\mnAy.py",
                "vulnerability": "SHA-1",
                "lines": [
                    {
                        "line_number": 18,
                        "content": "'passwordHash': hashlib.sha1(password.encode()).hexdigest(),"
                    },
                    {
                        "line_number": 110,
                        "content": "'passwordHash': hashlib.sha1(password.encode()).hexdigest()"
                    },
                    {
                        "line_number": 130,
                        "content": "'passwordHash': hashlib.sha1(password.encode()).hexdigest()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collisions."
            },
            {
                "language": "Python",
                "filename": "oqiF.py",
                "path": "C:/Users\\alexa\\AppData\\Roaming\\Code\\User\\History\\21f94b44\\oqiF.py",
                "vulnerability": "SHA-1",
                "lines": [
                    {
                        "line_number": 18,
                        "content": "'passwordHash': hashlib.sha1(password.encode()).hexdigest(),"
                    },
                    {
                        "line_number": 110,
                        "content": "'passwordHash': hashlib.sha1(password.encode()).hexdigest()"
                    },
                    {
                        "line_number": 130,
                        "content": "'passwordHash': hashlib.sha1(password.encode()).hexdigest()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collisions."
            },
            {
                "language": "Python",
                "filename": "OzRp.py",
                "path": "C:/Users\\alexa\\AppData\\Roaming\\Code\\User\\History\\21f94b44\\OzRp.py",
                "vulnerability": "SHA-1",
                "lines": [
                    {
                        "line_number": 18,
                        "content": "'passwordHash': hashlib.sha1(password.encode()).hexdigest(),"
                    },
                    {
                        "line_number": 112,
                        "content": "'passwordHash': hashlib.sha1(password.encode()).hexdigest()"
                    },
                    {
                        "line_number": 132,
                        "content": "'passwordHash': hashlib.sha1(password.encode()).hexdigest()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collisions."
            },
            {
                "language": "Python",
                "filename": "q5eR.py",
                "path": "C:/Users\\alexa\\AppData\\Roaming\\Code\\User\\History\\21f94b44\\q5eR.py",
                "vulnerability": "SHA-1",
                "lines": [
                    {
                        "line_number": 18,
                        "content": "'passwordHash': hashlib.sha1(password.encode()).hexdigest(),"
                    },
                    {
                        "line_number": 110,
                        "content": "'passwordHash': hashlib.sha1(password.encode()).hexdigest()"
                    },
                    {
                        "line_number": 130,
                        "content": "'passwordHash': hashlib.sha1(password.encode()).hexdigest()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collisions."
            },
            {
                "language": "Python",
                "filename": "Sz07.py",
                "path": "C:/Users\\alexa\\AppData\\Roaming\\Code\\User\\History\\21f94b44\\Sz07.py",
                "vulnerability": "SHA-1",
                "lines": [
                    {
                        "line_number": 18,
                        "content": "'passwordHash': hashlib.sha1(password.encode()).hexdigest(),"
                    },
                    {
                        "line_number": 110,
                        "content": "'passwordHash': hashlib.sha1(password.encode()).hexdigest()"
                    },
                    {
                        "line_number": 130,
                        "content": "'passwordHash': hashlib.sha1(password.encode()).hexdigest()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collisions."
            },
            {
                "language": "Python",
                "filename": "tExT.py",
                "path": "C:/Users\\alexa\\AppData\\Roaming\\Code\\User\\History\\21f94b44\\tExT.py",
                "vulnerability": "SHA-1",
                "lines": [
                    {
                        "line_number": 18,
                        "content": "'passwordHash': hashlib.sha1(password.encode()).hexdigest(),"
                    },
                    {
                        "line_number": 113,
                        "content": "'passwordHash': hashlib.sha1(password.encode()).hexdigest()"
                    },
                    {
                        "line_number": 133,
                        "content": "'passwordHash': hashlib.sha1(password.encode()).hexdigest()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collisions."
            },
            {
                "language": "Python",
                "filename": "WEtu.py",
                "path": "C:/Users\\alexa\\AppData\\Roaming\\Code\\User\\History\\21f94b44\\WEtu.py",
                "vulnerability": "SHA-1",
                "lines": [
                    {
                        "line_number": 18,
                        "content": "'passwordHash': hashlib.sha1(password.encode()).hexdigest(),"
                    },
                    {
                        "line_number": 112,
                        "content": "'passwordHash': hashlib.sha1(password.encode()).hexdigest()"
                    },
                    {
                        "line_number": 132,
                        "content": "'passwordHash': hashlib.sha1(password.encode()).hexdigest()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collisions."
            },
            {
                "language": "Python",
                "filename": "WuRw.py",
                "path": "C:/Users\\alexa\\AppData\\Roaming\\Code\\User\\History\\21f94b44\\WuRw.py",
                "vulnerability": "SHA-1",
                "lines": [
                    {
                        "line_number": 18,
                        "content": "'passwordHash': hashlib.sha1(password.encode()).hexdigest(),"
                    },
                    {
                        "line_number": 110,
                        "content": "'passwordHash': hashlib.sha1(password.encode()).hexdigest()"
                    },
                    {
                        "line_number": 130,
                        "content": "'passwordHash': hashlib.sha1(password.encode()).hexdigest()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collisions."
            },
            {
                "language": "Python",
                "filename": "xJKm.py",
                "path": "C:/Users\\alexa\\AppData\\Roaming\\Code\\User\\History\\21f94b44\\xJKm.py",
                "vulnerability": "SHA-1",
                "lines": [
                    {
                        "line_number": 18,
                        "content": "'passwordHash': hashlib.sha1(password.encode()).hexdigest(),"
                    },
                    {
                        "line_number": 110,
                        "content": "'passwordHash': hashlib.sha1(password.encode()).hexdigest()"
                    },
                    {
                        "line_number": 130,
                        "content": "'passwordHash': hashlib.sha1(password.encode()).hexdigest()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collisions."
            },
            {
                "language": "Python",
                "filename": "YYcy.py",
                "path": "C:/Users\\alexa\\AppData\\Roaming\\Code\\User\\History\\21f94b44\\YYcy.py",
                "vulnerability": "SHA-1",
                "lines": [
                    {
                        "line_number": 18,
                        "content": "'passwordHash': hashlib.sha1(password.encode()).hexdigest(),"
                    },
                    {
                        "line_number": 111,
                        "content": "'passwordHash': hashlib.sha1(password.encode()).hexdigest()"
                    },
                    {
                        "line_number": 131,
                        "content": "'passwordHash': hashlib.sha1(password.encode()).hexdigest()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collisions."
            },
            {
                "language": "Python",
                "filename": "ZfzW.py",
                "path": "C:/Users\\alexa\\AppData\\Roaming\\Code\\User\\History\\21f94b44\\ZfzW.py",
                "vulnerability": "SHA-1",
                "lines": [
                    {
                        "line_number": 18,
                        "content": "'passwordHash': hashlib.sha1(password.encode()).hexdigest(),"
                    },
                    {
                        "line_number": 112,
                        "content": "'passwordHash': hashlib.sha1(password.encode()).hexdigest()"
                    },
                    {
                        "line_number": 132,
                        "content": "'passwordHash': hashlib.sha1(password.encode()).hexdigest()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collisions."
            },
            {
                "language": "Python",
                "filename": "ZuPF.py",
                "path": "C:/Users\\alexa\\AppData\\Roaming\\Code\\User\\History\\21f94b44\\ZuPF.py",
                "vulnerability": "SHA-1",
                "lines": [
                    {
                        "line_number": 18,
                        "content": "'passwordHash': hashlib.sha1(password.encode()).hexdigest(),"
                    },
                    {
                        "line_number": 112,
                        "content": "'passwordHash': hashlib.sha1(password.encode()).hexdigest()"
                    },
                    {
                        "line_number": 132,
                        "content": "'passwordHash': hashlib.sha1(password.encode()).hexdigest()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collisions."
            },
            {
                "language": "C",
                "filename": "7QvN.c",
                "path": "C:/Users\\alexa\\AppData\\Roaming\\Code\\User\\History\\29b6e30\\7QvN.c",
                "vulnerability": "DH_KE_Quantum_Threat",
                "lines": [
                    {
                        "line_number": 7,
                        "content": "DH_generate_parameters_ex(dh, prime_length, DH_GENERATOR_2, NULL);"
                    },
                    {
                        "line_number": 15,
                        "content": "DH_generate_parameters_ex(dh, prime_length, DH_GENERATOR_2, NULL);"
                    }
                ],
                "severity": "Very High",
                "explanation": "DH is not secure against quantum computers."
            },
            {
                "language": "Python",
                "filename": "d7dI.py",
                "path": "C:/Users\\alexa\\AppData\\Roaming\\Code\\User\\History\\338c3ac8\\d7dI.py",
                "vulnerability": "ECDH",
                "lines": [
                    {
                        "line_number": 1,
                        "content": "from Crypto.Protocol.KDF import ECDH"
                    },
                    {
                        "line_number": 7,
                        "content": "ecdh = ECDH()"
                    }
                ],
                "severity": "Low",
                "explanation": "ECDH is not quantum-safe; quantum computers can break its security."
            },
            {
                "language": "Python",
                "filename": "qVua.py",
                "path": "C:/Users\\alexa\\AppData\\Roaming\\Code\\User\\History\\34c4f0a2\\qVua.py",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 4,
                        "content": "sha256_hash = hashlib.sha256(b\"test\").hexdigest()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Java",
                "filename": "64Gr.java",
                "path": "C:/Users\\alexa\\AppData\\Roaming\\Code\\User\\History\\3986e9d9\\64Gr.java",
                "vulnerability": "RC4",
                "lines": [
                    {
                        "line_number": 11,
                        "content": "Cipher cipher = Cipher.getInstance(\"RC4\");"
                    }
                ],
                "severity": "Very High",
                "explanation": "RC4 is insecure due to biases in its keystream and vulnerable to multiple attacks."
            },
            {
                "language": "Java",
                "filename": "BUIQ.java",
                "path": "C:/Users\\alexa\\AppData\\Roaming\\Code\\User\\History\\3ca96c3b\\BUIQ.java",
                "vulnerability": "DES",
                "lines": [
                    {
                        "line_number": 9,
                        "content": "SecretKey key = new SecretKeySpec(keyBytes, \"DES\");"
                    },
                    {
                        "line_number": 10,
                        "content": "Cipher cipher = Cipher.getInstance(\"DES/ECB/PKCS5Padding\");"
                    }
                ],
                "severity": "Very High",
                "explanation": "DES is insecure due to its 56-bit key size, making it vulnerable to brute-force attacks."
            },
            {
                "language": "Java",
                "filename": "BUIQ.java",
                "path": "C:/Users\\alexa\\AppData\\Roaming\\Code\\User\\History\\3ca96c3b\\BUIQ.java",
                "vulnerability": "ECB_Mode",
                "lines": [
                    {
                        "line_number": 10,
                        "content": "Cipher cipher = Cipher.getInstance(\"DES/ECB/PKCS5Padding\");"
                    }
                ],
                "severity": "High",
                "explanation": "ECB mode leaks plaintext patterns."
            },
            {
                "language": "Python",
                "filename": "OYGr.py",
                "path": "C:/Users\\alexa\\AppData\\Roaming\\Code\\User\\History\\4002da6\\OYGr.py",
                "vulnerability": "SHA-1",
                "lines": [
                    {
                        "line_number": 4,
                        "content": "sha1_hash = hashlib.sha1(b\"test\").hexdigest()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collisions."
            },
            {
                "language": "Python",
                "filename": "mpcE.py",
                "path": "C:/Users\\alexa\\AppData\\Roaming\\Code\\User\\History\\47c934a8\\mpcE.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 4,
                        "content": "key = get_random_bytes(8)  # 56-bit key"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "mpcE.py",
                "path": "C:/Users\\alexa\\AppData\\Roaming\\Code\\User\\History\\47c934a8\\mpcE.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 4,
                        "content": "key = get_random_bytes(8)  # 56-bit key"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "C",
                "filename": "HIp5.c",
                "path": "C:/Users\\alexa\\AppData\\Roaming\\Code\\User\\History\\68f4d108\\HIp5.c",
                "vulnerability": "DES",
                "lines": [
                    {
                        "line_number": 26,
                        "content": "EVP_EncryptInit_ex(ctx, EVP_des_ecb(), NULL, key, NULL);"
                    }
                ],
                "severity": "Very High",
                "explanation": "DES is insecure due to its 56-bit key size, making it vulnerable to brute-force attacks."
            },
            {
                "language": "C",
                "filename": "HIp5.c",
                "path": "C:/Users\\alexa\\AppData\\Roaming\\Code\\User\\History\\68f4d108\\HIp5.c",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 11,
                        "content": "EVP_EncryptInit_ex(ctx, EVP_aes_128_ecb(), NULL, key, NULL);"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "C",
                "filename": "HIp5.c",
                "path": "C:/Users\\alexa\\AppData\\Roaming\\Code\\User\\History\\68f4d108\\HIp5.c",
                "vulnerability": "ECB_Mode",
                "lines": [
                    {
                        "line_number": 11,
                        "content": "EVP_EncryptInit_ex(ctx, EVP_aes_128_ecb(), NULL, key, NULL);"
                    },
                    {
                        "line_number": 26,
                        "content": "EVP_EncryptInit_ex(ctx, EVP_des_ecb(), NULL, key, NULL);"
                    }
                ],
                "severity": "High",
                "explanation": "ECB mode leaks plaintext patterns."
            },
            {
                "language": "Java",
                "filename": "exdS.java",
                "path": "C:/Users\\alexa\\AppData\\Roaming\\Code\\User\\History\\6a501c8c\\exdS.java",
                "vulnerability": "Blowfish_Short_Key",
                "lines": [
                    {
                        "line_number": 9,
                        "content": "SecretKey blowfishKey = new SecretKeySpec(keyBytes, \"Blowfish\");"
                    },
                    {
                        "line_number": 10,
                        "content": "Cipher cipher = Cipher.getInstance(\"Blowfish/ECB/PKCS5Padding\");"
                    }
                ],
                "severity": "High",
                "explanation": "Short key sizes are inadequate for modern security standards."
            },
            {
                "language": "Java",
                "filename": "wBfm.java",
                "path": "C:/Users\\alexa\\AppData\\Roaming\\Code\\User\\History\\6a501c8c\\wBfm.java",
                "vulnerability": "Blowfish_Short_Key",
                "lines": [
                    {
                        "line_number": 9,
                        "content": "SecretKey blowfishKey = new SecretKeySpec(keyBytes, \"Blowfish\");"
                    },
                    {
                        "line_number": 10,
                        "content": "Cipher cipher = Cipher.getInstance(\"Blowfish/ECB/PKCS5Padding\");"
                    }
                ],
                "severity": "High",
                "explanation": "Short key sizes are inadequate for modern security standards."
            },
            {
                "language": "Java",
                "filename": "1di3.java",
                "path": "C:/Users\\alexa\\AppData\\Roaming\\Code\\User\\History\\7a4ba501\\1di3.java",
                "vulnerability": "DES",
                "lines": [
                    {
                        "line_number": 13,
                        "content": "SecretKeySpec desKey = new SecretKeySpec(key1, \"DES\");"
                    },
                    {
                        "line_number": 14,
                        "content": "Cipher cipher1 = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    },
                    {
                        "line_number": 19,
                        "content": "SecretKeySpec desKey2 = new SecretKeySpec(key1, \"DES\");"
                    },
                    {
                        "line_number": 20,
                        "content": "Cipher cipher2 = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    },
                    {
                        "line_number": 25,
                        "content": "SecretKeySpec desKey3 = new SecretKeySpec(key3, \"DES\");"
                    },
                    {
                        "line_number": 26,
                        "content": "Cipher cipher3 = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    }
                ],
                "severity": "Very High",
                "explanation": "DES is insecure due to its 56-bit key size, making it vulnerable to brute-force attacks."
            },
            {
                "language": "C",
                "filename": "JYzd.c",
                "path": "C:/Users\\alexa\\AppData\\Roaming\\Code\\User\\History\\801cea\\JYzd.c",
                "vulnerability": "3DES_1KEY",
                "lines": [
                    {
                        "line_number": 11,
                        "content": "DES_set_key_unchecked(&key, &key_schedule);"
                    }
                ],
                "severity": "Very High",
                "explanation": "3DES with 1 key offers no additional security over DES and is insecure."
            },
            {
                "language": "C",
                "filename": "Kmkf.c",
                "path": "C:/Users\\alexa\\AppData\\Roaming\\Code\\User\\History\\9ebbfc4\\Kmkf.c",
                "vulnerability": "ECDH",
                "lines": [
                    {
                        "line_number": 7,
                        "content": "EC_KEY *key1 = EC_KEY_new_by_curve_name(NID_X9_62_prime256v1);"
                    },
                    {
                        "line_number": 8,
                        "content": "EC_KEY *key2 = EC_KEY_new_by_curve_name(NID_X9_62_prime256v1);"
                    }
                ],
                "severity": "Low",
                "explanation": "ECDH is not quantum-safe; quantum computers can break its security."
            },
            {
                "language": "Python",
                "filename": "SsQx.py",
                "path": "C:/Users\\alexa\\AppData\\Roaming\\Code\\User\\History\\f838262\\SsQx.py",
                "vulnerability": "DES",
                "lines": [
                    {
                        "line_number": 1,
                        "content": "from Crypto.Cipher import DES"
                    },
                    {
                        "line_number": 5,
                        "content": "cipher = DES.new(key, DES.MODE_ECB)"
                    }
                ],
                "severity": "Very High",
                "explanation": "DES is insecure due to its 56-bit key size, making it vulnerable to brute-force attacks."
            },
            {
                "language": "Python",
                "filename": "SsQx.py",
                "path": "C:/Users\\alexa\\AppData\\Roaming\\Code\\User\\History\\f838262\\SsQx.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 4,
                        "content": "key = get_random_bytes(8)  # 56 bits key for DES"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "SsQx.py",
                "path": "C:/Users\\alexa\\AppData\\Roaming\\Code\\User\\History\\f838262\\SsQx.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 4,
                        "content": "key = get_random_bytes(8)  # 56 bits key for DES"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "as_string.py",
                "path": "C:/Users\\alexa\\AppData\\Roaming\\Python\\Python27\\site-packages\\astroid\\as_string.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 170,
                        "content": "key = key.accept(self)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "bases.py",
                "path": "C:/Users\\alexa\\AppData\\Roaming\\Python\\Python27\\site-packages\\astroid\\bases.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 380,
                        "content": "key = next(key.infer(context=context))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "bases.py",
                "path": "C:/Users\\alexa\\AppData\\Roaming\\Python\\Python27\\site-packages\\astroid\\bases.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 380,
                        "content": "key = next(key.infer(context=context))"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "inference.py",
                "path": "C:/Users\\alexa\\AppData\\Roaming\\Python\\Python27\\site-packages\\astroid\\inference.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 105,
                        "content": "key = helpers.safe_infer(name, context=context)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "node_classes.py",
                "path": "C:/Users\\alexa\\AppData\\Roaming\\Python\\Python27\\site-packages\\astroid\\node_classes.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 302,
                        "content": "key = (self, context.lookupname,"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "scoped_nodes.py",
                "path": "C:/Users\\alexa\\AppData\\Roaming\\Python\\Python27\\site-packages\\astroid\\scoped_nodes.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 835,
                        "content": "def postinit(self, key=None, value=None, generators=None):"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "functools_lru_cache.py",
                "path": "C:/Users\\alexa\\AppData\\Roaming\\Python\\Python27\\site-packages\\backports\\functools_lru_cache.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 117,
                        "content": "key = make_key(args, kwds, typed)"
                    },
                    {
                        "line_number": 133,
                        "content": "key = make_key(args, kwds, typed) if kwds or typed else args"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "__init__.py",
                "path": "C:/Users\\alexa\\AppData\\Roaming\\Python\\Python27\\site-packages\\backports\\configparser\\__init__.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 819,
                        "content": "key = self.optionxform(str(key))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "__init__.py",
                "path": "C:/Users\\alexa\\AppData\\Roaming\\Python\\Python27\\site-packages\\backports\\configparser\\__init__.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 819,
                        "content": "key = self.optionxform(str(key))"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "isort.py",
                "path": "C:/Users\\alexa\\AppData\\Roaming\\Python\\Python27\\site-packages\\isort\\isort.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 430,
                        "content": "from_imports = nsorted(from_imports, key=lambda key: self._module_key(key, self.config, True, ignore_case, section_name=section))"
                    },
                    {
                        "line_number": 592,
                        "content": "straight_modules = nsorted(straight_modules, key=lambda key: self._module_key(key, self.config, section_name=section))"
                    },
                    {
                        "line_number": 594,
                        "content": "from_modules = nsorted(from_modules, key=lambda key: self._module_key(key, self.config, section_name=section))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "utils.py",
                "path": "C:/Users\\alexa\\AppData\\Roaming\\Python\\Python27\\site-packages\\pylint\\utils.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 774,
                        "content": "msgs = sorted(six.itervalues(self._messages), key=lambda msg: msg.msgid)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "utils.py",
                "path": "C:/Users\\alexa\\AppData\\Roaming\\Python\\Python27\\site-packages\\pylint\\checkers\\utils.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 368,
                        "content": "key = format_string[key_start:key_end]"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "diagrams.py",
                "path": "C:/Users\\alexa\\AppData\\Roaming\\Python\\Python27\\site-packages\\pylint\\pyreverse\\diagrams.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 101,
                        "content": "return sorted(methods, key=lambda n: n.name)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "diagrams.py",
                "path": "C:/Users\\alexa\\AppData\\Roaming\\Python\\Python27\\site-packages\\pylint\\pyreverse\\diagrams.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 58,
                        "content": "key=lambda x: (x.from_object.fig_id, x.to_object.fig_id))"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_functional.py",
                "path": "C:/Users\\alexa\\AppData\\Roaming\\Python\\Python27\\site-packages\\pylint\\test\\test_functional.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 353,
                        "content": "remaining.sort(key=lambda m: (m[1], m[0], m[3]))"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "a.py",
                "path": "C:/Users\\alexa\\Desktop\\452\\HY452-Snake\\a.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 10,
                        "content": "sorted_dict = dict(sorted(my_dict.items(), key=lambda item: int(item[1])))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "game.py",
                "path": "C:/Users\\alexa\\Desktop\\452\\HY452-Snake\\src\\game.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 380,
                        "content": "if event.key == pygame.K_p or event.key == pygame.K_ESCAPE:"
                    },
                    {
                        "line_number": 392,
                        "content": "if event.key == pygame.K_RIGHT:"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "menu.py",
                "path": "C:/Users\\alexa\\Desktop\\452\\HY452-Snake\\src\\menu.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 227,
                        "content": "for name, score in sorted(self.leaderboard.items(), key=lambda x: x[1], reverse=True):"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "menu.py",
                "path": "C:/Users\\alexa\\Desktop\\452\\HY452-Snake\\src\\menu.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 227,
                        "content": "for name, score in sorted(self.leaderboard.items(), key=lambda x: x[1], reverse=True):"
                    },
                    {
                        "line_number": 995,
                        "content": "elif (not event.key == pygame.K_RETURN) and (not event.key == pygame.K_KP_ENTER) and (not event.key == pygame.K_TAB):"
                    },
                    {
                        "line_number": 1124,
                        "content": "elif (not event.key == pygame.K_RETURN) and (not event.key == pygame.K_KP_ENTER) and (not event.key == pygame.K_TAB):"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "server.py",
                "path": "C:/Users\\alexa\\Desktop\\452\\HY452-Snake\\src\\server.py",
                "vulnerability": "SHA-1",
                "lines": [
                    {
                        "line_number": 18,
                        "content": "'passwordHash': hashlib.sha1(password.encode()).hexdigest(),"
                    },
                    {
                        "line_number": 110,
                        "content": "'passwordHash': hashlib.sha1(password.encode()).hexdigest()"
                    },
                    {
                        "line_number": 130,
                        "content": "'passwordHash': hashlib.sha1(password.encode()).hexdigest()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collisions."
            },
            {
                "language": "Python",
                "filename": "a.py",
                "path": "C:/Users\\alexa\\Desktop\\crypto_project\\Crypto-Project\\scripts\\a.py",
                "vulnerability": "DES",
                "lines": [
                    {
                        "line_number": 1,
                        "content": "from Crypto.Cipher import DES"
                    },
                    {
                        "line_number": 10,
                        "content": "cipher = DES.new(key, DES.MODE_ECB)"
                    }
                ],
                "severity": "Very High",
                "explanation": "DES is insecure due to its 56-bit key size, making it vulnerable to brute-force attacks."
            },
            {
                "language": "Python",
                "filename": "a.py",
                "path": "C:/Users\\alexa\\Desktop\\crypto_project\\Crypto-Project\\scripts\\a.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 6,
                        "content": "key = b'8bytekey'  # DES requires an 8-byte key"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "c.py",
                "path": "C:/Users\\alexa\\Desktop\\crypto_project\\Crypto-Project\\scripts\\c.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 8,
                        "content": "hash1 = hashlib.md5(data1).hexdigest()"
                    },
                    {
                        "line_number": 9,
                        "content": "hash2 = hashlib.md5(data2).hexdigest()"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "d.py",
                "path": "C:/Users\\alexa\\Desktop\\crypto_project\\Crypto-Project\\scripts\\d.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 7,
                        "content": "key = RSA.generate(512)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "e.py",
                "path": "C:/Users\\alexa\\Desktop\\crypto_project\\Crypto-Project\\scripts\\e.py",
                "vulnerability": "SHA-1",
                "lines": [
                    {
                        "line_number": 8,
                        "content": "hash1 = hashlib.sha1(data1).hexdigest()"
                    },
                    {
                        "line_number": 9,
                        "content": "hash2 = hashlib.sha1(data2).hexdigest()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collisions."
            },
            {
                "language": "Python",
                "filename": "f.py",
                "path": "C:/Users\\alexa\\Desktop\\crypto_project\\Crypto-Project\\scripts\\f.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 10,
                        "content": "cipher = AES.new(key, AES.MODE_ECB)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "f.py",
                "path": "C:/Users\\alexa\\Desktop\\crypto_project\\Crypto-Project\\scripts\\f.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 10,
                        "content": "cipher = AES.new(key, AES.MODE_ECB)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "3des.py",
                "path": "C:/Users\\alexa\\Desktop\\crypto_project\\Crypto-Project\\scripts\\3des\\3des.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 4,
                        "content": "key = get_random_bytes(8)  # 56-bit key"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "3des.py",
                "path": "C:/Users\\alexa\\Desktop\\crypto_project\\Crypto-Project\\scripts\\3des\\3des.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 4,
                        "content": "key = get_random_bytes(8)  # 56-bit key"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Java",
                "filename": "TripleDESExample.java",
                "path": "C:/Users\\alexa\\Desktop\\crypto_project\\Crypto-Project\\scripts\\3des\\TripleDESExample.java",
                "vulnerability": "DES",
                "lines": [
                    {
                        "line_number": 13,
                        "content": "SecretKeySpec desKey = new SecretKeySpec(key1, \"DES\");"
                    },
                    {
                        "line_number": 14,
                        "content": "Cipher cipher1 = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    },
                    {
                        "line_number": 19,
                        "content": "SecretKeySpec desKey2 = new SecretKeySpec(key1, \"DES\");"
                    },
                    {
                        "line_number": 20,
                        "content": "Cipher cipher2 = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    },
                    {
                        "line_number": 25,
                        "content": "SecretKeySpec desKey3 = new SecretKeySpec(key3, \"DES\");"
                    },
                    {
                        "line_number": 26,
                        "content": "Cipher cipher3 = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    }
                ],
                "severity": "Very High",
                "explanation": "DES is insecure due to its 56-bit key size, making it vulnerable to brute-force attacks."
            },
            {
                "language": "Python",
                "filename": "aes128.py",
                "path": "C:/Users\\alexa\\Desktop\\crypto_project\\Crypto-Project\\scripts\\aes128\\aes128.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 5,
                        "content": "key = get_random_bytes(16)  # AES-128: 128-bit (16 bytes)"
                    },
                    {
                        "line_number": 6,
                        "content": "cipher = AES.new(key, AES.MODE_ECB)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "aes128.py",
                "path": "C:/Users\\alexa\\Desktop\\crypto_project\\Crypto-Project\\scripts\\aes128\\aes128.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 5,
                        "content": "key = get_random_bytes(16)  # AES-128: 128-bit (16 bytes)"
                    },
                    {
                        "line_number": 6,
                        "content": "cipher = AES.new(key, AES.MODE_ECB)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Java",
                "filename": "AES128Example.java",
                "path": "C:/Users\\alexa\\Desktop\\crypto_project\\Crypto-Project\\scripts\\aes128\\AES128Example.java",
                "vulnerability": "ECB_Mode",
                "lines": [
                    {
                        "line_number": 10,
                        "content": "Cipher cipher = Cipher.getInstance(\"AES/ECB/PKCS5Padding\");"
                    }
                ],
                "severity": "High",
                "explanation": "ECB mode leaks plaintext patterns."
            },
            {
                "language": "Python",
                "filename": "aes192.py",
                "path": "C:/Users\\alexa\\Desktop\\crypto_project\\Crypto-Project\\scripts\\aes192\\aes192.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 5,
                        "content": "key = get_random_bytes(24)  # AES-192: 192-bit (24 bytes)"
                    },
                    {
                        "line_number": 6,
                        "content": "cipher = AES.new(key, AES.MODE_ECB)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "aes192.py",
                "path": "C:/Users\\alexa\\Desktop\\crypto_project\\Crypto-Project\\scripts\\aes192\\aes192.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 5,
                        "content": "key = get_random_bytes(24)  # AES-192: 192-bit (24 bytes)"
                    },
                    {
                        "line_number": 6,
                        "content": "cipher = AES.new(key, AES.MODE_ECB)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Java",
                "filename": "AES192Example.java",
                "path": "C:/Users\\alexa\\Desktop\\crypto_project\\Crypto-Project\\scripts\\aes192\\AES192Example.java",
                "vulnerability": "ECB_Mode",
                "lines": [
                    {
                        "line_number": 10,
                        "content": "Cipher cipher = Cipher.getInstance(\"AES/ECB/PKCS5Padding\");"
                    }
                ],
                "severity": "High",
                "explanation": "ECB mode leaks plaintext patterns."
            },
            {
                "language": "C",
                "filename": "blowfish.c",
                "path": "C:/Users\\alexa\\Desktop\\crypto_project\\Crypto-Project\\scripts\\blowfish\\blowfish.c",
                "vulnerability": "Blowfish_Short_Key",
                "lines": [
                    {
                        "line_number": 11,
                        "content": "BF_set_key(&bf_key, 8, key);  // Setting a short key"
                    }
                ],
                "severity": "High",
                "explanation": "Short key sizes are inadequate for modern security standards."
            },
            {
                "language": "Python",
                "filename": "blowfish.py",
                "path": "C:/Users\\alexa\\Desktop\\crypto_project\\Crypto-Project\\scripts\\blowfish\\blowfish.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 4,
                        "content": "key = b\"shortkey\"  # 8 bytes (64 bits)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "blowfish.py",
                "path": "C:/Users\\alexa\\Desktop\\crypto_project\\Crypto-Project\\scripts\\blowfish\\blowfish.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 4,
                        "content": "key = b\"shortkey\"  # 8 bytes (64 bits)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "blowfish.py",
                "path": "C:/Users\\alexa\\Desktop\\crypto_project\\Crypto-Project\\scripts\\blowfish\\blowfish.py",
                "vulnerability": "Blowfish_Short_Key",
                "lines": [
                    {
                        "line_number": 1,
                        "content": "from Crypto.Cipher import Blowfish"
                    }
                ],
                "severity": "High",
                "explanation": "Short key sizes are inadequate for modern security standards."
            },
            {
                "language": "Java",
                "filename": "BlowfishShortKeyTest.java",
                "path": "C:/Users\\alexa\\Desktop\\crypto_project\\Crypto-Project\\scripts\\blowfish\\BlowfishShortKeyTest.java",
                "vulnerability": "Blowfish_Short_Key",
                "lines": [
                    {
                        "line_number": 9,
                        "content": "SecretKey blowfishKey = new SecretKeySpec(keyBytes, \"Blowfish\");"
                    },
                    {
                        "line_number": 10,
                        "content": "Cipher cipher = Cipher.getInstance(\"Blowfish/ECB/PKCS5Padding\");"
                    }
                ],
                "severity": "High",
                "explanation": "Short key sizes are inadequate for modern security standards."
            },
            {
                "language": "Java",
                "filename": "CBCStaticIVTest.java",
                "path": "C:/Users\\alexa\\Desktop\\crypto_project\\Crypto-Project\\scripts\\cbc_mode\\CBCStaticIVTest.java",
                "vulnerability": "DES",
                "lines": [
                    {
                        "line_number": 22,
                        "content": "SecretKey desKey = new javax.crypto.spec.SecretKeySpec(\"8bytekey\".getBytes(), \"DES\");"
                    },
                    {
                        "line_number": 25,
                        "content": "Cipher desCipher = Cipher.getInstance(\"DES/CBC/PKCS5Padding\");"
                    }
                ],
                "severity": "Very High",
                "explanation": "DES is insecure due to its 56-bit key size, making it vulnerable to brute-force attacks."
            },
            {
                "language": "Java",
                "filename": "CBCStaticIVTest.java",
                "path": "C:/Users\\alexa\\Desktop\\crypto_project\\Crypto-Project\\scripts\\cbc_mode\\CBCStaticIVTest.java",
                "vulnerability": "CBC_Static_IV",
                "lines": [
                    {
                        "line_number": 16,
                        "content": "Cipher aesCipher = Cipher.getInstance(\"AES/CBC/PKCS5Padding\");"
                    },
                    {
                        "line_number": 25,
                        "content": "Cipher desCipher = Cipher.getInstance(\"DES/CBC/PKCS5Padding\");"
                    }
                ],
                "severity": "High",
                "explanation": "Static IVs in CBC mode weaken security and allow chosen-plaintext attacks."
            },
            {
                "language": "C",
                "filename": "cbc_static_iv.c",
                "path": "C:/Users\\alexa\\Desktop\\crypto_project\\Crypto-Project\\scripts\\cbc_mode\\cbc_static_iv.c",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 12,
                        "content": "EVP_EncryptInit_ex(ctx, EVP_aes_128_cbc(), NULL, key, iv);  // Static IV used here"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "cbc_static_iv.py",
                "path": "C:/Users\\alexa\\Desktop\\crypto_project\\Crypto-Project\\scripts\\cbc_mode\\cbc_static_iv.py",
                "vulnerability": "DES",
                "lines": [
                    {
                        "line_number": 14,
                        "content": "cipher = DES.new(key, DES.MODE_CBC, iv)"
                    }
                ],
                "severity": "Very High",
                "explanation": "DES is insecure due to its 56-bit key size, making it vulnerable to brute-force attacks."
            },
            {
                "language": "Python",
                "filename": "cbc_static_iv.py",
                "path": "C:/Users\\alexa\\Desktop\\crypto_project\\Crypto-Project\\scripts\\cbc_mode\\cbc_static_iv.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 5,
                        "content": "key = b\"Sixteen byte key\""
                    },
                    {
                        "line_number": 7,
                        "content": "cipher = AES.new(key, AES.MODE_CBC, iv)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "cbc_static_iv.py",
                "path": "C:/Users\\alexa\\Desktop\\crypto_project\\Crypto-Project\\scripts\\cbc_mode\\cbc_static_iv.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 7,
                        "content": "cipher = AES.new(key, AES.MODE_CBC, iv)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "C",
                "filename": "des.c",
                "path": "C:/Users\\alexa\\Desktop\\crypto_project\\Crypto-Project\\scripts\\des\\des.c",
                "vulnerability": "3DES_1KEY",
                "lines": [
                    {
                        "line_number": 11,
                        "content": "DES_set_key_unchecked(&key, &key_schedule);"
                    }
                ],
                "severity": "Very High",
                "explanation": "3DES with 1 key offers no additional security over DES and is insecure."
            },
            {
                "language": "Python",
                "filename": "des.py",
                "path": "C:/Users\\alexa\\Desktop\\crypto_project\\Crypto-Project\\scripts\\des\\des.py",
                "vulnerability": "DES",
                "lines": [
                    {
                        "line_number": 1,
                        "content": "from Crypto.Cipher import DES"
                    },
                    {
                        "line_number": 5,
                        "content": "cipher = DES.new(key, DES.MODE_ECB)"
                    }
                ],
                "severity": "Very High",
                "explanation": "DES is insecure due to its 56-bit key size, making it vulnerable to brute-force attacks."
            },
            {
                "language": "Python",
                "filename": "des.py",
                "path": "C:/Users\\alexa\\Desktop\\crypto_project\\Crypto-Project\\scripts\\des\\des.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 4,
                        "content": "key = get_random_bytes(8)  # 56 bits key for DES"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "des.py",
                "path": "C:/Users\\alexa\\Desktop\\crypto_project\\Crypto-Project\\scripts\\des\\des.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 4,
                        "content": "key = get_random_bytes(8)  # 56 bits key for DES"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Java",
                "filename": "DESExample.java",
                "path": "C:/Users\\alexa\\Desktop\\crypto_project\\Crypto-Project\\scripts\\des\\DESExample.java",
                "vulnerability": "DES",
                "lines": [
                    {
                        "line_number": 9,
                        "content": "SecretKey key = new SecretKeySpec(keyBytes, \"DES\");"
                    },
                    {
                        "line_number": 10,
                        "content": "Cipher cipher = Cipher.getInstance(\"DES/ECB/PKCS5Padding\");"
                    }
                ],
                "severity": "Very High",
                "explanation": "DES is insecure due to its 56-bit key size, making it vulnerable to brute-force attacks."
            },
            {
                "language": "Java",
                "filename": "DESExample.java",
                "path": "C:/Users\\alexa\\Desktop\\crypto_project\\Crypto-Project\\scripts\\des\\DESExample.java",
                "vulnerability": "ECB_Mode",
                "lines": [
                    {
                        "line_number": 10,
                        "content": "Cipher cipher = Cipher.getInstance(\"DES/ECB/PKCS5Padding\");"
                    }
                ],
                "severity": "High",
                "explanation": "ECB mode leaks plaintext patterns."
            },
            {
                "language": "Java",
                "filename": "DHKETest.java",
                "path": "C:/Users\\alexa\\Desktop\\crypto_project\\Crypto-Project\\scripts\\dh_ke\\DHKETest.java",
                "vulnerability": "DH_KE_Weak_Parameters",
                "lines": [
                    {
                        "line_number": 6,
                        "content": "KeyPairGenerator keyPairGenWeak = KeyPairGenerator.getInstance(\"DH\");"
                    },
                    {
                        "line_number": 12,
                        "content": "KeyPairGenerator keyPairGenQuantum = KeyPairGenerator.getInstance(\"DH\");"
                    }
                ],
                "severity": "High",
                "explanation": "Small modulus sizes (<2048 bits) in DH are easily attacked."
            },
            {
                "language": "Java",
                "filename": "DHKETest.java",
                "path": "C:/Users\\alexa\\Desktop\\crypto_project\\Crypto-Project\\scripts\\dh_ke\\DHKETest.java",
                "vulnerability": "DH_KE_Quantum_Threat",
                "lines": [
                    {
                        "line_number": 6,
                        "content": "KeyPairGenerator keyPairGenWeak = KeyPairGenerator.getInstance(\"DH\");"
                    },
                    {
                        "line_number": 12,
                        "content": "KeyPairGenerator keyPairGenQuantum = KeyPairGenerator.getInstance(\"DH\");"
                    }
                ],
                "severity": "Very High",
                "explanation": "DH is not secure against quantum computers."
            },
            {
                "language": "C",
                "filename": "dh_ke.c",
                "path": "C:/Users\\alexa\\Desktop\\crypto_project\\Crypto-Project\\scripts\\dh_ke\\dh_ke.c",
                "vulnerability": "DH_KE_Quantum_Threat",
                "lines": [
                    {
                        "line_number": 7,
                        "content": "DH_generate_parameters_ex(dh, prime_length, DH_GENERATOR_2, NULL);"
                    },
                    {
                        "line_number": 15,
                        "content": "DH_generate_parameters_ex(dh, prime_length, DH_GENERATOR_2, NULL);"
                    }
                ],
                "severity": "Very High",
                "explanation": "DH is not secure against quantum computers."
            },
            {
                "language": "C",
                "filename": "ecb.c",
                "path": "C:/Users\\alexa\\Desktop\\crypto_project\\Crypto-Project\\scripts\\ecb_mode\\ecb.c",
                "vulnerability": "DES",
                "lines": [
                    {
                        "line_number": 26,
                        "content": "EVP_EncryptInit_ex(ctx, EVP_des_ecb(), NULL, key, NULL);"
                    }
                ],
                "severity": "Very High",
                "explanation": "DES is insecure due to its 56-bit key size, making it vulnerable to brute-force attacks."
            },
            {
                "language": "C",
                "filename": "ecb.c",
                "path": "C:/Users\\alexa\\Desktop\\crypto_project\\Crypto-Project\\scripts\\ecb_mode\\ecb.c",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 11,
                        "content": "EVP_EncryptInit_ex(ctx, EVP_aes_128_ecb(), NULL, key, NULL);"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "C",
                "filename": "ecb.c",
                "path": "C:/Users\\alexa\\Desktop\\crypto_project\\Crypto-Project\\scripts\\ecb_mode\\ecb.c",
                "vulnerability": "ECB_Mode",
                "lines": [
                    {
                        "line_number": 11,
                        "content": "EVP_EncryptInit_ex(ctx, EVP_aes_128_ecb(), NULL, key, NULL);"
                    },
                    {
                        "line_number": 26,
                        "content": "EVP_EncryptInit_ex(ctx, EVP_des_ecb(), NULL, key, NULL);"
                    }
                ],
                "severity": "High",
                "explanation": "ECB mode leaks plaintext patterns."
            },
            {
                "language": "Python",
                "filename": "ecb.py",
                "path": "C:/Users\\alexa\\Desktop\\crypto_project\\Crypto-Project\\scripts\\ecb_mode\\ecb.py",
                "vulnerability": "DES",
                "lines": [
                    {
                        "line_number": 9,
                        "content": "des_ecb = DES.new(b\"8bytekey\", DES.MODE_ECB)"
                    }
                ],
                "severity": "Very High",
                "explanation": "DES is insecure due to its 56-bit key size, making it vulnerable to brute-force attacks."
            },
            {
                "language": "Python",
                "filename": "ecb.py",
                "path": "C:/Users\\alexa\\Desktop\\crypto_project\\Crypto-Project\\scripts\\ecb_mode\\ecb.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 4,
                        "content": "aes_ecb = AES.new(b\"Sixteen byte key\", AES.MODE_ECB)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "ecb.py",
                "path": "C:/Users\\alexa\\Desktop\\crypto_project\\Crypto-Project\\scripts\\ecb_mode\\ecb.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 4,
                        "content": "aes_ecb = AES.new(b\"Sixteen byte key\", AES.MODE_ECB)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Java",
                "filename": "ECBModeTest.java",
                "path": "C:/Users\\alexa\\Desktop\\crypto_project\\Crypto-Project\\scripts\\ecb_mode\\ECBModeTest.java",
                "vulnerability": "DES",
                "lines": [
                    {
                        "line_number": 18,
                        "content": "SecretKey desKey = new SecretKeySpec(\"8bytekey\".getBytes(), \"DES\");"
                    },
                    {
                        "line_number": 19,
                        "content": "Cipher desCipher = Cipher.getInstance(\"DES/ECB/PKCS5Padding\");"
                    }
                ],
                "severity": "Very High",
                "explanation": "DES is insecure due to its 56-bit key size, making it vulnerable to brute-force attacks."
            },
            {
                "language": "Java",
                "filename": "ECBModeTest.java",
                "path": "C:/Users\\alexa\\Desktop\\crypto_project\\Crypto-Project\\scripts\\ecb_mode\\ECBModeTest.java",
                "vulnerability": "ECB_Mode",
                "lines": [
                    {
                        "line_number": 12,
                        "content": "Cipher aesCipher = Cipher.getInstance(\"AES/ECB/PKCS5Padding\");"
                    },
                    {
                        "line_number": 19,
                        "content": "Cipher desCipher = Cipher.getInstance(\"DES/ECB/PKCS5Padding\");"
                    }
                ],
                "severity": "High",
                "explanation": "ECB mode leaks plaintext patterns."
            },
            {
                "language": "C",
                "filename": "ecdh.c",
                "path": "C:/Users\\alexa\\Desktop\\crypto_project\\Crypto-Project\\scripts\\ecdh\\ecdh.c",
                "vulnerability": "ECDH",
                "lines": [
                    {
                        "line_number": 7,
                        "content": "EC_KEY *key1 = EC_KEY_new_by_curve_name(NID_X9_62_prime256v1);"
                    },
                    {
                        "line_number": 8,
                        "content": "EC_KEY *key2 = EC_KEY_new_by_curve_name(NID_X9_62_prime256v1);"
                    }
                ],
                "severity": "Low",
                "explanation": "ECDH is not quantum-safe; quantum computers can break its security."
            },
            {
                "language": "Java",
                "filename": "ecdh.java",
                "path": "C:/Users\\alexa\\Desktop\\crypto_project\\Crypto-Project\\scripts\\ecdh\\ecdh.java",
                "vulnerability": "ECDH",
                "lines": [
                    {
                        "line_number": 15,
                        "content": "KeyAgreement ka = KeyAgreement.getInstance(\"ECDH\");"
                    }
                ],
                "severity": "Low",
                "explanation": "ECDH is not quantum-safe; quantum computers can break its security."
            },
            {
                "language": "Python",
                "filename": "ecdh.py",
                "path": "C:/Users\\alexa\\Desktop\\crypto_project\\Crypto-Project\\scripts\\ecdh\\ecdh.py",
                "vulnerability": "ECDH",
                "lines": [
                    {
                        "line_number": 1,
                        "content": "from Crypto.Protocol.KDF import ECDH"
                    },
                    {
                        "line_number": 7,
                        "content": "ecdh = ECDH()"
                    }
                ],
                "severity": "Low",
                "explanation": "ECDH is not quantum-safe; quantum computers can break its security."
            },
            {
                "language": "C",
                "filename": "md5.c",
                "path": "C:/Users\\alexa\\Desktop\\crypto_project\\Crypto-Project\\scripts\\md5\\md5.c",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 9,
                        "content": "MD5_Init(&ctx);                       // Initialize MD5"
                    },
                    {
                        "line_number": 10,
                        "content": "MD5_Update(&ctx, input, strlen(input)); // Update with data"
                    },
                    {
                        "line_number": 11,
                        "content": "MD5_Final(digest, &ctx);              // Finalize hash"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Java",
                "filename": "md5.java",
                "path": "C:/Users\\alexa\\Desktop\\crypto_project\\Crypto-Project\\scripts\\md5\\md5.java",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 8,
                        "content": "MessageDigest md5 = MessageDigest.getInstance(\"MD5\");"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "md5.py",
                "path": "C:/Users\\alexa\\Desktop\\crypto_project\\Crypto-Project\\scripts\\md5\\md5.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 4,
                        "content": "md5_hash = hashlib.md5(b\"test\").hexdigest()"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "rc4.py",
                "path": "C:/Users\\alexa\\Desktop\\crypto_project\\Crypto-Project\\scripts\\rc4\\rc4.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 2,
                        "content": "key = b\"12345678\"  # Key for RC4"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "rc4.py",
                "path": "C:/Users\\alexa\\Desktop\\crypto_project\\Crypto-Project\\scripts\\rc4\\rc4.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 2,
                        "content": "key = b\"12345678\"  # Key for RC4"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Java",
                "filename": "RC4Example.java",
                "path": "C:/Users\\alexa\\Desktop\\crypto_project\\Crypto-Project\\scripts\\rc4\\RC4Example.java",
                "vulnerability": "RC4",
                "lines": [
                    {
                        "line_number": 11,
                        "content": "Cipher cipher = Cipher.getInstance(\"RC4\");"
                    }
                ],
                "severity": "Very High",
                "explanation": "RC4 is insecure due to biases in its keystream and vulnerable to multiple attacks."
            },
            {
                "language": "Java",
                "filename": "RSAExample.java",
                "path": "C:/Users\\alexa\\Desktop\\crypto_project\\Crypto-Project\\scripts\\rsa\\RSAExample.java",
                "vulnerability": "RSA_512_1024",
                "lines": [
                    {
                        "line_number": 5,
                        "content": "KeyPairGenerator keyPairGen = KeyPairGenerator.getInstance(\"RSA\");"
                    }
                ],
                "severity": "High",
                "explanation": "RSA with short keys (512, 1024 bits) is easily breakable."
            },
            {
                "language": "Java",
                "filename": "RSAExample.java",
                "path": "C:/Users\\alexa\\Desktop\\crypto_project\\Crypto-Project\\scripts\\rsa\\RSAExample.java",
                "vulnerability": "RSA_2048_3072",
                "lines": [
                    {
                        "line_number": 5,
                        "content": "KeyPairGenerator keyPairGen = KeyPairGenerator.getInstance(\"RSA\");"
                    }
                ],
                "severity": "Very Low",
                "explanation": "RSA with 2048 or 3072 bits is secure against classical attacks but not quantum-resistant."
            },
            {
                "language": "C",
                "filename": "sha-1.c",
                "path": "C:/Users\\alexa\\Desktop\\crypto_project\\Crypto-Project\\scripts\\sha-1\\sha-1.c",
                "vulnerability": "SHA-1",
                "lines": [
                    {
                        "line_number": 9,
                        "content": "SHA1_Init(&ctx);                      // Initialize SHA-1"
                    },
                    {
                        "line_number": 10,
                        "content": "SHA1_Update(&ctx, input, strlen(input)); // Update with data"
                    },
                    {
                        "line_number": 11,
                        "content": "SHA1_Final(digest, &ctx);             // Finalize hash"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collisions."
            },
            {
                "language": "Python",
                "filename": "sha-1.py",
                "path": "C:/Users\\alexa\\Desktop\\crypto_project\\Crypto-Project\\scripts\\sha-1\\sha-1.py",
                "vulnerability": "SHA-1",
                "lines": [
                    {
                        "line_number": 4,
                        "content": "sha1_hash = hashlib.sha1(b\"test\").hexdigest()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collisions."
            },
            {
                "language": "Java",
                "filename": "SHA1Test.java",
                "path": "C:/Users\\alexa\\Desktop\\crypto_project\\Crypto-Project\\scripts\\sha-1\\SHA1Test.java",
                "vulnerability": "SHA-1",
                "lines": [
                    {
                        "line_number": 8,
                        "content": "MessageDigest sha1 = MessageDigest.getInstance(\"SHA-1\");"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collisions."
            },
            {
                "language": "C",
                "filename": "sha-256.c",
                "path": "C:/Users\\alexa\\Desktop\\crypto_project\\Crypto-Project\\scripts\\sha-256\\sha-256.c",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 9,
                        "content": "SHA256_Init(&ctx);                    // Initialize SHA-256"
                    },
                    {
                        "line_number": 10,
                        "content": "SHA256_Update(&ctx, input, strlen(input)); // Update with data"
                    },
                    {
                        "line_number": 11,
                        "content": "SHA256_Final(digest, &ctx);           // Finalize hash"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Python",
                "filename": "sha-256.py",
                "path": "C:/Users\\alexa\\Desktop\\crypto_project\\Crypto-Project\\scripts\\sha-256\\sha-256.py",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 4,
                        "content": "sha256_hash = hashlib.sha256(b\"test\").hexdigest()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Java",
                "filename": "SHA256Test.java",
                "path": "C:/Users\\alexa\\Desktop\\crypto_project\\Crypto-Project\\scripts\\sha-256\\SHA256Test.java",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 8,
                        "content": "MessageDigest sha256 = MessageDigest.getInstance(\"SHA-256\");"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Python",
                "filename": "decrypt.py",
                "path": "C:/Users\\alexa\\Desktop\\folders\\hy458\\assign1\\q_2\\decrypt.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 23,
                        "content": "sorted_indices= sorted(range(len(column_order)),key=lambda i: column_order[i])"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "encrypt.py",
                "path": "C:/Users\\alexa\\Desktop\\folders\\hy458\\assign1\\q_2\\encrypt.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 20,
                        "content": "sorted_indices= sorted(range(len(column_order)),key=lambda i: column_order[i])"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "_virtualenv.py",
                "path": "C:/Users\\alexa\\Desktop\\folders\\lab1\\venv\\Lib\\site-packages\\_virtualenv.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 29,
                        "content": "key = f\"install_{base}\""
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "cache.py",
                "path": "C:/Users\\alexa\\Desktop\\folders\\lab1\\venv\\Lib\\site-packages\\pip\\_internal\\cache.py",
                "vulnerability": "SHA-224",
                "lines": [
                    {
                        "line_number": 29,
                        "content": "return hashlib.sha224(s.encode(\"ascii\")).hexdigest()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-224 provides reduced security compared to larger variants."
            },
            {
                "language": "Python",
                "filename": "configuration.py",
                "path": "C:/Users\\alexa\\Desktop\\folders\\lab1\\venv\\Lib\\site-packages\\pip\\_internal\\configuration.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 146,
                        "content": "key = _normalize_name(key)"
                    },
                    {
                        "line_number": 157,
                        "content": "key = _normalize_name(key)"
                    },
                    {
                        "line_number": 177,
                        "content": "key = _normalize_name(key)"
                    },
                    {
                        "line_number": 314,
                        "content": "key = section + \".\" + _normalize_name(name)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "self_outdated_check.py",
                "path": "C:/Users\\alexa\\Desktop\\folders\\lab1\\venv\\Lib\\site-packages\\pip\\_internal\\self_outdated_check.py",
                "vulnerability": "SHA-224",
                "lines": [
                    {
                        "line_number": 39,
                        "content": "name = hashlib.sha224(key_bytes).hexdigest()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-224 provides reduced security compared to larger variants."
            },
            {
                "language": "Python",
                "filename": "parser.py",
                "path": "C:/Users\\alexa\\Desktop\\folders\\lab1\\venv\\Lib\\site-packages\\pip\\_internal\\cli\\parser.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 197,
                        "content": "section, key = section_key.split(\".\", 1)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "configuration.py",
                "path": "C:/Users\\alexa\\Desktop\\folders\\lab1\\venv\\Lib\\site-packages\\pip\\_internal\\commands\\configuration.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 178,
                        "content": "key = self._get_n_args(args, \"get [name]\", n=1)"
                    },
                    {
                        "line_number": 190,
                        "content": "key = self._get_n_args(args, \"unset [name]\", n=1)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "configuration.py",
                "path": "C:/Users\\alexa\\Desktop\\folders\\lab1\\venv\\Lib\\site-packages\\pip\\_internal\\commands\\configuration.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 178,
                        "content": "key = self._get_n_args(args, \"get [name]\", n=1)"
                    },
                    {
                        "line_number": 190,
                        "content": "key = self._get_n_args(args, \"unset [name]\", n=1)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "_json.py",
                "path": "C:/Users\\alexa\\Desktop\\folders\\lab1\\venv\\Lib\\site-packages\\pip\\_internal\\metadata\\_json.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 64,
                        "content": "key = json_name(field)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "candidate.py",
                "path": "C:/Users\\alexa\\Desktop\\folders\\lab1\\venv\\Lib\\site-packages\\pip\\_internal\\models\\candidate.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 18,
                        "content": "key=(self.name, self.version, self.link),"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "candidate.py",
                "path": "C:/Users\\alexa\\Desktop\\folders\\lab1\\venv\\Lib\\site-packages\\pip\\_internal\\models\\candidate.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 18,
                        "content": "key=(self.name, self.version, self.link),"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "link.py",
                "path": "C:/Users\\alexa\\Desktop\\folders\\lab1\\venv\\Lib\\site-packages\\pip\\_internal\\models\\link.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 257,
                        "content": "super().__init__(key=url, defining_class=Link)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "auth.py",
                "path": "C:/Users\\alexa\\Desktop\\folders\\lab1\\venv\\Lib\\site-packages\\pip\\_internal\\network\\auth.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 320,
                        "content": "key=lambda candidate: commonprefix("
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "freeze.py",
                "path": "C:/Users\\alexa\\Desktop\\folders\\lab1\\venv\\Lib\\site-packages\\pip\\_internal\\operations\\freeze.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 142,
                        "content": "for installation in sorted(installations.values(), key=lambda x: x.name.lower()):"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "build_tracker.py",
                "path": "C:/Users\\alexa\\Desktop\\folders\\lab1\\venv\\Lib\\site-packages\\pip\\_internal\\operations\\build\\build_tracker.py",
                "vulnerability": "SHA-224",
                "lines": [
                    {
                        "line_number": 73,
                        "content": "hashed = hashlib.sha224(link.url_without_fragment.encode()).hexdigest()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-224 provides reduced security compared to larger variants."
            },
            {
                "language": "Python",
                "filename": "wheel.py",
                "path": "C:/Users\\alexa\\Desktop\\folders\\lab1\\venv\\Lib\\site-packages\\pip\\_internal\\operations\\install\\wheel.py",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 81,
                        "content": "\"\"\"Return (encoded_digest, length) for path using hashlib.sha256()\"\"\""
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Python",
                "filename": "misc.py",
                "path": "C:/Users\\alexa\\Desktop\\folders\\lab1\\venv\\Lib\\site-packages\\pip\\_internal\\utils\\misc.py",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 612,
                        "content": "\"\"\"Return (hash, length) for path using hashlib.sha256()\"\"\""
                    },
                    {
                        "line_number": 614,
                        "content": "h = hashlib.sha256()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Python",
                "filename": "file_cache.py",
                "path": "C:/Users\\alexa\\Desktop\\folders\\lab1\\venv\\Lib\\site-packages\\pip\\_vendor\\cachecontrol\\caches\\file_cache.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 187,
                        "content": "key = CacheController.cache_url(url)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "file_cache.py",
                "path": "C:/Users\\alexa\\Desktop\\folders\\lab1\\venv\\Lib\\site-packages\\pip\\_vendor\\cachecontrol\\caches\\file_cache.py",
                "vulnerability": "SHA-224",
                "lines": [
                    {
                        "line_number": 104,
                        "content": "return hashlib.sha224(x.encode()).hexdigest()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-224 provides reduced security compared to larger variants."
            },
            {
                "language": "Python",
                "filename": "__init__.py",
                "path": "C:/Users\\alexa\\Desktop\\folders\\lab1\\venv\\Lib\\site-packages\\pip\\_vendor\\chardet\\__init__.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 113,
                        "content": "return sorted(results, key=lambda result: -result[\"confidence\"])"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "__init__.py",
                "path": "C:/Users\\alexa\\Desktop\\folders\\lab1\\venv\\Lib\\site-packages\\pip\\_vendor\\chardet\\__init__.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 113,
                        "content": "return sorted(results, key=lambda result: -result[\"confidence\"])"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "compat.py",
                "path": "C:/Users\\alexa\\Desktop\\folders\\lab1\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\compat.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 688,
                        "content": "link_prev, link_next, key = self.__map.pop(key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "database.py",
                "path": "C:/Users\\alexa\\Desktop\\folders\\lab1\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\database.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 349,
                        "content": "self.key = self.name.lower()    # for case-insensitive comparisons"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "database.py",
                "path": "C:/Users\\alexa\\Desktop\\folders\\lab1\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\database.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 349,
                        "content": "self.key = self.name.lower()    # for case-insensitive comparisons"
                    },
                    {
                        "line_number": 876,
                        "content": "s.key = n.lower()   # for case-insensitive comparisons"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "database.py",
                "path": "C:/Users\\alexa\\Desktop\\folders\\lab1\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\database.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 526,
                        "content": "hasher = hashlib.md5"
                    },
                    {
                        "line_number": 1024,
                        "content": "return hashlib.md5(content).hexdigest()"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "index.py",
                "path": "C:/Users\\alexa\\Desktop\\folders\\lab1\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\index.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 268,
                        "content": "md5_digest = hashlib.md5(file_data).hexdigest()"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "index.py",
                "path": "C:/Users\\alexa\\Desktop\\folders\\lab1\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\index.py",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 269,
                        "content": "sha256_digest = hashlib.sha256(file_data).hexdigest()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Python",
                "filename": "locators.py",
                "path": "C:/Users\\alexa\\Desktop\\folders\\lab1\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\locators.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 582,
                        "content": "result = sorted(result, key=lambda t: t[0], reverse=True)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "locators.py",
                "path": "C:/Users\\alexa\\Desktop\\folders\\lab1\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\locators.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 582,
                        "content": "result = sorted(result, key=lambda t: t[0], reverse=True)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "version.py",
                "path": "C:/Users\\alexa\\Desktop\\folders\\lab1\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\version.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 108,
                        "content": "self.key = self.name.lower()    # for case-insensitive comparisons"
                    },
                    {
                        "line_number": 163,
                        "content": "return self.key == other.key and self._parts == other._parts"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "version.py",
                "path": "C:/Users\\alexa\\Desktop\\folders\\lab1\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\version.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 108,
                        "content": "self.key = self.name.lower()    # for case-insensitive comparisons"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "wheel.py",
                "path": "C:/Users\\alexa\\Desktop\\folders\\lab1\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\wheel.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 407,
                        "content": "if key == 'scripts' and not p.endswith('.exe'):"
                    },
                    {
                        "line_number": 897,
                        "content": "key = '%s/PKG-INFO' % info_dir"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "wheel.py",
                "path": "C:/Users\\alexa\\Desktop\\folders\\lab1\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\wheel.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 897,
                        "content": "key = '%s/PKG-INFO' % info_dir"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "__init__.py",
                "path": "C:/Users\\alexa\\Desktop\\folders\\lab1\\venv\\Lib\\site-packages\\pip\\_vendor\\pkg_resources\\__init__.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 2722,
                        "content": "self._key = key = self.project_name.lower()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "windows.py",
                "path": "C:/Users\\alexa\\Desktop\\folders\\lab1\\venv\\Lib\\site-packages\\pip\\_vendor\\platformdirs\\windows.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 199,
                        "content": "key = winreg.OpenKey(winreg.HKEY_CURRENT_USER, r\"Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders\")"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "lexer.py",
                "path": "C:/Users\\alexa\\Desktop\\folders\\lab1\\venv\\Lib\\site-packages\\pip\\_vendor\\pygments\\lexer.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 931,
                        "content": "key=lambda x: x[self._prof_sort_index],"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "sphinxext.py",
                "path": "C:/Users\\alexa\\Desktop\\folders\\lab1\\venv\\Lib\\site-packages\\pip\\_vendor\\pygments\\sphinxext.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 104,
                        "content": "for classname, data in sorted(LEXERS.items(), key=lambda x: x[1][1].lower()):"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "img.py",
                "path": "C:/Users\\alexa\\Desktop\\folders\\lab1\\venv\\Lib\\site-packages\\pip\\_vendor\\pygments\\formatters\\img.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 174,
                        "content": "key = _winreg.OpenKey(*keyname)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "img.py",
                "path": "C:/Users\\alexa\\Desktop\\folders\\lab1\\venv\\Lib\\site-packages\\pip\\_vendor\\pygments\\formatters\\img.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 174,
                        "content": "key = _winreg.OpenKey(*keyname)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "core.py",
                "path": "C:/Users\\alexa\\Desktop\\folders\\lab1\\venv\\Lib\\site-packages\\pip\\_vendor\\pyparsing\\core.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 4170,
                        "content": "fatals.sort(key=lambda e: -e.loc)"
                    },
                    {
                        "line_number": 4486,
                        "content": "fatals.sort(key=lambda e: -e.loc)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "core.py",
                "path": "C:/Users\\alexa\\Desktop\\folders\\lab1\\venv\\Lib\\site-packages\\pip\\_vendor\\pyparsing\\core.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 4172,
                        "content": "fatals.sort(key=lambda e: (-e.loc, -len(str(e.parser_element))))"
                    },
                    {
                        "line_number": 4488,
                        "content": "fatals.sort(key=lambda e: (-e.loc, -len(str(e.parser_element))))"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "auth.py",
                "path": "C:/Users\\alexa\\Desktop\\folders\\lab1\\venv\\Lib\\site-packages\\pip\\_vendor\\requests\\auth.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 148,
                        "content": "return hashlib.md5(x).hexdigest()"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "auth.py",
                "path": "C:/Users\\alexa\\Desktop\\folders\\lab1\\venv\\Lib\\site-packages\\pip\\_vendor\\requests\\auth.py",
                "vulnerability": "SHA-1",
                "lines": [
                    {
                        "line_number": 156,
                        "content": "return hashlib.sha1(x).hexdigest()"
                    },
                    {
                        "line_number": 205,
                        "content": "cnonce = hashlib.sha1(s).hexdigest()[:16]"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collisions."
            },
            {
                "language": "Python",
                "filename": "auth.py",
                "path": "C:/Users\\alexa\\Desktop\\folders\\lab1\\venv\\Lib\\site-packages\\pip\\_vendor\\requests\\auth.py",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 164,
                        "content": "return hashlib.sha256(x).hexdigest()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Python",
                "filename": "models.py",
                "path": "C:/Users\\alexa\\Desktop\\folders\\lab1\\venv\\Lib\\site-packages\\pip\\_vendor\\requests\\models.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 989,
                        "content": "key = link.get(\"rel\") or link.get(\"url\")"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "models.py",
                "path": "C:/Users\\alexa\\Desktop\\folders\\lab1\\venv\\Lib\\site-packages\\pip\\_vendor\\requests\\models.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 989,
                        "content": "key = link.get(\"rel\") or link.get(\"url\")"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "utils.py",
                "path": "C:/Users\\alexa\\Desktop\\folders\\lab1\\venv\\Lib\\site-packages\\pip\\_vendor\\requests\\utils.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 532,
                        "content": "key = param[:index_of_equals].strip(items_to_strip)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "scope.py",
                "path": "C:/Users\\alexa\\Desktop\\folders\\lab1\\venv\\Lib\\site-packages\\pip\\_vendor\\rich\\scope.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 46,
                        "content": "items = sorted(scope.items(), key=sort_items) if sort_keys else scope.items()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "_parser.py",
                "path": "C:/Users\\alexa\\Desktop\\folders\\lab1\\venv\\Lib\\site-packages\\pip\\_vendor\\tomli\\_parser.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 287,
                        "content": "pos, key = parse_key(src, pos)"
                    },
                    {
                        "line_number": 305,
                        "content": "pos, key = parse_key(src, pos)"
                    },
                    {
                        "line_number": 360,
                        "content": "pos, key = parse_key(src, pos)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "__init__.py",
                "path": "C:/Users\\alexa\\Desktop\\folders\\lab1\\venv\\Lib\\site-packages\\pkg_resources\\__init__.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 2722,
                        "content": "self._key = key = self.project_name.lower()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "more.py",
                "path": "C:/Users\\alexa\\Desktop\\folders\\lab1\\venv\\Lib\\site-packages\\pkg_resources\\_vendor\\more_itertools\\more.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 937,
                        "content": ">>> key = lambda x: x % 10  # Bucket by last digit"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "more.py",
                "path": "C:/Users\\alexa\\Desktop\\folders\\lab1\\venv\\Lib\\site-packages\\pkg_resources\\_vendor\\more_itertools\\more.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 939,
                        "content": ">>> s = bucket(it, key=key, validator=validator)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "recipes.py",
                "path": "C:/Users\\alexa\\Desktop\\folders\\lab1\\venv\\Lib\\site-packages\\pkg_resources\\_vendor\\more_itertools\\recipes.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 490,
                        "content": "``key=frozenset``. For ``dict`` objects,"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "windows.py",
                "path": "C:/Users\\alexa\\Desktop\\folders\\lab1\\venv\\Lib\\site-packages\\pkg_resources\\_vendor\\platformdirs\\windows.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 140,
                        "content": "key = winreg.OpenKey(winreg.HKEY_CURRENT_USER, r\"Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders\")"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "egg_info.py",
                "path": "C:/Users\\alexa\\Desktop\\folders\\lab1\\venv\\Lib\\site-packages\\setuptools\\command\\egg_info.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 255,
                        "content": "key = getattr(pd, \"key\", None) or getattr(pd, \"name\", None)"
                    },
                    {
                        "line_number": 256,
                        "content": "if pd is not None and key == self.egg_name.lower():"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "egg_info.py",
                "path": "C:/Users\\alexa\\Desktop\\folders\\lab1\\venv\\Lib\\site-packages\\setuptools\\command\\egg_info.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 255,
                        "content": "key = getattr(pd, \"key\", None) or getattr(pd, \"name\", None)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "_apply_pyprojecttoml.py",
                "path": "C:/Users\\alexa\\Desktop\\folders\\lab1\\venv\\Lib\\site-packages\\setuptools\\config\\_apply_pyprojecttoml.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 250,
                        "content": "key = json_compatible_key(key)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "msvc9compiler.py",
                "path": "C:/Users\\alexa\\Desktop\\folders\\lab1\\venv\\Lib\\site-packages\\setuptools\\_distutils\\msvc9compiler.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 177,
                        "content": "key = RegEnumKey(h, 0)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "msvccompiler.py",
                "path": "C:/Users\\alexa\\Desktop\\folders\\lab1\\venv\\Lib\\site-packages\\setuptools\\_distutils\\msvccompiler.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 161,
                        "content": "key = RegEnumKey(h, 0)"
                    },
                    {
                        "line_number": 640,
                        "content": "key = r\"{}\\{:0.1f}\\VC\\VC_OBJECTS_PLATFORM_INFO\\Win32\\Directories\".format("
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "_collections.py",
                "path": "C:/Users\\alexa\\Desktop\\folders\\lab1\\venv\\Lib\\site-packages\\setuptools\\_distutils\\_collections.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 159,
                        "content": "key = self._find_first_match_(sorted_keys, item)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "_msvccompiler.py",
                "path": "C:/Users\\alexa\\Desktop\\folders\\lab1\\venv\\Lib\\site-packages\\setuptools\\_distutils\\_msvccompiler.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 41,
                        "content": "key = winreg.OpenKeyEx("
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "install.py",
                "path": "C:/Users\\alexa\\Desktop\\folders\\lab1\\venv\\Lib\\site-packages\\setuptools\\_distutils\\command\\install.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 143,
                        "content": "os_name, sep, key = name.partition('_')"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "more.py",
                "path": "C:/Users\\alexa\\Desktop\\folders\\lab1\\venv\\Lib\\site-packages\\setuptools\\_vendor\\more_itertools\\more.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 412,
                        "content": ">>> key = lambda s: int(s)  # Sort by numeric value, not by string"
                    },
                    {
                        "line_number": 876,
                        "content": ">>> key = lambda x: x % 10  # Bucket by last digit"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "more.py",
                "path": "C:/Users\\alexa\\Desktop\\folders\\lab1\\venv\\Lib\\site-packages\\setuptools\\_vendor\\more_itertools\\more.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 412,
                        "content": ">>> key = lambda s: int(s)  # Sort by numeric value, not by string"
                    },
                    {
                        "line_number": 878,
                        "content": ">>> s = bucket(it, key=key, validator=validator)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "recipes.py",
                "path": "C:/Users\\alexa\\Desktop\\folders\\lab1\\venv\\Lib\\site-packages\\setuptools\\_vendor\\more_itertools\\recipes.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 400,
                        "content": "``key=frozenset``. For ``dict`` objects,"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "_parser.py",
                "path": "C:/Users\\alexa\\Desktop\\folders\\lab1\\venv\\Lib\\site-packages\\setuptools\\_vendor\\tomli\\_parser.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 287,
                        "content": "pos, key = parse_key(src, pos)"
                    },
                    {
                        "line_number": 305,
                        "content": "pos, key = parse_key(src, pos)"
                    },
                    {
                        "line_number": 360,
                        "content": "pos, key = parse_key(src, pos)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "wheelfile.py",
                "path": "C:/Users\\alexa\\Desktop\\folders\\lab1\\venv\\Lib\\site-packages\\wheel\\wheelfile.py",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 38,
                        "content": "_default_algorithm = hashlib.sha256"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Python",
                "filename": "common.py",
                "path": "C:/Users\\alexa\\Documents\\GitHub\\eduvaluate-backend\\node_modules\\node-gyp\\gyp\\pylib\\gyp\\common.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 558,
                        "content": "key = self.end[1][0] if last else self.end[2][0]"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "common.py",
                "path": "C:/Users\\alexa\\Documents\\GitHub\\eduvaluate-backend\\node_modules\\node-gyp\\gyp\\pylib\\gyp\\common.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 558,
                        "content": "key = self.end[1][0] if last else self.end[2][0]"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "input.py",
                "path": "C:/Users\\alexa\\Documents\\GitHub\\eduvaluate-backend\\node_modules\\node-gyp\\gyp\\pylib\\gyp\\input.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1398,
                        "content": "if key == \"variables\" or type(value) is str:"
                    },
                    {
                        "line_number": 2081,
                        "content": "elif key == \"link_settings\":"
                    },
                    {
                        "line_number": 2946,
                        "content": "key = subdir + \":\" + name"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "MSVSNew.py",
                "path": "C:/Users\\alexa\\Documents\\GitHub\\eduvaluate-backend\\node_modules\\node-gyp\\gyp\\pylib\\gyp\\MSVSNew.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 100,
                        "content": "self.entries = sorted(entries or [], key=attrgetter(\"path\"))"
                    },
                    {
                        "line_number": 252,
                        "content": "all_entries = sorted(all_entries, key=attrgetter(\"path\"))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "MSVSNew.py",
                "path": "C:/Users\\alexa\\Documents\\GitHub\\eduvaluate-backend\\node_modules\\node-gyp\\gyp\\pylib\\gyp\\MSVSNew.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 48,
                        "content": "d = hashlib.md5((str(seed) + str(name)).encode(\"utf-8\")).hexdigest().upper()"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "MSVSVersion.py",
                "path": "C:/Users\\alexa\\Documents\\GitHub\\eduvaluate-backend\\node_modules\\node-gyp\\gyp\\pylib\\gyp\\MSVSVersion.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 45,
                        "content": "compatible_sdks.sort(key=lambda v: float(v.replace(\"v\", \"\")), reverse=True)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "xcodeproj_file.py",
                "path": "C:/Users\\alexa\\Documents\\GitHub\\eduvaluate-backend\\node_modules\\node-gyp\\gyp\\pylib\\gyp\\xcodeproj_file.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 693,
                        "content": "if key == \"settings\" and isinstance(self, PBXBuildFile):"
                    },
                    {
                        "line_number": 700,
                        "content": "if key == \"buildSettings\" and isinstance(self, XCBuildConfiguration):"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "xcodeproj_file.py",
                "path": "C:/Users\\alexa\\Documents\\GitHub\\eduvaluate-backend\\node_modules\\node-gyp\\gyp\\pylib\\gyp\\xcodeproj_file.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 1216,
                        "content": "key = (child_name, child_path)"
                    },
                    {
                        "line_number": 1490,
                        "content": "self._properties[\"children\"], key=cmp_to_key(lambda x, y: x.Compare(y))"
                    },
                    {
                        "line_number": 2898,
                        "content": "key=cmp_to_key(lambda x, y: x.CompareRootGroup(y)),"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "xcodeproj_file.py",
                "path": "C:/Users\\alexa\\Documents\\GitHub\\eduvaluate-backend\\node_modules\\node-gyp\\gyp\\pylib\\gyp\\xcodeproj_file.py",
                "vulnerability": "SHA-1",
                "lines": [
                    {
                        "line_number": 433,
                        "content": "seed_hash = hashlib.sha1()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collisions."
            },
            {
                "language": "Python",
                "filename": "eclipse.py",
                "path": "C:/Users\\alexa\\Documents\\GitHub\\eduvaluate-backend\\node_modules\\node-gyp\\gyp\\pylib\\gyp\\generator\\eclipse.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 250,
                        "content": "key = cpp_line_parts[1]"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "make.py",
                "path": "C:/Users\\alexa\\Documents\\GitHub\\eduvaluate-backend\\node_modules\\node-gyp\\gyp\\pylib\\gyp\\generator\\make.py",
                "vulnerability": "SHA-1",
                "lines": [
                    {
                        "line_number": 1995,
                        "content": "cmddigest = hashlib.sha1("
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collisions."
            },
            {
                "language": "Python",
                "filename": "ninja.py",
                "path": "C:/Users\\alexa\\Documents\\GitHub\\eduvaluate-backend\\node_modules\\node-gyp\\gyp\\pylib\\gyp\\generator\\ninja.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 815,
                        "content": "(\"unique_name\", hashlib.md5(outputs[0]).hexdigest())"
                    },
                    {
                        "line_number": 2814,
                        "content": "hash_for_rules = hashlib.md5(qualified_target_for_hash).hexdigest()"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "failed-syscalls-by-pid.py",
                "path": "C:/Users\\alexa\\Music\\linux-2.6.38.1\\tools\\perf\\scripts\\python\\failed-syscalls-by-pid.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 72,
                        "content": "for ret, val in sorted(syscalls[comm][pid][id].iteritems(), key = lambda(k, v): (v, k),  reverse = True):"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "failed-syscalls-by-pid.py",
                "path": "C:/Users\\alexa\\Music\\linux-2.6.38.1\\tools\\perf\\scripts\\python\\failed-syscalls-by-pid.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 72,
                        "content": "for ret, val in sorted(syscalls[comm][pid][id].iteritems(), key = lambda(k, v): (v, k),  reverse = True):"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "sctop.py",
                "path": "C:/Users\\alexa\\Music\\linux-2.6.38.1\\tools\\perf\\scripts\\python\\sctop.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 68,
                        "content": "for id, val in sorted(syscalls.iteritems(), key = lambda(k, v): (v, k), \\"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "syscall-counts-by-pid.py",
                "path": "C:/Users\\alexa\\Music\\linux-2.6.38.1\\tools\\perf\\scripts\\python\\syscall-counts-by-pid.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 68,
                        "content": "key = lambda(k, v): (v, k),  reverse = True):"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "syscall-counts-by-pid.py",
                "path": "C:/Users\\alexa\\Music\\linux-2.6.38.1\\tools\\perf\\scripts\\python\\syscall-counts-by-pid.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 68,
                        "content": "key = lambda(k, v): (v, k),  reverse = True):"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "syscall-counts.py",
                "path": "C:/Users\\alexa\\Music\\linux-2.6.38.1\\tools\\perf\\scripts\\python\\syscall-counts.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 57,
                        "content": "for id, val in sorted(syscalls.iteritems(), key = lambda(k, v): (v, k), \\"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "SchedGui.py",
                "path": "C:/Users\\alexa\\Music\\linux-2.6.38.1\\tools\\perf\\scripts\\python\\Perf-Trace-Util\\lib\\Perf\\Trace\\SchedGui.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 175,
                        "content": "key = event.GetKeyCode()"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "_virtualenv.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\_virtualenv.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 29,
                        "content": "key = f\"install_{base}\""
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "_parser.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\dateutil\\parser\\_parser.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 464,
                        "content": "key = [x for x in ['y', 'm', 'd'] if x not in strids]"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "_parser.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\dateutil\\parser\\_parser.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 464,
                        "content": "key = [x for x in ['y', 'm', 'd'] if x not in strids]"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "_factories.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\dateutil\\tz\\_factories.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 64,
                        "content": "key = (s, posix_offset)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "fontBuilder.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\fontTools\\fontBuilder.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 785,
                        "content": "bag, key=lambda vorg: bag[vorg], reverse=True"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "fontBuilder.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\fontTools\\fontBuilder.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 785,
                        "content": "bag, key=lambda vorg: bag[vorg], reverse=True"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "width.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\fontTools\\cffLib\\width.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 161,
                        "content": "default = min(ends, key=lambda default: byteCost(widths, default, nominal))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "width.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\fontTools\\cffLib\\width.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 161,
                        "content": "default = min(ends, key=lambda default: byteCost(widths, default, nominal))"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "builder.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\fontTools\\colorLib\\builder.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 492,
                        "content": "key=lambda t: (t[1] - t[0], t[1], t[0]),"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "statNames.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\fontTools\\designspaceLib\\statNames.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 148,
                        "content": "key=lambda a: a.axisOrdering,"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "builder.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\fontTools\\feaLib\\builder.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 254,
                        "content": "key = (script, lang, feature_name)"
                    },
                    {
                        "line_number": 1097,
                        "content": "key = (self.script_, language, self.cur_feature_name_)"
                    },
                    {
                        "line_number": 1106,
                        "content": "key = (self.script_, language)"
                    },
                    {
                        "line_number": 1242,
                        "content": "key = (script, lang, self.cur_feature_name_)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "builder.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\fontTools\\feaLib\\builder.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 1097,
                        "content": "key = (self.script_, language, self.cur_feature_name_)"
                    },
                    {
                        "line_number": 1106,
                        "content": "key = (self.script_, language)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "parser.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\fontTools\\feaLib\\parser.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1133,
                        "content": "key = self.cur_token_.lower()"
                    },
                    {
                        "line_number": 1160,
                        "content": "key = self.cur_token_.lower()"
                    },
                    {
                        "line_number": 1349,
                        "content": "key = self.cur_token_.lower()"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "variableScalar.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\fontTools\\feaLib\\variableScalar.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 71,
                        "content": "key = Location({ax.axisTag: ax.defaultValue for ax in self.axes})"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "classifyTools.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\fontTools\\misc\\classifyTools.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 77,
                        "content": "self._sets = sorted(self._sets, key=lambda s: (-len(s), sorted(s)))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "__init__.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\fontTools\\mtiLib\\__init__.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 172,
                        "content": "script.Script.LangSysRecord, key=lambda rec: rec.LangSysTag"
                    },
                    {
                        "line_number": 174,
                        "content": "self.ScriptRecord = sorted(records, key=lambda rec: rec.ScriptTag)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "builder.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\fontTools\\otlLib\\builder.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1361,
                        "content": "key = (glyph1, glyph2)"
                    },
                    {
                        "line_number": 2677,
                        "content": "result = sorted(self.classes_, key=lambda s: (len(s), s), reverse=True)"
                    },
                    {
                        "line_number": 2887,
                        "content": "axisValueRecords.sort(key=lambda avr: avr.AxisIndex)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "__init__.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\fontTools\\subset\\__init__.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 3472,
                        "content": "tags = sorted(font.keys(), key=lambda tag: tagOrder.get(tag, 0))"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "F__e_a_t.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\fontTools\\ttLib\\tables\\F__e_a_t.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 98,
                        "content": "v.settings.items(), key=lambda x: (-1, x[1]) if x[0] == v.default else x"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "F__e_a_t.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\fontTools\\ttLib\\tables\\F__e_a_t.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 98,
                        "content": "v.settings.items(), key=lambda x: (-1, x[1]) if x[0] == v.default else x"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "grUtils.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\fontTools\\ttLib\\tables\\grUtils.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 59,
                        "content": "g = _entries(sorted(attributes.items(), key=lambda x: int(x[0])), sameval)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "G__l_a_t.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\fontTools\\ttLib\\tables\\G__l_a_t.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 165,
                        "content": "self.attributes.items(), key=lambda x: ttFont.getGlyphID(x[0])"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "otTables.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\fontTools\\ttLib\\tables\\otTables.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 305,
                        "content": "for a in sorted(actions, key=lambda x: (-len(x), x)):"
                    },
                    {
                        "line_number": 494,
                        "content": "for action in sorted(actions, key=lambda x: (-len(x), x)):"
                    },
                    {
                        "line_number": 1310,
                        "content": "self.BaseGlyphRecord, key=lambda rec: font.getGlyphID(rec.BaseGlyph)"
                    },
                    {
                        "line_number": 1318,
                        "content": "self.BaseGlyphPaintRecord, key=lambda rec: font.getGlyphID(rec.BaseGlyph)"
                    },
                    {
                        "line_number": 1396,
                        "content": "key = clipBox.as_tuple()"
                    },
                    {
                        "line_number": 1450,
                        "content": "self.groups().items(), key=lambda item: min(item[0])"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "otTables.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\fontTools\\ttLib\\tables\\otTables.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 1140,
                        "content": "ligatures.items(), key=lambda item: (-len(item[0]), item[0])"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "S__i_l_f.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\fontTools\\ttLib\\tables\\S__i_l_f.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 929,
                        "content": "self.colMap.items(), key=lambda x: ttFont.getGlyphID(x[0])"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "TupleVariation.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\fontTools\\ttLib\\tables\\TupleVariation.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 636,
                        "content": "key=lambda item: (-item[1], item[0]),"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "_c_m_a_p.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\fontTools\\ttLib\\tables\\_c_m_a_p.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 1412,
                        "content": "uvList.sort(key=lambda item: (item[1] is not None, item[0], item[1]))"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "_n_a_m_e.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\fontTools\\ttLib\\tables\\_n_a_m_e.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 313,
                        "content": "key = (name.toUnicode(), name.platformID, name.platEncID, name.langID)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "_n_a_m_e.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\fontTools\\ttLib\\tables\\_n_a_m_e.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 313,
                        "content": "key = (name.toUnicode(), name.platformID, name.platEncID, name.langID)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "cff.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\fontTools\\varLib\\cff.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 438,
                        "content": "key = tuple(v is not None for v in all_cs)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "cff.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\fontTools\\varLib\\cff.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 438,
                        "content": "key = tuple(v is not None for v in all_cs)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "featureVars.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\fontTools\\varLib\\featureVars.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 161,
                        "content": "key=lambda d: tuple(sorted(d.items())),"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "featureVars.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\fontTools\\varLib\\featureVars.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 161,
                        "content": "key=lambda d: tuple(sorted(d.items())),"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "interpolatable.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\fontTools\\varLib\\interpolatable.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 458,
                        "content": "for loc in sorted(locs, key=lambda v: (len(v), v)):"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "merger.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\fontTools\\varLib\\merger.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 227,
                        "content": "if not all(sorted(vs, key=sortKey) == vs for vs in lst):"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "models.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\fontTools\\varLib\\models.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 276,
                        "content": "key = tuple(v is not None for v in items)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "models.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\fontTools\\varLib\\models.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 276,
                        "content": "key = tuple(v is not None for v in items)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "varStore.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\fontTools\\varLib\\varStore.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 64,
                        "content": "key = _getLocationKey(region)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "varStore.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\fontTools\\varLib\\varStore.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 620,
                        "content": "encodings.sort(key=_Encoding.width_sort_key)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "names.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\fontTools\\varLib\\instancer\\names.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 171,
                        "content": "key=lambda v: len(v.AxisValueRecord),"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "voltToFea.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\fontTools\\voltLib\\voltToFea.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 132,
                        "content": "for statement in sorted(groups, key=lambda x: Group(x)):"
                    },
                    {
                        "line_number": 194,
                        "content": "stags = sorted(scripts, key=lambda k: 0 if k == \"DFLT\" else 1)"
                    },
                    {
                        "line_number": 197,
                        "content": "ltags = sorted(scripts[stag], key=lambda k: 0 if k == \"dflt\" else 1)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "figure.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\matplotlib\\figure.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 107,
                        "content": "return max(self._axes, key=self._axes.__getitem__, default=None)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "mlab.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\matplotlib\\mlab.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 111,
                        "content": "return detrend(x, key=detrend_linear, axis=axis)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "texmanager.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\matplotlib\\texmanager.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 338,
                        "content": "key = cls._get_tex_source(tex, fontsize), dpi"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "texmanager.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\matplotlib\\texmanager.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 115,
                        "content": "return hashlib.md5(preambles.encode('utf-8')).hexdigest()"
                    },
                    {
                        "line_number": 179,
                        "content": "filehash = hashlib.md5(src.encode('utf-8')).hexdigest()"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "text.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\matplotlib\\text.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1989,
                        "content": "x, relposx = min(xpos, key=lambda v: abs(v[0] - x1))"
                    },
                    {
                        "line_number": 1990,
                        "content": "y, relposy = min(ypos, key=lambda v: abs(v[0] - y1))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "_fontconfig_pattern.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\matplotlib\\_fontconfig_pattern.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 117,
                        "content": "# are necessarily scalar) are given as key=value, skipping Nones."
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "__init__.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\matplotlib\\__init__.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 771,
                        "content": "elif key == \"backend\" and self is globals().get(\"rcParams\"):"
                    },
                    {
                        "line_number": 934,
                        "content": "dict(key=key, fname=fname, line_no=line_no,"
                    },
                    {
                        "line_number": 999,
                        "content": "key: [(rcsetup._auto_backend_sentinel if key == \"backend\" else"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "__init__.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\matplotlib\\__init__.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 771,
                        "content": "elif key == \"backend\" and self is globals().get(\"rcParams\"):"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "backend_svg.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\matplotlib\\backends\\backend_svg.py",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 499,
                        "content": "m = hashlib.sha256()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Python",
                "filename": "backend_webagg_core.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\matplotlib\\backends\\backend_webagg_core.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 79,
                        "content": "key = key[:key.index('k')] + value"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "backend_webagg_core.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\matplotlib\\backends\\backend_webagg_core.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 79,
                        "content": "key = key[:key.index('k')] + value"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "mathmpl.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\matplotlib\\sphinxext\\mathmpl.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 142,
                        "content": "hashlib.md5(f'{latex}{fontset}{fontsize}'.encode()).hexdigest()[-10:])"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "compare.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\matplotlib\\testing\\compare.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 334,
                        "content": "cache_stat, key=lambda path: cache_stat[path].st_atime,"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "compare.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\matplotlib\\testing\\compare.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 48,
                        "content": "md5 = hashlib.md5()"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "decorators.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\matplotlib\\testing\\decorators.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 160,
                        "content": "key=lambda manager: manager.num)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "decorators.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\matplotlib\\testing\\decorators.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 160,
                        "content": "key=lambda manager: manager.num)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_dviread.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\matplotlib\\tests\\test_dviread.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 16,
                        "content": "key = b'TeXfont%d' % n"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_mlab.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\matplotlib\\tests\\test_mlab.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 174,
                        "content": "mlab.detrend(input.T, key=\"constant\", axis=None), target.T)"
                    },
                    {
                        "line_number": 187,
                        "content": "self.allclose(mlab.detrend(input, key=\"default\", axis=1), target)"
                    },
                    {
                        "line_number": 240,
                        "content": "mlab.detrend(input.T, key=\"linear\", axis=0), target.T)"
                    },
                    {
                        "line_number": 244,
                        "content": "mlab.detrend(input, key=\"linear\", axis=1), target)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_mlab.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\matplotlib\\tests\\test_mlab.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 174,
                        "content": "mlab.detrend(input.T, key=\"constant\", axis=None), target.T)"
                    },
                    {
                        "line_number": 188,
                        "content": "self.allclose(mlab.detrend(input.T, key=\"mean\", axis=0), target.T)"
                    },
                    {
                        "line_number": 190,
                        "content": "mlab.detrend(input.T, key=mlab.detrend_mean, axis=0), target.T)"
                    },
                    {
                        "line_number": 217,
                        "content": "assert mlab.detrend(5.5, key=mlab.detrend_linear) == 0."
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "art3d.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\mpl_toolkits\\mplot3d\\art3d.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1010,
                        "content": "key=lambda x: x[0], reverse=True)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "art3d.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\mpl_toolkits\\mplot3d\\art3d.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 1010,
                        "content": "key=lambda x: x[0], reverse=True)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_array_object.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\numpy\\array_api\\tests\\test_array_object.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 373,
                        "content": "key = ones((0, 0), dtype=bool_)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "einsumfunc.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\numpy\\core\\einsumfunc.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 204,
                        "content": "path = min(full_results, key=lambda x: x[0])[1]"
                    },
                    {
                        "line_number": 212,
                        "content": "path = min(full_results, key=lambda x: x[0])[1]"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "getlimits.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\numpy\\core\\getlimits.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 675,
                        "content": "self.key = \"%s%d\" % (self.kind, self.bits)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "numerictypes.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\numpy\\core\\numerictypes.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 520,
                        "content": "ScalarType += sorted(_concrete_types, key=_scalar_type_key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "system_info.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\numpy\\distutils\\system_info.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1716,
                        "content": "key = (tuple(libraries), tuple(library_dirs))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "system_info.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\numpy\\distutils\\system_info.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 1716,
                        "content": "key = (tuple(libraries), tuple(library_dirs))"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "gnu.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\numpy\\distutils\\fcompiler\\gnu.py",
                "vulnerability": "SHA-1",
                "lines": [
                    {
                        "line_number": 402,
                        "content": "h = hashlib.sha1()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collisions."
            },
            {
                "language": "Python",
                "filename": "test_system_info.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\numpy\\distutils\\tests\\test_system_info.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 211,
                        "content": "assert_equal(tsi.get_runtime_lib_dirs(key='rpath'), [self._dir2])"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "cb_rules.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\numpy\\f2py\\cb_rules.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 60,
                        "content": "char *key = \"__f2py_cb_#name#\";"
                    },
                    {
                        "line_number": 65,
                        "content": "char *key = \"__f2py_cb_#name#\";"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "crackfortran.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\numpy\\f2py\\crackfortran.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 3448,
                        "content": "elif key == 'callstatement':"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "npyio.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\numpy\\lib\\npyio.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 2090,
                        "content": "key = names.index(key)"
                    },
                    {
                        "line_number": 2141,
                        "content": "key = names.index(key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "recfunctions.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\numpy\\lib\\recfunctions.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1323,
                        "content": "a, key=None, ignoremask=None, return_index=None):"
                    },
                    {
                        "line_number": 1328,
                        "content": "def find_duplicates(a, key=None, ignoremask=True, return_index=False):"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_direct.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\numpy\\random\\tests\\test_direct.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 333,
                        "content": "key=state['state']['key'])"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_generator_mt19937.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\numpy\\random\\tests\\test_generator_mt19937.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 2601,
                        "content": "key = mt19937.state[\"state\"][\"key\"]"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_generator_mt19937.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\numpy\\random\\tests\\test_generator_mt19937.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 2601,
                        "content": "key = mt19937.state[\"state\"][\"key\"]"
                    },
                    {
                        "line_number": 2609,
                        "content": "key = jumped.state[\"state\"][\"key\"]"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_generator_mt19937.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\numpy\\random\\tests\\test_generator_mt19937.py",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 512,
                        "content": "res = hashlib.sha256(val).hexdigest()"
                    },
                    {
                        "line_number": 519,
                        "content": "res = hashlib.sha256(val).hexdigest()"
                    },
                    {
                        "line_number": 927,
                        "content": "res = hashlib.sha256(actual.view(np.int8)).hexdigest()"
                    },
                    {
                        "line_number": 2604,
                        "content": "sha256 = hashlib.sha256(key)"
                    },
                    {
                        "line_number": 2612,
                        "content": "sha256 = hashlib.sha256(key)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Python",
                "filename": "test_random.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\numpy\\random\\tests\\test_random.py",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 238,
                        "content": "res = hashlib.sha256(val.view(np.int8)).hexdigest()"
                    },
                    {
                        "line_number": 244,
                        "content": "res = hashlib.sha256(val).hexdigest()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Python",
                "filename": "test_randomstate.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\numpy\\random\\tests\\test_randomstate.py",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 360,
                        "content": "res = hashlib.sha256(val.view(np.int8)).hexdigest()"
                    },
                    {
                        "line_number": 366,
                        "content": "res = hashlib.sha256(val).hexdigest()"
                    },
                    {
                        "line_number": 2029,
                        "content": "res = hashlib.sha256(val.view(np.int8)).hexdigest()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Python",
                "filename": "test_typing.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\numpy\\typing\\tests\\test_typing.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 225,
                        "content": "key = (np_scalar.dtype.kind, np_scalar.dtype.itemsize)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_typing.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\numpy\\typing\\tests\\test_typing.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 225,
                        "content": "key = (np_scalar.dtype.kind, np_scalar.dtype.itemsize)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "frame.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\pandas\\core\\frame.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 6943,
                        "content": ">>> df.sort_index(key=lambda x: x.str.lower())"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "frame.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\pandas\\core\\frame.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 3805,
                        "content": "key = check_bool_indexer(self.index, key)"
                    },
                    {
                        "line_number": 3967,
                        "content": "key = check_bool_indexer(self.index, key)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "generic.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\pandas\\core\\generic.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 554,
                        "content": "key = f\"{prefix}level_{i}\""
                    },
                    {
                        "line_number": 4968,
                        "content": ">>> df.sort_values(by='col4', key=lambda col: col.str.lower())"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "indexing.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\pandas\\core\\indexing.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 799,
                        "content": "key = key[column_axis]"
                    },
                    {
                        "line_number": 841,
                        "content": "key = tuple(list(x) if is_iterator(x) else x for x in key)"
                    },
                    {
                        "line_number": 1093,
                        "content": "key = tuple(list(x) if is_iterator(x) else x for x in key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "indexing.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\pandas\\core\\indexing.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 698,
                        "content": "key = _tupleize_axis_indexer(self.ndim, self.axis, key)"
                    },
                    {
                        "line_number": 1683,
                        "content": "key = _tupleize_axis_indexer(self.ndim, self.axis, key)"
                    },
                    {
                        "line_number": 2381,
                        "content": "key = _tuplify(self.ndim, key)"
                    },
                    {
                        "line_number": 2382,
                        "content": "key = list(self._convert_key(key))"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "resample.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\pandas\\core\\resample.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 460,
                        "content": "return self._resampler_for_grouping(groupby=groupby, key=key, parent=self)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "series.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\pandas\\core\\series.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1030,
                        "content": "key = np.asarray(key, dtype=bool)"
                    },
                    {
                        "line_number": 1191,
                        "content": "key = np.asarray(key, dtype=bool)"
                    },
                    {
                        "line_number": 3577,
                        "content": ">>> s.sort_values(key=lambda x: x.str.lower())"
                    },
                    {
                        "line_number": 3828,
                        "content": ">>> s.sort_index(key=lambda x : x.str.lower())"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "series.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\pandas\\core\\series.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 1029,
                        "content": "key = check_bool_indexer(self.index, key)"
                    },
                    {
                        "line_number": 1190,
                        "content": "key = check_bool_indexer(self.index, key)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "datetimelike.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\pandas\\core\\arrays\\datetimelike.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 390,
                        "content": "key = check_array_indexer(self, key)  # maybe ndarray[bool] -> slice"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "interval.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\pandas\\core\\arrays\\interval.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 715,
                        "content": "key = check_array_indexer(self, key)"
                    },
                    {
                        "line_number": 735,
                        "content": "key = check_array_indexer(self, key)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "masked.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\pandas\\core\\arrays\\masked.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 234,
                        "content": "key = check_array_indexer(self, key)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "string_.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\pandas\\core\\arrays\\string_.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 404,
                        "content": "key = check_array_indexer(self, key)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "_mixins.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\pandas\\core\\arrays\\_mixins.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 248,
                        "content": "key = check_array_indexer(self, key)"
                    },
                    {
                        "line_number": 280,
                        "content": "key = check_array_indexer(self, key)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "array.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\pandas\\core\\arrays\\arrow\\array.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1401,
                        "content": "key = np.asarray(key, dtype=np.bool_)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "array.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\pandas\\core\\arrays\\arrow\\array.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 1372,
                        "content": "key = check_array_indexer(self, key)"
                    },
                    {
                        "line_number": 1401,
                        "content": "key = np.asarray(key, dtype=np.bool_)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "array.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\pandas\\core\\arrays\\sparse\\array.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 994,
                        "content": "key = cast(np.ndarray, key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "array.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\pandas\\core\\arrays\\sparse\\array.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 990,
                        "content": "key = check_array_indexer(self, key)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "generic.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\pandas\\core\\groupby\\generic.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 315,
                        "content": "key = base.OutputKey(label=name, position=idx)"
                    },
                    {
                        "line_number": 1346,
                        "content": "key = base.OutputKey(label=name, position=idx)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "grouper.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\pandas\\core\\groupby\\grouper.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 166,
                        "content": ">>> df.groupby(pd.Grouper(key=\"Publish date\", freq=\"1W\")).mean()"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "grouper.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\pandas\\core\\groupby\\grouper.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 166,
                        "content": ">>> df.groupby(pd.Grouper(key=\"Publish date\", freq=\"1W\")).mean()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "base.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\pandas\\core\\indexes\\base.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 4583,
                        "content": "ldrop_names = sorted(self_names - overlap, key=self_names_order)"
                    },
                    {
                        "line_number": 5194,
                        "content": "key = np.asarray(key, dtype=bool)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "base.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\pandas\\core\\indexes\\base.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 5174,
                        "content": "key = com.cast_scalar_indexer(key)"
                    },
                    {
                        "line_number": 5192,
                        "content": "key = key.to_numpy(dtype=bool, na_value=False)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "interval.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\pandas\\core\\indexes\\interval.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 526,
                        "content": "key = ensure_index(key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "multi.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\pandas\\core\\indexes\\multi.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 2022,
                        "content": "key = np.asarray(key, dtype=bool)"
                    },
                    {
                        "line_number": 2845,
                        "content": "# e.g. test_groupby_example key = ((0, 0, 1, 2), \"new_col\")"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "multi.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\pandas\\core\\indexes\\multi.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 2008,
                        "content": "key = com.cast_scalar_indexer(key)"
                    },
                    {
                        "line_number": 2845,
                        "content": "# e.g. test_groupby_example key = ((0, 0, 1, 2), \"new_col\")"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "merge.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\pandas\\core\\reshape\\merge.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 2338,
                        "content": "Left (resp. right if called with `key='right'`) labels, as enumerated type."
                    },
                    {
                        "line_number": 2340,
                        "content": "Right (resp. left if called with `key='right'`) labels, as enumerated type."
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "stata.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\pandas\\io\\stata.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 871,
                        "content": "key = struct.unpack(\"<f\", float32_base)[0]"
                    },
                    {
                        "line_number": 881,
                        "content": "key = struct.unpack(\"<d\", float64_base)[0]"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "stata.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\pandas\\io\\stata.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 3083,
                        "content": "key = gso_table.get(val, None)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "_odswriter.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\pandas\\io\\excel\\_odswriter.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 129,
                        "content": "for cell in sorted(cells, key=lambda cell: (cell.row, cell.col)):"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "printing.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\pandas\\io\\formats\\printing.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 153,
                        "content": "key=pprint_thing(k, _nest_lvl + 1, max_seq_items=max_seq_items, **kwds),"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "_misc.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\pandas\\plotting\\_misc.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 571,
                        "content": "key = self._get_canonical_key(key)"
                    },
                    {
                        "line_number": 577,
                        "content": "key = self._get_canonical_key(key)"
                    },
                    {
                        "line_number": 581,
                        "content": "key = self._get_canonical_key(key)"
                    },
                    {
                        "line_number": 587,
                        "content": "key = self._get_canonical_key(key)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_algos.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\pandas\\tests\\test_algos.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 204,
                        "content": "key = np.array([1, 2, 1, np.nan], dtype=\"O\")"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_downstream.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\pandas\\tests\\test_downstream.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 116,
                        "content": "key = cftime.DatetimeGregorian(2000, 1, 1)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_numpy.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\pandas\\tests\\extension\\test_numpy.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 439,
                        "content": "key = full_indexer(df)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "setitem.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\pandas\\tests\\extension\\base\\setitem.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 340,
                        "content": "key = full_indexer(df)"
                    },
                    {
                        "line_number": 366,
                        "content": "key = full_indexer(ser)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "array.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\pandas\\tests\\extension\\decimal\\array.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 198,
                        "content": "key = check_array_indexer(self, key)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_stack_unstack.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\pandas\\tests\\frame\\test_stack_unstack.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 988,
                        "content": "key = r[\"1st\"], (col, r[\"2nd\"], r[\"3rd\"])"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_indexing.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\pandas\\tests\\frame\\indexing\\test_indexing.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 885,
                        "content": "key = (f.index[slice(None, 2)], [\"A\", \"B\"])"
                    },
                    {
                        "line_number": 897,
                        "content": "key = (f.index[slice(None, 2)], [\"A\", \"B\"])"
                    },
                    {
                        "line_number": 908,
                        "content": "key = (f.index[slice(-2, None)], [\"A\", \"B\"])"
                    },
                    {
                        "line_number": 917,
                        "content": "key = (f.index[slice(-2, None)], [\"A\", \"B\"])"
                    },
                    {
                        "line_number": 1673,
                        "content": "key = (df.index[2], df.columns[0])"
                    },
                    {
                        "line_number": 1725,
                        "content": "key = (slice(2, 4), 0)"
                    },
                    {
                        "line_number": 1754,
                        "content": "key = (slice(2, 4), 0)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_indexing.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\pandas\\tests\\frame\\indexing\\test_indexing.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 908,
                        "content": "key = (f.index[slice(-2, None)], [\"A\", \"B\"])"
                    },
                    {
                        "line_number": 917,
                        "content": "key = (f.index[slice(-2, None)], [\"A\", \"B\"])"
                    },
                    {
                        "line_number": 1673,
                        "content": "key = (df.index[2], df.columns[0])"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_sort_index.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\pandas\\tests\\frame\\methods\\test_sort_index.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 847,
                        "content": "result = df.sort_index(key=lambda x: x.str.lower())"
                    },
                    {
                        "line_number": 851,
                        "content": "result = df.sort_index(key=lambda x: x.str.lower(), ascending=False)"
                    },
                    {
                        "line_number": 874,
                        "content": "result = df.sort_index(level=\"a\", key=lambda x: x.str.lower())"
                    },
                    {
                        "line_number": 883,
                        "content": "key=lambda x: x.str.lower() if x.name in [\"a\", \"c\"] else -x,"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_sort_index.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\pandas\\tests\\frame\\methods\\test_sort_index.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 883,
                        "content": "key=lambda x: x.str.lower() if x.name in [\"a\", \"c\"] else -x,"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_sort_values.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\pandas\\tests\\frame\\methods\\test_sort_values.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 749,
                        "content": "result = df.sort_values([0, 1], key=lambda col: col.str.lower())"
                    },
                    {
                        "line_number": 753,
                        "content": "[0, 1], key=lambda col: col.str.lower(), ascending=False"
                    },
                    {
                        "line_number": 755,
                        "content": "expected = df.sort_values(1, key=lambda col: col.str.lower(), ascending=False)"
                    },
                    {
                        "line_number": 772,
                        "content": "result = df.sort_values(0, key=lambda col: col.str.lower())"
                    },
                    {
                        "line_number": 776,
                        "content": "result = df.sort_values(1, key=lambda col: -col)"
                    },
                    {
                        "line_number": 783,
                        "content": "result = df.sort_values(0, key=lambda col: col.str.lower(), axis=1)"
                    },
                    {
                        "line_number": 787,
                        "content": "result = df.sort_values(1, key=lambda col: -col, axis=1)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_sort_values.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\pandas\\tests\\frame\\methods\\test_sort_values.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 688,
                        "content": "result = df.sort_values(0, key=lambda x: -x, ascending=False)"
                    },
                    {
                        "line_number": 708,
                        "content": "result = df.sort_values(by=[\"a\", \"b\"], key=lambda x: -x, ascending=False)"
                    },
                    {
                        "line_number": 787,
                        "content": "result = df.sort_values(1, key=lambda col: -col, axis=1)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_categorical.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\pandas\\tests\\groupby\\test_categorical.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 964,
                        "content": "exp = res[sorted(res.index, key=lambda x: float(x.split()[0]))]"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_groupby.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\pandas\\tests\\groupby\\test_groupby.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 36,
                        "content": "expected = \"Grouper(key='A', level='B', axis=0, sort=False, dropna=True)\""
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_groupby.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\pandas\\tests\\groupby\\test_groupby.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 36,
                        "content": "expected = \"Grouper(key='A', level='B', axis=0, sort=False, dropna=True)\""
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_grouping.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\pandas\\tests\\groupby\\test_grouping.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 644,
                        "content": "grouper = Grouper(key=\"date\", freq=\"AS\")"
                    },
                    {
                        "line_number": 771,
                        "content": "key = list(g.groups)[0]"
                    },
                    {
                        "line_number": 780,
                        "content": "key = list(g.groups)[0]"
                    },
                    {
                        "line_number": 1039,
                        "content": "gb = df.groupby([Grouper(level=\"a\"), Grouper(key=\"b\")], as_index=False)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_grouping.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\pandas\\tests\\groupby\\test_grouping.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 223,
                        "content": "# Grouper(key=...) may be passed in a list"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_min_max.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\pandas\\tests\\groupby\\test_min_max.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 84,
                        "content": "key = np.array([1, 1], dtype=np.int64)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_nth.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\pandas\\tests\\groupby\\test_nth.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 281,
                        "content": "key = [df.index.year, df.index.month]"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_nth.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\pandas\\tests\\groupby\\test_nth.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 281,
                        "content": "key = [df.index.year, df.index.month]"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_quantile.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\pandas\\tests\\groupby\\test_quantile.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 76,
                        "content": "key = np.array([0, 0, 1, 1, 1], dtype=np.int64)"
                    },
                    {
                        "line_number": 86,
                        "content": "key = np.array([0, 0, 1, 1], dtype=np.int64)"
                    },
                    {
                        "line_number": 113,
                        "content": "key = np.array([1, 0, 1], dtype=np.int64)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_quantile.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\pandas\\tests\\groupby\\test_quantile.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 76,
                        "content": "key = np.array([0, 0, 1, 1, 1], dtype=np.int64)"
                    },
                    {
                        "line_number": 86,
                        "content": "key = np.array([0, 0, 1, 1], dtype=np.int64)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_rank.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\pandas\\tests\\groupby\\test_rank.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 129,
                        "content": "key = np.repeat(grps, len(vals))"
                    },
                    {
                        "line_number": 184,
                        "content": "key = np.repeat(grps, len(vals))"
                    },
                    {
                        "line_number": 435,
                        "content": "key = np.repeat(grps, len(vals))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_rank.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\pandas\\tests\\groupby\\test_rank.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 129,
                        "content": "key = np.repeat(grps, len(vals))"
                    },
                    {
                        "line_number": 184,
                        "content": "key = np.repeat(grps, len(vals))"
                    },
                    {
                        "line_number": 435,
                        "content": "key = np.repeat(grps, len(vals))"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_timegrouper.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\pandas\\tests\\groupby\\test_timegrouper.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 69,
                        "content": "tdg = Grouper(key=\"Date\", freq=\"5D\")"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_timegrouper.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\pandas\\tests\\groupby\\test_timegrouper.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 314,
                        "content": "[Grouper(freq=\"1M\", key=\"Date\", level=\"Date\"), \"Buyer\"]"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_aggregate.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\pandas\\tests\\groupby\\aggregate\\test_aggregate.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1153,
                        "content": "# check agg(key=(col, aggfunc)) case"
                    },
                    {
                        "line_number": 1190,
                        "content": "# check agg(key=(col, aggfunc)) case"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_transform.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\pandas\\tests\\groupby\\transform\\test_transform.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 67,
                        "content": "key = [\"one\", \"two\", \"one\", \"two\", \"one\"]"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_transform.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\pandas\\tests\\groupby\\transform\\test_transform.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 67,
                        "content": "key = [\"one\", \"two\", \"one\", \"two\", \"one\"]"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_any_index.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\pandas\\tests\\indexes\\test_any_index.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 118,
                        "content": "key = np.array([0, 1], dtype=np.intp)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_indexing.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\pandas\\tests\\indexes\\test_indexing.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 278,
                        "content": "key = slice(None, None, \"foo\")"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_indexing.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\pandas\\tests\\indexes\\datetimes\\test_indexing.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 389,
                        "content": "key = idx[1].as_unit(\"ms\")"
                    },
                    {
                        "line_number": 397,
                        "content": "key = dta[0].as_unit(\"ns\") + pd.Timedelta(1)"
                    },
                    {
                        "line_number": 424,
                        "content": "key = time(15, 11, 30)"
                    },
                    {
                        "line_number": 631,
                        "content": "key = box(year=2000, month=1, day=7)"
                    },
                    {
                        "line_number": 650,
                        "content": "key = box(year=year, month=1, day=7)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_indexing.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\pandas\\tests\\indexes\\datetimes\\test_indexing.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 397,
                        "content": "key = dta[0].as_unit(\"ns\") + pd.Timedelta(1)"
                    },
                    {
                        "line_number": 631,
                        "content": "key = box(year=2000, month=1, day=7)"
                    },
                    {
                        "line_number": 650,
                        "content": "key = box(year=year, month=1, day=7)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_partial_slicing.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\pandas\\tests\\indexes\\datetimes\\test_partial_slicing.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 73,
                        "content": "key = \"2015-5-14 00:00:00\""
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_interval.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\pandas\\tests\\indexes\\interval\\test_interval.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 426,
                        "content": "key = make_key(breaks)"
                    },
                    {
                        "line_number": 447,
                        "content": "key = make_key(breaks)"
                    },
                    {
                        "line_number": 479,
                        "content": "key = make_key(breaks2)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_indexing.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\pandas\\tests\\indexes\\multi\\test_indexing.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 752,
                        "content": "key = ((2, 3, 4), \"foo\")"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_partial_indexing.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\pandas\\tests\\indexes\\multi\\test_partial_indexing.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 51,
                        "content": "key = (\"2016-01-01\", \"a\")"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_indexing.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\pandas\\tests\\indexes\\period\\test_indexing.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 763,
                        "content": "key = \"2017-09-01 00:00:01\""
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_range.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\pandas\\tests\\indexes\\ranges\\test_range.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 609,
                        "content": "result = values.sort_values(key=lambda x: x.map(sort_order))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_indexing.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\pandas\\tests\\indexes\\timedeltas\\test_indexing.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 77,
                        "content": "key = idx[1].as_unit(\"ms\")"
                    },
                    {
                        "line_number": 84,
                        "content": "key = tdi[0].as_unit(\"ns\") + Timedelta(1)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_indexing.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\pandas\\tests\\indexes\\timedeltas\\test_indexing.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 84,
                        "content": "key = tdi[0].as_unit(\"ns\") + Timedelta(1)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_coercion.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\pandas\\tests\\indexing\\test_coercion.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 757,
                        "content": "key = f\"datetime64[ns, {tz}]\""
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_datetime.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\pandas\\tests\\indexing\\test_datetime.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 23,
                        "content": "key = \"2013-01-01 00:00:00.000000050+0000\""
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_loc.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\pandas\\tests\\indexing\\test_loc.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1652,
                        "content": "key = 0 if (indexer is tm.iloc or len(obj) == 0) else obj.index[0]"
                    },
                    {
                        "line_number": 1676,
                        "content": "key = 0 if (indexer is tm.iloc or len(obj) == 0) else obj.index[0]"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_loc.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\pandas\\tests\\indexing\\test_loc.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 1652,
                        "content": "key = 0 if (indexer is tm.iloc or len(obj) == 0) else obj.index[0]"
                    },
                    {
                        "line_number": 1676,
                        "content": "key = 0 if (indexer is tm.iloc or len(obj) == 0) else obj.index[0]"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_sorted.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\pandas\\tests\\indexing\\multiindex\\test_sorted.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 71,
                        "content": "key=lambda x: x.map(lambda entry: entry[2])"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_compat.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\pandas\\tests\\io\\pytables\\test_compat.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 59,
                        "content": "result = pd.read_hdf(path, key=objname, start=1)"
                    },
                    {
                        "line_number": 73,
                        "content": "result = pd.read_hdf(path, key=objname, start=1, stop=2)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_compat.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\pandas\\tests\\io\\pytables\\test_compat.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 73,
                        "content": "result = pd.read_hdf(path, key=objname, start=1, stop=2)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_store.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\pandas\\tests\\io\\pytables\\test_store.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 61,
                        "content": "def checksum(filename, hash_factory=hashlib.md5, chunk_num_blocks=128):"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "test_series.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\pandas\\tests\\plotting\\test_series.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 105,
                        "content": "key = \"axes.prop_cycle\""
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_time_grouper.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\pandas\\tests\\resample\\test_time_grouper.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 270,
                        "content": "\"TimeGrouper(key='A', freq=<Hour>, axis=0, sort=True, dropna=True, \""
                    },
                    {
                        "line_number": 278,
                        "content": "\"TimeGrouper(key='A', freq=<Hour>, axis=0, sort=True, dropna=True, \""
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_pivot.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\pandas\\tests\\reshape\\test_pivot.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1498,
                        "content": "index=[Grouper(freq=\"M\", key=\"Date\"), Grouper(freq=\"M\", key=\"PayDay\")],"
                    },
                    {
                        "line_number": 1508,
                        "content": "columns=[Grouper(freq=\"M\", key=\"Date\"), Grouper(freq=\"M\", key=\"PayDay\")],"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_pivot.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\pandas\\tests\\reshape\\test_pivot.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 1498,
                        "content": "index=[Grouper(freq=\"M\", key=\"Date\"), Grouper(freq=\"M\", key=\"PayDay\")],"
                    },
                    {
                        "line_number": 1508,
                        "content": "columns=[Grouper(freq=\"M\", key=\"Date\"), Grouper(freq=\"M\", key=\"PayDay\")],"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_merge.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\pandas\\tests\\reshape\\merge\\test_merge.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 363,
                        "content": "key = np.array([1, 1, 2, 3, 4, 5], dtype=\"int64\")"
                    },
                    {
                        "line_number": 384,
                        "content": "key = np.array([0, 1, 1, 2, 2, 3], dtype=np.int64)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_merge.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\pandas\\tests\\reshape\\merge\\test_merge.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 363,
                        "content": "key = np.array([1, 1, 2, 3, 4, 5], dtype=\"int64\")"
                    },
                    {
                        "line_number": 384,
                        "content": "key = np.array([0, 1, 1, 2, 2, 3], dtype=np.int64)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_datetime.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\pandas\\tests\\series\\indexing\\test_datetime.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 300,
                        "content": "key = datetime(2000, 1, 6)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_getitem.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\pandas\\tests\\series\\indexing\\test_getitem.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 192,
                        "content": "key = \"6 days, 23:11:12\""
                    },
                    {
                        "line_number": 468,
                        "content": "key = np.array([True, True, False, False])"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_setitem.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\pandas\\tests\\series\\indexing\\test_setitem.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 472,
                        "content": "key = Timestamp(\"2012-01-01\")"
                    },
                    {
                        "line_number": 481,
                        "content": "key = Timestamp(\"2012-01-01\")"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_sort_index.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\pandas\\tests\\series\\methods\\test_sort_index.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 229,
                        "content": "result = s.sort_index(level=\"C\", key=lambda x: x)  # nothing happens"
                    },
                    {
                        "line_number": 240,
                        "content": "result = s.sort_index(level=[\"A\", \"C\"], key=lambda x: x)  # nothing happens"
                    },
                    {
                        "line_number": 250,
                        "content": "result = series.sort_index(key=lambda x: x.str.lower())"
                    },
                    {
                        "line_number": 254,
                        "content": "result = series.sort_index(key=lambda x: x.str.lower(), ascending=False)"
                    },
                    {
                        "line_number": 315,
                        "content": "result = s.sort_index(key=lambda x: x.year)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_sort_index.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\pandas\\tests\\series\\methods\\test_sort_index.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 229,
                        "content": "result = s.sort_index(level=\"C\", key=lambda x: x)  # nothing happens"
                    },
                    {
                        "line_number": 240,
                        "content": "result = s.sort_index(level=[\"A\", \"C\"], key=lambda x: x)  # nothing happens"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_sort_values.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\pandas\\tests\\series\\methods\\test_sort_values.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 229,
                        "content": "result = series.sort_values(axis=0, key=lambda x: x.str.lower())"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_sort_values.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\pandas\\tests\\series\\methods\\test_sort_values.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 244,
                        "content": "result = series.sort_values(axis=0, key=lambda x: -x, ascending=False)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "frequencies.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\pandas\\tseries\\frequencies.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 82,
                        "content": "key = f\"{_prefix}-{_m}\""
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "_decorators.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\pandas\\util\\_decorators.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 313,
                        "content": "new_params.sort(key=lambda p: p.kind)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "config.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\pandas\\_config\\config.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 129,
                        "content": "key = _translate_key(key)"
                    },
                    {
                        "line_number": 135,
                        "content": "key = _get_single_key(pat, silent)"
                    },
                    {
                        "line_number": 156,
                        "content": "key = _get_single_key(k, silent)"
                    },
                    {
                        "line_number": 205,
                        "content": "key = _get_single_key(pat, silent=True)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "config.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\pandas\\_config\\config.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 523,
                        "content": "key=key, defval=defval, doc=doc, validator=validator, cb=cb"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "IcoImagePlugin.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\PIL\\IcoImagePlugin.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 175,
                        "content": "self.entry = sorted(self.entry, key=lambda x: x[\"color_depth\"])"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "Image.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\PIL\\Image.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 2597,
                        "content": "x / aspect, key=lambda n: 0 if n == 0 else abs(aspect - x / n)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "Image.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\PIL\\Image.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 2594,
                        "content": "x = round_aspect(y * aspect, key=lambda n: abs(aspect - n / y))"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "PngImagePlugin.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\PIL\\PngImagePlugin.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 309,
                        "content": "key = key.encode(\"latin-1\", \"strict\")"
                    },
                    {
                        "line_number": 345,
                        "content": "key = key.encode(\"latin-1\", \"strict\")"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "cache.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\pip\\_internal\\cache.py",
                "vulnerability": "SHA-224",
                "lines": [
                    {
                        "line_number": 29,
                        "content": "return hashlib.sha224(s.encode(\"ascii\")).hexdigest()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-224 provides reduced security compared to larger variants."
            },
            {
                "language": "Python",
                "filename": "configuration.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\pip\\_internal\\configuration.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 146,
                        "content": "key = _normalize_name(key)"
                    },
                    {
                        "line_number": 157,
                        "content": "key = _normalize_name(key)"
                    },
                    {
                        "line_number": 177,
                        "content": "key = _normalize_name(key)"
                    },
                    {
                        "line_number": 314,
                        "content": "key = section + \".\" + _normalize_name(name)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "self_outdated_check.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\pip\\_internal\\self_outdated_check.py",
                "vulnerability": "SHA-224",
                "lines": [
                    {
                        "line_number": 39,
                        "content": "name = hashlib.sha224(key_bytes).hexdigest()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-224 provides reduced security compared to larger variants."
            },
            {
                "language": "Python",
                "filename": "parser.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\pip\\_internal\\cli\\parser.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 197,
                        "content": "section, key = section_key.split(\".\", 1)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "configuration.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\pip\\_internal\\commands\\configuration.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 178,
                        "content": "key = self._get_n_args(args, \"get [name]\", n=1)"
                    },
                    {
                        "line_number": 190,
                        "content": "key = self._get_n_args(args, \"unset [name]\", n=1)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "configuration.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\pip\\_internal\\commands\\configuration.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 178,
                        "content": "key = self._get_n_args(args, \"get [name]\", n=1)"
                    },
                    {
                        "line_number": 190,
                        "content": "key = self._get_n_args(args, \"unset [name]\", n=1)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "_json.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\pip\\_internal\\metadata\\_json.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 64,
                        "content": "key = json_name(field)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "candidate.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\pip\\_internal\\models\\candidate.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 18,
                        "content": "key=(self.name, self.version, self.link),"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "candidate.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\pip\\_internal\\models\\candidate.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 18,
                        "content": "key=(self.name, self.version, self.link),"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "link.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\pip\\_internal\\models\\link.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 257,
                        "content": "super().__init__(key=url, defining_class=Link)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "auth.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\pip\\_internal\\network\\auth.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 320,
                        "content": "key=lambda candidate: commonprefix("
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "freeze.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\pip\\_internal\\operations\\freeze.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 142,
                        "content": "for installation in sorted(installations.values(), key=lambda x: x.name.lower()):"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "build_tracker.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\pip\\_internal\\operations\\build\\build_tracker.py",
                "vulnerability": "SHA-224",
                "lines": [
                    {
                        "line_number": 73,
                        "content": "hashed = hashlib.sha224(link.url_without_fragment.encode()).hexdigest()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-224 provides reduced security compared to larger variants."
            },
            {
                "language": "Python",
                "filename": "wheel.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\pip\\_internal\\operations\\install\\wheel.py",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 81,
                        "content": "\"\"\"Return (encoded_digest, length) for path using hashlib.sha256()\"\"\""
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Python",
                "filename": "misc.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\pip\\_internal\\utils\\misc.py",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 612,
                        "content": "\"\"\"Return (hash, length) for path using hashlib.sha256()\"\"\""
                    },
                    {
                        "line_number": 614,
                        "content": "h = hashlib.sha256()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Python",
                "filename": "file_cache.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\pip\\_vendor\\cachecontrol\\caches\\file_cache.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 187,
                        "content": "key = CacheController.cache_url(url)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "file_cache.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\pip\\_vendor\\cachecontrol\\caches\\file_cache.py",
                "vulnerability": "SHA-224",
                "lines": [
                    {
                        "line_number": 104,
                        "content": "return hashlib.sha224(x.encode()).hexdigest()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-224 provides reduced security compared to larger variants."
            },
            {
                "language": "Python",
                "filename": "__init__.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\pip\\_vendor\\chardet\\__init__.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 113,
                        "content": "return sorted(results, key=lambda result: -result[\"confidence\"])"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "__init__.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\pip\\_vendor\\chardet\\__init__.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 113,
                        "content": "return sorted(results, key=lambda result: -result[\"confidence\"])"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "compat.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\compat.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 688,
                        "content": "link_prev, link_next, key = self.__map.pop(key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "database.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\database.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 349,
                        "content": "self.key = self.name.lower()    # for case-insensitive comparisons"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "database.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\database.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 349,
                        "content": "self.key = self.name.lower()    # for case-insensitive comparisons"
                    },
                    {
                        "line_number": 876,
                        "content": "s.key = n.lower()   # for case-insensitive comparisons"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "database.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\database.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 526,
                        "content": "hasher = hashlib.md5"
                    },
                    {
                        "line_number": 1024,
                        "content": "return hashlib.md5(content).hexdigest()"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "index.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\index.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 268,
                        "content": "md5_digest = hashlib.md5(file_data).hexdigest()"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "index.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\index.py",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 269,
                        "content": "sha256_digest = hashlib.sha256(file_data).hexdigest()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Python",
                "filename": "locators.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\locators.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 582,
                        "content": "result = sorted(result, key=lambda t: t[0], reverse=True)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "locators.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\locators.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 582,
                        "content": "result = sorted(result, key=lambda t: t[0], reverse=True)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "version.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\version.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 108,
                        "content": "self.key = self.name.lower()    # for case-insensitive comparisons"
                    },
                    {
                        "line_number": 163,
                        "content": "return self.key == other.key and self._parts == other._parts"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "version.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\version.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 108,
                        "content": "self.key = self.name.lower()    # for case-insensitive comparisons"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "wheel.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\wheel.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 407,
                        "content": "if key == 'scripts' and not p.endswith('.exe'):"
                    },
                    {
                        "line_number": 897,
                        "content": "key = '%s/PKG-INFO' % info_dir"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "wheel.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\wheel.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 897,
                        "content": "key = '%s/PKG-INFO' % info_dir"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "__init__.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\pip\\_vendor\\pkg_resources\\__init__.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 2722,
                        "content": "self._key = key = self.project_name.lower()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "windows.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\pip\\_vendor\\platformdirs\\windows.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 199,
                        "content": "key = winreg.OpenKey(winreg.HKEY_CURRENT_USER, r\"Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders\")"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "lexer.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\pip\\_vendor\\pygments\\lexer.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 931,
                        "content": "key=lambda x: x[self._prof_sort_index],"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "sphinxext.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\pip\\_vendor\\pygments\\sphinxext.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 104,
                        "content": "for classname, data in sorted(LEXERS.items(), key=lambda x: x[1][1].lower()):"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "img.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\pip\\_vendor\\pygments\\formatters\\img.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 174,
                        "content": "key = _winreg.OpenKey(*keyname)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "img.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\pip\\_vendor\\pygments\\formatters\\img.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 174,
                        "content": "key = _winreg.OpenKey(*keyname)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "core.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\pip\\_vendor\\pyparsing\\core.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 4170,
                        "content": "fatals.sort(key=lambda e: -e.loc)"
                    },
                    {
                        "line_number": 4486,
                        "content": "fatals.sort(key=lambda e: -e.loc)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "core.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\pip\\_vendor\\pyparsing\\core.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 4172,
                        "content": "fatals.sort(key=lambda e: (-e.loc, -len(str(e.parser_element))))"
                    },
                    {
                        "line_number": 4488,
                        "content": "fatals.sort(key=lambda e: (-e.loc, -len(str(e.parser_element))))"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "auth.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\pip\\_vendor\\requests\\auth.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 148,
                        "content": "return hashlib.md5(x).hexdigest()"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "auth.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\pip\\_vendor\\requests\\auth.py",
                "vulnerability": "SHA-1",
                "lines": [
                    {
                        "line_number": 156,
                        "content": "return hashlib.sha1(x).hexdigest()"
                    },
                    {
                        "line_number": 205,
                        "content": "cnonce = hashlib.sha1(s).hexdigest()[:16]"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collisions."
            },
            {
                "language": "Python",
                "filename": "auth.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\pip\\_vendor\\requests\\auth.py",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 164,
                        "content": "return hashlib.sha256(x).hexdigest()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Python",
                "filename": "models.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\pip\\_vendor\\requests\\models.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 989,
                        "content": "key = link.get(\"rel\") or link.get(\"url\")"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "models.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\pip\\_vendor\\requests\\models.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 989,
                        "content": "key = link.get(\"rel\") or link.get(\"url\")"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "utils.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\pip\\_vendor\\requests\\utils.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 532,
                        "content": "key = param[:index_of_equals].strip(items_to_strip)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "scope.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\pip\\_vendor\\rich\\scope.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 46,
                        "content": "items = sorted(scope.items(), key=sort_items) if sort_keys else scope.items()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "_parser.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\pip\\_vendor\\tomli\\_parser.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 287,
                        "content": "pos, key = parse_key(src, pos)"
                    },
                    {
                        "line_number": 305,
                        "content": "pos, key = parse_key(src, pos)"
                    },
                    {
                        "line_number": 360,
                        "content": "pos, key = parse_key(src, pos)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "__init__.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\pkg_resources\\__init__.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 2722,
                        "content": "self._key = key = self.project_name.lower()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "more.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\pkg_resources\\_vendor\\more_itertools\\more.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 937,
                        "content": ">>> key = lambda x: x % 10  # Bucket by last digit"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "more.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\pkg_resources\\_vendor\\more_itertools\\more.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 939,
                        "content": ">>> s = bucket(it, key=key, validator=validator)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "recipes.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\pkg_resources\\_vendor\\more_itertools\\recipes.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 490,
                        "content": "``key=frozenset``. For ``dict`` objects,"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "windows.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\pkg_resources\\_vendor\\platformdirs\\windows.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 140,
                        "content": "key = winreg.OpenKey(winreg.HKEY_CURRENT_USER, r\"Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders\")"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "core.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\pyparsing\\core.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 4191,
                        "content": "fatals.sort(key=lambda e: -e.loc)"
                    },
                    {
                        "line_number": 4507,
                        "content": "fatals.sort(key=lambda e: -e.loc)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "core.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\pyparsing\\core.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 4193,
                        "content": "fatals.sort(key=lambda e: (-e.loc, -len(str(e.parser_element))))"
                    },
                    {
                        "line_number": 4509,
                        "content": "fatals.sort(key=lambda e: (-e.loc, -len(str(e.parser_element))))"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "egg_info.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\setuptools\\command\\egg_info.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 255,
                        "content": "key = getattr(pd, \"key\", None) or getattr(pd, \"name\", None)"
                    },
                    {
                        "line_number": 256,
                        "content": "if pd is not None and key == self.egg_name.lower():"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "egg_info.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\setuptools\\command\\egg_info.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 255,
                        "content": "key = getattr(pd, \"key\", None) or getattr(pd, \"name\", None)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "_apply_pyprojecttoml.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\setuptools\\config\\_apply_pyprojecttoml.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 250,
                        "content": "key = json_compatible_key(key)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "msvc9compiler.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\setuptools\\_distutils\\msvc9compiler.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 177,
                        "content": "key = RegEnumKey(h, 0)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "msvccompiler.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\setuptools\\_distutils\\msvccompiler.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 161,
                        "content": "key = RegEnumKey(h, 0)"
                    },
                    {
                        "line_number": 640,
                        "content": "key = r\"{}\\{:0.1f}\\VC\\VC_OBJECTS_PLATFORM_INFO\\Win32\\Directories\".format("
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "_collections.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\setuptools\\_distutils\\_collections.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 159,
                        "content": "key = self._find_first_match_(sorted_keys, item)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "_msvccompiler.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\setuptools\\_distutils\\_msvccompiler.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 41,
                        "content": "key = winreg.OpenKeyEx("
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "install.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\setuptools\\_distutils\\command\\install.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 143,
                        "content": "os_name, sep, key = name.partition('_')"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "more.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\setuptools\\_vendor\\more_itertools\\more.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 412,
                        "content": ">>> key = lambda s: int(s)  # Sort by numeric value, not by string"
                    },
                    {
                        "line_number": 876,
                        "content": ">>> key = lambda x: x % 10  # Bucket by last digit"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "more.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\setuptools\\_vendor\\more_itertools\\more.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 412,
                        "content": ">>> key = lambda s: int(s)  # Sort by numeric value, not by string"
                    },
                    {
                        "line_number": 878,
                        "content": ">>> s = bucket(it, key=key, validator=validator)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "recipes.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\setuptools\\_vendor\\more_itertools\\recipes.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 400,
                        "content": "``key=frozenset``. For ``dict`` objects,"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "_parser.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\setuptools\\_vendor\\tomli\\_parser.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 287,
                        "content": "pos, key = parse_key(src, pos)"
                    },
                    {
                        "line_number": 305,
                        "content": "pos, key = parse_key(src, pos)"
                    },
                    {
                        "line_number": 360,
                        "content": "pos, key = parse_key(src, pos)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "wheelfile.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\CS335A_Assign1\\venv\\Lib\\site-packages\\wheel\\wheelfile.py",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 38,
                        "content": "_default_algorithm = hashlib.sha256"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Python",
                "filename": "_virtualenv.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\pythonProject\\venv\\Lib\\site-packages\\_virtualenv.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 29,
                        "content": "key = f\"install_{base}\""
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "_parser.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\pythonProject\\venv\\Lib\\site-packages\\dateutil\\parser\\_parser.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 464,
                        "content": "key = [x for x in ['y', 'm', 'd'] if x not in strids]"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "_parser.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\pythonProject\\venv\\Lib\\site-packages\\dateutil\\parser\\_parser.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 464,
                        "content": "key = [x for x in ['y', 'm', 'd'] if x not in strids]"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "_factories.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\pythonProject\\venv\\Lib\\site-packages\\dateutil\\tz\\_factories.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 64,
                        "content": "key = (s, posix_offset)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "fontBuilder.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\pythonProject\\venv\\Lib\\site-packages\\fontTools\\fontBuilder.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 785,
                        "content": "bag, key=lambda vorg: bag[vorg], reverse=True"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "fontBuilder.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\pythonProject\\venv\\Lib\\site-packages\\fontTools\\fontBuilder.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 785,
                        "content": "bag, key=lambda vorg: bag[vorg], reverse=True"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "width.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\pythonProject\\venv\\Lib\\site-packages\\fontTools\\cffLib\\width.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 159,
                        "content": "default = min(ends, key=lambda default: byteCost(widths, default, nominal))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "width.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\pythonProject\\venv\\Lib\\site-packages\\fontTools\\cffLib\\width.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 159,
                        "content": "default = min(ends, key=lambda default: byteCost(widths, default, nominal))"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "builder.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\pythonProject\\venv\\Lib\\site-packages\\fontTools\\colorLib\\builder.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 492,
                        "content": "key=lambda t: (t[1] - t[0], t[1], t[0]),"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "statNames.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\pythonProject\\venv\\Lib\\site-packages\\fontTools\\designspaceLib\\statNames.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 148,
                        "content": "key=lambda a: a.axisOrdering,"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "builder.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\pythonProject\\venv\\Lib\\site-packages\\fontTools\\feaLib\\builder.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 255,
                        "content": "key = (script, lang, feature_name)"
                    },
                    {
                        "line_number": 1098,
                        "content": "key = (self.script_, language, self.cur_feature_name_)"
                    },
                    {
                        "line_number": 1107,
                        "content": "key = (self.script_, language)"
                    },
                    {
                        "line_number": 1243,
                        "content": "key = (script, lang, self.cur_feature_name_)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "builder.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\pythonProject\\venv\\Lib\\site-packages\\fontTools\\feaLib\\builder.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 1098,
                        "content": "key = (self.script_, language, self.cur_feature_name_)"
                    },
                    {
                        "line_number": 1107,
                        "content": "key = (self.script_, language)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "parser.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\pythonProject\\venv\\Lib\\site-packages\\fontTools\\feaLib\\parser.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1132,
                        "content": "key = self.cur_token_.lower()"
                    },
                    {
                        "line_number": 1159,
                        "content": "key = self.cur_token_.lower()"
                    },
                    {
                        "line_number": 1348,
                        "content": "key = self.cur_token_.lower()"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "variableScalar.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\pythonProject\\venv\\Lib\\site-packages\\fontTools\\feaLib\\variableScalar.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 71,
                        "content": "key = Location({ax.axisTag: ax.defaultValue for ax in self.axes})"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "classifyTools.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\pythonProject\\venv\\Lib\\site-packages\\fontTools\\misc\\classifyTools.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 76,
                        "content": "self._sets = sorted(self._sets, key=lambda s: (-len(s), sorted(s)))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "__init__.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\pythonProject\\venv\\Lib\\site-packages\\fontTools\\mtiLib\\__init__.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 172,
                        "content": "script.Script.LangSysRecord, key=lambda rec: rec.LangSysTag"
                    },
                    {
                        "line_number": 174,
                        "content": "self.ScriptRecord = sorted(records, key=lambda rec: rec.ScriptTag)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "builder.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\pythonProject\\venv\\Lib\\site-packages\\fontTools\\otlLib\\builder.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1361,
                        "content": "key = (glyph1, glyph2)"
                    },
                    {
                        "line_number": 2677,
                        "content": "result = sorted(self.classes_, key=lambda s: (-len(s), s))"
                    },
                    {
                        "line_number": 2884,
                        "content": "axisValueRecords.sort(key=lambda avr: avr.AxisIndex)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "__init__.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\pythonProject\\venv\\Lib\\site-packages\\fontTools\\subset\\__init__.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 3493,
                        "content": "tags = sorted(font.keys(), key=lambda tag: tagOrder.get(tag, 0))"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "F__e_a_t.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\pythonProject\\venv\\Lib\\site-packages\\fontTools\\ttLib\\tables\\F__e_a_t.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 98,
                        "content": "v.settings.items(), key=lambda x: (-1, x[1]) if x[0] == v.default else x"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "F__e_a_t.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\pythonProject\\venv\\Lib\\site-packages\\fontTools\\ttLib\\tables\\F__e_a_t.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 98,
                        "content": "v.settings.items(), key=lambda x: (-1, x[1]) if x[0] == v.default else x"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "grUtils.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\pythonProject\\venv\\Lib\\site-packages\\fontTools\\ttLib\\tables\\grUtils.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 59,
                        "content": "g = _entries(sorted(attributes.items(), key=lambda x: int(x[0])), sameval)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "G__l_a_t.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\pythonProject\\venv\\Lib\\site-packages\\fontTools\\ttLib\\tables\\G__l_a_t.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 165,
                        "content": "self.attributes.items(), key=lambda x: ttFont.getGlyphID(x[0])"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "otTables.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\pythonProject\\venv\\Lib\\site-packages\\fontTools\\ttLib\\tables\\otTables.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 305,
                        "content": "for a in sorted(actions, key=lambda x: (-len(x), x)):"
                    },
                    {
                        "line_number": 494,
                        "content": "for action in sorted(actions, key=lambda x: (-len(x), x)):"
                    },
                    {
                        "line_number": 1309,
                        "content": "self.BaseGlyphRecord, key=lambda rec: font.getGlyphID(rec.BaseGlyph)"
                    },
                    {
                        "line_number": 1317,
                        "content": "self.BaseGlyphPaintRecord, key=lambda rec: font.getGlyphID(rec.BaseGlyph)"
                    },
                    {
                        "line_number": 1395,
                        "content": "key = clipBox.as_tuple()"
                    },
                    {
                        "line_number": 1449,
                        "content": "self.groups().items(), key=lambda item: min(item[0])"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "otTables.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\pythonProject\\venv\\Lib\\site-packages\\fontTools\\ttLib\\tables\\otTables.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 1139,
                        "content": "ligatures.items(), key=lambda item: (-len(item[0]), item[0])"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "S__i_l_f.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\pythonProject\\venv\\Lib\\site-packages\\fontTools\\ttLib\\tables\\S__i_l_f.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 929,
                        "content": "self.colMap.items(), key=lambda x: ttFont.getGlyphID(x[0])"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "TupleVariation.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\pythonProject\\venv\\Lib\\site-packages\\fontTools\\ttLib\\tables\\TupleVariation.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 636,
                        "content": "key=lambda item: (-item[1], item[0]),"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "_c_m_a_p.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\pythonProject\\venv\\Lib\\site-packages\\fontTools\\ttLib\\tables\\_c_m_a_p.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 1410,
                        "content": "uvList.sort(key=lambda item: (item[1] is not None, item[0], item[1]))"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "_n_a_m_e.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\pythonProject\\venv\\Lib\\site-packages\\fontTools\\ttLib\\tables\\_n_a_m_e.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 313,
                        "content": "key = (name.toUnicode(), name.platformID, name.platEncID, name.langID)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "_n_a_m_e.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\pythonProject\\venv\\Lib\\site-packages\\fontTools\\ttLib\\tables\\_n_a_m_e.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 313,
                        "content": "key = (name.toUnicode(), name.platformID, name.platEncID, name.langID)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "cff.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\pythonProject\\venv\\Lib\\site-packages\\fontTools\\varLib\\cff.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 438,
                        "content": "key = tuple(v is not None for v in all_cs)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "cff.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\pythonProject\\venv\\Lib\\site-packages\\fontTools\\varLib\\cff.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 438,
                        "content": "key = tuple(v is not None for v in all_cs)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "featureVars.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\pythonProject\\venv\\Lib\\site-packages\\fontTools\\varLib\\featureVars.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 188,
                        "content": "key=lambda d: tuple(sorted(d.items())),"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "featureVars.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\pythonProject\\venv\\Lib\\site-packages\\fontTools\\varLib\\featureVars.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 188,
                        "content": "key=lambda d: tuple(sorted(d.items())),"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "interpolatable.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\pythonProject\\venv\\Lib\\site-packages\\fontTools\\varLib\\interpolatable.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 799,
                        "content": "for locTuple in sorted(glyphsets.keys(), key=lambda v: (len(v), v)):"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "interpolatablePlot.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\pythonProject\\venv\\Lib\\site-packages\\fontTools\\varLib\\interpolatablePlot.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 420,
                        "content": "self._add_listing(\"Index\", sorted(self.toc.items(), key=lambda x: x[1][0]))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "interpolatablePlot.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\pythonProject\\venv\\Lib\\site-packages\\fontTools\\varLib\\interpolatablePlot.py",
                "vulnerability": "SHA-1",
                "lines": [
                    {
                        "line_number": 166,
                        "content": "h = hashlib.sha1(open(file, \"rb\").read()).hexdigest()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collisions."
            },
            {
                "language": "Python",
                "filename": "merger.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\pythonProject\\venv\\Lib\\site-packages\\fontTools\\varLib\\merger.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 227,
                        "content": "if not all(sorted(vs, key=sortKey) == vs for vs in lst):"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "models.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\pythonProject\\venv\\Lib\\site-packages\\fontTools\\varLib\\models.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 282,
                        "content": "key = tuple(v is not None for v in items)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "models.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\pythonProject\\venv\\Lib\\site-packages\\fontTools\\varLib\\models.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 282,
                        "content": "key = tuple(v is not None for v in items)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "varStore.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\pythonProject\\venv\\Lib\\site-packages\\fontTools\\varLib\\varStore.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 64,
                        "content": "key = _getLocationKey(region)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "varStore.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\pythonProject\\venv\\Lib\\site-packages\\fontTools\\varLib\\varStore.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 637,
                        "content": "encodings.sort(key=_Encoding.width_sort_key)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "names.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\pythonProject\\venv\\Lib\\site-packages\\fontTools\\varLib\\instancer\\names.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 179,
                        "content": "key=lambda v: len(v.AxisValueRecord),"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "voltToFea.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\pythonProject\\venv\\Lib\\site-packages\\fontTools\\voltLib\\voltToFea.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 132,
                        "content": "for statement in sorted(groups, key=lambda x: Group(x)):"
                    },
                    {
                        "line_number": 194,
                        "content": "stags = sorted(scripts, key=lambda k: 0 if k == \"DFLT\" else 1)"
                    },
                    {
                        "line_number": 197,
                        "content": "ltags = sorted(scripts[stag], key=lambda k: 0 if k == \"dflt\" else 1)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "figure.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\pythonProject\\venv\\Lib\\site-packages\\matplotlib\\figure.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 107,
                        "content": "return max(self._axes, key=self._axes.__getitem__, default=None)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "mlab.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\pythonProject\\venv\\Lib\\site-packages\\matplotlib\\mlab.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 111,
                        "content": "return detrend(x, key=detrend_linear, axis=axis)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "texmanager.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\pythonProject\\venv\\Lib\\site-packages\\matplotlib\\texmanager.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 338,
                        "content": "key = cls._get_tex_source(tex, fontsize), dpi"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "texmanager.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\pythonProject\\venv\\Lib\\site-packages\\matplotlib\\texmanager.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 115,
                        "content": "return hashlib.md5(preambles.encode('utf-8')).hexdigest()"
                    },
                    {
                        "line_number": 179,
                        "content": "filehash = hashlib.md5(src.encode('utf-8')).hexdigest()"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "text.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\pythonProject\\venv\\Lib\\site-packages\\matplotlib\\text.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1989,
                        "content": "x, relposx = min(xpos, key=lambda v: abs(v[0] - x1))"
                    },
                    {
                        "line_number": 1990,
                        "content": "y, relposy = min(ypos, key=lambda v: abs(v[0] - y1))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "_fontconfig_pattern.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\pythonProject\\venv\\Lib\\site-packages\\matplotlib\\_fontconfig_pattern.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 117,
                        "content": "# are necessarily scalar) are given as key=value, skipping Nones."
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "__init__.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\pythonProject\\venv\\Lib\\site-packages\\matplotlib\\__init__.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 771,
                        "content": "elif key == \"backend\" and self is globals().get(\"rcParams\"):"
                    },
                    {
                        "line_number": 934,
                        "content": "dict(key=key, fname=fname, line_no=line_no,"
                    },
                    {
                        "line_number": 999,
                        "content": "key: [(rcsetup._auto_backend_sentinel if key == \"backend\" else"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "__init__.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\pythonProject\\venv\\Lib\\site-packages\\matplotlib\\__init__.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 771,
                        "content": "elif key == \"backend\" and self is globals().get(\"rcParams\"):"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "backend_svg.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\pythonProject\\venv\\Lib\\site-packages\\matplotlib\\backends\\backend_svg.py",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 499,
                        "content": "m = hashlib.sha256()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Python",
                "filename": "backend_webagg_core.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\pythonProject\\venv\\Lib\\site-packages\\matplotlib\\backends\\backend_webagg_core.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 79,
                        "content": "key = key[:key.index('k')] + value"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "backend_webagg_core.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\pythonProject\\venv\\Lib\\site-packages\\matplotlib\\backends\\backend_webagg_core.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 79,
                        "content": "key = key[:key.index('k')] + value"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "mathmpl.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\pythonProject\\venv\\Lib\\site-packages\\matplotlib\\sphinxext\\mathmpl.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 142,
                        "content": "hashlib.md5(f'{latex}{fontset}{fontsize}'.encode()).hexdigest()[-10:])"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "compare.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\pythonProject\\venv\\Lib\\site-packages\\matplotlib\\testing\\compare.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 334,
                        "content": "cache_stat, key=lambda path: cache_stat[path].st_atime,"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "compare.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\pythonProject\\venv\\Lib\\site-packages\\matplotlib\\testing\\compare.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 48,
                        "content": "md5 = hashlib.md5()"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "decorators.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\pythonProject\\venv\\Lib\\site-packages\\matplotlib\\testing\\decorators.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 160,
                        "content": "key=lambda manager: manager.num)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "decorators.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\pythonProject\\venv\\Lib\\site-packages\\matplotlib\\testing\\decorators.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 160,
                        "content": "key=lambda manager: manager.num)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_dviread.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\pythonProject\\venv\\Lib\\site-packages\\matplotlib\\tests\\test_dviread.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 16,
                        "content": "key = b'TeXfont%d' % n"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_mlab.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\pythonProject\\venv\\Lib\\site-packages\\matplotlib\\tests\\test_mlab.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 174,
                        "content": "mlab.detrend(input.T, key=\"constant\", axis=None), target.T)"
                    },
                    {
                        "line_number": 187,
                        "content": "self.allclose(mlab.detrend(input, key=\"default\", axis=1), target)"
                    },
                    {
                        "line_number": 240,
                        "content": "mlab.detrend(input.T, key=\"linear\", axis=0), target.T)"
                    },
                    {
                        "line_number": 244,
                        "content": "mlab.detrend(input, key=\"linear\", axis=1), target)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_mlab.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\pythonProject\\venv\\Lib\\site-packages\\matplotlib\\tests\\test_mlab.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 174,
                        "content": "mlab.detrend(input.T, key=\"constant\", axis=None), target.T)"
                    },
                    {
                        "line_number": 188,
                        "content": "self.allclose(mlab.detrend(input.T, key=\"mean\", axis=0), target.T)"
                    },
                    {
                        "line_number": 190,
                        "content": "mlab.detrend(input.T, key=mlab.detrend_mean, axis=0), target.T)"
                    },
                    {
                        "line_number": 217,
                        "content": "assert mlab.detrend(5.5, key=mlab.detrend_linear) == 0."
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "art3d.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\pythonProject\\venv\\Lib\\site-packages\\mpl_toolkits\\mplot3d\\art3d.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1010,
                        "content": "key=lambda x: x[0], reverse=True)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "art3d.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\pythonProject\\venv\\Lib\\site-packages\\mpl_toolkits\\mplot3d\\art3d.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 1010,
                        "content": "key=lambda x: x[0], reverse=True)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_array_object.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\pythonProject\\venv\\Lib\\site-packages\\numpy\\array_api\\tests\\test_array_object.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 373,
                        "content": "key = ones((0, 0), dtype=bool_)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "einsumfunc.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\pythonProject\\venv\\Lib\\site-packages\\numpy\\core\\einsumfunc.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 204,
                        "content": "path = min(full_results, key=lambda x: x[0])[1]"
                    },
                    {
                        "line_number": 212,
                        "content": "path = min(full_results, key=lambda x: x[0])[1]"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "getlimits.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\pythonProject\\venv\\Lib\\site-packages\\numpy\\core\\getlimits.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 675,
                        "content": "self.key = \"%s%d\" % (self.kind, self.bits)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "numerictypes.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\pythonProject\\venv\\Lib\\site-packages\\numpy\\core\\numerictypes.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 520,
                        "content": "ScalarType += sorted(_concrete_types, key=_scalar_type_key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "system_info.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\pythonProject\\venv\\Lib\\site-packages\\numpy\\distutils\\system_info.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1716,
                        "content": "key = (tuple(libraries), tuple(library_dirs))"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "system_info.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\pythonProject\\venv\\Lib\\site-packages\\numpy\\distutils\\system_info.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 1716,
                        "content": "key = (tuple(libraries), tuple(library_dirs))"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "gnu.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\pythonProject\\venv\\Lib\\site-packages\\numpy\\distutils\\fcompiler\\gnu.py",
                "vulnerability": "SHA-1",
                "lines": [
                    {
                        "line_number": 402,
                        "content": "h = hashlib.sha1()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collisions."
            },
            {
                "language": "Python",
                "filename": "test_system_info.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\pythonProject\\venv\\Lib\\site-packages\\numpy\\distutils\\tests\\test_system_info.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 211,
                        "content": "assert_equal(tsi.get_runtime_lib_dirs(key='rpath'), [self._dir2])"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "cb_rules.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\pythonProject\\venv\\Lib\\site-packages\\numpy\\f2py\\cb_rules.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 60,
                        "content": "char *key = \"__f2py_cb_#name#\";"
                    },
                    {
                        "line_number": 65,
                        "content": "char *key = \"__f2py_cb_#name#\";"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "crackfortran.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\pythonProject\\venv\\Lib\\site-packages\\numpy\\f2py\\crackfortran.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 3448,
                        "content": "elif key == 'callstatement':"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "npyio.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\pythonProject\\venv\\Lib\\site-packages\\numpy\\lib\\npyio.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 2090,
                        "content": "key = names.index(key)"
                    },
                    {
                        "line_number": 2141,
                        "content": "key = names.index(key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "recfunctions.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\pythonProject\\venv\\Lib\\site-packages\\numpy\\lib\\recfunctions.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 1323,
                        "content": "a, key=None, ignoremask=None, return_index=None):"
                    },
                    {
                        "line_number": 1328,
                        "content": "def find_duplicates(a, key=None, ignoremask=True, return_index=False):"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_direct.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\pythonProject\\venv\\Lib\\site-packages\\numpy\\random\\tests\\test_direct.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 333,
                        "content": "key=state['state']['key'])"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_generator_mt19937.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\pythonProject\\venv\\Lib\\site-packages\\numpy\\random\\tests\\test_generator_mt19937.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 2601,
                        "content": "key = mt19937.state[\"state\"][\"key\"]"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_generator_mt19937.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\pythonProject\\venv\\Lib\\site-packages\\numpy\\random\\tests\\test_generator_mt19937.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 2601,
                        "content": "key = mt19937.state[\"state\"][\"key\"]"
                    },
                    {
                        "line_number": 2609,
                        "content": "key = jumped.state[\"state\"][\"key\"]"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "test_generator_mt19937.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\pythonProject\\venv\\Lib\\site-packages\\numpy\\random\\tests\\test_generator_mt19937.py",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 512,
                        "content": "res = hashlib.sha256(val).hexdigest()"
                    },
                    {
                        "line_number": 519,
                        "content": "res = hashlib.sha256(val).hexdigest()"
                    },
                    {
                        "line_number": 927,
                        "content": "res = hashlib.sha256(actual.view(np.int8)).hexdigest()"
                    },
                    {
                        "line_number": 2604,
                        "content": "sha256 = hashlib.sha256(key)"
                    },
                    {
                        "line_number": 2612,
                        "content": "sha256 = hashlib.sha256(key)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Python",
                "filename": "test_random.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\pythonProject\\venv\\Lib\\site-packages\\numpy\\random\\tests\\test_random.py",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 238,
                        "content": "res = hashlib.sha256(val.view(np.int8)).hexdigest()"
                    },
                    {
                        "line_number": 244,
                        "content": "res = hashlib.sha256(val).hexdigest()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Python",
                "filename": "test_randomstate.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\pythonProject\\venv\\Lib\\site-packages\\numpy\\random\\tests\\test_randomstate.py",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 360,
                        "content": "res = hashlib.sha256(val.view(np.int8)).hexdigest()"
                    },
                    {
                        "line_number": 366,
                        "content": "res = hashlib.sha256(val).hexdigest()"
                    },
                    {
                        "line_number": 2029,
                        "content": "res = hashlib.sha256(val.view(np.int8)).hexdigest()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Python",
                "filename": "test_typing.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\pythonProject\\venv\\Lib\\site-packages\\numpy\\typing\\tests\\test_typing.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 225,
                        "content": "key = (np_scalar.dtype.kind, np_scalar.dtype.itemsize)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "test_typing.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\pythonProject\\venv\\Lib\\site-packages\\numpy\\typing\\tests\\test_typing.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 225,
                        "content": "key = (np_scalar.dtype.kind, np_scalar.dtype.itemsize)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "IcoImagePlugin.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\pythonProject\\venv\\Lib\\site-packages\\PIL\\IcoImagePlugin.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 175,
                        "content": "self.entry = sorted(self.entry, key=lambda x: x[\"color_depth\"])"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "Image.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\pythonProject\\venv\\Lib\\site-packages\\PIL\\Image.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 2605,
                        "content": "x / aspect, key=lambda n: 0 if n == 0 else abs(aspect - x / n)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "Image.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\pythonProject\\venv\\Lib\\site-packages\\PIL\\Image.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 2602,
                        "content": "x = round_aspect(y * aspect, key=lambda n: abs(aspect - n / y))"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "PngImagePlugin.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\pythonProject\\venv\\Lib\\site-packages\\PIL\\PngImagePlugin.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 298,
                        "content": "key = key.encode(\"latin-1\", \"strict\")"
                    },
                    {
                        "line_number": 334,
                        "content": "key = key.encode(\"latin-1\", \"strict\")"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "cache.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\pythonProject\\venv\\Lib\\site-packages\\pip\\_internal\\cache.py",
                "vulnerability": "SHA-224",
                "lines": [
                    {
                        "line_number": 29,
                        "content": "return hashlib.sha224(s.encode(\"ascii\")).hexdigest()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-224 provides reduced security compared to larger variants."
            },
            {
                "language": "Python",
                "filename": "configuration.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\pythonProject\\venv\\Lib\\site-packages\\pip\\_internal\\configuration.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 146,
                        "content": "key = _normalize_name(key)"
                    },
                    {
                        "line_number": 157,
                        "content": "key = _normalize_name(key)"
                    },
                    {
                        "line_number": 177,
                        "content": "key = _normalize_name(key)"
                    },
                    {
                        "line_number": 314,
                        "content": "key = section + \".\" + _normalize_name(name)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "self_outdated_check.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\pythonProject\\venv\\Lib\\site-packages\\pip\\_internal\\self_outdated_check.py",
                "vulnerability": "SHA-224",
                "lines": [
                    {
                        "line_number": 39,
                        "content": "name = hashlib.sha224(key_bytes).hexdigest()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-224 provides reduced security compared to larger variants."
            },
            {
                "language": "Python",
                "filename": "parser.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\pythonProject\\venv\\Lib\\site-packages\\pip\\_internal\\cli\\parser.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 197,
                        "content": "section, key = section_key.split(\".\", 1)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "configuration.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\pythonProject\\venv\\Lib\\site-packages\\pip\\_internal\\commands\\configuration.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 178,
                        "content": "key = self._get_n_args(args, \"get [name]\", n=1)"
                    },
                    {
                        "line_number": 190,
                        "content": "key = self._get_n_args(args, \"unset [name]\", n=1)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "configuration.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\pythonProject\\venv\\Lib\\site-packages\\pip\\_internal\\commands\\configuration.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 178,
                        "content": "key = self._get_n_args(args, \"get [name]\", n=1)"
                    },
                    {
                        "line_number": 190,
                        "content": "key = self._get_n_args(args, \"unset [name]\", n=1)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "_json.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\pythonProject\\venv\\Lib\\site-packages\\pip\\_internal\\metadata\\_json.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 64,
                        "content": "key = json_name(field)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "candidate.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\pythonProject\\venv\\Lib\\site-packages\\pip\\_internal\\models\\candidate.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 18,
                        "content": "key=(self.name, self.version, self.link),"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "candidate.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\pythonProject\\venv\\Lib\\site-packages\\pip\\_internal\\models\\candidate.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 18,
                        "content": "key=(self.name, self.version, self.link),"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "link.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\pythonProject\\venv\\Lib\\site-packages\\pip\\_internal\\models\\link.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 257,
                        "content": "super().__init__(key=url, defining_class=Link)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "auth.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\pythonProject\\venv\\Lib\\site-packages\\pip\\_internal\\network\\auth.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 320,
                        "content": "key=lambda candidate: commonprefix("
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "freeze.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\pythonProject\\venv\\Lib\\site-packages\\pip\\_internal\\operations\\freeze.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 142,
                        "content": "for installation in sorted(installations.values(), key=lambda x: x.name.lower()):"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "build_tracker.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\pythonProject\\venv\\Lib\\site-packages\\pip\\_internal\\operations\\build\\build_tracker.py",
                "vulnerability": "SHA-224",
                "lines": [
                    {
                        "line_number": 73,
                        "content": "hashed = hashlib.sha224(link.url_without_fragment.encode()).hexdigest()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-224 provides reduced security compared to larger variants."
            },
            {
                "language": "Python",
                "filename": "wheel.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\pythonProject\\venv\\Lib\\site-packages\\pip\\_internal\\operations\\install\\wheel.py",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 81,
                        "content": "\"\"\"Return (encoded_digest, length) for path using hashlib.sha256()\"\"\""
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Python",
                "filename": "misc.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\pythonProject\\venv\\Lib\\site-packages\\pip\\_internal\\utils\\misc.py",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 612,
                        "content": "\"\"\"Return (hash, length) for path using hashlib.sha256()\"\"\""
                    },
                    {
                        "line_number": 614,
                        "content": "h = hashlib.sha256()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Python",
                "filename": "file_cache.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\pythonProject\\venv\\Lib\\site-packages\\pip\\_vendor\\cachecontrol\\caches\\file_cache.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 187,
                        "content": "key = CacheController.cache_url(url)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "file_cache.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\pythonProject\\venv\\Lib\\site-packages\\pip\\_vendor\\cachecontrol\\caches\\file_cache.py",
                "vulnerability": "SHA-224",
                "lines": [
                    {
                        "line_number": 104,
                        "content": "return hashlib.sha224(x.encode()).hexdigest()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-224 provides reduced security compared to larger variants."
            },
            {
                "language": "Python",
                "filename": "__init__.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\pythonProject\\venv\\Lib\\site-packages\\pip\\_vendor\\chardet\\__init__.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 113,
                        "content": "return sorted(results, key=lambda result: -result[\"confidence\"])"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "__init__.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\pythonProject\\venv\\Lib\\site-packages\\pip\\_vendor\\chardet\\__init__.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 113,
                        "content": "return sorted(results, key=lambda result: -result[\"confidence\"])"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "compat.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\pythonProject\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\compat.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 688,
                        "content": "link_prev, link_next, key = self.__map.pop(key)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "database.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\pythonProject\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\database.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 349,
                        "content": "self.key = self.name.lower()    # for case-insensitive comparisons"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "database.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\pythonProject\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\database.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 349,
                        "content": "self.key = self.name.lower()    # for case-insensitive comparisons"
                    },
                    {
                        "line_number": 876,
                        "content": "s.key = n.lower()   # for case-insensitive comparisons"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "database.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\pythonProject\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\database.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 526,
                        "content": "hasher = hashlib.md5"
                    },
                    {
                        "line_number": 1024,
                        "content": "return hashlib.md5(content).hexdigest()"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "index.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\pythonProject\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\index.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 268,
                        "content": "md5_digest = hashlib.md5(file_data).hexdigest()"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "index.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\pythonProject\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\index.py",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 269,
                        "content": "sha256_digest = hashlib.sha256(file_data).hexdigest()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Python",
                "filename": "locators.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\pythonProject\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\locators.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 582,
                        "content": "result = sorted(result, key=lambda t: t[0], reverse=True)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "locators.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\pythonProject\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\locators.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 582,
                        "content": "result = sorted(result, key=lambda t: t[0], reverse=True)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "version.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\pythonProject\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\version.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 108,
                        "content": "self.key = self.name.lower()    # for case-insensitive comparisons"
                    },
                    {
                        "line_number": 163,
                        "content": "return self.key == other.key and self._parts == other._parts"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "version.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\pythonProject\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\version.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 108,
                        "content": "self.key = self.name.lower()    # for case-insensitive comparisons"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "wheel.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\pythonProject\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\wheel.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 407,
                        "content": "if key == 'scripts' and not p.endswith('.exe'):"
                    },
                    {
                        "line_number": 897,
                        "content": "key = '%s/PKG-INFO' % info_dir"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "wheel.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\pythonProject\\venv\\Lib\\site-packages\\pip\\_vendor\\distlib\\wheel.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 897,
                        "content": "key = '%s/PKG-INFO' % info_dir"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "__init__.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\pythonProject\\venv\\Lib\\site-packages\\pip\\_vendor\\pkg_resources\\__init__.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 2722,
                        "content": "self._key = key = self.project_name.lower()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "windows.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\pythonProject\\venv\\Lib\\site-packages\\pip\\_vendor\\platformdirs\\windows.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 199,
                        "content": "key = winreg.OpenKey(winreg.HKEY_CURRENT_USER, r\"Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders\")"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "lexer.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\pythonProject\\venv\\Lib\\site-packages\\pip\\_vendor\\pygments\\lexer.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 931,
                        "content": "key=lambda x: x[self._prof_sort_index],"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "sphinxext.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\pythonProject\\venv\\Lib\\site-packages\\pip\\_vendor\\pygments\\sphinxext.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 104,
                        "content": "for classname, data in sorted(LEXERS.items(), key=lambda x: x[1][1].lower()):"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "img.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\pythonProject\\venv\\Lib\\site-packages\\pip\\_vendor\\pygments\\formatters\\img.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 174,
                        "content": "key = _winreg.OpenKey(*keyname)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "img.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\pythonProject\\venv\\Lib\\site-packages\\pip\\_vendor\\pygments\\formatters\\img.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 174,
                        "content": "key = _winreg.OpenKey(*keyname)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "core.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\pythonProject\\venv\\Lib\\site-packages\\pip\\_vendor\\pyparsing\\core.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 4170,
                        "content": "fatals.sort(key=lambda e: -e.loc)"
                    },
                    {
                        "line_number": 4486,
                        "content": "fatals.sort(key=lambda e: -e.loc)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "core.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\pythonProject\\venv\\Lib\\site-packages\\pip\\_vendor\\pyparsing\\core.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 4172,
                        "content": "fatals.sort(key=lambda e: (-e.loc, -len(str(e.parser_element))))"
                    },
                    {
                        "line_number": 4488,
                        "content": "fatals.sort(key=lambda e: (-e.loc, -len(str(e.parser_element))))"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "auth.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\pythonProject\\venv\\Lib\\site-packages\\pip\\_vendor\\requests\\auth.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 148,
                        "content": "return hashlib.md5(x).hexdigest()"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "auth.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\pythonProject\\venv\\Lib\\site-packages\\pip\\_vendor\\requests\\auth.py",
                "vulnerability": "SHA-1",
                "lines": [
                    {
                        "line_number": 156,
                        "content": "return hashlib.sha1(x).hexdigest()"
                    },
                    {
                        "line_number": 205,
                        "content": "cnonce = hashlib.sha1(s).hexdigest()[:16]"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collisions."
            },
            {
                "language": "Python",
                "filename": "auth.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\pythonProject\\venv\\Lib\\site-packages\\pip\\_vendor\\requests\\auth.py",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 164,
                        "content": "return hashlib.sha256(x).hexdigest()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Python",
                "filename": "models.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\pythonProject\\venv\\Lib\\site-packages\\pip\\_vendor\\requests\\models.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 989,
                        "content": "key = link.get(\"rel\") or link.get(\"url\")"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "models.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\pythonProject\\venv\\Lib\\site-packages\\pip\\_vendor\\requests\\models.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 989,
                        "content": "key = link.get(\"rel\") or link.get(\"url\")"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "utils.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\pythonProject\\venv\\Lib\\site-packages\\pip\\_vendor\\requests\\utils.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 532,
                        "content": "key = param[:index_of_equals].strip(items_to_strip)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "scope.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\pythonProject\\venv\\Lib\\site-packages\\pip\\_vendor\\rich\\scope.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 46,
                        "content": "items = sorted(scope.items(), key=sort_items) if sort_keys else scope.items()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "_parser.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\pythonProject\\venv\\Lib\\site-packages\\pip\\_vendor\\tomli\\_parser.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 287,
                        "content": "pos, key = parse_key(src, pos)"
                    },
                    {
                        "line_number": 305,
                        "content": "pos, key = parse_key(src, pos)"
                    },
                    {
                        "line_number": 360,
                        "content": "pos, key = parse_key(src, pos)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "__init__.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\pythonProject\\venv\\Lib\\site-packages\\pkg_resources\\__init__.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 2722,
                        "content": "self._key = key = self.project_name.lower()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "more.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\pythonProject\\venv\\Lib\\site-packages\\pkg_resources\\_vendor\\more_itertools\\more.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 937,
                        "content": ">>> key = lambda x: x % 10  # Bucket by last digit"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "more.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\pythonProject\\venv\\Lib\\site-packages\\pkg_resources\\_vendor\\more_itertools\\more.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 939,
                        "content": ">>> s = bucket(it, key=key, validator=validator)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "recipes.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\pythonProject\\venv\\Lib\\site-packages\\pkg_resources\\_vendor\\more_itertools\\recipes.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 490,
                        "content": "``key=frozenset``. For ``dict`` objects,"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "windows.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\pythonProject\\venv\\Lib\\site-packages\\pkg_resources\\_vendor\\platformdirs\\windows.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 140,
                        "content": "key = winreg.OpenKey(winreg.HKEY_CURRENT_USER, r\"Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders\")"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "core.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\pythonProject\\venv\\Lib\\site-packages\\pyparsing\\core.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 4191,
                        "content": "fatals.sort(key=lambda e: -e.loc)"
                    },
                    {
                        "line_number": 4507,
                        "content": "fatals.sort(key=lambda e: -e.loc)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "core.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\pythonProject\\venv\\Lib\\site-packages\\pyparsing\\core.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 4193,
                        "content": "fatals.sort(key=lambda e: (-e.loc, -len(str(e.parser_element))))"
                    },
                    {
                        "line_number": 4509,
                        "content": "fatals.sort(key=lambda e: (-e.loc, -len(str(e.parser_element))))"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "egg_info.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\pythonProject\\venv\\Lib\\site-packages\\setuptools\\command\\egg_info.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 255,
                        "content": "key = getattr(pd, \"key\", None) or getattr(pd, \"name\", None)"
                    },
                    {
                        "line_number": 256,
                        "content": "if pd is not None and key == self.egg_name.lower():"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "egg_info.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\pythonProject\\venv\\Lib\\site-packages\\setuptools\\command\\egg_info.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 255,
                        "content": "key = getattr(pd, \"key\", None) or getattr(pd, \"name\", None)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "_apply_pyprojecttoml.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\pythonProject\\venv\\Lib\\site-packages\\setuptools\\config\\_apply_pyprojecttoml.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 250,
                        "content": "key = json_compatible_key(key)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "msvc9compiler.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\pythonProject\\venv\\Lib\\site-packages\\setuptools\\_distutils\\msvc9compiler.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 177,
                        "content": "key = RegEnumKey(h, 0)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "msvccompiler.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\pythonProject\\venv\\Lib\\site-packages\\setuptools\\_distutils\\msvccompiler.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 161,
                        "content": "key = RegEnumKey(h, 0)"
                    },
                    {
                        "line_number": 640,
                        "content": "key = r\"{}\\{:0.1f}\\VC\\VC_OBJECTS_PLATFORM_INFO\\Win32\\Directories\".format("
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "_collections.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\pythonProject\\venv\\Lib\\site-packages\\setuptools\\_distutils\\_collections.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 159,
                        "content": "key = self._find_first_match_(sorted_keys, item)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "_msvccompiler.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\pythonProject\\venv\\Lib\\site-packages\\setuptools\\_distutils\\_msvccompiler.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 41,
                        "content": "key = winreg.OpenKeyEx("
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "install.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\pythonProject\\venv\\Lib\\site-packages\\setuptools\\_distutils\\command\\install.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 143,
                        "content": "os_name, sep, key = name.partition('_')"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "more.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\pythonProject\\venv\\Lib\\site-packages\\setuptools\\_vendor\\more_itertools\\more.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 412,
                        "content": ">>> key = lambda s: int(s)  # Sort by numeric value, not by string"
                    },
                    {
                        "line_number": 876,
                        "content": ">>> key = lambda x: x % 10  # Bucket by last digit"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "more.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\pythonProject\\venv\\Lib\\site-packages\\setuptools\\_vendor\\more_itertools\\more.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 412,
                        "content": ">>> key = lambda s: int(s)  # Sort by numeric value, not by string"
                    },
                    {
                        "line_number": 878,
                        "content": ">>> s = bucket(it, key=key, validator=validator)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "recipes.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\pythonProject\\venv\\Lib\\site-packages\\setuptools\\_vendor\\more_itertools\\recipes.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 400,
                        "content": "``key=frozenset``. For ``dict`` objects,"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "_parser.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\pythonProject\\venv\\Lib\\site-packages\\setuptools\\_vendor\\tomli\\_parser.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 287,
                        "content": "pos, key = parse_key(src, pos)"
                    },
                    {
                        "line_number": 305,
                        "content": "pos, key = parse_key(src, pos)"
                    },
                    {
                        "line_number": 360,
                        "content": "pos, key = parse_key(src, pos)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "wheelfile.py",
                "path": "C:/Users\\alexa\\PycharmProjects\\pythonProject\\venv\\Lib\\site-packages\\wheel\\wheelfile.py",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 38,
                        "content": "_default_algorithm = hashlib.sha256"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            }
        ]
    },
    {
        "scan_id": 17,
        "date": "2024-12-16 20:12:40",
        "directory": "C:/Users/alexa/Desktop/crypto_project",
        "files_scanned": {
            "Python": 23,
            "C": 14,
            "Java": 14
        },
        "vulnerable_files": {
            "Python": 7,
            "C": 3,
            "Java": 5
        },
        "vulnerabilities": [
            {
                "language": "Python",
                "filename": "a.py",
                "path": "C:/Users/alexa/Desktop/crypto_project\\Crypto-Project\\scripts\\a.py",
                "vulnerability": "DES",
                "lines": [
                    {
                        "line_number": 1,
                        "content": "from Crypto.Cipher import DES"
                    },
                    {
                        "line_number": 10,
                        "content": "cipher = DES.new(key, DES.MODE_ECB)"
                    }
                ],
                "severity": "Very High",
                "explanation": "DES is insecure due to its 56-bit key size, making it vulnerable to brute-force attacks."
            },
            {
                "language": "Python",
                "filename": "f.py",
                "path": "C:/Users/alexa/Desktop/crypto_project\\Crypto-Project\\scripts\\f.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 10,
                        "content": "cipher = AES.new(key, AES.MODE_ECB)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe.",
                "key_info": "Inferred key length: 16 bytes"
            },
            {
                "language": "Python",
                "filename": "f.py",
                "path": "C:/Users/alexa/Desktop/crypto_project\\Crypto-Project\\scripts\\f.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 10,
                        "content": "cipher = AES.new(key, AES.MODE_ECB)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks.",
                "key_info": "Inferred key length: 16 bytes"
            },
            {
                "language": "Java",
                "filename": "TripleDESExample.java",
                "path": "C:/Users/alexa/Desktop/crypto_project\\Crypto-Project\\scripts\\3des\\TripleDESExample.java",
                "vulnerability": "DES",
                "lines": [
                    {
                        "line_number": 13,
                        "content": "SecretKeySpec desKey = new SecretKeySpec(key1, \"DES\");"
                    },
                    {
                        "line_number": 14,
                        "content": "Cipher cipher1 = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    },
                    {
                        "line_number": 19,
                        "content": "SecretKeySpec desKey2 = new SecretKeySpec(key1, \"DES\");"
                    },
                    {
                        "line_number": 20,
                        "content": "Cipher cipher2 = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    },
                    {
                        "line_number": 25,
                        "content": "SecretKeySpec desKey3 = new SecretKeySpec(key3, \"DES\");"
                    },
                    {
                        "line_number": 26,
                        "content": "Cipher cipher3 = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    }
                ],
                "severity": "Very High",
                "explanation": "DES is insecure due to its 56-bit key size, making it vulnerable to brute-force attacks."
            },
            {
                "language": "Python",
                "filename": "aes128.py",
                "path": "C:/Users/alexa/Desktop/crypto_project\\Crypto-Project\\scripts\\aes128\\aes128.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 6,
                        "content": "cipher = AES.new(key, AES.MODE_ECB)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe.",
                "key_info": "Inferred key length: 16 bytes"
            },
            {
                "language": "Python",
                "filename": "aes128.py",
                "path": "C:/Users/alexa/Desktop/crypto_project\\Crypto-Project\\scripts\\aes128\\aes128.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 6,
                        "content": "cipher = AES.new(key, AES.MODE_ECB)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks.",
                "key_info": "Inferred key length: 16 bytes"
            },
            {
                "language": "Python",
                "filename": "aes192.py",
                "path": "C:/Users/alexa/Desktop/crypto_project\\Crypto-Project\\scripts\\aes192\\aes192.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 6,
                        "content": "cipher = AES.new(key, AES.MODE_ECB)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe.",
                "key_info": "Inferred key length: 24 bytes"
            },
            {
                "language": "Python",
                "filename": "aes192.py",
                "path": "C:/Users/alexa/Desktop/crypto_project\\Crypto-Project\\scripts\\aes192\\aes192.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 6,
                        "content": "cipher = AES.new(key, AES.MODE_ECB)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks.",
                "key_info": "Inferred key length: 24 bytes"
            },
            {
                "language": "Java",
                "filename": "CBCStaticIVTest.java",
                "path": "C:/Users/alexa/Desktop/crypto_project\\Crypto-Project\\scripts\\cbc_mode\\CBCStaticIVTest.java",
                "vulnerability": "DES",
                "lines": [
                    {
                        "line_number": 22,
                        "content": "SecretKey desKey = new javax.crypto.spec.SecretKeySpec(\"8bytekey\".getBytes(), \"DES\");"
                    },
                    {
                        "line_number": 25,
                        "content": "Cipher desCipher = Cipher.getInstance(\"DES/CBC/PKCS5Padding\");"
                    }
                ],
                "severity": "Very High",
                "explanation": "DES is insecure due to its 56-bit key size, making it vulnerable to brute-force attacks."
            },
            {
                "language": "C",
                "filename": "cbc_static_iv.c",
                "path": "C:/Users/alexa/Desktop/crypto_project\\Crypto-Project\\scripts\\cbc_mode\\cbc_static_iv.c",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 12,
                        "content": "EVP_EncryptInit_ex(ctx, EVP_aes_128_cbc(), NULL, key, iv);  // Static IV used here"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "cbc_static_iv.py",
                "path": "C:/Users/alexa/Desktop/crypto_project\\Crypto-Project\\scripts\\cbc_mode\\cbc_static_iv.py",
                "vulnerability": "DES",
                "lines": [
                    {
                        "line_number": 14,
                        "content": "cipher = DES.new(key, DES.MODE_CBC, iv)"
                    }
                ],
                "severity": "Very High",
                "explanation": "DES is insecure due to its 56-bit key size, making it vulnerable to brute-force attacks."
            },
            {
                "language": "Python",
                "filename": "cbc_static_iv.py",
                "path": "C:/Users/alexa/Desktop/crypto_project\\Crypto-Project\\scripts\\cbc_mode\\cbc_static_iv.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 7,
                        "content": "cipher = AES.new(key, AES.MODE_CBC, iv)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe.",
                "key_info": "Inferred key length: 16 bytes"
            },
            {
                "language": "Python",
                "filename": "cbc_static_iv.py",
                "path": "C:/Users/alexa/Desktop/crypto_project\\Crypto-Project\\scripts\\cbc_mode\\cbc_static_iv.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 7,
                        "content": "cipher = AES.new(key, AES.MODE_CBC, iv)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks.",
                "key_info": "Inferred key length: 16 bytes"
            },
            {
                "language": "C",
                "filename": "des.c",
                "path": "C:/Users/alexa/Desktop/crypto_project\\Crypto-Project\\scripts\\des\\des.c",
                "vulnerability": "3DES_1KEY",
                "lines": [
                    {
                        "line_number": 11,
                        "content": "DES_set_key_unchecked(&key, &key_schedule);"
                    }
                ],
                "severity": "Very High",
                "explanation": "3DES with 1 key offers no additional security over DES and is insecure."
            },
            {
                "language": "Python",
                "filename": "des.py",
                "path": "C:/Users/alexa/Desktop/crypto_project\\Crypto-Project\\scripts\\des\\des.py",
                "vulnerability": "DES",
                "lines": [
                    {
                        "line_number": 1,
                        "content": "from Crypto.Cipher import DES"
                    },
                    {
                        "line_number": 5,
                        "content": "cipher = DES.new(key, DES.MODE_ECB)"
                    }
                ],
                "severity": "Very High",
                "explanation": "DES is insecure due to its 56-bit key size, making it vulnerable to brute-force attacks."
            },
            {
                "language": "Java",
                "filename": "DESExample.java",
                "path": "C:/Users/alexa/Desktop/crypto_project\\Crypto-Project\\scripts\\des\\DESExample.java",
                "vulnerability": "DES",
                "lines": [
                    {
                        "line_number": 9,
                        "content": "SecretKey key = new SecretKeySpec(keyBytes, \"DES\");"
                    },
                    {
                        "line_number": 10,
                        "content": "Cipher cipher = Cipher.getInstance(\"DES/ECB/PKCS5Padding\");"
                    }
                ],
                "severity": "Very High",
                "explanation": "DES is insecure due to its 56-bit key size, making it vulnerable to brute-force attacks."
            },
            {
                "language": "C",
                "filename": "ecb.c",
                "path": "C:/Users/alexa/Desktop/crypto_project\\Crypto-Project\\scripts\\ecb_mode\\ecb.c",
                "vulnerability": "DES",
                "lines": [
                    {
                        "line_number": 26,
                        "content": "EVP_EncryptInit_ex(ctx, EVP_des_ecb(), NULL, key, NULL);"
                    }
                ],
                "severity": "Very High",
                "explanation": "DES is insecure due to its 56-bit key size, making it vulnerable to brute-force attacks."
            },
            {
                "language": "C",
                "filename": "ecb.c",
                "path": "C:/Users/alexa/Desktop/crypto_project\\Crypto-Project\\scripts\\ecb_mode\\ecb.c",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 11,
                        "content": "EVP_EncryptInit_ex(ctx, EVP_aes_128_ecb(), NULL, key, NULL);"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "ecb.py",
                "path": "C:/Users/alexa/Desktop/crypto_project\\Crypto-Project\\scripts\\ecb_mode\\ecb.py",
                "vulnerability": "DES",
                "lines": [
                    {
                        "line_number": 9,
                        "content": "des_ecb = DES.new(b\"8bytekey\", DES.MODE_ECB)"
                    }
                ],
                "severity": "Very High",
                "explanation": "DES is insecure due to its 56-bit key size, making it vulnerable to brute-force attacks."
            },
            {
                "language": "Python",
                "filename": "ecb.py",
                "path": "C:/Users/alexa/Desktop/crypto_project\\Crypto-Project\\scripts\\ecb_mode\\ecb.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 4,
                        "content": "aes_ecb = AES.new(b\"Sixteen byte key\", AES.MODE_ECB)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure against classical attacks but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "ecb.py",
                "path": "C:/Users/alexa/Desktop/crypto_project\\Crypto-Project\\scripts\\ecb_mode\\ecb.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 4,
                        "content": "aes_ecb = AES.new(b\"Sixteen byte key\", AES.MODE_ECB)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 is slightly better than AES-128, but still vulnerable to quantum attacks."
            },
            {
                "language": "Java",
                "filename": "ECBModeTest.java",
                "path": "C:/Users/alexa/Desktop/crypto_project\\Crypto-Project\\scripts\\ecb_mode\\ECBModeTest.java",
                "vulnerability": "DES",
                "lines": [
                    {
                        "line_number": 18,
                        "content": "SecretKey desKey = new SecretKeySpec(\"8bytekey\".getBytes(), \"DES\");"
                    },
                    {
                        "line_number": 19,
                        "content": "Cipher desCipher = Cipher.getInstance(\"DES/ECB/PKCS5Padding\");"
                    }
                ],
                "severity": "Very High",
                "explanation": "DES is insecure due to its 56-bit key size, making it vulnerable to brute-force attacks."
            },
            {
                "language": "Java",
                "filename": "RC4Example.java",
                "path": "C:/Users/alexa/Desktop/crypto_project\\Crypto-Project\\scripts\\rc4\\RC4Example.java",
                "vulnerability": "RC4",
                "lines": [
                    {
                        "line_number": 11,
                        "content": "Cipher cipher = Cipher.getInstance(\"RC4\");"
                    }
                ],
                "severity": "Very High",
                "explanation": "RC4 is insecure due to biases in its keystream."
            }
        ]
    },
    {
        "scan_id": 18,
        "date": "2024-12-25 20:36:42",
        "directory": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/3des",
        "files_scanned": {
            "Python": 1,
            "C": 1,
            "Java": 1
        },
        "vulnerable_files": {
            "Python": 0,
            "C": 3,
            "Java": 1
        },
        "vulnerabilities": [
            {
                "language": "C",
                "filename": "3des.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/3des\\3des.c",
                "vulnerability": "3DES_1KEY",
                "lines": [
                    {
                        "line_number": 25,
                        "content": "EVP_EncryptInit_ex(ctx_enc, EVP_des_ede3_ecb(), NULL, \"ABCDEFGHABCDEFGHABCDEFGH\", NULL);"
                    },
                    {
                        "line_number": 34,
                        "content": "EVP_DecryptInit_ex(ctx_dec, EVP_des_ede3_ecb(), NULL, \"ABCDEFGHABCDEFGHABCDEFGH\", NULL);"
                    }
                ],
                "severity": "Very High",
                "explanation": "3DES with a single repeated 8-byte key is effectively just DES."
            },
            {
                "language": "C",
                "filename": "3des.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/3des\\3des.c",
                "vulnerability": "3DES_2KEY",
                "lines": [
                    {
                        "line_number": 54,
                        "content": "EVP_EncryptInit_ex(ctx_enc, EVP_des_ede3_ecb(), NULL, \"ABCDEFGHIJKLMNOP\", NULL);"
                    },
                    {
                        "line_number": 63,
                        "content": "EVP_DecryptInit_ex(ctx_dec, EVP_des_ede3_ecb(), NULL, \"ABCDEFGHIJKLMNOP\", NULL);"
                    }
                ],
                "severity": "High",
                "explanation": "3DES with 2 keys (~112-bit) is below modern recommendations."
            },
            {
                "language": "C",
                "filename": "3des.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/3des\\3des.c",
                "vulnerability": "3DES_3KEY",
                "lines": [
                    {
                        "line_number": 25,
                        "content": "EVP_EncryptInit_ex(ctx_enc, EVP_des_ede3_ecb(), NULL, \"ABCDEFGHABCDEFGHABCDEFGH\", NULL);"
                    },
                    {
                        "line_number": 34,
                        "content": "EVP_DecryptInit_ex(ctx_dec, EVP_des_ede3_ecb(), NULL, \"ABCDEFGHABCDEFGHABCDEFGH\", NULL);"
                    },
                    {
                        "line_number": 83,
                        "content": "EVP_EncryptInit_ex(ctx_enc, EVP_des_ede3_ecb(), NULL, \"ABCDEFGH12345678XYZ!12#@\", NULL);"
                    },
                    {
                        "line_number": 92,
                        "content": "EVP_DecryptInit_ex(ctx_dec, EVP_des_ede3_ecb(), NULL, \"ABCDEFGH12345678XYZ!12#@\", NULL);"
                    }
                ],
                "severity": "High",
                "explanation": "3-key 3DES (~112-bit security) is still considered legacy."
            },
            {
                "language": "Java",
                "filename": "test_3des_all.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/3des\\test_3des_all.java",
                "vulnerability": "DES",
                "lines": [
                    {
                        "line_number": 25,
                        "content": "Cipher cipherEnc = Cipher.getInstance(\"DESede/ECB/NoPadding\");"
                    },
                    {
                        "line_number": 33,
                        "content": "Cipher cipherDec = Cipher.getInstance(\"DESede/ECB/NoPadding\");"
                    },
                    {
                        "line_number": 43,
                        "content": "Cipher cipherEnc = Cipher.getInstance(\"DESede/ECB/NoPadding\");"
                    },
                    {
                        "line_number": 51,
                        "content": "Cipher cipherDec = Cipher.getInstance(\"DESede/ECB/NoPadding\");"
                    },
                    {
                        "line_number": 61,
                        "content": "Cipher cipherEnc = Cipher.getInstance(\"DESede/ECB/NoPadding\");"
                    },
                    {
                        "line_number": 69,
                        "content": "Cipher cipherDec = Cipher.getInstance(\"DESede/ECB/NoPadding\");"
                    }
                ],
                "severity": "Very High",
                "explanation": "DES is insecure due to its 56-bit key size, making it vulnerable to brute-force attacks."
            }
        ]
    },
    {
        "scan_id": 19,
        "date": "2024-12-25 20:40:49",
        "directory": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/3des",
        "files_scanned": {
            "Python": 1,
            "C": 1,
            "Java": 1
        },
        "vulnerable_files": {
            "Python": 0,
            "C": 3,
            "Java": 1
        },
        "vulnerabilities": [
            {
                "language": "C",
                "filename": "3des.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/3des\\3des.c",
                "vulnerability": "3DES_1KEY",
                "lines": [
                    {
                        "line_number": 25,
                        "content": "EVP_EncryptInit_ex(ctx_enc, EVP_des_ede3_ecb(), NULL, \"ABCDEFGHABCDEFGHABCDEFGH\", NULL);"
                    },
                    {
                        "line_number": 34,
                        "content": "EVP_DecryptInit_ex(ctx_dec, EVP_des_ede3_ecb(), NULL, \"ABCDEFGHABCDEFGHABCDEFGH\", NULL);"
                    }
                ],
                "severity": "Very High",
                "explanation": "3DES with a single repeated 8-byte key is effectively just DES."
            },
            {
                "language": "C",
                "filename": "3des.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/3des\\3des.c",
                "vulnerability": "3DES_2KEY",
                "lines": [
                    {
                        "line_number": 54,
                        "content": "EVP_EncryptInit_ex(ctx_enc, EVP_des_ede3_ecb(), NULL, \"ABCDEFGHIJKLMNOP\", NULL);"
                    },
                    {
                        "line_number": 63,
                        "content": "EVP_DecryptInit_ex(ctx_dec, EVP_des_ede3_ecb(), NULL, \"ABCDEFGHIJKLMNOP\", NULL);"
                    }
                ],
                "severity": "High",
                "explanation": "3DES with 2 keys (~112-bit) is below modern recommendations."
            },
            {
                "language": "C",
                "filename": "3des.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/3des\\3des.c",
                "vulnerability": "3DES_3KEY",
                "lines": [
                    {
                        "line_number": 25,
                        "content": "EVP_EncryptInit_ex(ctx_enc, EVP_des_ede3_ecb(), NULL, \"ABCDEFGHABCDEFGHABCDEFGH\", NULL);"
                    },
                    {
                        "line_number": 34,
                        "content": "EVP_DecryptInit_ex(ctx_dec, EVP_des_ede3_ecb(), NULL, \"ABCDEFGHABCDEFGHABCDEFGH\", NULL);"
                    },
                    {
                        "line_number": 83,
                        "content": "EVP_EncryptInit_ex(ctx_enc, EVP_des_ede3_ecb(), NULL, \"ABCDEFGH12345678XYZ!12#@\", NULL);"
                    },
                    {
                        "line_number": 92,
                        "content": "EVP_DecryptInit_ex(ctx_dec, EVP_des_ede3_ecb(), NULL, \"ABCDEFGH12345678XYZ!12#@\", NULL);"
                    }
                ],
                "severity": "High",
                "explanation": "3-key 3DES (~112-bit security) is still considered legacy."
            },
            {
                "language": "Java",
                "filename": "test_3des_all.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/3des\\test_3des_all.java",
                "vulnerability": "DES",
                "lines": [
                    {
                        "line_number": 25,
                        "content": "Cipher cipherEnc = Cipher.getInstance(\"DESede/ECB/NoPadding\");"
                    },
                    {
                        "line_number": 33,
                        "content": "Cipher cipherDec = Cipher.getInstance(\"DESede/ECB/NoPadding\");"
                    },
                    {
                        "line_number": 43,
                        "content": "Cipher cipherEnc = Cipher.getInstance(\"DESede/ECB/NoPadding\");"
                    },
                    {
                        "line_number": 51,
                        "content": "Cipher cipherDec = Cipher.getInstance(\"DESede/ECB/NoPadding\");"
                    },
                    {
                        "line_number": 61,
                        "content": "Cipher cipherEnc = Cipher.getInstance(\"DESede/ECB/NoPadding\");"
                    },
                    {
                        "line_number": 69,
                        "content": "Cipher cipherDec = Cipher.getInstance(\"DESede/ECB/NoPadding\");"
                    }
                ],
                "severity": "Very High",
                "explanation": "DES is insecure due to its 56-bit key size, making it vulnerable to brute-force attacks."
            }
        ]
    },
    {
        "scan_id": 20,
        "date": "2024-12-25 20:46:28",
        "directory": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/3des",
        "files_scanned": {
            "Python": 1,
            "C": 1,
            "Java": 1
        },
        "vulnerable_files": {
            "Python": 3,
            "C": 3,
            "Java": 1
        },
        "vulnerabilities": [
            {
                "language": "C",
                "filename": "3des.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/3des\\3des.c",
                "vulnerability": "3DES_1KEY",
                "lines": [
                    {
                        "line_number": 25,
                        "content": "EVP_EncryptInit_ex(ctx_enc, EVP_des_ede3_ecb(), NULL, \"ABCDEFGHABCDEFGHABCDEFGH\", NULL);"
                    },
                    {
                        "line_number": 34,
                        "content": "EVP_DecryptInit_ex(ctx_dec, EVP_des_ede3_ecb(), NULL, \"ABCDEFGHABCDEFGHABCDEFGH\", NULL);"
                    }
                ],
                "severity": "Very High",
                "explanation": "3DES with a single repeated 8-byte key is effectively DES."
            },
            {
                "language": "C",
                "filename": "3des.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/3des\\3des.c",
                "vulnerability": "3DES_2KEY",
                "lines": [
                    {
                        "line_number": 54,
                        "content": "EVP_EncryptInit_ex(ctx_enc, EVP_des_ede3_ecb(), NULL, \"ABCDEFGHIJKLMNOP\", NULL);"
                    },
                    {
                        "line_number": 63,
                        "content": "EVP_DecryptInit_ex(ctx_dec, EVP_des_ede3_ecb(), NULL, \"ABCDEFGHIJKLMNOP\", NULL);"
                    }
                ],
                "severity": "High",
                "explanation": "3DES with 2 keys (~112-bit) is below modern recommendations."
            },
            {
                "language": "C",
                "filename": "3des.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/3des\\3des.c",
                "vulnerability": "3DES_3KEY",
                "lines": [
                    {
                        "line_number": 25,
                        "content": "EVP_EncryptInit_ex(ctx_enc, EVP_des_ede3_ecb(), NULL, \"ABCDEFGHABCDEFGHABCDEFGH\", NULL);"
                    },
                    {
                        "line_number": 34,
                        "content": "EVP_DecryptInit_ex(ctx_dec, EVP_des_ede3_ecb(), NULL, \"ABCDEFGHABCDEFGHABCDEFGH\", NULL);"
                    },
                    {
                        "line_number": 83,
                        "content": "EVP_EncryptInit_ex(ctx_enc, EVP_des_ede3_ecb(), NULL, \"ABCDEFGH12345678XYZ!12#@\", NULL);"
                    },
                    {
                        "line_number": 92,
                        "content": "EVP_DecryptInit_ex(ctx_dec, EVP_des_ede3_ecb(), NULL, \"ABCDEFGH12345678XYZ!12#@\", NULL);"
                    }
                ],
                "severity": "High",
                "explanation": "3-key 3DES (~112-bit) is stronger than 1- or 2-key, but still legacy."
            },
            {
                "language": "Python",
                "filename": "3des.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/3des\\3des.py",
                "vulnerability": "3DES_1KEY",
                "lines": [
                    {
                        "line_number": 15,
                        "content": "cipher = DES3.new(b\"ABCDEFGHABCDEFGHABCDEFGH\", DES3.MODE_ECB)  # encrypt"
                    },
                    {
                        "line_number": 20,
                        "content": "decipher = DES3.new(b\"ABCDEFGHABCDEFGHABCDEFGH\", DES3.MODE_ECB)  # decrypt"
                    }
                ],
                "severity": "Very High",
                "explanation": "3DES with a single repeated 8-byte key is effectively DES."
            },
            {
                "language": "Python",
                "filename": "3des.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/3des\\3des.py",
                "vulnerability": "3DES_2KEY",
                "lines": [
                    {
                        "line_number": 29,
                        "content": "cipher = DES3.new(b\"ABCDEFGHIJKLMNOP\", DES3.MODE_ECB)  # encrypt"
                    },
                    {
                        "line_number": 34,
                        "content": "decipher = DES3.new(b\"ABCDEFGHIJKLMNOP\", DES3.MODE_ECB)  # decrypt"
                    }
                ],
                "severity": "High",
                "explanation": "3DES with 2 keys (~112-bit) is below modern recommendations."
            },
            {
                "language": "Python",
                "filename": "3des.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/3des\\3des.py",
                "vulnerability": "3DES_3KEY",
                "lines": [
                    {
                        "line_number": 15,
                        "content": "cipher = DES3.new(b\"ABCDEFGHABCDEFGHABCDEFGH\", DES3.MODE_ECB)  # encrypt"
                    },
                    {
                        "line_number": 20,
                        "content": "decipher = DES3.new(b\"ABCDEFGHABCDEFGHABCDEFGH\", DES3.MODE_ECB)  # decrypt"
                    },
                    {
                        "line_number": 44,
                        "content": "cipher = DES3.new(b\"ABCDEFGH12345678XYZ!12#@\", DES3.MODE_ECB)  # encrypt"
                    },
                    {
                        "line_number": 49,
                        "content": "decipher = DES3.new(b\"ABCDEFGH12345678XYZ!12#@\", DES3.MODE_ECB)  # decrypt"
                    }
                ],
                "severity": "High",
                "explanation": "3-key 3DES (~112-bit) is stronger than 1- or 2-key, but still legacy."
            },
            {
                "language": "Java",
                "filename": "test_3des_all.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/3des\\test_3des_all.java",
                "vulnerability": "DES",
                "lines": [
                    {
                        "line_number": 25,
                        "content": "Cipher cipherEnc = Cipher.getInstance(\"DESede/ECB/NoPadding\");"
                    },
                    {
                        "line_number": 33,
                        "content": "Cipher cipherDec = Cipher.getInstance(\"DESede/ECB/NoPadding\");"
                    },
                    {
                        "line_number": 43,
                        "content": "Cipher cipherEnc = Cipher.getInstance(\"DESede/ECB/NoPadding\");"
                    },
                    {
                        "line_number": 51,
                        "content": "Cipher cipherDec = Cipher.getInstance(\"DESede/ECB/NoPadding\");"
                    },
                    {
                        "line_number": 61,
                        "content": "Cipher cipherEnc = Cipher.getInstance(\"DESede/ECB/NoPadding\");"
                    },
                    {
                        "line_number": 69,
                        "content": "Cipher cipherDec = Cipher.getInstance(\"DESede/ECB/NoPadding\");"
                    }
                ],
                "severity": "Very High",
                "explanation": "DES is insecure due to its 56-bit key size, making it vulnerable to brute-force attacks."
            }
        ]
    },
    {
        "scan_id": 21,
        "date": "2024-12-25 20:57:08",
        "directory": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/3des",
        "files_scanned": {
            "Python": 1,
            "C": 1,
            "Java": 1
        },
        "vulnerable_files": {
            "Python": 3,
            "C": 3,
            "Java": 1
        },
        "vulnerabilities": [
            {
                "language": "C",
                "filename": "3des.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/3des\\3des.c",
                "vulnerability": "3DES_1KEY",
                "lines": [
                    {
                        "line_number": 25,
                        "content": "EVP_EncryptInit_ex(ctx_enc, EVP_des_ede3_ecb(), NULL, \"ABCDEFGHABCDEFGHABCDEFGH\", NULL);"
                    },
                    {
                        "line_number": 34,
                        "content": "EVP_DecryptInit_ex(ctx_dec, EVP_des_ede3_ecb(), NULL, \"ABCDEFGHABCDEFGHABCDEFGH\", NULL);"
                    }
                ],
                "severity": "Very High",
                "explanation": "3DES with a single repeated 8-byte key is effectively DES."
            },
            {
                "language": "C",
                "filename": "3des.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/3des\\3des.c",
                "vulnerability": "3DES_2KEY",
                "lines": [
                    {
                        "line_number": 54,
                        "content": "EVP_EncryptInit_ex(ctx_enc, EVP_des_ede3_ecb(), NULL, \"ABCDEFGHIJKLMNOP\", NULL);"
                    },
                    {
                        "line_number": 63,
                        "content": "EVP_DecryptInit_ex(ctx_dec, EVP_des_ede3_ecb(), NULL, \"ABCDEFGHIJKLMNOP\", NULL);"
                    }
                ],
                "severity": "High",
                "explanation": "3DES with 2 keys (~112-bit) is below modern recommendations."
            },
            {
                "language": "C",
                "filename": "3des.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/3des\\3des.c",
                "vulnerability": "3DES_3KEY",
                "lines": [
                    {
                        "line_number": 25,
                        "content": "EVP_EncryptInit_ex(ctx_enc, EVP_des_ede3_ecb(), NULL, \"ABCDEFGHABCDEFGHABCDEFGH\", NULL);"
                    },
                    {
                        "line_number": 34,
                        "content": "EVP_DecryptInit_ex(ctx_dec, EVP_des_ede3_ecb(), NULL, \"ABCDEFGHABCDEFGHABCDEFGH\", NULL);"
                    },
                    {
                        "line_number": 83,
                        "content": "EVP_EncryptInit_ex(ctx_enc, EVP_des_ede3_ecb(), NULL, \"ABCDEFGH12345678XYZ!12#@\", NULL);"
                    },
                    {
                        "line_number": 92,
                        "content": "EVP_DecryptInit_ex(ctx_dec, EVP_des_ede3_ecb(), NULL, \"ABCDEFGH12345678XYZ!12#@\", NULL);"
                    }
                ],
                "severity": "High",
                "explanation": "3-key 3DES (~112-bit) is stronger than 1- or 2-key, but still legacy."
            },
            {
                "language": "Python",
                "filename": "3des.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/3des\\3des.py",
                "vulnerability": "3DES_1KEY",
                "lines": [
                    {
                        "line_number": 15,
                        "content": "cipher = DES3.new(b\"ABCDEFGHABCDEFGHABCDEFGH\", DES3.MODE_ECB)  # encrypt"
                    },
                    {
                        "line_number": 20,
                        "content": "decipher = DES3.new(b\"ABCDEFGHABCDEFGHABCDEFGH\", DES3.MODE_ECB)  # decrypt"
                    }
                ],
                "severity": "Very High",
                "explanation": "3DES with a single repeated 8-byte key is effectively DES."
            },
            {
                "language": "Python",
                "filename": "3des.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/3des\\3des.py",
                "vulnerability": "3DES_2KEY",
                "lines": [
                    {
                        "line_number": 29,
                        "content": "cipher = DES3.new(b\"ABCDEFGHIJKLMNOP\", DES3.MODE_ECB)  # encrypt"
                    },
                    {
                        "line_number": 34,
                        "content": "decipher = DES3.new(b\"ABCDEFGHIJKLMNOP\", DES3.MODE_ECB)  # decrypt"
                    }
                ],
                "severity": "High",
                "explanation": "3DES with 2 keys (~112-bit) is below modern recommendations."
            },
            {
                "language": "Python",
                "filename": "3des.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/3des\\3des.py",
                "vulnerability": "3DES_3KEY",
                "lines": [
                    {
                        "line_number": 44,
                        "content": "cipher = DES3.new(b\"ABCDEFGH12345678XYZ!12#@\", DES3.MODE_ECB)  # encrypt"
                    },
                    {
                        "line_number": 49,
                        "content": "decipher = DES3.new(b\"ABCDEFGH12345678XYZ!12#@\", DES3.MODE_ECB)  # decrypt"
                    }
                ],
                "severity": "High",
                "explanation": "3-key 3DES (~112-bit) is stronger than 1- or 2-key, but still legacy."
            },
            {
                "language": "Java",
                "filename": "test_3des_all.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/3des\\test_3des_all.java",
                "vulnerability": "DES",
                "lines": [
                    {
                        "line_number": 25,
                        "content": "Cipher cipherEnc = Cipher.getInstance(\"DESede/ECB/NoPadding\");"
                    },
                    {
                        "line_number": 33,
                        "content": "Cipher cipherDec = Cipher.getInstance(\"DESede/ECB/NoPadding\");"
                    },
                    {
                        "line_number": 43,
                        "content": "Cipher cipherEnc = Cipher.getInstance(\"DESede/ECB/NoPadding\");"
                    },
                    {
                        "line_number": 51,
                        "content": "Cipher cipherDec = Cipher.getInstance(\"DESede/ECB/NoPadding\");"
                    },
                    {
                        "line_number": 61,
                        "content": "Cipher cipherEnc = Cipher.getInstance(\"DESede/ECB/NoPadding\");"
                    },
                    {
                        "line_number": 69,
                        "content": "Cipher cipherDec = Cipher.getInstance(\"DESede/ECB/NoPadding\");"
                    }
                ],
                "severity": "Very High",
                "explanation": "DES is insecure due to its 56-bit key size, making it vulnerable to brute-force attacks."
            }
        ]
    },
    {
        "scan_id": 22,
        "date": "2024-12-25 21:00:37",
        "directory": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/3des",
        "files_scanned": {
            "Python": 1,
            "C": 1,
            "Java": 1
        },
        "vulnerable_files": {
            "Python": 2,
            "C": 3,
            "Java": 1
        },
        "vulnerabilities": [
            {
                "language": "C",
                "filename": "3des.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/3des\\3des.c",
                "vulnerability": "3DES_1KEY",
                "lines": [
                    {
                        "line_number": 25,
                        "content": "EVP_EncryptInit_ex(ctx_enc, EVP_des_ede3_ecb(), NULL, \"ABCDEFGHABCDEFGHABCDEFGH\", NULL);"
                    },
                    {
                        "line_number": 34,
                        "content": "EVP_DecryptInit_ex(ctx_dec, EVP_des_ede3_ecb(), NULL, \"ABCDEFGHABCDEFGHABCDEFGH\", NULL);"
                    }
                ],
                "severity": "Very High",
                "explanation": "3DES with a single repeated 8-byte key is effectively DES."
            },
            {
                "language": "C",
                "filename": "3des.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/3des\\3des.c",
                "vulnerability": "3DES_2KEY",
                "lines": [
                    {
                        "line_number": 54,
                        "content": "EVP_EncryptInit_ex(ctx_enc, EVP_des_ede3_ecb(), NULL, \"ABCDEFGHIJKLMNOP\", NULL);"
                    },
                    {
                        "line_number": 63,
                        "content": "EVP_DecryptInit_ex(ctx_dec, EVP_des_ede3_ecb(), NULL, \"ABCDEFGHIJKLMNOP\", NULL);"
                    }
                ],
                "severity": "High",
                "explanation": "3DES with 2 keys (~112-bit) is below modern recommendations."
            },
            {
                "language": "C",
                "filename": "3des.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/3des\\3des.c",
                "vulnerability": "3DES_3KEY",
                "lines": [
                    {
                        "line_number": 83,
                        "content": "EVP_EncryptInit_ex(ctx_enc, EVP_des_ede3_ecb(), NULL, \"ABCDEFGH12345678XYZ!12#@\", NULL);"
                    },
                    {
                        "line_number": 92,
                        "content": "EVP_DecryptInit_ex(ctx_dec, EVP_des_ede3_ecb(), NULL, \"ABCDEFGH12345678XYZ!12#@\", NULL);"
                    }
                ],
                "severity": "High",
                "explanation": "3-key 3DES (~112-bit) is stronger than 1- or 2-key, but still legacy."
            },
            {
                "language": "Python",
                "filename": "3des.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/3des\\3des.py",
                "vulnerability": "3DES_2KEY",
                "lines": [
                    {
                        "line_number": 29,
                        "content": "cipher = DES3.new(b\"ABCDEFGHIJKLMNOP\", DES3.MODE_ECB)  # encrypt"
                    },
                    {
                        "line_number": 34,
                        "content": "decipher = DES3.new(b\"ABCDEFGHIJKLMNOP\", DES3.MODE_ECB)  # decrypt"
                    }
                ],
                "severity": "High",
                "explanation": "3DES with 2 keys (~112-bit) is below modern recommendations."
            },
            {
                "language": "Python",
                "filename": "3des.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/3des\\3des.py",
                "vulnerability": "3DES_3KEY",
                "lines": [
                    {
                        "line_number": 44,
                        "content": "cipher = DES3.new(b\"ABCDEFGH12345678XYZ!12#@\", DES3.MODE_ECB)  # encrypt"
                    },
                    {
                        "line_number": 49,
                        "content": "decipher = DES3.new(b\"ABCDEFGH12345678XYZ!12#@\", DES3.MODE_ECB)  # decrypt"
                    }
                ],
                "severity": "High",
                "explanation": "3-key 3DES (~112-bit) is stronger than 1- or 2-key, but still legacy."
            },
            {
                "language": "Java",
                "filename": "test_3des_all.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/3des\\test_3des_all.java",
                "vulnerability": "DES",
                "lines": [
                    {
                        "line_number": 25,
                        "content": "Cipher cipherEnc = Cipher.getInstance(\"DESede/ECB/NoPadding\");"
                    },
                    {
                        "line_number": 33,
                        "content": "Cipher cipherDec = Cipher.getInstance(\"DESede/ECB/NoPadding\");"
                    },
                    {
                        "line_number": 43,
                        "content": "Cipher cipherEnc = Cipher.getInstance(\"DESede/ECB/NoPadding\");"
                    },
                    {
                        "line_number": 51,
                        "content": "Cipher cipherDec = Cipher.getInstance(\"DESede/ECB/NoPadding\");"
                    },
                    {
                        "line_number": 61,
                        "content": "Cipher cipherEnc = Cipher.getInstance(\"DESede/ECB/NoPadding\");"
                    },
                    {
                        "line_number": 69,
                        "content": "Cipher cipherDec = Cipher.getInstance(\"DESede/ECB/NoPadding\");"
                    }
                ],
                "severity": "Very High",
                "explanation": "DES is insecure due to its 56-bit key size, making it vulnerable to brute-force attacks."
            }
        ]
    },
    {
        "scan_id": 23,
        "date": "2024-12-25 21:32:52",
        "directory": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/3des",
        "files_scanned": {
            "Python": 1,
            "C": 1,
            "Java": 1
        },
        "vulnerable_files": {
            "Python": 2,
            "C": 3,
            "Java": 1
        },
        "vulnerabilities": [
            {
                "language": "C",
                "filename": "3des.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/3des\\3des.c",
                "vulnerability": "3DES_1KEY",
                "lines": [
                    {
                        "line_number": 25,
                        "content": "EVP_EncryptInit_ex(ctx_enc, EVP_des_ede3_ecb(), NULL, \"ABCDEFGHABCDEFGHABCDEFGH\", NULL);"
                    },
                    {
                        "line_number": 34,
                        "content": "EVP_DecryptInit_ex(ctx_dec, EVP_des_ede3_ecb(), NULL, \"ABCDEFGHABCDEFGHABCDEFGH\", NULL);"
                    }
                ],
                "severity": "Very High",
                "explanation": "3DES with a single repeated 8-byte key is effectively DES."
            },
            {
                "language": "C",
                "filename": "3des.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/3des\\3des.c",
                "vulnerability": "3DES_2KEY",
                "lines": [
                    {
                        "line_number": 54,
                        "content": "EVP_EncryptInit_ex(ctx_enc, EVP_des_ede3_ecb(), NULL, \"ABCDEFGHIJKLMNOP\", NULL);"
                    },
                    {
                        "line_number": 63,
                        "content": "EVP_DecryptInit_ex(ctx_dec, EVP_des_ede3_ecb(), NULL, \"ABCDEFGHIJKLMNOP\", NULL);"
                    }
                ],
                "severity": "High",
                "explanation": "3DES with 2 keys (~112-bit) is below modern recommendations."
            },
            {
                "language": "C",
                "filename": "3des.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/3des\\3des.c",
                "vulnerability": "3DES_3KEY",
                "lines": [
                    {
                        "line_number": 83,
                        "content": "EVP_EncryptInit_ex(ctx_enc, EVP_des_ede3_ecb(), NULL, \"ABCDEFGH12345678XYZ!12#@\", NULL);"
                    },
                    {
                        "line_number": 92,
                        "content": "EVP_DecryptInit_ex(ctx_dec, EVP_des_ede3_ecb(), NULL, \"ABCDEFGH12345678XYZ!12#@\", NULL);"
                    }
                ],
                "severity": "High",
                "explanation": "3-key 3DES (~112-bit) is stronger than 1- or 2-key, but still legacy."
            },
            {
                "language": "Python",
                "filename": "3des.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/3des\\3des.py",
                "vulnerability": "3DES_2KEY",
                "lines": [
                    {
                        "line_number": 29,
                        "content": "cipher = DES3.new(b\"ABCDEFGHIJKLMNOP\", DES3.MODE_ECB)  # encrypt"
                    },
                    {
                        "line_number": 34,
                        "content": "decipher = DES3.new(b\"ABCDEFGHIJKLMNOP\", DES3.MODE_ECB)  # decrypt"
                    }
                ],
                "severity": "High",
                "explanation": "3DES with 2 keys (~112-bit) is below modern recommendations."
            },
            {
                "language": "Python",
                "filename": "3des.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/3des\\3des.py",
                "vulnerability": "3DES_3KEY",
                "lines": [
                    {
                        "line_number": 44,
                        "content": "cipher = DES3.new(b\"ABCDEFGH12345678XYZ!12#@\", DES3.MODE_ECB)  # encrypt"
                    },
                    {
                        "line_number": 49,
                        "content": "decipher = DES3.new(b\"ABCDEFGH12345678XYZ!12#@\", DES3.MODE_ECB)  # decrypt"
                    }
                ],
                "severity": "High",
                "explanation": "3-key 3DES (~112-bit) is stronger than 1- or 2-key, but still legacy."
            },
            {
                "language": "Java",
                "filename": "test_3des_all.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/3des\\test_3des_all.java",
                "vulnerability": "DES",
                "lines": [
                    {
                        "line_number": 25,
                        "content": "Cipher cipherEnc = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    },
                    {
                        "line_number": 33,
                        "content": "Cipher cipherDec = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    },
                    {
                        "line_number": 43,
                        "content": "Cipher cipherEnc = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    },
                    {
                        "line_number": 51,
                        "content": "Cipher cipherDec = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    },
                    {
                        "line_number": 61,
                        "content": "Cipher cipherEnc = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    },
                    {
                        "line_number": 69,
                        "content": "Cipher cipherDec = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    }
                ],
                "severity": "Very High",
                "explanation": "DES is insecure due to its 56-bit key size, making it vulnerable to brute-force attacks."
            }
        ]
    },
    {
        "scan_id": 24,
        "date": "2024-12-25 21:43:05",
        "directory": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/3des",
        "files_scanned": {
            "Python": 1,
            "C": 1,
            "Java": 1
        },
        "vulnerable_files": {
            "Python": 2,
            "C": 3,
            "Java": 1
        },
        "vulnerabilities": [
            {
                "language": "C",
                "filename": "3des.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/3des\\3des.c",
                "vulnerability": "3DES_1KEY",
                "lines": [
                    {
                        "line_number": 25,
                        "content": "EVP_EncryptInit_ex(ctx_enc, EVP_des_ede3_ecb(), NULL, \"ABCDEFGHABCDEFGHABCDEFGH\", NULL);"
                    },
                    {
                        "line_number": 34,
                        "content": "EVP_DecryptInit_ex(ctx_dec, EVP_des_ede3_ecb(), NULL, \"ABCDEFGHABCDEFGHABCDEFGH\", NULL);"
                    }
                ],
                "severity": "Very High",
                "explanation": "3DES with a single repeated 8-byte key is effectively DES."
            },
            {
                "language": "C",
                "filename": "3des.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/3des\\3des.c",
                "vulnerability": "3DES_2KEY",
                "lines": [
                    {
                        "line_number": 54,
                        "content": "EVP_EncryptInit_ex(ctx_enc, EVP_des_ede3_ecb(), NULL, \"ABCDEFGHIJKLMNOP\", NULL);"
                    },
                    {
                        "line_number": 63,
                        "content": "EVP_DecryptInit_ex(ctx_dec, EVP_des_ede3_ecb(), NULL, \"ABCDEFGHIJKLMNOP\", NULL);"
                    }
                ],
                "severity": "High",
                "explanation": "3DES with 2 keys (~112-bit) is below modern recommendations."
            },
            {
                "language": "C",
                "filename": "3des.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/3des\\3des.c",
                "vulnerability": "3DES_3KEY",
                "lines": [
                    {
                        "line_number": 83,
                        "content": "EVP_EncryptInit_ex(ctx_enc, EVP_des_ede3_ecb(), NULL, \"ABCDEFGH12345678XYZ!12#@\", NULL);"
                    },
                    {
                        "line_number": 92,
                        "content": "EVP_DecryptInit_ex(ctx_dec, EVP_des_ede3_ecb(), NULL, \"ABCDEFGH12345678XYZ!12#@\", NULL);"
                    }
                ],
                "severity": "High",
                "explanation": "3-key 3DES (~112-bit) is stronger than 1- or 2-key, but still legacy."
            },
            {
                "language": "Python",
                "filename": "3des.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/3des\\3des.py",
                "vulnerability": "3DES_2KEY",
                "lines": [
                    {
                        "line_number": 29,
                        "content": "cipher = DES3.new(b\"ABCDEFGHIJKLMNOP\", DES3.MODE_ECB)  # encrypt"
                    },
                    {
                        "line_number": 34,
                        "content": "decipher = DES3.new(b\"ABCDEFGHIJKLMNOP\", DES3.MODE_ECB)  # decrypt"
                    }
                ],
                "severity": "High",
                "explanation": "3DES with 2 keys (~112-bit) is below modern recommendations."
            },
            {
                "language": "Python",
                "filename": "3des.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/3des\\3des.py",
                "vulnerability": "3DES_3KEY",
                "lines": [
                    {
                        "line_number": 44,
                        "content": "cipher = DES3.new(b\"ABCDEFGH12345678XYZ!12#@\", DES3.MODE_ECB)  # encrypt"
                    },
                    {
                        "line_number": 49,
                        "content": "decipher = DES3.new(b\"ABCDEFGH12345678XYZ!12#@\", DES3.MODE_ECB)  # decrypt"
                    }
                ],
                "severity": "High",
                "explanation": "3-key 3DES (~112-bit) is stronger than 1- or 2-key, but still legacy."
            },
            {
                "language": "Java",
                "filename": "test_3des_all.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/3des\\test_3des_all.java",
                "vulnerability": "DES",
                "lines": [
                    {
                        "line_number": 25,
                        "content": "Cipher cipherEnc = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    },
                    {
                        "line_number": 33,
                        "content": "Cipher cipherDec = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    },
                    {
                        "line_number": 43,
                        "content": "Cipher cipherEnc = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    },
                    {
                        "line_number": 51,
                        "content": "Cipher cipherDec = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    },
                    {
                        "line_number": 61,
                        "content": "Cipher cipherEnc = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    },
                    {
                        "line_number": 69,
                        "content": "Cipher cipherDec = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    }
                ],
                "severity": "Very High",
                "explanation": "DES is insecure due to its 56-bit key size, making it vulnerable to brute-force attacks."
            }
        ]
    },
    {
        "scan_id": 25,
        "date": "2024-12-25 21:44:34",
        "directory": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/3des",
        "files_scanned": {
            "Python": 1,
            "C": 1,
            "Java": 1
        },
        "vulnerable_files": {
            "Python": 2,
            "C": 3,
            "Java": 1
        },
        "vulnerabilities": [
            {
                "language": "C",
                "filename": "3des.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/3des\\3des.c",
                "vulnerability": "3DES_1KEY",
                "lines": [
                    {
                        "line_number": 25,
                        "content": "EVP_EncryptInit_ex(ctx_enc, EVP_des_ede3_ecb(), NULL, \"ABCDEFGHABCDEFGHABCDEFGH\", NULL);"
                    },
                    {
                        "line_number": 34,
                        "content": "EVP_DecryptInit_ex(ctx_dec, EVP_des_ede3_ecb(), NULL, \"ABCDEFGHABCDEFGHABCDEFGH\", NULL);"
                    }
                ],
                "severity": "Very High",
                "explanation": "3DES with a single repeated 8-byte key is effectively DES."
            },
            {
                "language": "C",
                "filename": "3des.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/3des\\3des.c",
                "vulnerability": "3DES_2KEY",
                "lines": [
                    {
                        "line_number": 54,
                        "content": "EVP_EncryptInit_ex(ctx_enc, EVP_des_ede3_ecb(), NULL, \"ABCDEFGHIJKLMNOP\", NULL);"
                    },
                    {
                        "line_number": 63,
                        "content": "EVP_DecryptInit_ex(ctx_dec, EVP_des_ede3_ecb(), NULL, \"ABCDEFGHIJKLMNOP\", NULL);"
                    }
                ],
                "severity": "High",
                "explanation": "3DES with 2 keys (~112-bit) is below modern recommendations."
            },
            {
                "language": "C",
                "filename": "3des.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/3des\\3des.c",
                "vulnerability": "3DES_3KEY",
                "lines": [
                    {
                        "line_number": 83,
                        "content": "EVP_EncryptInit_ex(ctx_enc, EVP_des_ede3_ecb(), NULL, \"ABCDEFGH12345678XYZ!12#@\", NULL);"
                    },
                    {
                        "line_number": 92,
                        "content": "EVP_DecryptInit_ex(ctx_dec, EVP_des_ede3_ecb(), NULL, \"ABCDEFGH12345678XYZ!12#@\", NULL);"
                    }
                ],
                "severity": "High",
                "explanation": "3-key 3DES (~112-bit) is stronger than 1- or 2-key, but still legacy."
            },
            {
                "language": "Python",
                "filename": "3des.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/3des\\3des.py",
                "vulnerability": "3DES_2KEY",
                "lines": [
                    {
                        "line_number": 29,
                        "content": "cipher = DES3.new(b\"ABCDEFGHIJKLMNOP\", DES3.MODE_ECB)  # encrypt"
                    },
                    {
                        "line_number": 34,
                        "content": "decipher = DES3.new(b\"ABCDEFGHIJKLMNOP\", DES3.MODE_ECB)  # decrypt"
                    }
                ],
                "severity": "High",
                "explanation": "3DES with 2 keys (~112-bit) is below modern recommendations."
            },
            {
                "language": "Python",
                "filename": "3des.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/3des\\3des.py",
                "vulnerability": "3DES_3KEY",
                "lines": [
                    {
                        "line_number": 44,
                        "content": "cipher = DES3.new(b\"ABCDEFGH12345678XYZ!12#@\", DES3.MODE_ECB)  # encrypt"
                    },
                    {
                        "line_number": 49,
                        "content": "decipher = DES3.new(b\"ABCDEFGH12345678XYZ!12#@\", DES3.MODE_ECB)  # decrypt"
                    }
                ],
                "severity": "High",
                "explanation": "3-key 3DES (~112-bit) is stronger than 1- or 2-key, but still legacy."
            },
            {
                "language": "Java",
                "filename": "test_3des_all.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/3des\\test_3des_all.java",
                "vulnerability": "DES",
                "lines": [
                    {
                        "line_number": 25,
                        "content": "Cipher cipherEnc = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    },
                    {
                        "line_number": 33,
                        "content": "Cipher cipherDec = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    },
                    {
                        "line_number": 43,
                        "content": "Cipher cipherEnc = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    },
                    {
                        "line_number": 51,
                        "content": "Cipher cipherDec = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    },
                    {
                        "line_number": 61,
                        "content": "Cipher cipherEnc = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    },
                    {
                        "line_number": 69,
                        "content": "Cipher cipherDec = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    }
                ],
                "severity": "Very High",
                "explanation": "DES is insecure due to its 56-bit key size, making it vulnerable to brute-force attacks."
            }
        ]
    },
    {
        "scan_id": 26,
        "date": "2024-12-25 21:45:23",
        "directory": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/3des",
        "files_scanned": {
            "Python": 1,
            "C": 1,
            "Java": 1
        },
        "vulnerable_files": {
            "Python": 2,
            "C": 3,
            "Java": 1
        },
        "vulnerabilities": [
            {
                "language": "C",
                "filename": "3des.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/3des\\3des.c",
                "vulnerability": "3DES_1KEY",
                "lines": [
                    {
                        "line_number": 25,
                        "content": "EVP_EncryptInit_ex(ctx_enc, EVP_des_ede3_ecb(), NULL, \"ABCDEFGHABCDEFGHABCDEFGH\", NULL);"
                    },
                    {
                        "line_number": 34,
                        "content": "EVP_DecryptInit_ex(ctx_dec, EVP_des_ede3_ecb(), NULL, \"ABCDEFGHABCDEFGHABCDEFGH\", NULL);"
                    }
                ],
                "severity": "Very High",
                "explanation": "3DES with a single repeated 8-byte key is effectively DES."
            },
            {
                "language": "C",
                "filename": "3des.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/3des\\3des.c",
                "vulnerability": "3DES_2KEY",
                "lines": [
                    {
                        "line_number": 54,
                        "content": "EVP_EncryptInit_ex(ctx_enc, EVP_des_ede3_ecb(), NULL, \"ABCDEFGHIJKLMNOP\", NULL);"
                    },
                    {
                        "line_number": 63,
                        "content": "EVP_DecryptInit_ex(ctx_dec, EVP_des_ede3_ecb(), NULL, \"ABCDEFGHIJKLMNOP\", NULL);"
                    }
                ],
                "severity": "High",
                "explanation": "3DES with 2 keys (~112-bit) is below modern recommendations."
            },
            {
                "language": "C",
                "filename": "3des.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/3des\\3des.c",
                "vulnerability": "3DES_3KEY",
                "lines": [
                    {
                        "line_number": 83,
                        "content": "EVP_EncryptInit_ex(ctx_enc, EVP_des_ede3_ecb(), NULL, \"ABCDEFGH12345678XYZ!12#@\", NULL);"
                    },
                    {
                        "line_number": 92,
                        "content": "EVP_DecryptInit_ex(ctx_dec, EVP_des_ede3_ecb(), NULL, \"ABCDEFGH12345678XYZ!12#@\", NULL);"
                    }
                ],
                "severity": "High",
                "explanation": "3-key 3DES (~112-bit) is stronger than 1- or 2-key, but still legacy."
            },
            {
                "language": "Python",
                "filename": "3des.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/3des\\3des.py",
                "vulnerability": "3DES_2KEY",
                "lines": [
                    {
                        "line_number": 29,
                        "content": "cipher = DES3.new(b\"ABCDEFGHIJKLMNOP\", DES3.MODE_ECB)  # encrypt"
                    },
                    {
                        "line_number": 34,
                        "content": "decipher = DES3.new(b\"ABCDEFGHIJKLMNOP\", DES3.MODE_ECB)  # decrypt"
                    }
                ],
                "severity": "High",
                "explanation": "3DES with 2 keys (~112-bit) is below modern recommendations."
            },
            {
                "language": "Python",
                "filename": "3des.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/3des\\3des.py",
                "vulnerability": "3DES_3KEY",
                "lines": [
                    {
                        "line_number": 44,
                        "content": "cipher = DES3.new(b\"ABCDEFGH12345678XYZ!12#@\", DES3.MODE_ECB)  # encrypt"
                    },
                    {
                        "line_number": 49,
                        "content": "decipher = DES3.new(b\"ABCDEFGH12345678XYZ!12#@\", DES3.MODE_ECB)  # decrypt"
                    }
                ],
                "severity": "High",
                "explanation": "3-key 3DES (~112-bit) is stronger than 1- or 2-key, but still legacy."
            },
            {
                "language": "Java",
                "filename": "test_3des_all.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/3des\\test_3des_all.java",
                "vulnerability": "DES",
                "lines": [
                    {
                        "line_number": 25,
                        "content": "Cipher cipherEnc = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    },
                    {
                        "line_number": 33,
                        "content": "Cipher cipherDec = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    },
                    {
                        "line_number": 43,
                        "content": "Cipher cipherEnc = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    },
                    {
                        "line_number": 51,
                        "content": "Cipher cipherDec = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    },
                    {
                        "line_number": 61,
                        "content": "Cipher cipherEnc = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    },
                    {
                        "line_number": 69,
                        "content": "Cipher cipherDec = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    }
                ],
                "severity": "Very High",
                "explanation": "DES is insecure due to its 56-bit key size, making it vulnerable to brute-force attacks."
            }
        ]
    },
    {
        "scan_id": 27,
        "date": "2024-12-25 21:46:57",
        "directory": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/3des",
        "files_scanned": {
            "Python": 1,
            "C": 1,
            "Java": 1
        },
        "vulnerable_files": {
            "Python": 2,
            "C": 3,
            "Java": 1
        },
        "vulnerabilities": [
            {
                "language": "C",
                "filename": "3des.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/3des\\3des.c",
                "vulnerability": "3DES_1KEY",
                "lines": [
                    {
                        "line_number": 25,
                        "content": "EVP_EncryptInit_ex(ctx_enc, EVP_des_ede3_ecb(), NULL, \"ABCDEFGHABCDEFGHABCDEFGH\", NULL);"
                    },
                    {
                        "line_number": 34,
                        "content": "EVP_DecryptInit_ex(ctx_dec, EVP_des_ede3_ecb(), NULL, \"ABCDEFGHABCDEFGHABCDEFGH\", NULL);"
                    }
                ],
                "severity": "Very High",
                "explanation": "3DES with a single repeated 8-byte key is effectively DES."
            },
            {
                "language": "C",
                "filename": "3des.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/3des\\3des.c",
                "vulnerability": "3DES_2KEY",
                "lines": [
                    {
                        "line_number": 54,
                        "content": "EVP_EncryptInit_ex(ctx_enc, EVP_des_ede3_ecb(), NULL, \"ABCDEFGHIJKLMNOP\", NULL);"
                    },
                    {
                        "line_number": 63,
                        "content": "EVP_DecryptInit_ex(ctx_dec, EVP_des_ede3_ecb(), NULL, \"ABCDEFGHIJKLMNOP\", NULL);"
                    }
                ],
                "severity": "High",
                "explanation": "3DES with 2 keys (~112-bit) is below modern recommendations."
            },
            {
                "language": "C",
                "filename": "3des.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/3des\\3des.c",
                "vulnerability": "3DES_3KEY",
                "lines": [
                    {
                        "line_number": 83,
                        "content": "EVP_EncryptInit_ex(ctx_enc, EVP_des_ede3_ecb(), NULL, \"ABCDEFGH12345678XYZ!12#@\", NULL);"
                    },
                    {
                        "line_number": 92,
                        "content": "EVP_DecryptInit_ex(ctx_dec, EVP_des_ede3_ecb(), NULL, \"ABCDEFGH12345678XYZ!12#@\", NULL);"
                    }
                ],
                "severity": "High",
                "explanation": "3-key 3DES (~112-bit) is stronger than 1- or 2-key, but still legacy."
            },
            {
                "language": "Python",
                "filename": "3des.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/3des\\3des.py",
                "vulnerability": "3DES_2KEY",
                "lines": [
                    {
                        "line_number": 29,
                        "content": "cipher = DES3.new(b\"ABCDEFGHIJKLMNOP\", DES3.MODE_ECB)  # encrypt"
                    },
                    {
                        "line_number": 34,
                        "content": "decipher = DES3.new(b\"ABCDEFGHIJKLMNOP\", DES3.MODE_ECB)  # decrypt"
                    }
                ],
                "severity": "High",
                "explanation": "3DES with 2 keys (~112-bit) is below modern recommendations."
            },
            {
                "language": "Python",
                "filename": "3des.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/3des\\3des.py",
                "vulnerability": "3DES_3KEY",
                "lines": [
                    {
                        "line_number": 44,
                        "content": "cipher = DES3.new(b\"ABCDEFGH12345678XYZ!12#@\", DES3.MODE_ECB)  # encrypt"
                    },
                    {
                        "line_number": 49,
                        "content": "decipher = DES3.new(b\"ABCDEFGH12345678XYZ!12#@\", DES3.MODE_ECB)  # decrypt"
                    }
                ],
                "severity": "High",
                "explanation": "3-key 3DES (~112-bit) is stronger than 1- or 2-key, but still legacy."
            },
            {
                "language": "Java",
                "filename": "test_3des_all.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/3des\\test_3des_all.java",
                "vulnerability": "DES",
                "lines": [
                    {
                        "line_number": 25,
                        "content": "Cipher cipherEnc = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    },
                    {
                        "line_number": 33,
                        "content": "Cipher cipherDec = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    },
                    {
                        "line_number": 43,
                        "content": "Cipher cipherEnc = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    },
                    {
                        "line_number": 51,
                        "content": "Cipher cipherDec = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    },
                    {
                        "line_number": 61,
                        "content": "Cipher cipherEnc = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    },
                    {
                        "line_number": 69,
                        "content": "Cipher cipherDec = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    }
                ],
                "severity": "Very High",
                "explanation": "DES is insecure due to its 56-bit key size, making it vulnerable to brute-force attacks."
            }
        ]
    },
    {
        "scan_id": 28,
        "date": "2024-12-25 21:51:14",
        "directory": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/3des",
        "files_scanned": {
            "Python": 1,
            "C": 1,
            "Java": 1
        },
        "vulnerable_files": {
            "Python": 2,
            "C": 3,
            "Java": 1
        },
        "vulnerabilities": [
            {
                "language": "C",
                "filename": "3des.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/3des\\3des.c",
                "vulnerability": "3DES_1KEY",
                "lines": [
                    {
                        "line_number": 25,
                        "content": "EVP_EncryptInit_ex(ctx_enc, EVP_des_ede3_ecb(), NULL, \"ABCDEFGHABCDEFGHABCDEFGH\", NULL);"
                    },
                    {
                        "line_number": 34,
                        "content": "EVP_DecryptInit_ex(ctx_dec, EVP_des_ede3_ecb(), NULL, \"ABCDEFGHABCDEFGHABCDEFGH\", NULL);"
                    }
                ],
                "severity": "Very High",
                "explanation": "3DES with a single repeated 8-byte key is effectively DES."
            },
            {
                "language": "C",
                "filename": "3des.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/3des\\3des.c",
                "vulnerability": "3DES_2KEY",
                "lines": [
                    {
                        "line_number": 54,
                        "content": "EVP_EncryptInit_ex(ctx_enc, EVP_des_ede3_ecb(), NULL, \"ABCDEFGHIJKLMNOP\", NULL);"
                    },
                    {
                        "line_number": 63,
                        "content": "EVP_DecryptInit_ex(ctx_dec, EVP_des_ede3_ecb(), NULL, \"ABCDEFGHIJKLMNOP\", NULL);"
                    }
                ],
                "severity": "High",
                "explanation": "3DES with 2 keys (~112-bit) is below modern recommendations."
            },
            {
                "language": "C",
                "filename": "3des.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/3des\\3des.c",
                "vulnerability": "3DES_3KEY",
                "lines": [
                    {
                        "line_number": 83,
                        "content": "EVP_EncryptInit_ex(ctx_enc, EVP_des_ede3_ecb(), NULL, \"ABCDEFGH12345678XYZ!12#@\", NULL);"
                    },
                    {
                        "line_number": 92,
                        "content": "EVP_DecryptInit_ex(ctx_dec, EVP_des_ede3_ecb(), NULL, \"ABCDEFGH12345678XYZ!12#@\", NULL);"
                    }
                ],
                "severity": "High",
                "explanation": "3-key 3DES (~112-bit) is stronger than 1- or 2-key, but still legacy."
            },
            {
                "language": "Python",
                "filename": "3des.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/3des\\3des.py",
                "vulnerability": "3DES_2KEY",
                "lines": [
                    {
                        "line_number": 29,
                        "content": "cipher = DES3.new(b\"ABCDEFGHIJKLMNOP\", DES3.MODE_ECB)  # encrypt"
                    },
                    {
                        "line_number": 34,
                        "content": "decipher = DES3.new(b\"ABCDEFGHIJKLMNOP\", DES3.MODE_ECB)  # decrypt"
                    }
                ],
                "severity": "High",
                "explanation": "3DES with 2 keys (~112-bit) is below modern recommendations."
            },
            {
                "language": "Python",
                "filename": "3des.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/3des\\3des.py",
                "vulnerability": "3DES_3KEY",
                "lines": [
                    {
                        "line_number": 44,
                        "content": "cipher = DES3.new(b\"ABCDEFGH12345678XYZ!12#@\", DES3.MODE_ECB)  # encrypt"
                    },
                    {
                        "line_number": 49,
                        "content": "decipher = DES3.new(b\"ABCDEFGH12345678XYZ!12#@\", DES3.MODE_ECB)  # decrypt"
                    }
                ],
                "severity": "High",
                "explanation": "3-key 3DES (~112-bit) is stronger than 1- or 2-key, but still legacy."
            },
            {
                "language": "Java",
                "filename": "test_3des_all.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/3des\\test_3des_all.java",
                "vulnerability": "DES",
                "lines": [
                    {
                        "line_number": 25,
                        "content": "Cipher cipherEnc = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    },
                    {
                        "line_number": 33,
                        "content": "Cipher cipherDec = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    },
                    {
                        "line_number": 43,
                        "content": "Cipher cipherEnc = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    },
                    {
                        "line_number": 51,
                        "content": "Cipher cipherDec = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    },
                    {
                        "line_number": 61,
                        "content": "Cipher cipherEnc = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    },
                    {
                        "line_number": 69,
                        "content": "Cipher cipherDec = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    }
                ],
                "severity": "Very High",
                "explanation": "DES is insecure due to its 56-bit key size, making it vulnerable to brute-force attacks."
            }
        ]
    },
    {
        "scan_id": 29,
        "date": "2024-12-25 21:54:00",
        "directory": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/3des",
        "files_scanned": {
            "Python": 1,
            "C": 1,
            "Java": 1
        },
        "vulnerable_files": {
            "Python": 2,
            "C": 3,
            "Java": 3
        },
        "vulnerabilities": [
            {
                "language": "C",
                "filename": "3des.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/3des\\3des.c",
                "vulnerability": "3DES_1KEY",
                "lines": [
                    {
                        "line_number": 25,
                        "content": "EVP_EncryptInit_ex(ctx_enc, EVP_des_ede3_ecb(), NULL, \"ABCDEFGHABCDEFGHABCDEFGH\", NULL);"
                    },
                    {
                        "line_number": 34,
                        "content": "EVP_DecryptInit_ex(ctx_dec, EVP_des_ede3_ecb(), NULL, \"ABCDEFGHABCDEFGHABCDEFGH\", NULL);"
                    }
                ],
                "severity": "Very High",
                "explanation": "3DES with a single repeated 8-byte key is effectively DES."
            },
            {
                "language": "C",
                "filename": "3des.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/3des\\3des.c",
                "vulnerability": "3DES_2KEY",
                "lines": [
                    {
                        "line_number": 54,
                        "content": "EVP_EncryptInit_ex(ctx_enc, EVP_des_ede3_ecb(), NULL, \"ABCDEFGHIJKLMNOP\", NULL);"
                    },
                    {
                        "line_number": 63,
                        "content": "EVP_DecryptInit_ex(ctx_dec, EVP_des_ede3_ecb(), NULL, \"ABCDEFGHIJKLMNOP\", NULL);"
                    }
                ],
                "severity": "High",
                "explanation": "3DES with 2 keys (~112-bit) is below modern recommendations."
            },
            {
                "language": "C",
                "filename": "3des.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/3des\\3des.c",
                "vulnerability": "3DES_3KEY",
                "lines": [
                    {
                        "line_number": 83,
                        "content": "EVP_EncryptInit_ex(ctx_enc, EVP_des_ede3_ecb(), NULL, \"ABCDEFGH12345678XYZ!12#@\", NULL);"
                    },
                    {
                        "line_number": 92,
                        "content": "EVP_DecryptInit_ex(ctx_dec, EVP_des_ede3_ecb(), NULL, \"ABCDEFGH12345678XYZ!12#@\", NULL);"
                    }
                ],
                "severity": "High",
                "explanation": "3-key 3DES (~112-bit) is stronger than 1- or 2-key, but still legacy."
            },
            {
                "language": "Python",
                "filename": "3des.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/3des\\3des.py",
                "vulnerability": "3DES_2KEY",
                "lines": [
                    {
                        "line_number": 29,
                        "content": "cipher = DES3.new(b\"ABCDEFGHIJKLMNOP\", DES3.MODE_ECB)  # encrypt"
                    },
                    {
                        "line_number": 34,
                        "content": "decipher = DES3.new(b\"ABCDEFGHIJKLMNOP\", DES3.MODE_ECB)  # decrypt"
                    }
                ],
                "severity": "High",
                "explanation": "3DES with 2 keys (~112-bit) is below modern recommendations."
            },
            {
                "language": "Python",
                "filename": "3des.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/3des\\3des.py",
                "vulnerability": "3DES_3KEY",
                "lines": [
                    {
                        "line_number": 44,
                        "content": "cipher = DES3.new(b\"ABCDEFGH12345678XYZ!12#@\", DES3.MODE_ECB)  # encrypt"
                    },
                    {
                        "line_number": 49,
                        "content": "decipher = DES3.new(b\"ABCDEFGH12345678XYZ!12#@\", DES3.MODE_ECB)  # decrypt"
                    }
                ],
                "severity": "High",
                "explanation": "3-key 3DES (~112-bit) is stronger than 1- or 2-key, but still legacy."
            },
            {
                "language": "Java",
                "filename": "test_3des_all.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/3des\\test_3des_all.java",
                "vulnerability": "DES",
                "lines": [
                    {
                        "line_number": 25,
                        "content": "Cipher cipherEnc = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    },
                    {
                        "line_number": 33,
                        "content": "Cipher cipherDec = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    },
                    {
                        "line_number": 43,
                        "content": "Cipher cipherEnc = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    },
                    {
                        "line_number": 51,
                        "content": "Cipher cipherDec = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    },
                    {
                        "line_number": 61,
                        "content": "Cipher cipherEnc = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    },
                    {
                        "line_number": 69,
                        "content": "Cipher cipherDec = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    }
                ],
                "severity": "Very High",
                "explanation": "DES is insecure due to its 56-bit key size, making it vulnerable to brute-force attacks."
            },
            {
                "language": "Java",
                "filename": "test_3des_all.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/3des\\test_3des_all.java",
                "vulnerability": "3DES_1KEY",
                "lines": [
                    {
                        "line_number": 27,
                        "content": "new SecretKeySpec(\"ABCDEFGHABCDEFGHABCDEFGH\".getBytes(\"UTF-8\"), \"DESede\"));"
                    },
                    {
                        "line_number": 35,
                        "content": "new SecretKeySpec(\"ABCDEFGHABCDEFGHABCDEFGH\".getBytes(\"UTF-8\"), \"DESede\"));"
                    }
                ],
                "severity": "Very High",
                "explanation": "3DES with a single repeated 8-byte key is effectively DES."
            },
            {
                "language": "Java",
                "filename": "test_3des_all.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/3des\\test_3des_all.java",
                "vulnerability": "3DES_3KEY",
                "lines": [
                    {
                        "line_number": 27,
                        "content": "new SecretKeySpec(\"ABCDEFGHABCDEFGHABCDEFGH\".getBytes(\"UTF-8\"), \"DESede\"));"
                    },
                    {
                        "line_number": 35,
                        "content": "new SecretKeySpec(\"ABCDEFGHABCDEFGHABCDEFGH\".getBytes(\"UTF-8\"), \"DESede\"));"
                    },
                    {
                        "line_number": 45,
                        "content": "new SecretKeySpec(\"ABCDEFGHIJKLMNOPABCDEFGH\".getBytes(\"UTF-8\"), \"DESede\"));"
                    },
                    {
                        "line_number": 53,
                        "content": "new SecretKeySpec(\"ABCDEFGHIJKLMNOPABCDEFGH\".getBytes(\"UTF-8\"), \"DESede\"));"
                    },
                    {
                        "line_number": 63,
                        "content": "new SecretKeySpec(\"ABCDEFGH12345678XYZ#12!@\".getBytes(\"UTF-8\"), \"DESede\"));"
                    },
                    {
                        "line_number": 71,
                        "content": "new SecretKeySpec(\"ABCDEFGH12345678XYZ#12!@\".getBytes(\"UTF-8\"), \"DESede\"));"
                    }
                ],
                "severity": "High",
                "explanation": "3-key 3DES (~112-bit) is stronger than 1- or 2-key, but still legacy."
            }
        ]
    },
    {
        "scan_id": 30,
        "date": "2024-12-25 21:56:05",
        "directory": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/3des",
        "files_scanned": {
            "Python": 1,
            "C": 1,
            "Java": 1
        },
        "vulnerable_files": {
            "Python": 3,
            "C": 3,
            "Java": 3
        },
        "vulnerabilities": [
            {
                "language": "C",
                "filename": "3des.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/3des\\3des.c",
                "vulnerability": "3DES_1KEY",
                "lines": [
                    {
                        "line_number": 25,
                        "content": "EVP_EncryptInit_ex(ctx_enc, EVP_des_ede3_ecb(), NULL, \"ABCDEFGHABCDEFGHABCDEFGH\", NULL);"
                    },
                    {
                        "line_number": 34,
                        "content": "EVP_DecryptInit_ex(ctx_dec, EVP_des_ede3_ecb(), NULL, \"ABCDEFGHABCDEFGHABCDEFGH\", NULL);"
                    }
                ],
                "severity": "Very High",
                "explanation": "3DES with a single repeated 8-byte key is effectively DES."
            },
            {
                "language": "C",
                "filename": "3des.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/3des\\3des.c",
                "vulnerability": "3DES_2KEY",
                "lines": [
                    {
                        "line_number": 54,
                        "content": "EVP_EncryptInit_ex(ctx_enc, EVP_des_ede3_ecb(), NULL, \"ABCDEFGHIJKLMNOP\", NULL);"
                    },
                    {
                        "line_number": 63,
                        "content": "EVP_DecryptInit_ex(ctx_dec, EVP_des_ede3_ecb(), NULL, \"ABCDEFGHIJKLMNOP\", NULL);"
                    }
                ],
                "severity": "High",
                "explanation": "3DES with 2 keys (~112-bit) is below modern recommendations."
            },
            {
                "language": "C",
                "filename": "3des.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/3des\\3des.c",
                "vulnerability": "3DES_3KEY",
                "lines": [
                    {
                        "line_number": 25,
                        "content": "EVP_EncryptInit_ex(ctx_enc, EVP_des_ede3_ecb(), NULL, \"ABCDEFGHABCDEFGHABCDEFGH\", NULL);"
                    },
                    {
                        "line_number": 34,
                        "content": "EVP_DecryptInit_ex(ctx_dec, EVP_des_ede3_ecb(), NULL, \"ABCDEFGHABCDEFGHABCDEFGH\", NULL);"
                    },
                    {
                        "line_number": 83,
                        "content": "EVP_EncryptInit_ex(ctx_enc, EVP_des_ede3_ecb(), NULL, \"ABCDEFGH12345678XYZ!12#@\", NULL);"
                    },
                    {
                        "line_number": 92,
                        "content": "EVP_DecryptInit_ex(ctx_dec, EVP_des_ede3_ecb(), NULL, \"ABCDEFGH12345678XYZ!12#@\", NULL);"
                    }
                ],
                "severity": "High",
                "explanation": "3-key 3DES (~112-bit) is stronger than 1- or 2-key, but still legacy."
            },
            {
                "language": "Python",
                "filename": "3des.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/3des\\3des.py",
                "vulnerability": "3DES_1KEY",
                "lines": [
                    {
                        "line_number": 15,
                        "content": "cipher = DES3.new(b\"ABCDEFGHABCDEFGHABCDEFGH\", DES3.MODE_ECB)  # encrypt"
                    },
                    {
                        "line_number": 20,
                        "content": "decipher = DES3.new(b\"ABCDEFGHABCDEFGHABCDEFGH\", DES3.MODE_ECB)  # decrypt"
                    }
                ],
                "severity": "Very High",
                "explanation": "3DES with a single repeated 8-byte key is effectively DES."
            },
            {
                "language": "Python",
                "filename": "3des.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/3des\\3des.py",
                "vulnerability": "3DES_2KEY",
                "lines": [
                    {
                        "line_number": 29,
                        "content": "cipher = DES3.new(b\"ABCDEFGHIJKLMNOP\", DES3.MODE_ECB)  # encrypt"
                    },
                    {
                        "line_number": 34,
                        "content": "decipher = DES3.new(b\"ABCDEFGHIJKLMNOP\", DES3.MODE_ECB)  # decrypt"
                    }
                ],
                "severity": "High",
                "explanation": "3DES with 2 keys (~112-bit) is below modern recommendations."
            },
            {
                "language": "Python",
                "filename": "3des.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/3des\\3des.py",
                "vulnerability": "3DES_3KEY",
                "lines": [
                    {
                        "line_number": 15,
                        "content": "cipher = DES3.new(b\"ABCDEFGHABCDEFGHABCDEFGH\", DES3.MODE_ECB)  # encrypt"
                    },
                    {
                        "line_number": 20,
                        "content": "decipher = DES3.new(b\"ABCDEFGHABCDEFGHABCDEFGH\", DES3.MODE_ECB)  # decrypt"
                    },
                    {
                        "line_number": 44,
                        "content": "cipher = DES3.new(b\"ABCDEFGH12345678XYZ!12#@\", DES3.MODE_ECB)  # encrypt"
                    },
                    {
                        "line_number": 49,
                        "content": "decipher = DES3.new(b\"ABCDEFGH12345678XYZ!12#@\", DES3.MODE_ECB)  # decrypt"
                    }
                ],
                "severity": "High",
                "explanation": "3-key 3DES (~112-bit) is stronger than 1- or 2-key, but still legacy."
            },
            {
                "language": "Java",
                "filename": "test_3des_all.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/3des\\test_3des_all.java",
                "vulnerability": "DES",
                "lines": [
                    {
                        "line_number": 25,
                        "content": "Cipher cipherEnc = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    },
                    {
                        "line_number": 33,
                        "content": "Cipher cipherDec = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    },
                    {
                        "line_number": 43,
                        "content": "Cipher cipherEnc = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    },
                    {
                        "line_number": 51,
                        "content": "Cipher cipherDec = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    },
                    {
                        "line_number": 61,
                        "content": "Cipher cipherEnc = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    },
                    {
                        "line_number": 69,
                        "content": "Cipher cipherDec = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    }
                ],
                "severity": "Very High",
                "explanation": "DES is insecure due to its 56-bit key size, making it vulnerable to brute-force attacks."
            },
            {
                "language": "Java",
                "filename": "test_3des_all.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/3des\\test_3des_all.java",
                "vulnerability": "3DES_1KEY",
                "lines": [
                    {
                        "line_number": 27,
                        "content": "new SecretKeySpec(\"ABCDEFGHABCDEFGHABCDEFGH\".getBytes(\"UTF-8\"), \"DESede\"));"
                    },
                    {
                        "line_number": 35,
                        "content": "new SecretKeySpec(\"ABCDEFGHABCDEFGHABCDEFGH\".getBytes(\"UTF-8\"), \"DESede\"));"
                    }
                ],
                "severity": "Very High",
                "explanation": "3DES with a single repeated 8-byte key is effectively DES."
            },
            {
                "language": "Java",
                "filename": "test_3des_all.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/3des\\test_3des_all.java",
                "vulnerability": "3DES_3KEY",
                "lines": [
                    {
                        "line_number": 27,
                        "content": "new SecretKeySpec(\"ABCDEFGHABCDEFGHABCDEFGH\".getBytes(\"UTF-8\"), \"DESede\"));"
                    },
                    {
                        "line_number": 35,
                        "content": "new SecretKeySpec(\"ABCDEFGHABCDEFGHABCDEFGH\".getBytes(\"UTF-8\"), \"DESede\"));"
                    },
                    {
                        "line_number": 45,
                        "content": "new SecretKeySpec(\"ABCDEFGHIJKLMNOPABCDEFGH\".getBytes(\"UTF-8\"), \"DESede\"));"
                    },
                    {
                        "line_number": 53,
                        "content": "new SecretKeySpec(\"ABCDEFGHIJKLMNOPABCDEFGH\".getBytes(\"UTF-8\"), \"DESede\"));"
                    },
                    {
                        "line_number": 63,
                        "content": "new SecretKeySpec(\"ABCDEFGH12345678XYZ#12!@\".getBytes(\"UTF-8\"), \"DESede\"));"
                    },
                    {
                        "line_number": 71,
                        "content": "new SecretKeySpec(\"ABCDEFGH12345678XYZ#12!@\".getBytes(\"UTF-8\"), \"DESede\"));"
                    }
                ],
                "severity": "High",
                "explanation": "3-key 3DES (~112-bit) is stronger than 1- or 2-key, but still legacy."
            }
        ]
    },
    {
        "scan_id": 31,
        "date": "2024-12-25 22:01:33",
        "directory": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/3des",
        "files_scanned": {
            "Python": 1,
            "C": 1,
            "Java": 1
        },
        "vulnerable_files": {
            "Python": 3,
            "C": 3,
            "Java": 4
        },
        "vulnerabilities": [
            {
                "language": "C",
                "filename": "3des.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/3des\\3des.c",
                "vulnerability": "3DES_1KEY",
                "lines": [
                    {
                        "line_number": 25,
                        "content": "EVP_EncryptInit_ex(ctx_enc, EVP_des_ede3_ecb(), NULL, \"ABCDEFGHABCDEFGHABCDEFGH\", NULL);"
                    },
                    {
                        "line_number": 34,
                        "content": "EVP_DecryptInit_ex(ctx_dec, EVP_des_ede3_ecb(), NULL, \"ABCDEFGHABCDEFGHABCDEFGH\", NULL);"
                    }
                ],
                "severity": "Very High",
                "explanation": "3DES with a single repeated 8-byte key is effectively DES."
            },
            {
                "language": "C",
                "filename": "3des.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/3des\\3des.c",
                "vulnerability": "3DES_2KEY",
                "lines": [
                    {
                        "line_number": 54,
                        "content": "EVP_EncryptInit_ex(ctx_enc, EVP_des_ede3_ecb(), NULL, \"ABCDEFGHIJKLMNOP\", NULL);"
                    },
                    {
                        "line_number": 63,
                        "content": "EVP_DecryptInit_ex(ctx_dec, EVP_des_ede3_ecb(), NULL, \"ABCDEFGHIJKLMNOP\", NULL);"
                    }
                ],
                "severity": "High",
                "explanation": "3DES with 2 keys (~112-bit) is below modern recommendations."
            },
            {
                "language": "C",
                "filename": "3des.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/3des\\3des.c",
                "vulnerability": "3DES_3KEY",
                "lines": [
                    {
                        "line_number": 25,
                        "content": "EVP_EncryptInit_ex(ctx_enc, EVP_des_ede3_ecb(), NULL, \"ABCDEFGHABCDEFGHABCDEFGH\", NULL);"
                    },
                    {
                        "line_number": 34,
                        "content": "EVP_DecryptInit_ex(ctx_dec, EVP_des_ede3_ecb(), NULL, \"ABCDEFGHABCDEFGHABCDEFGH\", NULL);"
                    },
                    {
                        "line_number": 83,
                        "content": "EVP_EncryptInit_ex(ctx_enc, EVP_des_ede3_ecb(), NULL, \"ABCDEFGH12345678XYZ!12#@\", NULL);"
                    },
                    {
                        "line_number": 92,
                        "content": "EVP_DecryptInit_ex(ctx_dec, EVP_des_ede3_ecb(), NULL, \"ABCDEFGH12345678XYZ!12#@\", NULL);"
                    }
                ],
                "severity": "High",
                "explanation": "3-key 3DES (~112-bit) is stronger than 1- or 2-key, but still legacy."
            },
            {
                "language": "Python",
                "filename": "3des.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/3des\\3des.py",
                "vulnerability": "3DES_1KEY",
                "lines": [
                    {
                        "line_number": 15,
                        "content": "cipher = DES3.new(b\"ABCDEFGHABCDEFGHABCDEFGH\", DES3.MODE_ECB)  # encrypt"
                    },
                    {
                        "line_number": 20,
                        "content": "decipher = DES3.new(b\"ABCDEFGHABCDEFGHABCDEFGH\", DES3.MODE_ECB)  # decrypt"
                    }
                ],
                "severity": "Very High",
                "explanation": "3DES with a single repeated 8-byte key is effectively DES."
            },
            {
                "language": "Python",
                "filename": "3des.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/3des\\3des.py",
                "vulnerability": "3DES_2KEY",
                "lines": [
                    {
                        "line_number": 29,
                        "content": "cipher = DES3.new(b\"ABCDEFGHIJKLMNOP\", DES3.MODE_ECB)  # encrypt"
                    },
                    {
                        "line_number": 34,
                        "content": "decipher = DES3.new(b\"ABCDEFGHIJKLMNOP\", DES3.MODE_ECB)  # decrypt"
                    }
                ],
                "severity": "High",
                "explanation": "3DES with 2 keys (~112-bit) is below modern recommendations."
            },
            {
                "language": "Python",
                "filename": "3des.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/3des\\3des.py",
                "vulnerability": "3DES_3KEY",
                "lines": [
                    {
                        "line_number": 15,
                        "content": "cipher = DES3.new(b\"ABCDEFGHABCDEFGHABCDEFGH\", DES3.MODE_ECB)  # encrypt"
                    },
                    {
                        "line_number": 20,
                        "content": "decipher = DES3.new(b\"ABCDEFGHABCDEFGHABCDEFGH\", DES3.MODE_ECB)  # decrypt"
                    },
                    {
                        "line_number": 44,
                        "content": "cipher = DES3.new(b\"ABCDEFGH12345678XYZ!12#@\", DES3.MODE_ECB)  # encrypt"
                    },
                    {
                        "line_number": 49,
                        "content": "decipher = DES3.new(b\"ABCDEFGH12345678XYZ!12#@\", DES3.MODE_ECB)  # decrypt"
                    }
                ],
                "severity": "High",
                "explanation": "3-key 3DES (~112-bit) is stronger than 1- or 2-key, but still legacy."
            },
            {
                "language": "Java",
                "filename": "test_3des_all.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/3des\\test_3des_all.java",
                "vulnerability": "DES",
                "lines": [
                    {
                        "line_number": 25,
                        "content": "Cipher cipherEnc = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    },
                    {
                        "line_number": 33,
                        "content": "Cipher cipherDec = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    },
                    {
                        "line_number": 43,
                        "content": "Cipher cipherEnc = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    },
                    {
                        "line_number": 51,
                        "content": "Cipher cipherDec = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    },
                    {
                        "line_number": 61,
                        "content": "Cipher cipherEnc = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    },
                    {
                        "line_number": 69,
                        "content": "Cipher cipherDec = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    }
                ],
                "severity": "Very High",
                "explanation": "DES is insecure due to its 56-bit key size, making it vulnerable to brute-force attacks."
            },
            {
                "language": "Java",
                "filename": "test_3des_all.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/3des\\test_3des_all.java",
                "vulnerability": "3DES_1KEY",
                "lines": [
                    {
                        "line_number": 27,
                        "content": "new SecretKeySpec(\"ABCDEFGHABCDEFGHABCDEFGH\".getBytes(\"UTF-8\"), \"DESede\"));"
                    },
                    {
                        "line_number": 35,
                        "content": "new SecretKeySpec(\"ABCDEFGHABCDEFGHABCDEFGH\".getBytes(\"UTF-8\"), \"DESede\"));"
                    }
                ],
                "severity": "Very High",
                "explanation": "3DES with a single repeated 8-byte key is effectively DES."
            },
            {
                "language": "Java",
                "filename": "test_3des_all.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/3des\\test_3des_all.java",
                "vulnerability": "3DES_2KEY",
                "lines": [
                    {
                        "line_number": 45,
                        "content": "new SecretKeySpec(\"ABCDEFGHIJKLMNOPABCDEFGH\".getBytes(\"UTF-8\"), \"DESede\"));"
                    },
                    {
                        "line_number": 53,
                        "content": "new SecretKeySpec(\"ABCDEFGHIJKLMNOPABCDEFGH\".getBytes(\"UTF-8\"), \"DESede\"));"
                    }
                ],
                "severity": "High",
                "explanation": "3DES with 2 keys (~112-bit) is below modern recommendations."
            },
            {
                "language": "Java",
                "filename": "test_3des_all.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/3des\\test_3des_all.java",
                "vulnerability": "3DES_3KEY",
                "lines": [
                    {
                        "line_number": 27,
                        "content": "new SecretKeySpec(\"ABCDEFGHABCDEFGHABCDEFGH\".getBytes(\"UTF-8\"), \"DESede\"));"
                    },
                    {
                        "line_number": 35,
                        "content": "new SecretKeySpec(\"ABCDEFGHABCDEFGHABCDEFGH\".getBytes(\"UTF-8\"), \"DESede\"));"
                    },
                    {
                        "line_number": 45,
                        "content": "new SecretKeySpec(\"ABCDEFGHIJKLMNOPABCDEFGH\".getBytes(\"UTF-8\"), \"DESede\"));"
                    },
                    {
                        "line_number": 53,
                        "content": "new SecretKeySpec(\"ABCDEFGHIJKLMNOPABCDEFGH\".getBytes(\"UTF-8\"), \"DESede\"));"
                    },
                    {
                        "line_number": 63,
                        "content": "new SecretKeySpec(\"ABCDEFGH12345678XYZ#12!@\".getBytes(\"UTF-8\"), \"DESede\"));"
                    },
                    {
                        "line_number": 71,
                        "content": "new SecretKeySpec(\"ABCDEFGH12345678XYZ#12!@\".getBytes(\"UTF-8\"), \"DESede\"));"
                    }
                ],
                "severity": "High",
                "explanation": "3-key 3DES (~112-bit) is stronger than 1- or 2-key, but still legacy."
            }
        ]
    },
    {
        "scan_id": 32,
        "date": "2024-12-25 22:06:37",
        "directory": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/3des",
        "files_scanned": {
            "Python": 1,
            "C": 1,
            "Java": 1
        },
        "vulnerable_files": {
            "Python": 3,
            "C": 3,
            "Java": 4
        },
        "vulnerabilities": [
            {
                "language": "C",
                "filename": "3des.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/3des\\3des.c",
                "vulnerability": "3DES_1KEY",
                "lines": [
                    {
                        "line_number": 25,
                        "content": "EVP_EncryptInit_ex(ctx_enc, EVP_des_ede3_ecb(), NULL, \"ABCDEFGHABCDEFGHABCDEFGH\", NULL);"
                    },
                    {
                        "line_number": 34,
                        "content": "EVP_DecryptInit_ex(ctx_dec, EVP_des_ede3_ecb(), NULL, \"ABCDEFGHABCDEFGHABCDEFGH\", NULL);"
                    }
                ],
                "severity": "Very High",
                "explanation": "3DES with one repeated 8-byte block (24 total) is effectively single-DES security."
            },
            {
                "language": "C",
                "filename": "3des.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/3des\\3des.c",
                "vulnerability": "3DES_2KEY",
                "lines": [
                    {
                        "line_number": 54,
                        "content": "EVP_EncryptInit_ex(ctx_enc, EVP_des_ede3_ecb(), NULL, \"ABCDEFGHIJKLMNOP\", NULL);"
                    },
                    {
                        "line_number": 63,
                        "content": "EVP_DecryptInit_ex(ctx_dec, EVP_des_ede3_ecb(), NULL, \"ABCDEFGHIJKLMNOP\", NULL);"
                    }
                ],
                "severity": "High",
                "explanation": "2-key 3DES in Java: 24 bytes but only 2 unique blocks (K1,K2,K1). ~112-bit security."
            },
            {
                "language": "C",
                "filename": "3des.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/3des\\3des.c",
                "vulnerability": "3DES_3KEY",
                "lines": [
                    {
                        "line_number": 25,
                        "content": "EVP_EncryptInit_ex(ctx_enc, EVP_des_ede3_ecb(), NULL, \"ABCDEFGHABCDEFGHABCDEFGH\", NULL);"
                    },
                    {
                        "line_number": 34,
                        "content": "EVP_DecryptInit_ex(ctx_dec, EVP_des_ede3_ecb(), NULL, \"ABCDEFGHABCDEFGHABCDEFGH\", NULL);"
                    },
                    {
                        "line_number": 83,
                        "content": "EVP_EncryptInit_ex(ctx_enc, EVP_des_ede3_ecb(), NULL, \"ABCDEFGH12345678XYZ!12#@\", NULL);"
                    },
                    {
                        "line_number": 92,
                        "content": "EVP_DecryptInit_ex(ctx_dec, EVP_des_ede3_ecb(), NULL, \"ABCDEFGH12345678XYZ!12#@\", NULL);"
                    }
                ],
                "severity": "High",
                "explanation": "3-key 3DES (~112-bit). Stronger than 1- or 2-key but still considered legacy."
            },
            {
                "language": "Python",
                "filename": "3des.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/3des\\3des.py",
                "vulnerability": "3DES_1KEY",
                "lines": [
                    {
                        "line_number": 15,
                        "content": "cipher = DES3.new(b\"ABCDEFGHABCDEFGHABCDEFGH\", DES3.MODE_ECB)  # encrypt"
                    },
                    {
                        "line_number": 20,
                        "content": "decipher = DES3.new(b\"ABCDEFGHABCDEFGHABCDEFGH\", DES3.MODE_ECB)  # decrypt"
                    }
                ],
                "severity": "Very High",
                "explanation": "3DES with one repeated 8-byte block (24 total) is effectively single-DES security."
            },
            {
                "language": "Python",
                "filename": "3des.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/3des\\3des.py",
                "vulnerability": "3DES_2KEY",
                "lines": [
                    {
                        "line_number": 29,
                        "content": "cipher = DES3.new(b\"ABCDEFGHIJKLMNOP\", DES3.MODE_ECB)  # encrypt"
                    },
                    {
                        "line_number": 34,
                        "content": "decipher = DES3.new(b\"ABCDEFGHIJKLMNOP\", DES3.MODE_ECB)  # decrypt"
                    }
                ],
                "severity": "High",
                "explanation": "2-key 3DES in Java: 24 bytes but only 2 unique blocks (K1,K2,K1). ~112-bit security."
            },
            {
                "language": "Python",
                "filename": "3des.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/3des\\3des.py",
                "vulnerability": "3DES_3KEY",
                "lines": [
                    {
                        "line_number": 15,
                        "content": "cipher = DES3.new(b\"ABCDEFGHABCDEFGHABCDEFGH\", DES3.MODE_ECB)  # encrypt"
                    },
                    {
                        "line_number": 20,
                        "content": "decipher = DES3.new(b\"ABCDEFGHABCDEFGHABCDEFGH\", DES3.MODE_ECB)  # decrypt"
                    },
                    {
                        "line_number": 44,
                        "content": "cipher = DES3.new(b\"ABCDEFGH12345678XYZ!12#@\", DES3.MODE_ECB)  # encrypt"
                    },
                    {
                        "line_number": 49,
                        "content": "decipher = DES3.new(b\"ABCDEFGH12345678XYZ!12#@\", DES3.MODE_ECB)  # decrypt"
                    }
                ],
                "severity": "High",
                "explanation": "3-key 3DES (~112-bit). Stronger than 1- or 2-key but still considered legacy."
            },
            {
                "language": "Java",
                "filename": "test_3des_all.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/3des\\test_3des_all.java",
                "vulnerability": "DES",
                "lines": [
                    {
                        "line_number": 25,
                        "content": "Cipher cipherEnc = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    },
                    {
                        "line_number": 33,
                        "content": "Cipher cipherDec = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    },
                    {
                        "line_number": 43,
                        "content": "Cipher cipherEnc = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    },
                    {
                        "line_number": 51,
                        "content": "Cipher cipherDec = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    },
                    {
                        "line_number": 61,
                        "content": "Cipher cipherEnc = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    },
                    {
                        "line_number": 69,
                        "content": "Cipher cipherDec = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    }
                ],
                "severity": "Very High",
                "explanation": "DES is insecure (56-bit key), vulnerable to brute force."
            },
            {
                "language": "Java",
                "filename": "test_3des_all.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/3des\\test_3des_all.java",
                "vulnerability": "3DES_1KEY",
                "lines": [
                    {
                        "line_number": 25,
                        "content": "Cipher cipherEnc = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    },
                    {
                        "line_number": 27,
                        "content": "new SecretKeySpec(\"ABCDEFGHABCDEFGHABCDEFGH\".getBytes(\"UTF-8\"), \"DESede\"));"
                    },
                    {
                        "line_number": 33,
                        "content": "Cipher cipherDec = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    },
                    {
                        "line_number": 35,
                        "content": "new SecretKeySpec(\"ABCDEFGHABCDEFGHABCDEFGH\".getBytes(\"UTF-8\"), \"DESede\"));"
                    },
                    {
                        "line_number": 43,
                        "content": "Cipher cipherEnc = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    },
                    {
                        "line_number": 51,
                        "content": "Cipher cipherDec = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    },
                    {
                        "line_number": 61,
                        "content": "Cipher cipherEnc = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    },
                    {
                        "line_number": 69,
                        "content": "Cipher cipherDec = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    }
                ],
                "severity": "Very High",
                "explanation": "3DES with one repeated 8-byte block (24 total) is effectively single-DES security."
            },
            {
                "language": "Java",
                "filename": "test_3des_all.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/3des\\test_3des_all.java",
                "vulnerability": "3DES_2KEY",
                "lines": [
                    {
                        "line_number": 25,
                        "content": "Cipher cipherEnc = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    },
                    {
                        "line_number": 33,
                        "content": "Cipher cipherDec = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    },
                    {
                        "line_number": 43,
                        "content": "Cipher cipherEnc = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    },
                    {
                        "line_number": 45,
                        "content": "new SecretKeySpec(\"ABCDEFGHIJKLMNOPABCDEFGH\".getBytes(\"UTF-8\"), \"DESede\"));"
                    },
                    {
                        "line_number": 51,
                        "content": "Cipher cipherDec = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    },
                    {
                        "line_number": 53,
                        "content": "new SecretKeySpec(\"ABCDEFGHIJKLMNOPABCDEFGH\".getBytes(\"UTF-8\"), \"DESede\"));"
                    },
                    {
                        "line_number": 61,
                        "content": "Cipher cipherEnc = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    },
                    {
                        "line_number": 69,
                        "content": "Cipher cipherDec = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    }
                ],
                "severity": "High",
                "explanation": "2-key 3DES in Java: 24 bytes but only 2 unique blocks (K1,K2,K1). ~112-bit security."
            },
            {
                "language": "Java",
                "filename": "test_3des_all.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/3des\\test_3des_all.java",
                "vulnerability": "3DES_3KEY",
                "lines": [
                    {
                        "line_number": 25,
                        "content": "Cipher cipherEnc = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    },
                    {
                        "line_number": 27,
                        "content": "new SecretKeySpec(\"ABCDEFGHABCDEFGHABCDEFGH\".getBytes(\"UTF-8\"), \"DESede\"));"
                    },
                    {
                        "line_number": 33,
                        "content": "Cipher cipherDec = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    },
                    {
                        "line_number": 35,
                        "content": "new SecretKeySpec(\"ABCDEFGHABCDEFGHABCDEFGH\".getBytes(\"UTF-8\"), \"DESede\"));"
                    },
                    {
                        "line_number": 43,
                        "content": "Cipher cipherEnc = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    },
                    {
                        "line_number": 45,
                        "content": "new SecretKeySpec(\"ABCDEFGHIJKLMNOPABCDEFGH\".getBytes(\"UTF-8\"), \"DESede\"));"
                    },
                    {
                        "line_number": 51,
                        "content": "Cipher cipherDec = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    },
                    {
                        "line_number": 53,
                        "content": "new SecretKeySpec(\"ABCDEFGHIJKLMNOPABCDEFGH\".getBytes(\"UTF-8\"), \"DESede\"));"
                    },
                    {
                        "line_number": 61,
                        "content": "Cipher cipherEnc = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    },
                    {
                        "line_number": 63,
                        "content": "new SecretKeySpec(\"ABCDEFGH12345678XYZ#12!@\".getBytes(\"UTF-8\"), \"DESede\"));"
                    },
                    {
                        "line_number": 69,
                        "content": "Cipher cipherDec = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    },
                    {
                        "line_number": 71,
                        "content": "new SecretKeySpec(\"ABCDEFGH12345678XYZ#12!@\".getBytes(\"UTF-8\"), \"DESede\"));"
                    }
                ],
                "severity": "High",
                "explanation": "3-key 3DES (~112-bit). Stronger than 1- or 2-key but still considered legacy."
            }
        ]
    },
    {
        "scan_id": 33,
        "date": "2024-12-25 22:08:50",
        "directory": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/3des",
        "files_scanned": {
            "Python": 1,
            "C": 1,
            "Java": 1
        },
        "vulnerable_files": {
            "Python": 3,
            "C": 3,
            "Java": 3
        },
        "vulnerabilities": [
            {
                "language": "C",
                "filename": "3des.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/3des\\3des.c",
                "vulnerability": "3DES_1KEY",
                "lines": [
                    {
                        "line_number": 25,
                        "content": "EVP_EncryptInit_ex(ctx_enc, EVP_des_ede3_ecb(), NULL, \"ABCDEFGHABCDEFGHABCDEFGH\", NULL);"
                    },
                    {
                        "line_number": 34,
                        "content": "EVP_DecryptInit_ex(ctx_dec, EVP_des_ede3_ecb(), NULL, \"ABCDEFGHABCDEFGHABCDEFGH\", NULL);"
                    }
                ],
                "severity": "Very High",
                "explanation": "3DES with one repeated 8-byte block (24 total) is effectively single-DES security."
            },
            {
                "language": "C",
                "filename": "3des.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/3des\\3des.c",
                "vulnerability": "3DES_2KEY",
                "lines": [
                    {
                        "line_number": 54,
                        "content": "EVP_EncryptInit_ex(ctx_enc, EVP_des_ede3_ecb(), NULL, \"ABCDEFGHIJKLMNOP\", NULL);"
                    },
                    {
                        "line_number": 63,
                        "content": "EVP_DecryptInit_ex(ctx_dec, EVP_des_ede3_ecb(), NULL, \"ABCDEFGHIJKLMNOP\", NULL);"
                    }
                ],
                "severity": "High",
                "explanation": "2-key 3DES in Java: 24 bytes but only 2 unique blocks (K1,K2,K1). ~112-bit security."
            },
            {
                "language": "C",
                "filename": "3des.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/3des\\3des.c",
                "vulnerability": "3DES_3KEY",
                "lines": [
                    {
                        "line_number": 25,
                        "content": "EVP_EncryptInit_ex(ctx_enc, EVP_des_ede3_ecb(), NULL, \"ABCDEFGHABCDEFGHABCDEFGH\", NULL);"
                    },
                    {
                        "line_number": 34,
                        "content": "EVP_DecryptInit_ex(ctx_dec, EVP_des_ede3_ecb(), NULL, \"ABCDEFGHABCDEFGHABCDEFGH\", NULL);"
                    },
                    {
                        "line_number": 83,
                        "content": "EVP_EncryptInit_ex(ctx_enc, EVP_des_ede3_ecb(), NULL, \"ABCDEFGH12345678XYZ!12#@\", NULL);"
                    },
                    {
                        "line_number": 92,
                        "content": "EVP_DecryptInit_ex(ctx_dec, EVP_des_ede3_ecb(), NULL, \"ABCDEFGH12345678XYZ!12#@\", NULL);"
                    }
                ],
                "severity": "High",
                "explanation": "3-key 3DES (~112-bit). Stronger than 1- or 2-key but still considered legacy."
            },
            {
                "language": "Python",
                "filename": "3des.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/3des\\3des.py",
                "vulnerability": "3DES_1KEY",
                "lines": [
                    {
                        "line_number": 15,
                        "content": "cipher = DES3.new(b\"ABCDEFGHABCDEFGHABCDEFGH\", DES3.MODE_ECB)  # encrypt"
                    },
                    {
                        "line_number": 20,
                        "content": "decipher = DES3.new(b\"ABCDEFGHABCDEFGHABCDEFGH\", DES3.MODE_ECB)  # decrypt"
                    }
                ],
                "severity": "Very High",
                "explanation": "3DES with one repeated 8-byte block (24 total) is effectively single-DES security."
            },
            {
                "language": "Python",
                "filename": "3des.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/3des\\3des.py",
                "vulnerability": "3DES_2KEY",
                "lines": [
                    {
                        "line_number": 29,
                        "content": "cipher = DES3.new(b\"ABCDEFGHIJKLMNOP\", DES3.MODE_ECB)  # encrypt"
                    },
                    {
                        "line_number": 34,
                        "content": "decipher = DES3.new(b\"ABCDEFGHIJKLMNOP\", DES3.MODE_ECB)  # decrypt"
                    }
                ],
                "severity": "High",
                "explanation": "2-key 3DES in Java: 24 bytes but only 2 unique blocks (K1,K2,K1). ~112-bit security."
            },
            {
                "language": "Python",
                "filename": "3des.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/3des\\3des.py",
                "vulnerability": "3DES_3KEY",
                "lines": [
                    {
                        "line_number": 15,
                        "content": "cipher = DES3.new(b\"ABCDEFGHABCDEFGHABCDEFGH\", DES3.MODE_ECB)  # encrypt"
                    },
                    {
                        "line_number": 20,
                        "content": "decipher = DES3.new(b\"ABCDEFGHABCDEFGHABCDEFGH\", DES3.MODE_ECB)  # decrypt"
                    },
                    {
                        "line_number": 44,
                        "content": "cipher = DES3.new(b\"ABCDEFGH12345678XYZ!12#@\", DES3.MODE_ECB)  # encrypt"
                    },
                    {
                        "line_number": 49,
                        "content": "decipher = DES3.new(b\"ABCDEFGH12345678XYZ!12#@\", DES3.MODE_ECB)  # decrypt"
                    }
                ],
                "severity": "High",
                "explanation": "3-key 3DES (~112-bit). Stronger than 1- or 2-key but still considered legacy."
            },
            {
                "language": "Java",
                "filename": "test_3des_all.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/3des\\test_3des_all.java",
                "vulnerability": "3DES_1KEY",
                "lines": [
                    {
                        "line_number": 25,
                        "content": "Cipher cipherEnc = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    },
                    {
                        "line_number": 27,
                        "content": "new SecretKeySpec(\"ABCDEFGHABCDEFGHABCDEFGH\".getBytes(\"UTF-8\"), \"DESede\"));"
                    },
                    {
                        "line_number": 33,
                        "content": "Cipher cipherDec = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    },
                    {
                        "line_number": 35,
                        "content": "new SecretKeySpec(\"ABCDEFGHABCDEFGHABCDEFGH\".getBytes(\"UTF-8\"), \"DESede\"));"
                    },
                    {
                        "line_number": 43,
                        "content": "Cipher cipherEnc = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    },
                    {
                        "line_number": 51,
                        "content": "Cipher cipherDec = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    },
                    {
                        "line_number": 61,
                        "content": "Cipher cipherEnc = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    },
                    {
                        "line_number": 69,
                        "content": "Cipher cipherDec = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    }
                ],
                "severity": "Very High",
                "explanation": "3DES with one repeated 8-byte block (24 total) is effectively single-DES security."
            },
            {
                "language": "Java",
                "filename": "test_3des_all.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/3des\\test_3des_all.java",
                "vulnerability": "3DES_2KEY",
                "lines": [
                    {
                        "line_number": 25,
                        "content": "Cipher cipherEnc = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    },
                    {
                        "line_number": 33,
                        "content": "Cipher cipherDec = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    },
                    {
                        "line_number": 43,
                        "content": "Cipher cipherEnc = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    },
                    {
                        "line_number": 45,
                        "content": "new SecretKeySpec(\"ABCDEFGHIJKLMNOPABCDEFGH\".getBytes(\"UTF-8\"), \"DESede\"));"
                    },
                    {
                        "line_number": 51,
                        "content": "Cipher cipherDec = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    },
                    {
                        "line_number": 53,
                        "content": "new SecretKeySpec(\"ABCDEFGHIJKLMNOPABCDEFGH\".getBytes(\"UTF-8\"), \"DESede\"));"
                    },
                    {
                        "line_number": 61,
                        "content": "Cipher cipherEnc = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    },
                    {
                        "line_number": 69,
                        "content": "Cipher cipherDec = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    }
                ],
                "severity": "High",
                "explanation": "2-key 3DES in Java: 24 bytes but only 2 unique blocks (K1,K2,K1). ~112-bit security."
            },
            {
                "language": "Java",
                "filename": "test_3des_all.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/3des\\test_3des_all.java",
                "vulnerability": "3DES_3KEY",
                "lines": [
                    {
                        "line_number": 25,
                        "content": "Cipher cipherEnc = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    },
                    {
                        "line_number": 27,
                        "content": "new SecretKeySpec(\"ABCDEFGHABCDEFGHABCDEFGH\".getBytes(\"UTF-8\"), \"DESede\"));"
                    },
                    {
                        "line_number": 33,
                        "content": "Cipher cipherDec = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    },
                    {
                        "line_number": 35,
                        "content": "new SecretKeySpec(\"ABCDEFGHABCDEFGHABCDEFGH\".getBytes(\"UTF-8\"), \"DESede\"));"
                    },
                    {
                        "line_number": 43,
                        "content": "Cipher cipherEnc = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    },
                    {
                        "line_number": 45,
                        "content": "new SecretKeySpec(\"ABCDEFGHIJKLMNOPABCDEFGH\".getBytes(\"UTF-8\"), \"DESede\"));"
                    },
                    {
                        "line_number": 51,
                        "content": "Cipher cipherDec = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    },
                    {
                        "line_number": 53,
                        "content": "new SecretKeySpec(\"ABCDEFGHIJKLMNOPABCDEFGH\".getBytes(\"UTF-8\"), \"DESede\"));"
                    },
                    {
                        "line_number": 61,
                        "content": "Cipher cipherEnc = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    },
                    {
                        "line_number": 63,
                        "content": "new SecretKeySpec(\"ABCDEFGH12345678XYZ#12!@\".getBytes(\"UTF-8\"), \"DESede\"));"
                    },
                    {
                        "line_number": 69,
                        "content": "Cipher cipherDec = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    },
                    {
                        "line_number": 71,
                        "content": "new SecretKeySpec(\"ABCDEFGH12345678XYZ#12!@\".getBytes(\"UTF-8\"), \"DESede\"));"
                    }
                ],
                "severity": "High",
                "explanation": "3-key 3DES (~112-bit). Stronger than 1- or 2-key but still considered legacy."
            }
        ]
    },
    {
        "scan_id": 34,
        "date": "2024-12-26 20:44:29",
        "directory": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/aes128",
        "files_scanned": {
            "Python": 1,
            "C": 1,
            "Java": 1
        },
        "vulnerable_files": {
            "Python": 1,
            "C": 1,
            "Java": 2
        },
        "vulnerabilities": [
            {
                "language": "C",
                "filename": "aes128.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/aes128\\aes128.c",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 24,
                        "content": "const EVP_CIPHER *cipher = EVP_aes_128_ecb(); // triggers AES-128 pattern"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure under classical conditions but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "aes128.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/aes128\\aes128.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 12,
                        "content": "cipher = AES.new(b\"1234567890ABCDEF\", AES.MODE_ECB)"
                    },
                    {
                        "line_number": 17,
                        "content": "decipher = AES.new(b\"1234567890ABCDEF\", AES.MODE_ECB)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure under classical conditions but not quantum-safe."
            },
            {
                "language": "Java",
                "filename": "AES128Example.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/aes128\\AES128Example.java",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 8,
                        "content": "SecretKeySpec aesKey = new SecretKeySpec(\"1234567890abcdef\".getBytes(), \"AES\");"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure under classical conditions but not quantum-safe."
            },
            {
                "language": "Java",
                "filename": "AES128Example.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/aes128\\AES128Example.java",
                "vulnerability": "ECB_Mode",
                "lines": [
                    {
                        "line_number": 9,
                        "content": "Cipher cipher = Cipher.getInstance(\"AES/ECB/PKCS5Padding\");"
                    }
                ],
                "severity": "High",
                "explanation": "ECB mode leaks plaintext patterns."
            }
        ]
    },
    {
        "scan_id": 35,
        "date": "2024-12-26 20:44:43",
        "directory": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts",
        "files_scanned": {
            "Python": 20,
            "C": 14,
            "Java": 14
        },
        "vulnerable_files": {
            "Python": 17,
            "C": 15,
            "Java": 23
        },
        "vulnerabilities": [
            {
                "language": "Python",
                "filename": "a.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\a.py",
                "vulnerability": "DES",
                "lines": [
                    {
                        "line_number": 1,
                        "content": "from Crypto.Cipher import DES"
                    },
                    {
                        "line_number": 10,
                        "content": "cipher = DES.new(key, DES.MODE_ECB)"
                    }
                ],
                "severity": "Very High",
                "explanation": "DES is insecure (56-bit key), vulnerable to brute force."
            },
            {
                "language": "Python",
                "filename": "c.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\c.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 8,
                        "content": "hash1 = hashlib.md5(data1).hexdigest()"
                    },
                    {
                        "line_number": 9,
                        "content": "hash2 = hashlib.md5(data2).hexdigest()"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "e.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\e.py",
                "vulnerability": "SHA-1",
                "lines": [
                    {
                        "line_number": 8,
                        "content": "hash1 = hashlib.sha1(data1).hexdigest()"
                    },
                    {
                        "line_number": 9,
                        "content": "hash2 = hashlib.sha1(data2).hexdigest()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collisions."
            },
            {
                "language": "C",
                "filename": "3des.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\3des\\3des.c",
                "vulnerability": "3DES_1KEY",
                "lines": [
                    {
                        "line_number": 25,
                        "content": "EVP_EncryptInit_ex(ctx_enc, EVP_des_ede3_ecb(), NULL, \"ABCDEFGHABCDEFGHABCDEFGH\", NULL);"
                    },
                    {
                        "line_number": 34,
                        "content": "EVP_DecryptInit_ex(ctx_dec, EVP_des_ede3_ecb(), NULL, \"ABCDEFGHABCDEFGHABCDEFGH\", NULL);"
                    }
                ],
                "severity": "Very High",
                "explanation": "3DES with one repeated 8-byte block (24 total) is effectively single-DES security."
            },
            {
                "language": "C",
                "filename": "3des.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\3des\\3des.c",
                "vulnerability": "3DES_2KEY",
                "lines": [
                    {
                        "line_number": 54,
                        "content": "EVP_EncryptInit_ex(ctx_enc, EVP_des_ede3_ecb(), NULL, \"ABCDEFGHIJKLMNOP\", NULL);"
                    },
                    {
                        "line_number": 63,
                        "content": "EVP_DecryptInit_ex(ctx_dec, EVP_des_ede3_ecb(), NULL, \"ABCDEFGHIJKLMNOP\", NULL);"
                    }
                ],
                "severity": "High",
                "explanation": "2-key 3DES in Java: 24 bytes but only 2 unique blocks (K1,K2,K1). ~112-bit security."
            },
            {
                "language": "C",
                "filename": "3des.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\3des\\3des.c",
                "vulnerability": "3DES_3KEY",
                "lines": [
                    {
                        "line_number": 25,
                        "content": "EVP_EncryptInit_ex(ctx_enc, EVP_des_ede3_ecb(), NULL, \"ABCDEFGHABCDEFGHABCDEFGH\", NULL);"
                    },
                    {
                        "line_number": 34,
                        "content": "EVP_DecryptInit_ex(ctx_dec, EVP_des_ede3_ecb(), NULL, \"ABCDEFGHABCDEFGHABCDEFGH\", NULL);"
                    },
                    {
                        "line_number": 83,
                        "content": "EVP_EncryptInit_ex(ctx_enc, EVP_des_ede3_ecb(), NULL, \"ABCDEFGH12345678XYZ!12#@\", NULL);"
                    },
                    {
                        "line_number": 92,
                        "content": "EVP_DecryptInit_ex(ctx_dec, EVP_des_ede3_ecb(), NULL, \"ABCDEFGH12345678XYZ!12#@\", NULL);"
                    }
                ],
                "severity": "High",
                "explanation": "3-key 3DES (~112-bit). Stronger than 1- or 2-key but still considered legacy."
            },
            {
                "language": "Python",
                "filename": "3des.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\3des\\3des.py",
                "vulnerability": "3DES_1KEY",
                "lines": [
                    {
                        "line_number": 15,
                        "content": "cipher = DES3.new(b\"ABCDEFGHABCDEFGHABCDEFGH\", DES3.MODE_ECB)  # encrypt"
                    },
                    {
                        "line_number": 20,
                        "content": "decipher = DES3.new(b\"ABCDEFGHABCDEFGHABCDEFGH\", DES3.MODE_ECB)  # decrypt"
                    }
                ],
                "severity": "Very High",
                "explanation": "3DES with one repeated 8-byte block (24 total) is effectively single-DES security."
            },
            {
                "language": "Python",
                "filename": "3des.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\3des\\3des.py",
                "vulnerability": "3DES_2KEY",
                "lines": [
                    {
                        "line_number": 29,
                        "content": "cipher = DES3.new(b\"ABCDEFGHIJKLMNOP\", DES3.MODE_ECB)  # encrypt"
                    },
                    {
                        "line_number": 34,
                        "content": "decipher = DES3.new(b\"ABCDEFGHIJKLMNOP\", DES3.MODE_ECB)  # decrypt"
                    }
                ],
                "severity": "High",
                "explanation": "2-key 3DES in Java: 24 bytes but only 2 unique blocks (K1,K2,K1). ~112-bit security."
            },
            {
                "language": "Python",
                "filename": "3des.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\3des\\3des.py",
                "vulnerability": "3DES_3KEY",
                "lines": [
                    {
                        "line_number": 15,
                        "content": "cipher = DES3.new(b\"ABCDEFGHABCDEFGHABCDEFGH\", DES3.MODE_ECB)  # encrypt"
                    },
                    {
                        "line_number": 20,
                        "content": "decipher = DES3.new(b\"ABCDEFGHABCDEFGHABCDEFGH\", DES3.MODE_ECB)  # decrypt"
                    },
                    {
                        "line_number": 44,
                        "content": "cipher = DES3.new(b\"ABCDEFGH12345678XYZ!12#@\", DES3.MODE_ECB)  # encrypt"
                    },
                    {
                        "line_number": 49,
                        "content": "decipher = DES3.new(b\"ABCDEFGH12345678XYZ!12#@\", DES3.MODE_ECB)  # decrypt"
                    }
                ],
                "severity": "High",
                "explanation": "3-key 3DES (~112-bit). Stronger than 1- or 2-key but still considered legacy."
            },
            {
                "language": "Java",
                "filename": "test_3des_all.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\3des\\test_3des_all.java",
                "vulnerability": "3DES_1KEY",
                "lines": [
                    {
                        "line_number": 25,
                        "content": "Cipher cipherEnc = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    },
                    {
                        "line_number": 27,
                        "content": "new SecretKeySpec(\"ABCDEFGHABCDEFGHABCDEFGH\".getBytes(\"UTF-8\"), \"DESede\"));"
                    },
                    {
                        "line_number": 33,
                        "content": "Cipher cipherDec = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    },
                    {
                        "line_number": 35,
                        "content": "new SecretKeySpec(\"ABCDEFGHABCDEFGHABCDEFGH\".getBytes(\"UTF-8\"), \"DESede\"));"
                    },
                    {
                        "line_number": 43,
                        "content": "Cipher cipherEnc = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    },
                    {
                        "line_number": 51,
                        "content": "Cipher cipherDec = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    },
                    {
                        "line_number": 61,
                        "content": "Cipher cipherEnc = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    },
                    {
                        "line_number": 69,
                        "content": "Cipher cipherDec = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    }
                ],
                "severity": "Very High",
                "explanation": "3DES with one repeated 8-byte block (24 total) is effectively single-DES security."
            },
            {
                "language": "Java",
                "filename": "test_3des_all.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\3des\\test_3des_all.java",
                "vulnerability": "3DES_2KEY",
                "lines": [
                    {
                        "line_number": 25,
                        "content": "Cipher cipherEnc = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    },
                    {
                        "line_number": 33,
                        "content": "Cipher cipherDec = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    },
                    {
                        "line_number": 43,
                        "content": "Cipher cipherEnc = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    },
                    {
                        "line_number": 45,
                        "content": "new SecretKeySpec(\"ABCDEFGHIJKLMNOPABCDEFGH\".getBytes(\"UTF-8\"), \"DESede\"));"
                    },
                    {
                        "line_number": 51,
                        "content": "Cipher cipherDec = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    },
                    {
                        "line_number": 53,
                        "content": "new SecretKeySpec(\"ABCDEFGHIJKLMNOPABCDEFGH\".getBytes(\"UTF-8\"), \"DESede\"));"
                    },
                    {
                        "line_number": 61,
                        "content": "Cipher cipherEnc = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    },
                    {
                        "line_number": 69,
                        "content": "Cipher cipherDec = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    }
                ],
                "severity": "High",
                "explanation": "2-key 3DES in Java: 24 bytes but only 2 unique blocks (K1,K2,K1). ~112-bit security."
            },
            {
                "language": "Java",
                "filename": "test_3des_all.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\3des\\test_3des_all.java",
                "vulnerability": "3DES_3KEY",
                "lines": [
                    {
                        "line_number": 25,
                        "content": "Cipher cipherEnc = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    },
                    {
                        "line_number": 27,
                        "content": "new SecretKeySpec(\"ABCDEFGHABCDEFGHABCDEFGH\".getBytes(\"UTF-8\"), \"DESede\"));"
                    },
                    {
                        "line_number": 33,
                        "content": "Cipher cipherDec = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    },
                    {
                        "line_number": 35,
                        "content": "new SecretKeySpec(\"ABCDEFGHABCDEFGHABCDEFGH\".getBytes(\"UTF-8\"), \"DESede\"));"
                    },
                    {
                        "line_number": 43,
                        "content": "Cipher cipherEnc = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    },
                    {
                        "line_number": 45,
                        "content": "new SecretKeySpec(\"ABCDEFGHIJKLMNOPABCDEFGH\".getBytes(\"UTF-8\"), \"DESede\"));"
                    },
                    {
                        "line_number": 51,
                        "content": "Cipher cipherDec = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    },
                    {
                        "line_number": 53,
                        "content": "new SecretKeySpec(\"ABCDEFGHIJKLMNOPABCDEFGH\".getBytes(\"UTF-8\"), \"DESede\"));"
                    },
                    {
                        "line_number": 61,
                        "content": "Cipher cipherEnc = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    },
                    {
                        "line_number": 63,
                        "content": "new SecretKeySpec(\"ABCDEFGH12345678XYZ#12!@\".getBytes(\"UTF-8\"), \"DESede\"));"
                    },
                    {
                        "line_number": 69,
                        "content": "Cipher cipherDec = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    },
                    {
                        "line_number": 71,
                        "content": "new SecretKeySpec(\"ABCDEFGH12345678XYZ#12!@\".getBytes(\"UTF-8\"), \"DESede\"));"
                    }
                ],
                "severity": "High",
                "explanation": "3-key 3DES (~112-bit). Stronger than 1- or 2-key but still considered legacy."
            },
            {
                "language": "C",
                "filename": "aes128.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\aes128\\aes128.c",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 24,
                        "content": "const EVP_CIPHER *cipher = EVP_aes_128_ecb(); // triggers AES-128 pattern"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure under classical conditions but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "aes128.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\aes128\\aes128.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 12,
                        "content": "cipher = AES.new(b\"1234567890ABCDEF\", AES.MODE_ECB)"
                    },
                    {
                        "line_number": 17,
                        "content": "decipher = AES.new(b\"1234567890ABCDEF\", AES.MODE_ECB)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure under classical conditions but not quantum-safe."
            },
            {
                "language": "Java",
                "filename": "AES128Example.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\aes128\\AES128Example.java",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 8,
                        "content": "SecretKeySpec aesKey = new SecretKeySpec(\"1234567890abcdef\".getBytes(), \"AES\");"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure under classical conditions but not quantum-safe."
            },
            {
                "language": "Java",
                "filename": "AES128Example.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\aes128\\AES128Example.java",
                "vulnerability": "ECB_Mode",
                "lines": [
                    {
                        "line_number": 9,
                        "content": "Cipher cipher = Cipher.getInstance(\"AES/ECB/PKCS5Padding\");"
                    }
                ],
                "severity": "High",
                "explanation": "ECB mode leaks plaintext patterns."
            },
            {
                "language": "C",
                "filename": "aes192.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\aes192\\aes192.c",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 23,
                        "content": "const EVP_CIPHER *cipher = EVP_aes_192_ecb(); // triggers AES-192 pattern"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 offers slightly better security than AES-128 but is still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "aes192.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\aes192\\aes192.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 13,
                        "content": "cipher = AES.new(b\"1234567890ABCDEF12345678\", AES.MODE_ECB)"
                    },
                    {
                        "line_number": 18,
                        "content": "decipher = AES.new(b\"1234567890ABCDEF12345678\", AES.MODE_ECB)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 offers slightly better security than AES-128 but is still vulnerable to quantum attacks."
            },
            {
                "language": "Java",
                "filename": "AES192Example.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\aes192\\AES192Example.java",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 9,
                        "content": "SecretKeySpec aesKey = new SecretKeySpec( \"123456789012345678901234\".getBytes(), \"AES\");"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 offers slightly better security than AES-128 but is still vulnerable to quantum attacks."
            },
            {
                "language": "Java",
                "filename": "AES192Example.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\aes192\\AES192Example.java",
                "vulnerability": "ECB_Mode",
                "lines": [
                    {
                        "line_number": 10,
                        "content": "Cipher cipher = Cipher.getInstance(\"AES/ECB/PKCS5Padding\");"
                    }
                ],
                "severity": "High",
                "explanation": "ECB mode leaks plaintext patterns."
            },
            {
                "language": "C",
                "filename": "blowfish.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\blowfish\\blowfish.c",
                "vulnerability": "Blowfish_Short_Key",
                "lines": [
                    {
                        "line_number": 11,
                        "content": "BF_set_key(&bf_key, 8, key);  // Setting a short key"
                    }
                ],
                "severity": "High",
                "explanation": "Short key sizes are inadequate for modern security standards."
            },
            {
                "language": "Python",
                "filename": "blowfish.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\blowfish\\blowfish.py",
                "vulnerability": "Blowfish_Short_Key",
                "lines": [
                    {
                        "line_number": 1,
                        "content": "from Crypto.Cipher import Blowfish"
                    }
                ],
                "severity": "High",
                "explanation": "Short key sizes are inadequate for modern security standards."
            },
            {
                "language": "Java",
                "filename": "BlowfishShortKeyTest.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\blowfish\\BlowfishShortKeyTest.java",
                "vulnerability": "Blowfish_Short_Key",
                "lines": [
                    {
                        "line_number": 9,
                        "content": "SecretKey blowfishKey = new SecretKeySpec(keyBytes, \"Blowfish\");"
                    },
                    {
                        "line_number": 10,
                        "content": "Cipher cipher = Cipher.getInstance(\"Blowfish/ECB/PKCS5Padding\");"
                    }
                ],
                "severity": "High",
                "explanation": "Short key sizes are inadequate for modern security standards."
            },
            {
                "language": "Java",
                "filename": "CBCStaticIVTest.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\cbc_mode\\CBCStaticIVTest.java",
                "vulnerability": "DES",
                "lines": [
                    {
                        "line_number": 22,
                        "content": "SecretKey desKey = new javax.crypto.spec.SecretKeySpec(\"8bytekey\".getBytes(), \"DES\");"
                    },
                    {
                        "line_number": 25,
                        "content": "Cipher desCipher = Cipher.getInstance(\"DES/CBC/PKCS5Padding\");"
                    }
                ],
                "severity": "Very High",
                "explanation": "DES is insecure (56-bit key), vulnerable to brute force."
            },
            {
                "language": "Java",
                "filename": "CBCStaticIVTest.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\cbc_mode\\CBCStaticIVTest.java",
                "vulnerability": "CBC_Static_IV",
                "lines": [
                    {
                        "line_number": 16,
                        "content": "Cipher aesCipher = Cipher.getInstance(\"AES/CBC/PKCS5Padding\");"
                    },
                    {
                        "line_number": 25,
                        "content": "Cipher desCipher = Cipher.getInstance(\"DES/CBC/PKCS5Padding\");"
                    }
                ],
                "severity": "High",
                "explanation": "Static IVs in CBC mode weaken security and allow chosen-plaintext attacks."
            },
            {
                "language": "C",
                "filename": "cbc_static_iv.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\cbc_mode\\cbc_static_iv.c",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 12,
                        "content": "EVP_EncryptInit_ex(ctx, EVP_aes_128_cbc(), NULL, key, iv);  // Static IV used here"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure under classical conditions but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "cbc_static_iv.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\cbc_mode\\cbc_static_iv.py",
                "vulnerability": "DES",
                "lines": [
                    {
                        "line_number": 14,
                        "content": "cipher = DES.new(key, DES.MODE_CBC, iv)"
                    }
                ],
                "severity": "Very High",
                "explanation": "DES is insecure (56-bit key), vulnerable to brute force."
            },
            {
                "language": "C",
                "filename": "des.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\des\\des.c",
                "vulnerability": "DES",
                "lines": [
                    {
                        "line_number": 12,
                        "content": "DES_ecb_encrypt(&input, &output, &key_schedule, DES_ENCRYPT);"
                    },
                    {
                        "line_number": 15,
                        "content": "DES_ecb_encrypt(&output, &input, &key_schedule, DES_DECRYPT);"
                    }
                ],
                "severity": "Very High",
                "explanation": "DES is insecure (56-bit key), vulnerable to brute force."
            },
            {
                "language": "Python",
                "filename": "des.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\des\\des.py",
                "vulnerability": "DES",
                "lines": [
                    {
                        "line_number": 1,
                        "content": "from Crypto.Cipher import DES"
                    },
                    {
                        "line_number": 6,
                        "content": "cipher = DES.new(key, DES.MODE_ECB)"
                    }
                ],
                "severity": "Very High",
                "explanation": "DES is insecure (56-bit key), vulnerable to brute force."
            },
            {
                "language": "Java",
                "filename": "DESExample.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\des\\DESExample.java",
                "vulnerability": "DES",
                "lines": [
                    {
                        "line_number": 10,
                        "content": "Cipher cipher = Cipher.getInstance(\"DES/ECB/PKCS5Padding\");"
                    }
                ],
                "severity": "Very High",
                "explanation": "DES is insecure (56-bit key), vulnerable to brute force."
            },
            {
                "language": "Java",
                "filename": "DESExample.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\des\\DESExample.java",
                "vulnerability": "ECB_Mode",
                "lines": [
                    {
                        "line_number": 10,
                        "content": "Cipher cipher = Cipher.getInstance(\"DES/ECB/PKCS5Padding\");"
                    }
                ],
                "severity": "High",
                "explanation": "ECB mode leaks plaintext patterns."
            },
            {
                "language": "Java",
                "filename": "DHKETest.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\dh_ke\\DHKETest.java",
                "vulnerability": "DH_KE_Weak_Parameters",
                "lines": [
                    {
                        "line_number": 6,
                        "content": "KeyPairGenerator keyPairGenWeak = KeyPairGenerator.getInstance(\"DH\");"
                    },
                    {
                        "line_number": 12,
                        "content": "KeyPairGenerator keyPairGenQuantum = KeyPairGenerator.getInstance(\"DH\");"
                    }
                ],
                "severity": "High",
                "explanation": "Small modulus sizes (<2048 bits) in DH are easily attacked."
            },
            {
                "language": "Java",
                "filename": "DHKETest.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\dh_ke\\DHKETest.java",
                "vulnerability": "DH_KE_Quantum_Threat",
                "lines": [
                    {
                        "line_number": 6,
                        "content": "KeyPairGenerator keyPairGenWeak = KeyPairGenerator.getInstance(\"DH\");"
                    },
                    {
                        "line_number": 12,
                        "content": "KeyPairGenerator keyPairGenQuantum = KeyPairGenerator.getInstance(\"DH\");"
                    }
                ],
                "severity": "Very High",
                "explanation": "DH is not secure against quantum computers."
            },
            {
                "language": "C",
                "filename": "dh_ke.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\dh_ke\\dh_ke.c",
                "vulnerability": "DH_KE_Quantum_Threat",
                "lines": [
                    {
                        "line_number": 7,
                        "content": "DH_generate_parameters_ex(dh, prime_length, DH_GENERATOR_2, NULL);"
                    },
                    {
                        "line_number": 15,
                        "content": "DH_generate_parameters_ex(dh, prime_length, DH_GENERATOR_2, NULL);"
                    }
                ],
                "severity": "Very High",
                "explanation": "DH is not secure against quantum computers."
            },
            {
                "language": "C",
                "filename": "ecb.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\ecb_mode\\ecb.c",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 11,
                        "content": "EVP_EncryptInit_ex(ctx, EVP_aes_128_ecb(), NULL, key, NULL);"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure under classical conditions but not quantum-safe."
            },
            {
                "language": "C",
                "filename": "ecb.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\ecb_mode\\ecb.c",
                "vulnerability": "ECB_Mode",
                "lines": [
                    {
                        "line_number": 11,
                        "content": "EVP_EncryptInit_ex(ctx, EVP_aes_128_ecb(), NULL, key, NULL);"
                    },
                    {
                        "line_number": 26,
                        "content": "EVP_EncryptInit_ex(ctx, EVP_des_ecb(), NULL, key, NULL);"
                    }
                ],
                "severity": "High",
                "explanation": "ECB mode leaks plaintext patterns."
            },
            {
                "language": "Python",
                "filename": "ecb.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\ecb_mode\\ecb.py",
                "vulnerability": "DES",
                "lines": [
                    {
                        "line_number": 9,
                        "content": "des_ecb = DES.new(b\"8bytekey\", DES.MODE_ECB)"
                    }
                ],
                "severity": "Very High",
                "explanation": "DES is insecure (56-bit key), vulnerable to brute force."
            },
            {
                "language": "Python",
                "filename": "ecb.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\ecb_mode\\ecb.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 4,
                        "content": "aes_ecb = AES.new(b\"Sixteen byte key\", AES.MODE_ECB)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure under classical conditions but not quantum-safe."
            },
            {
                "language": "Java",
                "filename": "ECBModeTest.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\ecb_mode\\ECBModeTest.java",
                "vulnerability": "DES",
                "lines": [
                    {
                        "line_number": 18,
                        "content": "SecretKey desKey = new SecretKeySpec(\"8bytekey\".getBytes(), \"DES\");"
                    },
                    {
                        "line_number": 19,
                        "content": "Cipher desCipher = Cipher.getInstance(\"DES/ECB/PKCS5Padding\");"
                    }
                ],
                "severity": "Very High",
                "explanation": "DES is insecure (56-bit key), vulnerable to brute force."
            },
            {
                "language": "Java",
                "filename": "ECBModeTest.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\ecb_mode\\ECBModeTest.java",
                "vulnerability": "ECB_Mode",
                "lines": [
                    {
                        "line_number": 12,
                        "content": "Cipher aesCipher = Cipher.getInstance(\"AES/ECB/PKCS5Padding\");"
                    },
                    {
                        "line_number": 19,
                        "content": "Cipher desCipher = Cipher.getInstance(\"DES/ECB/PKCS5Padding\");"
                    }
                ],
                "severity": "High",
                "explanation": "ECB mode leaks plaintext patterns."
            },
            {
                "language": "C",
                "filename": "ecdh.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\ecdh\\ecdh.c",
                "vulnerability": "ECDH",
                "lines": [
                    {
                        "line_number": 7,
                        "content": "EC_KEY *key1 = EC_KEY_new_by_curve_name(NID_X9_62_prime256v1);"
                    },
                    {
                        "line_number": 8,
                        "content": "EC_KEY *key2 = EC_KEY_new_by_curve_name(NID_X9_62_prime256v1);"
                    }
                ],
                "severity": "Low",
                "explanation": "ECDH is not quantum-safe; quantum computers can break its security."
            },
            {
                "language": "Java",
                "filename": "ecdh.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\ecdh\\ecdh.java",
                "vulnerability": "ECDH",
                "lines": [
                    {
                        "line_number": 15,
                        "content": "KeyAgreement ka = KeyAgreement.getInstance(\"ECDH\");"
                    }
                ],
                "severity": "Low",
                "explanation": "ECDH is not quantum-safe; quantum computers can break its security."
            },
            {
                "language": "Python",
                "filename": "ecdh.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\ecdh\\ecdh.py",
                "vulnerability": "ECDH",
                "lines": [
                    {
                        "line_number": 1,
                        "content": "from Crypto.Protocol.KDF import ECDH"
                    },
                    {
                        "line_number": 7,
                        "content": "ecdh = ECDH()"
                    }
                ],
                "severity": "Low",
                "explanation": "ECDH is not quantum-safe; quantum computers can break its security."
            },
            {
                "language": "C",
                "filename": "md5.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\md5\\md5.c",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 9,
                        "content": "MD5_Init(&ctx);                       // Initialize MD5"
                    },
                    {
                        "line_number": 10,
                        "content": "MD5_Update(&ctx, input, strlen(input)); // Update with data"
                    },
                    {
                        "line_number": 11,
                        "content": "MD5_Final(digest, &ctx);              // Finalize hash"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Java",
                "filename": "md5.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\md5\\md5.java",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 8,
                        "content": "MessageDigest md5 = MessageDigest.getInstance(\"MD5\");"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Python",
                "filename": "md5.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\md5\\md5.py",
                "vulnerability": "MD5",
                "lines": [
                    {
                        "line_number": 4,
                        "content": "md5_hash = hashlib.md5(b\"test\").hexdigest()"
                    }
                ],
                "severity": "Very High",
                "explanation": "MD5 is broken due to collision vulnerabilities."
            },
            {
                "language": "Java",
                "filename": "RC4Example.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\rc4\\RC4Example.java",
                "vulnerability": "RC4",
                "lines": [
                    {
                        "line_number": 11,
                        "content": "Cipher cipher = Cipher.getInstance(\"RC4\");"
                    }
                ],
                "severity": "Very High",
                "explanation": "RC4 is insecure due to biases in its keystream and vulnerable to multiple attacks."
            },
            {
                "language": "Java",
                "filename": "RSAExample.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\rsa\\RSAExample.java",
                "vulnerability": "RSA_512_1024",
                "lines": [
                    {
                        "line_number": 5,
                        "content": "KeyPairGenerator keyPairGen = KeyPairGenerator.getInstance(\"RSA\");"
                    }
                ],
                "severity": "High",
                "explanation": "RSA with short keys (512, 1024 bits) is easily breakable."
            },
            {
                "language": "Java",
                "filename": "RSAExample.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\rsa\\RSAExample.java",
                "vulnerability": "RSA_2048_3072",
                "lines": [
                    {
                        "line_number": 5,
                        "content": "KeyPairGenerator keyPairGen = KeyPairGenerator.getInstance(\"RSA\");"
                    }
                ],
                "severity": "Very Low",
                "explanation": "RSA with 2048 or 3072 bits is secure against classical attacks but not quantum-resistant."
            },
            {
                "language": "C",
                "filename": "sha-1.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\sha-1\\sha-1.c",
                "vulnerability": "SHA-1",
                "lines": [
                    {
                        "line_number": 9,
                        "content": "SHA1_Init(&ctx);                      // Initialize SHA-1"
                    },
                    {
                        "line_number": 10,
                        "content": "SHA1_Update(&ctx, input, strlen(input)); // Update with data"
                    },
                    {
                        "line_number": 11,
                        "content": "SHA1_Final(digest, &ctx);             // Finalize hash"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collisions."
            },
            {
                "language": "Python",
                "filename": "sha-1.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\sha-1\\sha-1.py",
                "vulnerability": "SHA-1",
                "lines": [
                    {
                        "line_number": 4,
                        "content": "sha1_hash = hashlib.sha1(b\"test\").hexdigest()"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collisions."
            },
            {
                "language": "Java",
                "filename": "SHA1Test.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\sha-1\\SHA1Test.java",
                "vulnerability": "SHA-1",
                "lines": [
                    {
                        "line_number": 8,
                        "content": "MessageDigest sha1 = MessageDigest.getInstance(\"SHA-1\");"
                    }
                ],
                "severity": "High",
                "explanation": "SHA-1 is obsolete and vulnerable to collisions."
            },
            {
                "language": "C",
                "filename": "sha-256.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\sha-256\\sha-256.c",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 9,
                        "content": "SHA256_Init(&ctx);                    // Initialize SHA-256"
                    },
                    {
                        "line_number": 10,
                        "content": "SHA256_Update(&ctx, input, strlen(input)); // Update with data"
                    },
                    {
                        "line_number": 11,
                        "content": "SHA256_Final(digest, &ctx);           // Finalize hash"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Python",
                "filename": "sha-256.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\sha-256\\sha-256.py",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 4,
                        "content": "sha256_hash = hashlib.sha256(b\"test\").hexdigest()"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            },
            {
                "language": "Java",
                "filename": "SHA256Test.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts\\sha-256\\SHA256Test.java",
                "vulnerability": "SHA-256",
                "lines": [
                    {
                        "line_number": 8,
                        "content": "MessageDigest sha256 = MessageDigest.getInstance(\"SHA-256\");"
                    }
                ],
                "severity": "Very Low",
                "explanation": "SHA-256 is secure classically, but less so under quantum threats."
            }
        ]
    },
    {
        "scan_id": 36,
        "date": "2024-12-27 09:51:13",
        "directory": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/blowfish",
        "files_scanned": {
            "Python": 1,
            "C": 1,
            "Java": 1
        },
        "vulnerable_files": {
            "Python": 1,
            "C": 0,
            "Java": 1
        },
        "vulnerabilities": [
            {
                "language": "Python",
                "filename": "blowfish.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/blowfish\\blowfish.py",
                "vulnerability": "Blowfish_Short_Key",
                "lines": [
                    {
                        "line_number": 13,
                        "content": "cipher = Blowfish.new(key=b\"shrtkey!\", mode=Blowfish.MODE_ECB)  # 9 bytes"
                    },
                    {
                        "line_number": 19,
                        "content": "decipher = Blowfish.new(key=b\"shrtkey!\", mode=Blowfish.MODE_ECB)"
                    }
                ],
                "severity": "High",
                "explanation": "Short key sizes are inadequate for modern security standards."
            },
            {
                "language": "Java",
                "filename": "BlowfishShortKeyTest.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/blowfish\\BlowfishShortKeyTest.java",
                "vulnerability": "Blowfish_Short_Key",
                "lines": [
                    {
                        "line_number": 9,
                        "content": "SecretKey blowfishKey = new SecretKeySpec(\"shortkey\".getBytes(), \"Blowfish\");"
                    }
                ],
                "severity": "High",
                "explanation": "Short key sizes are inadequate for modern security standards."
            }
        ]
    },
    {
        "scan_id": 37,
        "date": "2024-12-27 09:51:27",
        "directory": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/aes192",
        "files_scanned": {
            "Python": 1,
            "C": 1,
            "Java": 1
        },
        "vulnerable_files": {
            "Python": 1,
            "C": 1,
            "Java": 2
        },
        "vulnerabilities": [
            {
                "language": "C",
                "filename": "aes192.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/aes192\\aes192.c",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 23,
                        "content": "const EVP_CIPHER *cipher = EVP_aes_192_ecb(); // triggers AES-192 pattern"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 offers slightly better security than AES-128 but is still vulnerable to quantum attacks."
            },
            {
                "language": "Python",
                "filename": "aes192.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/aes192\\aes192.py",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 13,
                        "content": "cipher = AES.new(b\"1234567890ABCDEF12345678\", AES.MODE_ECB)"
                    },
                    {
                        "line_number": 18,
                        "content": "decipher = AES.new(b\"1234567890ABCDEF12345678\", AES.MODE_ECB)"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 offers slightly better security than AES-128 but is still vulnerable to quantum attacks."
            },
            {
                "language": "Java",
                "filename": "AES192Example.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/aes192\\AES192Example.java",
                "vulnerability": "AES-192",
                "lines": [
                    {
                        "line_number": 9,
                        "content": "SecretKeySpec aesKey = new SecretKeySpec( \"123456789012345678901234\".getBytes(), \"AES\");"
                    }
                ],
                "severity": "Very Low",
                "explanation": "AES-192 offers slightly better security than AES-128 but is still vulnerable to quantum attacks."
            },
            {
                "language": "Java",
                "filename": "AES192Example.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/aes192\\AES192Example.java",
                "vulnerability": "ECB_Mode",
                "lines": [
                    {
                        "line_number": 10,
                        "content": "Cipher cipher = Cipher.getInstance(\"AES/ECB/PKCS5Padding\");"
                    }
                ],
                "severity": "High",
                "explanation": "ECB mode leaks plaintext patterns."
            }
        ]
    },
    {
        "scan_id": 38,
        "date": "2024-12-27 09:51:38",
        "directory": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/aes128",
        "files_scanned": {
            "Python": 1,
            "C": 1,
            "Java": 1
        },
        "vulnerable_files": {
            "Python": 1,
            "C": 1,
            "Java": 2
        },
        "vulnerabilities": [
            {
                "language": "C",
                "filename": "aes128.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/aes128\\aes128.c",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 24,
                        "content": "const EVP_CIPHER *cipher = EVP_aes_128_ecb(); // triggers AES-128 pattern"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure under classical conditions but not quantum-safe."
            },
            {
                "language": "Python",
                "filename": "aes128.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/aes128\\aes128.py",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 12,
                        "content": "cipher = AES.new(b\"1234567890ABCDEF\", AES.MODE_ECB)"
                    },
                    {
                        "line_number": 17,
                        "content": "decipher = AES.new(b\"1234567890ABCDEF\", AES.MODE_ECB)"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure under classical conditions but not quantum-safe."
            },
            {
                "language": "Java",
                "filename": "AES128Example.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/aes128\\AES128Example.java",
                "vulnerability": "AES-128",
                "lines": [
                    {
                        "line_number": 8,
                        "content": "SecretKeySpec aesKey = new SecretKeySpec(\"1234567890abcdef\".getBytes(), \"AES\");"
                    }
                ],
                "severity": "Low",
                "explanation": "AES-128 is secure under classical conditions but not quantum-safe."
            },
            {
                "language": "Java",
                "filename": "AES128Example.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/aes128\\AES128Example.java",
                "vulnerability": "ECB_Mode",
                "lines": [
                    {
                        "line_number": 9,
                        "content": "Cipher cipher = Cipher.getInstance(\"AES/ECB/PKCS5Padding\");"
                    }
                ],
                "severity": "High",
                "explanation": "ECB mode leaks plaintext patterns."
            }
        ]
    },
    {
        "scan_id": 39,
        "date": "2024-12-27 09:51:49",
        "directory": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/blowfish",
        "files_scanned": {
            "Python": 1,
            "C": 1,
            "Java": 1
        },
        "vulnerable_files": {
            "Python": 1,
            "C": 0,
            "Java": 1
        },
        "vulnerabilities": [
            {
                "language": "Python",
                "filename": "blowfish.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/blowfish\\blowfish.py",
                "vulnerability": "Blowfish_Short_Key",
                "lines": [
                    {
                        "line_number": 13,
                        "content": "cipher = Blowfish.new(key=b\"shrtkey!\", mode=Blowfish.MODE_ECB)  # 9 bytes"
                    },
                    {
                        "line_number": 19,
                        "content": "decipher = Blowfish.new(key=b\"shrtkey!\", mode=Blowfish.MODE_ECB)"
                    }
                ],
                "severity": "High",
                "explanation": "Short key sizes are inadequate for modern security standards."
            },
            {
                "language": "Java",
                "filename": "BlowfishShortKeyTest.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/blowfish\\BlowfishShortKeyTest.java",
                "vulnerability": "Blowfish_Short_Key",
                "lines": [
                    {
                        "line_number": 9,
                        "content": "SecretKey blowfishKey = new SecretKeySpec(\"shortkey\".getBytes(), \"Blowfish\");"
                    }
                ],
                "severity": "High",
                "explanation": "Short key sizes are inadequate for modern security standards."
            }
        ]
    },
    {
        "scan_id": 40,
        "date": "2024-12-27 09:51:55",
        "directory": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/blowfish",
        "files_scanned": {
            "Python": 1,
            "C": 1,
            "Java": 1
        },
        "vulnerable_files": {
            "Python": 1,
            "C": 0,
            "Java": 1
        },
        "vulnerabilities": [
            {
                "language": "Python",
                "filename": "blowfish.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/blowfish\\blowfish.py",
                "vulnerability": "Blowfish_Short_Key",
                "lines": [
                    {
                        "line_number": 13,
                        "content": "cipher = Blowfish.new(key=b\"shrtkey!\", mode=Blowfish.MODE_ECB)  # 9 bytes"
                    },
                    {
                        "line_number": 19,
                        "content": "decipher = Blowfish.new(key=b\"shrtkey!\", mode=Blowfish.MODE_ECB)"
                    }
                ],
                "severity": "High",
                "explanation": "Short key sizes are inadequate for modern security standards."
            },
            {
                "language": "Java",
                "filename": "BlowfishShortKeyTest.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/blowfish\\BlowfishShortKeyTest.java",
                "vulnerability": "Blowfish_Short_Key",
                "lines": [
                    {
                        "line_number": 9,
                        "content": "SecretKey blowfishKey = new SecretKeySpec(\"shortkey\".getBytes(), \"Blowfish\");"
                    }
                ],
                "severity": "High",
                "explanation": "Short key sizes are inadequate for modern security standards."
            }
        ]
    },
    {
        "scan_id": 41,
        "date": "2024-12-27 09:53:18",
        "directory": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/blowfish",
        "files_scanned": {
            "Python": 1,
            "C": 1,
            "Java": 1
        },
        "vulnerable_files": {
            "Python": 1,
            "C": 0,
            "Java": 0
        },
        "vulnerabilities": [
            {
                "language": "Python",
                "filename": "blowfish.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/blowfish\\blowfish.py",
                "vulnerability": "Blowfish_Short_Key",
                "lines": [
                    {
                        "line_number": 13,
                        "content": "cipher = Blowfish.new(key=b\"shrtkey!\", mode=Blowfish.MODE_ECB)  # 9 bytes"
                    },
                    {
                        "line_number": 19,
                        "content": "decipher = Blowfish.new(key=b\"shrtkey!\", mode=Blowfish.MODE_ECB)"
                    }
                ],
                "severity": "High",
                "explanation": "Short key sizes are inadequate for modern security standards."
            }
        ]
    },
    {
        "scan_id": 42,
        "date": "2024-12-27 09:53:28",
        "directory": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/blowfish",
        "files_scanned": {
            "Python": 1,
            "C": 1,
            "Java": 1
        },
        "vulnerable_files": {
            "Python": 1,
            "C": 0,
            "Java": 0
        },
        "vulnerabilities": [
            {
                "language": "Python",
                "filename": "blowfish.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/blowfish\\blowfish.py",
                "vulnerability": "Blowfish_Short_Key",
                "lines": [
                    {
                        "line_number": 13,
                        "content": "cipher = Blowfish.new(key=b\"shrtkey!\", mode=Blowfish.MODE_ECB)  # 9 bytes"
                    },
                    {
                        "line_number": 19,
                        "content": "decipher = Blowfish.new(key=b\"shrtkey!\", mode=Blowfish.MODE_ECB)"
                    }
                ],
                "severity": "High",
                "explanation": "Short key sizes are inadequate for modern security standards."
            }
        ]
    },
    {
        "scan_id": 43,
        "date": "2024-12-27 09:53:40",
        "directory": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/blowfish",
        "files_scanned": {
            "Python": 1,
            "C": 1,
            "Java": 1
        },
        "vulnerable_files": {
            "Python": 1,
            "C": 0,
            "Java": 1
        },
        "vulnerabilities": [
            {
                "language": "Python",
                "filename": "blowfish.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/blowfish\\blowfish.py",
                "vulnerability": "Blowfish_Short_Key",
                "lines": [
                    {
                        "line_number": 13,
                        "content": "cipher = Blowfish.new(key=b\"shrtkey!\", mode=Blowfish.MODE_ECB)  # 9 bytes"
                    },
                    {
                        "line_number": 19,
                        "content": "decipher = Blowfish.new(key=b\"shrtkey!\", mode=Blowfish.MODE_ECB)"
                    }
                ],
                "severity": "High",
                "explanation": "Short key sizes are inadequate for modern security standards."
            },
            {
                "language": "Java",
                "filename": "BlowfishShortKeyTest.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/blowfish\\BlowfishShortKeyTest.java",
                "vulnerability": "Blowfish_Short_Key",
                "lines": [
                    {
                        "line_number": 9,
                        "content": "SecretKey blowfishKey = new SecretKeySpec(\"shortkey\".getBytes(), \"Blowfish\");"
                    }
                ],
                "severity": "High",
                "explanation": "Short key sizes are inadequate for modern security standards."
            }
        ]
    },
    {
        "scan_id": 44,
        "date": "2024-12-27 09:53:52",
        "directory": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/blowfish",
        "files_scanned": {
            "Python": 1,
            "C": 1,
            "Java": 1
        },
        "vulnerable_files": {
            "Python": 1,
            "C": 0,
            "Java": 1
        },
        "vulnerabilities": [
            {
                "language": "Python",
                "filename": "blowfish.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/blowfish\\blowfish.py",
                "vulnerability": "Blowfish_Short_Key",
                "lines": [
                    {
                        "line_number": 19,
                        "content": "decipher = Blowfish.new(key=b\"shrtkey!\", mode=Blowfish.MODE_ECB)"
                    }
                ],
                "severity": "High",
                "explanation": "Short key sizes are inadequate for modern security standards."
            },
            {
                "language": "Java",
                "filename": "BlowfishShortKeyTest.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/blowfish\\BlowfishShortKeyTest.java",
                "vulnerability": "Blowfish_Short_Key",
                "lines": [
                    {
                        "line_number": 9,
                        "content": "SecretKey blowfishKey = new SecretKeySpec(\"shortkey\".getBytes(), \"Blowfish\");"
                    }
                ],
                "severity": "High",
                "explanation": "Short key sizes are inadequate for modern security standards."
            }
        ]
    },
    {
        "scan_id": 45,
        "date": "2024-12-27 09:53:56",
        "directory": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/blowfish",
        "files_scanned": {
            "Python": 1,
            "C": 1,
            "Java": 1
        },
        "vulnerable_files": {
            "Python": 1,
            "C": 0,
            "Java": 1
        },
        "vulnerabilities": [
            {
                "language": "Python",
                "filename": "blowfish.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/blowfish\\blowfish.py",
                "vulnerability": "Blowfish_Short_Key",
                "lines": [
                    {
                        "line_number": 19,
                        "content": "decipher = Blowfish.new(key=b\"shrtkey!\", mode=Blowfish.MODE_ECB)"
                    }
                ],
                "severity": "High",
                "explanation": "Short key sizes are inadequate for modern security standards."
            },
            {
                "language": "Java",
                "filename": "BlowfishShortKeyTest.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/blowfish\\BlowfishShortKeyTest.java",
                "vulnerability": "Blowfish_Short_Key",
                "lines": [
                    {
                        "line_number": 9,
                        "content": "SecretKey blowfishKey = new SecretKeySpec(\"shortkey\".getBytes(), \"Blowfish\");"
                    }
                ],
                "severity": "High",
                "explanation": "Short key sizes are inadequate for modern security standards."
            }
        ]
    },
    {
        "scan_id": 46,
        "date": "2024-12-27 09:54:12",
        "directory": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/blowfish",
        "files_scanned": {
            "Python": 1,
            "C": 1,
            "Java": 1
        },
        "vulnerable_files": {
            "Python": 1,
            "C": 0,
            "Java": 1
        },
        "vulnerabilities": [
            {
                "language": "Python",
                "filename": "blowfish.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/blowfish\\blowfish.py",
                "vulnerability": "Blowfish_Short_Key",
                "lines": [
                    {
                        "line_number": 19,
                        "content": "decipher = Blowfish.new(key=b\"shrtkey!\", mode=Blowfish.MODE_ECB)"
                    }
                ],
                "severity": "High",
                "explanation": "Short key sizes are inadequate for modern security standards."
            },
            {
                "language": "Java",
                "filename": "BlowfishShortKeyTest.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/blowfish\\BlowfishShortKeyTest.java",
                "vulnerability": "Blowfish_Short_Key",
                "lines": [
                    {
                        "line_number": 9,
                        "content": "SecretKey blowfishKey = new SecretKeySpec(\"shortkey\".getBytes(), \"Blowfish\");"
                    }
                ],
                "severity": "High",
                "explanation": "Short key sizes are inadequate for modern security standards."
            }
        ]
    },
    {
        "scan_id": 47,
        "date": "2024-12-27 09:56:24",
        "directory": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/blowfish",
        "files_scanned": {
            "Python": 1,
            "C": 1,
            "Java": 1
        },
        "vulnerable_files": {
            "Python": 1,
            "C": 0,
            "Java": 1
        },
        "vulnerabilities": [
            {
                "language": "Python",
                "filename": "blowfish.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/blowfish\\blowfish.py",
                "vulnerability": "Blowfish_Short_Key",
                "lines": [
                    {
                        "line_number": 19,
                        "content": "decipher = Blowfish.new(key=b\"shrtkey!\", mode=Blowfish.MODE_ECB)"
                    }
                ],
                "severity": "High",
                "explanation": "Short key sizes are inadequate for modern security standards."
            },
            {
                "language": "Java",
                "filename": "BlowfishShortKeyTest.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/blowfish\\BlowfishShortKeyTest.java",
                "vulnerability": "Blowfish_Short_Key",
                "lines": [
                    {
                        "line_number": 9,
                        "content": "SecretKey blowfishKey = new SecretKeySpec(\"shortkey\".getBytes(), \"Blowfish\");"
                    }
                ],
                "severity": "High",
                "explanation": "Short key sizes are inadequate for modern security standards."
            }
        ]
    },
    {
        "scan_id": 48,
        "date": "2024-12-27 09:56:42",
        "directory": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/blowfish",
        "files_scanned": {
            "Python": 1,
            "C": 1,
            "Java": 1
        },
        "vulnerable_files": {
            "Python": 1,
            "C": 0,
            "Java": 1
        },
        "vulnerabilities": [
            {
                "language": "Python",
                "filename": "blowfish.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/blowfish\\blowfish.py",
                "vulnerability": "Blowfish_Short_Key",
                "lines": [
                    {
                        "line_number": 13,
                        "content": "cipher = Blowfish.new(key=b\"shrtkey\", mode=Blowfish.MODE_ECB)  # 9 bytes"
                    },
                    {
                        "line_number": 19,
                        "content": "decipher = Blowfish.new(key=b\"shrtkey!\", mode=Blowfish.MODE_ECB)"
                    }
                ],
                "severity": "High",
                "explanation": "Short key sizes are inadequate for modern security standards."
            },
            {
                "language": "Java",
                "filename": "BlowfishShortKeyTest.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/blowfish\\BlowfishShortKeyTest.java",
                "vulnerability": "Blowfish_Short_Key",
                "lines": [
                    {
                        "line_number": 9,
                        "content": "SecretKey blowfishKey = new SecretKeySpec(\"shortkey\".getBytes(), \"Blowfish\");"
                    }
                ],
                "severity": "High",
                "explanation": "Short key sizes are inadequate for modern security standards."
            }
        ]
    },
    {
        "scan_id": 49,
        "date": "2024-12-27 09:57:01",
        "directory": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/blowfish",
        "files_scanned": {
            "Python": 1,
            "C": 1,
            "Java": 1
        },
        "vulnerable_files": {
            "Python": 1,
            "C": 0,
            "Java": 0
        },
        "vulnerabilities": [
            {
                "language": "Python",
                "filename": "blowfish.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/blowfish\\blowfish.py",
                "vulnerability": "Blowfish_Short_Key",
                "lines": [
                    {
                        "line_number": 13,
                        "content": "cipher = Blowfish.new(key=b\"shrtkey\", mode=Blowfish.MODE_ECB)  # 9 bytes"
                    },
                    {
                        "line_number": 19,
                        "content": "decipher = Blowfish.new(key=b\"shrtkey!\", mode=Blowfish.MODE_ECB)"
                    }
                ],
                "severity": "High",
                "explanation": "Short key sizes are inadequate for modern security standards."
            }
        ]
    },
    {
        "scan_id": 50,
        "date": "2024-12-27 10:03:13",
        "directory": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/blowfish",
        "files_scanned": {
            "Python": 1,
            "C": 1,
            "Java": 1
        },
        "vulnerable_files": {
            "Python": 1,
            "C": 0,
            "Java": 0
        },
        "vulnerabilities": [
            {
                "language": "Python",
                "filename": "blowfish.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/blowfish\\blowfish.py",
                "vulnerability": "Blowfish_Short_Key",
                "lines": [
                    {
                        "line_number": 13,
                        "content": "cipher = Blowfish.new(key=b\"shrtkey\", mode=Blowfish.MODE_ECB)  # 9 bytes"
                    },
                    {
                        "line_number": 19,
                        "content": "decipher = Blowfish.new(key=b\"shrtkey!\", mode=Blowfish.MODE_ECB)"
                    }
                ],
                "severity": "High",
                "explanation": "Short key sizes are inadequate for modern security standards."
            }
        ]
    },
    {
        "scan_id": 51,
        "date": "2024-12-27 10:03:35",
        "directory": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/blowfish",
        "files_scanned": {
            "Python": 1,
            "C": 1,
            "Java": 1
        },
        "vulnerable_files": {
            "Python": 1,
            "C": 0,
            "Java": 0
        },
        "vulnerabilities": [
            {
                "language": "Python",
                "filename": "blowfish.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/blowfish\\blowfish.py",
                "vulnerability": "Blowfish_Short_Key",
                "lines": [
                    {
                        "line_number": 19,
                        "content": "decipher = Blowfish.new(key=b\"shrtkey!\", mode=Blowfish.MODE_ECB)"
                    }
                ],
                "severity": "High",
                "explanation": "Short key sizes are inadequate for modern security standards."
            }
        ]
    },
    {
        "scan_id": 52,
        "date": "2024-12-27 10:03:40",
        "directory": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/blowfish",
        "files_scanned": {
            "Python": 1,
            "C": 1,
            "Java": 1
        },
        "vulnerable_files": {
            "Python": 1,
            "C": 0,
            "Java": 0
        },
        "vulnerabilities": [
            {
                "language": "Python",
                "filename": "blowfish.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/blowfish\\blowfish.py",
                "vulnerability": "Blowfish_Short_Key",
                "lines": [
                    {
                        "line_number": 19,
                        "content": "decipher = Blowfish.new(key=b\"shrtkey!\", mode=Blowfish.MODE_ECB)"
                    }
                ],
                "severity": "High",
                "explanation": "Short key sizes are inadequate for modern security standards."
            }
        ]
    },
    {
        "scan_id": 53,
        "date": "2024-12-27 10:04:27",
        "directory": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/blowfish",
        "files_scanned": {
            "Python": 1,
            "C": 1,
            "Java": 1
        },
        "vulnerable_files": {
            "Python": 1,
            "C": 0,
            "Java": 1
        },
        "vulnerabilities": [
            {
                "language": "Python",
                "filename": "blowfish.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/blowfish\\blowfish.py",
                "vulnerability": "Blowfish_Short_Key",
                "lines": [
                    {
                        "line_number": 19,
                        "content": "decipher = Blowfish.new(key=b\"shrtkey!\", mode=Blowfish.MODE_ECB)"
                    }
                ],
                "severity": "High",
                "explanation": "Short key sizes are inadequate for modern security standards."
            },
            {
                "language": "Java",
                "filename": "BlowfishShortKeyTest.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/blowfish\\BlowfishShortKeyTest.java",
                "vulnerability": "Blowfish_Short_Key",
                "lines": [
                    {
                        "line_number": 9,
                        "content": "SecretKey blowfishKey = new SecretKeySpec(\"shortkey\".getBytes(), \"Blowfish\");"
                    }
                ],
                "severity": "High",
                "explanation": "Short key sizes are inadequate for modern security standards."
            }
        ]
    },
    {
        "scan_id": 54,
        "date": "2024-12-27 10:05:43",
        "directory": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/blowfish",
        "files_scanned": {
            "Python": 1,
            "C": 1,
            "Java": 1
        },
        "vulnerable_files": {
            "Python": 1,
            "C": 0,
            "Java": 1
        },
        "vulnerabilities": [
            {
                "language": "Python",
                "filename": "blowfish.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/blowfish\\blowfish.py",
                "vulnerability": "Blowfish_Short_Key",
                "lines": [
                    {
                        "line_number": 19,
                        "content": "decipher = Blowfish.new(key=b\"shrtkey!\", mode=Blowfish.MODE_ECB)"
                    }
                ],
                "severity": "High",
                "explanation": "Short key sizes are inadequate for modern security standards."
            },
            {
                "language": "Java",
                "filename": "BlowfishShortKeyTest.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/blowfish\\BlowfishShortKeyTest.java",
                "vulnerability": "Blowfish_Short_Key",
                "lines": [
                    {
                        "line_number": 9,
                        "content": "SecretKey blowfishKey = new SecretKeySpec(\"shortkey\".getBytes(), \"Blowfish\");"
                    }
                ],
                "severity": "High",
                "explanation": "Short key sizes are inadequate for modern security standards."
            }
        ]
    },
    {
        "scan_id": 55,
        "date": "2024-12-27 10:08:20",
        "directory": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/blowfish",
        "files_scanned": {
            "Python": 1,
            "C": 1,
            "Java": 1
        },
        "vulnerable_files": {
            "Python": 1,
            "C": 0,
            "Java": 1
        },
        "vulnerabilities": [
            {
                "language": "Python",
                "filename": "blowfish.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/blowfish\\blowfish.py",
                "vulnerability": "Blowfish_Short_Key",
                "lines": [
                    {
                        "line_number": 19,
                        "content": "decipher = Blowfish.new(key=b\"shrtkey!\", mode=Blowfish.MODE_ECB)"
                    }
                ],
                "severity": "High",
                "explanation": "Short key sizes are inadequate for modern security standards."
            },
            {
                "language": "Java",
                "filename": "BlowfishShortKeyTest.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/blowfish\\BlowfishShortKeyTest.java",
                "vulnerability": "Blowfish_Short_Key",
                "lines": [
                    {
                        "line_number": 9,
                        "content": "SecretKey blowfishKey = new SecretKeySpec(\"shortkey\".getBytes(), \"Blowfish\");"
                    }
                ],
                "severity": "High",
                "explanation": "Short key sizes are inadequate for modern security standards."
            }
        ]
    },
    {
        "scan_id": 56,
        "date": "2024-12-27 10:11:56",
        "directory": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/blowfish",
        "files_scanned": {
            "Python": 1,
            "C": 1,
            "Java": 1
        },
        "vulnerable_files": {
            "Python": 1,
            "C": 1,
            "Java": 1
        },
        "vulnerabilities": [
            {
                "language": "C",
                "filename": "blowfish.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/blowfish\\blowfish.c",
                "vulnerability": "Blowfish_Short_Key",
                "lines": [
                    {
                        "line_number": 17,
                        "content": "BF_set_key(&bf_key, 9, (const unsigned char*)\"shrtkey!\");"
                    }
                ],
                "severity": "High",
                "explanation": "Short key sizes are inadequate for modern security standards."
            },
            {
                "language": "Python",
                "filename": "blowfish.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/blowfish\\blowfish.py",
                "vulnerability": "Blowfish_Short_Key",
                "lines": [
                    {
                        "line_number": 19,
                        "content": "decipher = Blowfish.new(key=b\"shrtkey!\", mode=Blowfish.MODE_ECB)"
                    }
                ],
                "severity": "High",
                "explanation": "Short key sizes are inadequate for modern security standards."
            },
            {
                "language": "Java",
                "filename": "BlowfishShortKeyTest.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/blowfish\\BlowfishShortKeyTest.java",
                "vulnerability": "Blowfish_Short_Key",
                "lines": [
                    {
                        "line_number": 9,
                        "content": "SecretKey blowfishKey = new SecretKeySpec(\"shortkey\".getBytes(), \"Blowfish\");"
                    }
                ],
                "severity": "High",
                "explanation": "Short key sizes are inadequate for modern security standards."
            }
        ]
    },
    {
        "scan_id": 57,
        "date": "2024-12-27 10:12:10",
        "directory": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/blowfish",
        "files_scanned": {
            "Python": 1,
            "C": 1,
            "Java": 1
        },
        "vulnerable_files": {
            "Python": 1,
            "C": 0,
            "Java": 1
        },
        "vulnerabilities": [
            {
                "language": "Python",
                "filename": "blowfish.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/blowfish\\blowfish.py",
                "vulnerability": "Blowfish_Short_Key",
                "lines": [
                    {
                        "line_number": 19,
                        "content": "decipher = Blowfish.new(key=b\"shrtkey!\", mode=Blowfish.MODE_ECB)"
                    }
                ],
                "severity": "High",
                "explanation": "Short key sizes are inadequate for modern security standards."
            },
            {
                "language": "Java",
                "filename": "BlowfishShortKeyTest.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/blowfish\\BlowfishShortKeyTest.java",
                "vulnerability": "Blowfish_Short_Key",
                "lines": [
                    {
                        "line_number": 9,
                        "content": "SecretKey blowfishKey = new SecretKeySpec(\"shortkey\".getBytes(), \"Blowfish\");"
                    }
                ],
                "severity": "High",
                "explanation": "Short key sizes are inadequate for modern security standards."
            }
        ]
    },
    {
        "scan_id": 58,
        "date": "2024-12-27 10:12:19",
        "directory": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/blowfish",
        "files_scanned": {
            "Python": 1,
            "C": 1,
            "Java": 1
        },
        "vulnerable_files": {
            "Python": 1,
            "C": 0,
            "Java": 1
        },
        "vulnerabilities": [
            {
                "language": "Python",
                "filename": "blowfish.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/blowfish\\blowfish.py",
                "vulnerability": "Blowfish_Short_Key",
                "lines": [
                    {
                        "line_number": 19,
                        "content": "decipher = Blowfish.new(key=b\"shrtkey!\", mode=Blowfish.MODE_ECB)"
                    }
                ],
                "severity": "High",
                "explanation": "Short key sizes are inadequate for modern security standards."
            },
            {
                "language": "Java",
                "filename": "BlowfishShortKeyTest.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/blowfish\\BlowfishShortKeyTest.java",
                "vulnerability": "Blowfish_Short_Key",
                "lines": [
                    {
                        "line_number": 9,
                        "content": "SecretKey blowfishKey = new SecretKeySpec(\"shortkey\".getBytes(), \"Blowfish\");"
                    }
                ],
                "severity": "High",
                "explanation": "Short key sizes are inadequate for modern security standards."
            }
        ]
    },
    {
        "scan_id": 59,
        "date": "2024-12-27 10:12:24",
        "directory": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/blowfish",
        "files_scanned": {
            "Python": 1,
            "C": 1,
            "Java": 1
        },
        "vulnerable_files": {
            "Python": 1,
            "C": 0,
            "Java": 1
        },
        "vulnerabilities": [
            {
                "language": "Python",
                "filename": "blowfish.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/blowfish\\blowfish.py",
                "vulnerability": "Blowfish_Short_Key",
                "lines": [
                    {
                        "line_number": 19,
                        "content": "decipher = Blowfish.new(key=b\"shrtkey!\", mode=Blowfish.MODE_ECB)"
                    }
                ],
                "severity": "High",
                "explanation": "Short key sizes are inadequate for modern security standards."
            },
            {
                "language": "Java",
                "filename": "BlowfishShortKeyTest.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/blowfish\\BlowfishShortKeyTest.java",
                "vulnerability": "Blowfish_Short_Key",
                "lines": [
                    {
                        "line_number": 9,
                        "content": "SecretKey blowfishKey = new SecretKeySpec(\"shortkey\".getBytes(), \"Blowfish\");"
                    }
                ],
                "severity": "High",
                "explanation": "Short key sizes are inadequate for modern security standards."
            }
        ]
    },
    {
        "scan_id": 60,
        "date": "2024-12-27 10:12:38",
        "directory": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/blowfish",
        "files_scanned": {
            "Python": 1,
            "C": 1,
            "Java": 1
        },
        "vulnerable_files": {
            "Python": 1,
            "C": 1,
            "Java": 1
        },
        "vulnerabilities": [
            {
                "language": "C",
                "filename": "blowfish.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/blowfish\\blowfish.c",
                "vulnerability": "Blowfish_Short_Key",
                "lines": [
                    {
                        "line_number": 17,
                        "content": "BF_set_key(&bf_key,5 , (const unsigned char*)\"shrtkey!\");"
                    }
                ],
                "severity": "High",
                "explanation": "Short key sizes are inadequate for modern security standards."
            },
            {
                "language": "Python",
                "filename": "blowfish.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/blowfish\\blowfish.py",
                "vulnerability": "Blowfish_Short_Key",
                "lines": [
                    {
                        "line_number": 19,
                        "content": "decipher = Blowfish.new(key=b\"shrtkey!\", mode=Blowfish.MODE_ECB)"
                    }
                ],
                "severity": "High",
                "explanation": "Short key sizes are inadequate for modern security standards."
            },
            {
                "language": "Java",
                "filename": "BlowfishShortKeyTest.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/blowfish\\BlowfishShortKeyTest.java",
                "vulnerability": "Blowfish_Short_Key",
                "lines": [
                    {
                        "line_number": 9,
                        "content": "SecretKey blowfishKey = new SecretKeySpec(\"shortkey\".getBytes(), \"Blowfish\");"
                    }
                ],
                "severity": "High",
                "explanation": "Short key sizes are inadequate for modern security standards."
            }
        ]
    },
    {
        "scan_id": 61,
        "date": "2024-12-27 10:15:11",
        "directory": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/blowfish",
        "files_scanned": {
            "Python": 1,
            "C": 1,
            "Java": 1
        },
        "vulnerable_files": {
            "Python": 1,
            "C": 1,
            "Java": 1
        },
        "vulnerabilities": [
            {
                "language": "C",
                "filename": "blowfish.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/blowfish\\blowfish.c",
                "vulnerability": "Blowfish_Short_Key",
                "lines": [
                    {
                        "line_number": 17,
                        "content": "BF_set_key(&bf_key,5 , (const unsigned char*)\"shrtkey!\");"
                    }
                ],
                "severity": "High",
                "explanation": "Short key sizes are inadequate for modern security standards."
            },
            {
                "language": "Python",
                "filename": "blowfish.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/blowfish\\blowfish.py",
                "vulnerability": "Blowfish_Short_Key",
                "lines": [
                    {
                        "line_number": 19,
                        "content": "decipher = Blowfish.new(key=b\"shrtkey!\", mode=Blowfish.MODE_ECB)"
                    }
                ],
                "severity": "High",
                "explanation": "Short key sizes are inadequate for modern security standards."
            },
            {
                "language": "Java",
                "filename": "BlowfishShortKeyTest.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/blowfish\\BlowfishShortKeyTest.java",
                "vulnerability": "Blowfish_Short_Key",
                "lines": [
                    {
                        "line_number": 9,
                        "content": "SecretKey blowfishKey = new SecretKeySpec(\"shortkey\".getBytes(), \"Blowfish\");"
                    }
                ],
                "severity": "High",
                "explanation": "Short key sizes are inadequate for modern security standards."
            }
        ]
    },
    {
        "scan_id": 62,
        "date": "2024-12-27 10:16:55",
        "directory": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/blowfish",
        "files_scanned": {
            "Python": 1,
            "C": 1,
            "Java": 1
        },
        "vulnerable_files": {
            "Python": 1,
            "C": 1,
            "Java": 1
        },
        "vulnerabilities": [
            {
                "language": "C",
                "filename": "blowfish.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/blowfish\\blowfish.c",
                "vulnerability": "Blowfish_Short_Key",
                "lines": [
                    {
                        "line_number": 17,
                        "content": "BF_set_key(&bf_key,5 , (const unsigned char*)\"shrtkey!\");"
                    }
                ],
                "severity": "High",
                "explanation": "Short key sizes are inadequate for modern security standards."
            },
            {
                "language": "Python",
                "filename": "blowfish.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/blowfish\\blowfish.py",
                "vulnerability": "Blowfish_Short_Key",
                "lines": [
                    {
                        "line_number": 19,
                        "content": "# decipher = Blowfish.new(key=b\"shrtkey!\", mode=Blowfish.MODE_ECB)"
                    }
                ],
                "severity": "High",
                "explanation": "Short key sizes are inadequate for modern security standards."
            },
            {
                "language": "Java",
                "filename": "BlowfishShortKeyTest.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/blowfish\\BlowfishShortKeyTest.java",
                "vulnerability": "Blowfish_Short_Key",
                "lines": [
                    {
                        "line_number": 9,
                        "content": "SecretKey blowfishKey = new SecretKeySpec(\"shortkey\".getBytes(), \"Blowfish\");"
                    }
                ],
                "severity": "High",
                "explanation": "Short key sizes are inadequate for modern security standards."
            }
        ]
    },
    {
        "scan_id": 63,
        "date": "2024-12-27 10:17:14",
        "directory": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/blowfish",
        "files_scanned": {
            "Python": 1,
            "C": 1,
            "Java": 1
        },
        "vulnerable_files": {
            "Python": 0,
            "C": 1,
            "Java": 1
        },
        "vulnerabilities": [
            {
                "language": "C",
                "filename": "blowfish.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/blowfish\\blowfish.c",
                "vulnerability": "Blowfish_Short_Key",
                "lines": [
                    {
                        "line_number": 17,
                        "content": "BF_set_key(&bf_key,5 , (const unsigned char*)\"shrtkey!\");"
                    }
                ],
                "severity": "High",
                "explanation": "Short key sizes are inadequate for modern security standards."
            },
            {
                "language": "Java",
                "filename": "BlowfishShortKeyTest.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/blowfish\\BlowfishShortKeyTest.java",
                "vulnerability": "Blowfish_Short_Key",
                "lines": [
                    {
                        "line_number": 9,
                        "content": "SecretKey blowfishKey = new SecretKeySpec(\"shortkey\".getBytes(), \"Blowfish\");"
                    }
                ],
                "severity": "High",
                "explanation": "Short key sizes are inadequate for modern security standards."
            }
        ]
    },
    {
        "scan_id": 64,
        "date": "2024-12-27 10:17:40",
        "directory": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/blowfish",
        "files_scanned": {
            "Python": 1,
            "C": 1,
            "Java": 1
        },
        "vulnerable_files": {
            "Python": 1,
            "C": 1,
            "Java": 1
        },
        "vulnerabilities": [
            {
                "language": "C",
                "filename": "blowfish.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/blowfish\\blowfish.c",
                "vulnerability": "Blowfish_Short_Key",
                "lines": [
                    {
                        "line_number": 17,
                        "content": "BF_set_key(&bf_key,5 , (const unsigned char*)\"shrtkey!\");"
                    }
                ],
                "severity": "High",
                "explanation": "Short key sizes are inadequate for modern security standards."
            },
            {
                "language": "Python",
                "filename": "blowfish.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/blowfish\\blowfish.py",
                "vulnerability": "Blowfish_Short_Key",
                "lines": [
                    {
                        "line_number": 13,
                        "content": "cipher = Blowfish.new(key=b\"shrtkey!\", mode=Blowfish.MODE_ECB)  # 9 bytes"
                    },
                    {
                        "line_number": 19,
                        "content": "decipher = Blowfish.new(key=b\"shrtkey!\", mode=Blowfish.MODE_ECB)"
                    }
                ],
                "severity": "High",
                "explanation": "Short key sizes are inadequate for modern security standards."
            },
            {
                "language": "Java",
                "filename": "BlowfishShortKeyTest.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/blowfish\\BlowfishShortKeyTest.java",
                "vulnerability": "Blowfish_Short_Key",
                "lines": [
                    {
                        "line_number": 9,
                        "content": "SecretKey blowfishKey = new SecretKeySpec(\"shortkey\".getBytes(), \"Blowfish\");"
                    }
                ],
                "severity": "High",
                "explanation": "Short key sizes are inadequate for modern security standards."
            }
        ]
    },
    {
        "scan_id": 65,
        "date": "2024-12-27 10:20:34",
        "directory": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/rc4",
        "files_scanned": {
            "Python": 1,
            "C": 1,
            "Java": 1
        },
        "vulnerable_files": {
            "Python": 0,
            "C": 0,
            "Java": 1
        },
        "vulnerabilities": [
            {
                "language": "Java",
                "filename": "RC4Example.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/rc4\\RC4Example.java",
                "vulnerability": "RC4",
                "lines": [
                    {
                        "line_number": 11,
                        "content": "Cipher cipher = Cipher.getInstance(\"RC4\");"
                    }
                ],
                "severity": "Very High",
                "explanation": "RC4 is insecure due to biases in its keystream and vulnerable to multiple attacks."
            }
        ]
    },
    {
        "scan_id": 66,
        "date": "2024-12-27 10:23:15",
        "directory": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/rc4",
        "files_scanned": {
            "Python": 1,
            "C": 1,
            "Java": 1
        },
        "vulnerable_files": {
            "Python": 0,
            "C": 0,
            "Java": 1
        },
        "vulnerabilities": [
            {
                "language": "Java",
                "filename": "RC4Example.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/rc4\\RC4Example.java",
                "vulnerability": "RC4",
                "lines": [
                    {
                        "line_number": 11,
                        "content": "Cipher cipher = Cipher.getInstance(\"RC4\");"
                    }
                ],
                "severity": "Very High",
                "explanation": "RC4 is insecure due to biases in its keystream and vulnerable to multiple attacks."
            }
        ]
    },
    {
        "scan_id": 67,
        "date": "2024-12-27 10:23:23",
        "directory": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/rc4",
        "files_scanned": {
            "Python": 1,
            "C": 1,
            "Java": 1
        },
        "vulnerable_files": {
            "Python": 0,
            "C": 0,
            "Java": 1
        },
        "vulnerabilities": [
            {
                "language": "Java",
                "filename": "RC4Example.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/rc4\\RC4Example.java",
                "vulnerability": "RC4",
                "lines": [
                    {
                        "line_number": 11,
                        "content": "Cipher cipher = Cipher.getInstance(\"RC4\");"
                    }
                ],
                "severity": "Very High",
                "explanation": "RC4 is insecure due to biases in its keystream and vulnerable to multiple attacks."
            }
        ]
    },
    {
        "scan_id": 68,
        "date": "2024-12-27 10:25:57",
        "directory": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/rc4",
        "files_scanned": {
            "Python": 1,
            "C": 1,
            "Java": 1
        },
        "vulnerable_files": {
            "Python": 1,
            "C": 1,
            "Java": 1
        },
        "vulnerabilities": [
            {
                "language": "C",
                "filename": "rc4.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/rc4\\rc4.c",
                "vulnerability": "RC4",
                "lines": [
                    {
                        "line_number": 11,
                        "content": "RC4_set_key(&key, 8, key_data);  // Setting key size for RC4"
                    },
                    {
                        "line_number": 15,
                        "content": "RC4_set_key(&key, 8, key_data);  // Setting key size for RC4"
                    }
                ],
                "severity": "Very High",
                "explanation": "RC4 is insecure due to biases in its keystream and vulnerable to multiple attacks."
            },
            {
                "language": "Python",
                "filename": "rc4.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/rc4\\rc4.py",
                "vulnerability": "RC4",
                "lines": [
                    {
                        "line_number": 3,
                        "content": "cipher = ARC4.new(key)"
                    },
                    {
                        "line_number": 7,
                        "content": "decipher = ARC4.new(key)"
                    }
                ],
                "severity": "Very High",
                "explanation": "RC4 is insecure due to biases in its keystream and vulnerable to multiple attacks."
            },
            {
                "language": "Java",
                "filename": "RC4Example.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/rc4\\RC4Example.java",
                "vulnerability": "RC4",
                "lines": [
                    {
                        "line_number": 11,
                        "content": "Cipher cipher = Cipher.getInstance(\"RC4\");"
                    }
                ],
                "severity": "Very High",
                "explanation": "RC4 is insecure due to biases in its keystream and vulnerable to multiple attacks."
            }
        ]
    },
    {
        "scan_id": "alek",
        "date": "2024-12-27 11:21:41",
        "directory": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/3des",
        "files_scanned": {
            "Python": 1,
            "C": 1,
            "Java": 1
        },
        "vulnerable_files": {
            "Python": 3,
            "C": 3,
            "Java": 3
        },
        "vulnerabilities": [
            {
                "language": "C",
                "filename": "3des.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/3des\\3des.c",
                "vulnerability": "3DES_1KEY",
                "lines": [
                    {
                        "line_number": 25,
                        "content": "EVP_EncryptInit_ex(ctx_enc, EVP_des_ede3_ecb(), NULL, \"ABCDEFGHABCDEFGHABCDEFGH\", NULL);"
                    },
                    {
                        "line_number": 34,
                        "content": "EVP_DecryptInit_ex(ctx_dec, EVP_des_ede3_ecb(), NULL, \"ABCDEFGHABCDEFGHABCDEFGH\", NULL);"
                    }
                ],
                "severity": "Very High",
                "explanation": "3DES with one repeated 8-byte block (24 total) is effectively single-DES security."
            },
            {
                "language": "C",
                "filename": "3des.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/3des\\3des.c",
                "vulnerability": "3DES_2KEY",
                "lines": [
                    {
                        "line_number": 54,
                        "content": "EVP_EncryptInit_ex(ctx_enc, EVP_des_ede3_ecb(), NULL, \"ABCDEFGHIJKLMNOP\", NULL);"
                    },
                    {
                        "line_number": 63,
                        "content": "EVP_DecryptInit_ex(ctx_dec, EVP_des_ede3_ecb(), NULL, \"ABCDEFGHIJKLMNOP\", NULL);"
                    }
                ],
                "severity": "High",
                "explanation": "2-key 3DES in Java: 24 bytes but only 2 unique blocks (K1,K2,K1). ~112-bit security."
            },
            {
                "language": "C",
                "filename": "3des.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/3des\\3des.c",
                "vulnerability": "3DES_3KEY",
                "lines": [
                    {
                        "line_number": 25,
                        "content": "EVP_EncryptInit_ex(ctx_enc, EVP_des_ede3_ecb(), NULL, \"ABCDEFGHABCDEFGHABCDEFGH\", NULL);"
                    },
                    {
                        "line_number": 34,
                        "content": "EVP_DecryptInit_ex(ctx_dec, EVP_des_ede3_ecb(), NULL, \"ABCDEFGHABCDEFGHABCDEFGH\", NULL);"
                    },
                    {
                        "line_number": 83,
                        "content": "EVP_EncryptInit_ex(ctx_enc, EVP_des_ede3_ecb(), NULL, \"ABCDEFGH12345678XYZ!12#@\", NULL);"
                    },
                    {
                        "line_number": 92,
                        "content": "EVP_DecryptInit_ex(ctx_dec, EVP_des_ede3_ecb(), NULL, \"ABCDEFGH12345678XYZ!12#@\", NULL);"
                    }
                ],
                "severity": "High",
                "explanation": "3-key 3DES (~112-bit). Stronger than 1- or 2-key but still considered legacy."
            },
            {
                "language": "Python",
                "filename": "3des.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/3des\\3des.py",
                "vulnerability": "3DES_1KEY",
                "lines": [
                    {
                        "line_number": 15,
                        "content": "cipher = DES3.new(b\"ABCDEFGHABCDEFGHABCDEFGH\", DES3.MODE_ECB)  # encrypt"
                    },
                    {
                        "line_number": 20,
                        "content": "decipher = DES3.new(b\"ABCDEFGHABCDEFGHABCDEFGH\", DES3.MODE_ECB)  # decrypt"
                    }
                ],
                "severity": "Very High",
                "explanation": "3DES with one repeated 8-byte block (24 total) is effectively single-DES security."
            },
            {
                "language": "Python",
                "filename": "3des.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/3des\\3des.py",
                "vulnerability": "3DES_2KEY",
                "lines": [
                    {
                        "line_number": 29,
                        "content": "cipher = DES3.new(b\"ABCDEFGHIJKLMNOP\", DES3.MODE_ECB)  # encrypt"
                    },
                    {
                        "line_number": 34,
                        "content": "decipher = DES3.new(b\"ABCDEFGHIJKLMNOP\", DES3.MODE_ECB)  # decrypt"
                    }
                ],
                "severity": "High",
                "explanation": "2-key 3DES in Java: 24 bytes but only 2 unique blocks (K1,K2,K1). ~112-bit security."
            },
            {
                "language": "Python",
                "filename": "3des.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/3des\\3des.py",
                "vulnerability": "3DES_3KEY",
                "lines": [
                    {
                        "line_number": 15,
                        "content": "cipher = DES3.new(b\"ABCDEFGHABCDEFGHABCDEFGH\", DES3.MODE_ECB)  # encrypt"
                    },
                    {
                        "line_number": 20,
                        "content": "decipher = DES3.new(b\"ABCDEFGHABCDEFGHABCDEFGH\", DES3.MODE_ECB)  # decrypt"
                    },
                    {
                        "line_number": 44,
                        "content": "cipher = DES3.new(b\"ABCDEFGH12345678XYZ!12#@\", DES3.MODE_ECB)  # encrypt"
                    },
                    {
                        "line_number": 49,
                        "content": "decipher = DES3.new(b\"ABCDEFGH12345678XYZ!12#@\", DES3.MODE_ECB)  # decrypt"
                    }
                ],
                "severity": "High",
                "explanation": "3-key 3DES (~112-bit). Stronger than 1- or 2-key but still considered legacy."
            },
            {
                "language": "Java",
                "filename": "test_3des_all.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/3des\\test_3des_all.java",
                "vulnerability": "3DES_1KEY",
                "lines": [
                    {
                        "line_number": 25,
                        "content": "Cipher cipherEnc = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    },
                    {
                        "line_number": 27,
                        "content": "new SecretKeySpec(\"ABCDEFGHABCDEFGHABCDEFGH\".getBytes(\"UTF-8\"), \"DESede\"));"
                    },
                    {
                        "line_number": 33,
                        "content": "Cipher cipherDec = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    },
                    {
                        "line_number": 35,
                        "content": "new SecretKeySpec(\"ABCDEFGHABCDEFGHABCDEFGH\".getBytes(\"UTF-8\"), \"DESede\"));"
                    },
                    {
                        "line_number": 43,
                        "content": "Cipher cipherEnc = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    },
                    {
                        "line_number": 51,
                        "content": "Cipher cipherDec = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    },
                    {
                        "line_number": 61,
                        "content": "Cipher cipherEnc = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    },
                    {
                        "line_number": 69,
                        "content": "Cipher cipherDec = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    }
                ],
                "severity": "Very High",
                "explanation": "3DES with one repeated 8-byte block (24 total) is effectively single-DES security."
            },
            {
                "language": "Java",
                "filename": "test_3des_all.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/3des\\test_3des_all.java",
                "vulnerability": "3DES_2KEY",
                "lines": [
                    {
                        "line_number": 25,
                        "content": "Cipher cipherEnc = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    },
                    {
                        "line_number": 33,
                        "content": "Cipher cipherDec = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    },
                    {
                        "line_number": 43,
                        "content": "Cipher cipherEnc = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    },
                    {
                        "line_number": 45,
                        "content": "new SecretKeySpec(\"ABCDEFGHIJKLMNOPABCDEFGH\".getBytes(\"UTF-8\"), \"DESede\"));"
                    },
                    {
                        "line_number": 51,
                        "content": "Cipher cipherDec = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    },
                    {
                        "line_number": 53,
                        "content": "new SecretKeySpec(\"ABCDEFGHIJKLMNOPABCDEFGH\".getBytes(\"UTF-8\"), \"DESede\"));"
                    },
                    {
                        "line_number": 61,
                        "content": "Cipher cipherEnc = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    },
                    {
                        "line_number": 69,
                        "content": "Cipher cipherDec = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    }
                ],
                "severity": "High",
                "explanation": "2-key 3DES in Java: 24 bytes but only 2 unique blocks (K1,K2,K1). ~112-bit security."
            },
            {
                "language": "Java",
                "filename": "test_3des_all.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/3des\\test_3des_all.java",
                "vulnerability": "3DES_3KEY",
                "lines": [
                    {
                        "line_number": 25,
                        "content": "Cipher cipherEnc = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    },
                    {
                        "line_number": 27,
                        "content": "new SecretKeySpec(\"ABCDEFGHABCDEFGHABCDEFGH\".getBytes(\"UTF-8\"), \"DESede\"));"
                    },
                    {
                        "line_number": 33,
                        "content": "Cipher cipherDec = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    },
                    {
                        "line_number": 35,
                        "content": "new SecretKeySpec(\"ABCDEFGHABCDEFGHABCDEFGH\".getBytes(\"UTF-8\"), \"DESede\"));"
                    },
                    {
                        "line_number": 43,
                        "content": "Cipher cipherEnc = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    },
                    {
                        "line_number": 45,
                        "content": "new SecretKeySpec(\"ABCDEFGHIJKLMNOPABCDEFGH\".getBytes(\"UTF-8\"), \"DESede\"));"
                    },
                    {
                        "line_number": 51,
                        "content": "Cipher cipherDec = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    },
                    {
                        "line_number": 53,
                        "content": "new SecretKeySpec(\"ABCDEFGHIJKLMNOPABCDEFGH\".getBytes(\"UTF-8\"), \"DESede\"));"
                    },
                    {
                        "line_number": 61,
                        "content": "Cipher cipherEnc = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    },
                    {
                        "line_number": 63,
                        "content": "new SecretKeySpec(\"ABCDEFGH12345678XYZ#12!@\".getBytes(\"UTF-8\"), \"DESede\"));"
                    },
                    {
                        "line_number": 69,
                        "content": "Cipher cipherDec = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    },
                    {
                        "line_number": 71,
                        "content": "new SecretKeySpec(\"ABCDEFGH12345678XYZ#12!@\".getBytes(\"UTF-8\"), \"DESede\"));"
                    }
                ],
                "severity": "High",
                "explanation": "3-key 3DES (~112-bit). Stronger than 1- or 2-key but still considered legacy."
            }
        ]
    },
    {
        "scan_id": "alex",
        "date": "2024-12-27 11:26:24",
        "directory": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/3des",
        "files_scanned": {
            "Python": 1,
            "C": 1,
            "Java": 1
        },
        "vulnerable_files": {
            "Python": 3,
            "C": 3,
            "Java": 3
        },
        "vulnerabilities": [
            {
                "language": "C",
                "filename": "3des.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/3des\\3des.c",
                "vulnerability": "3DES_1KEY",
                "lines": [
                    {
                        "line_number": 25,
                        "content": "EVP_EncryptInit_ex(ctx_enc, EVP_des_ede3_ecb(), NULL, \"ABCDEFGHABCDEFGHABCDEFGH\", NULL);"
                    },
                    {
                        "line_number": 34,
                        "content": "EVP_DecryptInit_ex(ctx_dec, EVP_des_ede3_ecb(), NULL, \"ABCDEFGHABCDEFGHABCDEFGH\", NULL);"
                    }
                ],
                "severity": "Very High",
                "explanation": "3DES with one repeated 8-byte block (24 total) is effectively single-DES security."
            },
            {
                "language": "C",
                "filename": "3des.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/3des\\3des.c",
                "vulnerability": "3DES_2KEY",
                "lines": [
                    {
                        "line_number": 54,
                        "content": "EVP_EncryptInit_ex(ctx_enc, EVP_des_ede3_ecb(), NULL, \"ABCDEFGHIJKLMNOP\", NULL);"
                    },
                    {
                        "line_number": 63,
                        "content": "EVP_DecryptInit_ex(ctx_dec, EVP_des_ede3_ecb(), NULL, \"ABCDEFGHIJKLMNOP\", NULL);"
                    }
                ],
                "severity": "High",
                "explanation": "2-key 3DES in Java: 24 bytes but only 2 unique blocks (K1,K2,K1). ~112-bit security."
            },
            {
                "language": "C",
                "filename": "3des.c",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/3des\\3des.c",
                "vulnerability": "3DES_3KEY",
                "lines": [
                    {
                        "line_number": 25,
                        "content": "EVP_EncryptInit_ex(ctx_enc, EVP_des_ede3_ecb(), NULL, \"ABCDEFGHABCDEFGHABCDEFGH\", NULL);"
                    },
                    {
                        "line_number": 34,
                        "content": "EVP_DecryptInit_ex(ctx_dec, EVP_des_ede3_ecb(), NULL, \"ABCDEFGHABCDEFGHABCDEFGH\", NULL);"
                    },
                    {
                        "line_number": 83,
                        "content": "EVP_EncryptInit_ex(ctx_enc, EVP_des_ede3_ecb(), NULL, \"ABCDEFGH12345678XYZ!12#@\", NULL);"
                    },
                    {
                        "line_number": 92,
                        "content": "EVP_DecryptInit_ex(ctx_dec, EVP_des_ede3_ecb(), NULL, \"ABCDEFGH12345678XYZ!12#@\", NULL);"
                    }
                ],
                "severity": "High",
                "explanation": "3-key 3DES (~112-bit). Stronger than 1- or 2-key but still considered legacy."
            },
            {
                "language": "Python",
                "filename": "3des.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/3des\\3des.py",
                "vulnerability": "3DES_1KEY",
                "lines": [
                    {
                        "line_number": 15,
                        "content": "cipher = DES3.new(b\"ABCDEFGHABCDEFGHABCDEFGH\", DES3.MODE_ECB)  # encrypt"
                    },
                    {
                        "line_number": 20,
                        "content": "decipher = DES3.new(b\"ABCDEFGHABCDEFGHABCDEFGH\", DES3.MODE_ECB)  # decrypt"
                    }
                ],
                "severity": "Very High",
                "explanation": "3DES with one repeated 8-byte block (24 total) is effectively single-DES security."
            },
            {
                "language": "Python",
                "filename": "3des.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/3des\\3des.py",
                "vulnerability": "3DES_2KEY",
                "lines": [
                    {
                        "line_number": 29,
                        "content": "cipher = DES3.new(b\"ABCDEFGHIJKLMNOP\", DES3.MODE_ECB)  # encrypt"
                    },
                    {
                        "line_number": 34,
                        "content": "decipher = DES3.new(b\"ABCDEFGHIJKLMNOP\", DES3.MODE_ECB)  # decrypt"
                    }
                ],
                "severity": "High",
                "explanation": "2-key 3DES in Java: 24 bytes but only 2 unique blocks (K1,K2,K1). ~112-bit security."
            },
            {
                "language": "Python",
                "filename": "3des.py",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/3des\\3des.py",
                "vulnerability": "3DES_3KEY",
                "lines": [
                    {
                        "line_number": 15,
                        "content": "cipher = DES3.new(b\"ABCDEFGHABCDEFGHABCDEFGH\", DES3.MODE_ECB)  # encrypt"
                    },
                    {
                        "line_number": 20,
                        "content": "decipher = DES3.new(b\"ABCDEFGHABCDEFGHABCDEFGH\", DES3.MODE_ECB)  # decrypt"
                    },
                    {
                        "line_number": 44,
                        "content": "cipher = DES3.new(b\"ABCDEFGH12345678XYZ!12#@\", DES3.MODE_ECB)  # encrypt"
                    },
                    {
                        "line_number": 49,
                        "content": "decipher = DES3.new(b\"ABCDEFGH12345678XYZ!12#@\", DES3.MODE_ECB)  # decrypt"
                    }
                ],
                "severity": "High",
                "explanation": "3-key 3DES (~112-bit). Stronger than 1- or 2-key but still considered legacy."
            },
            {
                "language": "Java",
                "filename": "test_3des_all.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/3des\\test_3des_all.java",
                "vulnerability": "3DES_1KEY",
                "lines": [
                    {
                        "line_number": 25,
                        "content": "Cipher cipherEnc = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    },
                    {
                        "line_number": 27,
                        "content": "new SecretKeySpec(\"ABCDEFGHABCDEFGHABCDEFGH\".getBytes(\"UTF-8\"), \"DESede\"));"
                    },
                    {
                        "line_number": 33,
                        "content": "Cipher cipherDec = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    },
                    {
                        "line_number": 35,
                        "content": "new SecretKeySpec(\"ABCDEFGHABCDEFGHABCDEFGH\".getBytes(\"UTF-8\"), \"DESede\"));"
                    },
                    {
                        "line_number": 43,
                        "content": "Cipher cipherEnc = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    },
                    {
                        "line_number": 51,
                        "content": "Cipher cipherDec = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    },
                    {
                        "line_number": 61,
                        "content": "Cipher cipherEnc = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    },
                    {
                        "line_number": 69,
                        "content": "Cipher cipherDec = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    }
                ],
                "severity": "Very High",
                "explanation": "3DES with one repeated 8-byte block (24 total) is effectively single-DES security."
            },
            {
                "language": "Java",
                "filename": "test_3des_all.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/3des\\test_3des_all.java",
                "vulnerability": "3DES_2KEY",
                "lines": [
                    {
                        "line_number": 25,
                        "content": "Cipher cipherEnc = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    },
                    {
                        "line_number": 33,
                        "content": "Cipher cipherDec = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    },
                    {
                        "line_number": 43,
                        "content": "Cipher cipherEnc = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    },
                    {
                        "line_number": 45,
                        "content": "new SecretKeySpec(\"ABCDEFGHIJKLMNOPABCDEFGH\".getBytes(\"UTF-8\"), \"DESede\"));"
                    },
                    {
                        "line_number": 51,
                        "content": "Cipher cipherDec = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    },
                    {
                        "line_number": 53,
                        "content": "new SecretKeySpec(\"ABCDEFGHIJKLMNOPABCDEFGH\".getBytes(\"UTF-8\"), \"DESede\"));"
                    },
                    {
                        "line_number": 61,
                        "content": "Cipher cipherEnc = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    },
                    {
                        "line_number": 69,
                        "content": "Cipher cipherDec = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    }
                ],
                "severity": "High",
                "explanation": "2-key 3DES in Java: 24 bytes but only 2 unique blocks (K1,K2,K1). ~112-bit security."
            },
            {
                "language": "Java",
                "filename": "test_3des_all.java",
                "path": "C:/Users/alexa/Desktop/crypto_project/Crypto-Project/scripts/3des\\test_3des_all.java",
                "vulnerability": "3DES_3KEY",
                "lines": [
                    {
                        "line_number": 25,
                        "content": "Cipher cipherEnc = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    },
                    {
                        "line_number": 27,
                        "content": "new SecretKeySpec(\"ABCDEFGHABCDEFGHABCDEFGH\".getBytes(\"UTF-8\"), \"DESede\"));"
                    },
                    {
                        "line_number": 33,
                        "content": "Cipher cipherDec = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    },
                    {
                        "line_number": 35,
                        "content": "new SecretKeySpec(\"ABCDEFGHABCDEFGHABCDEFGH\".getBytes(\"UTF-8\"), \"DESede\"));"
                    },
                    {
                        "line_number": 43,
                        "content": "Cipher cipherEnc = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    },
                    {
                        "line_number": 45,
                        "content": "new SecretKeySpec(\"ABCDEFGHIJKLMNOPABCDEFGH\".getBytes(\"UTF-8\"), \"DESede\"));"
                    },
                    {
                        "line_number": 51,
                        "content": "Cipher cipherDec = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    },
                    {
                        "line_number": 53,
                        "content": "new SecretKeySpec(\"ABCDEFGHIJKLMNOPABCDEFGH\".getBytes(\"UTF-8\"), \"DESede\"));"
                    },
                    {
                        "line_number": 61,
                        "content": "Cipher cipherEnc = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    },
                    {
                        "line_number": 63,
                        "content": "new SecretKeySpec(\"ABCDEFGH12345678XYZ#12!@\".getBytes(\"UTF-8\"), \"DESede\"));"
                    },
                    {
                        "line_number": 69,
                        "content": "Cipher cipherDec = Cipher.getInstance(\"DESede/ECB/PKCS5Padding\");"
                    },
                    {
                        "line_number": 71,
                        "content": "new SecretKeySpec(\"ABCDEFGH12345678XYZ#12!@\".getBytes(\"UTF-8\"), \"DESede\"));"
                    }
                ],
                "severity": "High",
                "explanation": "3-key 3DES (~112-bit). Stronger than 1- or 2-key but still considered legacy."
            }
        ]
    }
]